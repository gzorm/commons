// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.26.1
// source: agentrpc.proto

package agentrpc

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AgentCommissionData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommissionRate string `protobuf:"bytes,1,opt,name=commissionRate,proto3" json:"commissionRate,omitempty"`
	ExpiredAt      string `protobuf:"bytes,2,opt,name=expiredAt,proto3" json:"expiredAt,omitempty"`
}

func (x *AgentCommissionData) Reset() {
	*x = AgentCommissionData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentrpc_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentCommissionData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentCommissionData) ProtoMessage() {}

func (x *AgentCommissionData) ProtoReflect() protoreflect.Message {
	mi := &file_agentrpc_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentCommissionData.ProtoReflect.Descriptor instead.
func (*AgentCommissionData) Descriptor() ([]byte, []int) {
	return file_agentrpc_proto_rawDescGZIP(), []int{0}
}

func (x *AgentCommissionData) GetCommissionRate() string {
	if x != nil {
		return x.CommissionRate
	}
	return ""
}

func (x *AgentCommissionData) GetExpiredAt() string {
	if x != nil {
		return x.ExpiredAt
	}
	return ""
}

type AgentReportItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                   string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	AgentName            string `protobuf:"bytes,2,opt,name=agentName,proto3" json:"agentName,omitempty"`
	CreatedAt            string `protobuf:"bytes,3,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	Level                string `protobuf:"bytes,4,opt,name=level,proto3" json:"level,omitempty"`
	ExpiredAt            string `protobuf:"bytes,5,opt,name=expiredAt,proto3" json:"expiredAt,omitempty"`
	CurrentLowerAgent    string `protobuf:"bytes,6,opt,name=currentLowerAgent,proto3" json:"currentLowerAgent,omitempty"`
	CurrentLowerUser     string `protobuf:"bytes,7,opt,name=currentLowerUser,proto3" json:"currentLowerUser,omitempty"`
	CurrentUser          string `protobuf:"bytes,8,opt,name=currentUser,proto3" json:"currentUser,omitempty"`
	Commission           string `protobuf:"bytes,9,opt,name=commission,proto3" json:"commission,omitempty"`
	DepositRate          string `protobuf:"bytes,10,opt,name=depositRate,proto3" json:"depositRate,omitempty"`
	LowerAmountReal      string `protobuf:"bytes,11,opt,name=lower_amount_real,json=lowerAmountReal,proto3" json:"lower_amount_real,omitempty"`
	LowerAmountSport     string `protobuf:"bytes,12,opt,name=lower_amount_sport,json=lowerAmountSport,proto3" json:"lower_amount_sport,omitempty"`
	LowerAmountSlot      string `protobuf:"bytes,13,opt,name=lower_amount_slot,json=lowerAmountSlot,proto3" json:"lower_amount_slot,omitempty"`
	LowerAmountMachine   string `protobuf:"bytes,14,opt,name=lower_amount_machine,json=lowerAmountMachine,proto3" json:"lower_amount_machine,omitempty"`
	UserAmountReal       string `protobuf:"bytes,15,opt,name=user_amount_real,json=userAmountReal,proto3" json:"user_amount_real,omitempty"`
	UserAmountSport      string `protobuf:"bytes,16,opt,name=user_amount_sport,json=userAmountSport,proto3" json:"user_amount_sport,omitempty"`
	UserAmountSlot       string `protobuf:"bytes,17,opt,name=user_amount_slot,json=userAmountSlot,proto3" json:"user_amount_slot,omitempty"`
	UserAmountMachine    string `protobuf:"bytes,18,opt,name=user_amount_machine,json=userAmountMachine,proto3" json:"user_amount_machine,omitempty"`
	PlLowerAmountReal    string `protobuf:"bytes,19,opt,name=pl_lower_amount_real,json=plLowerAmountReal,proto3" json:"pl_lower_amount_real,omitempty"`
	PlLowerAmountSport   string `protobuf:"bytes,20,opt,name=pl_lower_amount_sport,json=plLowerAmountSport,proto3" json:"pl_lower_amount_sport,omitempty"`
	PlLowerAmountSlot    string `protobuf:"bytes,21,opt,name=pl_lower_amount_slot,json=plLowerAmountSlot,proto3" json:"pl_lower_amount_slot,omitempty"`
	PlLowerAmountMachine string `protobuf:"bytes,22,opt,name=pl_lower_amount_machine,json=plLowerAmountMachine,proto3" json:"pl_lower_amount_machine,omitempty"`
	PlUserAmountReal     string `protobuf:"bytes,23,opt,name=pl_user_amount_real,json=plUserAmountReal,proto3" json:"pl_user_amount_real,omitempty"`
	PlUserAmountSport    string `protobuf:"bytes,24,opt,name=pl_user_amount_sport,json=plUserAmountSport,proto3" json:"pl_user_amount_sport,omitempty"`
	PlUserAmountSlot     string `protobuf:"bytes,25,opt,name=pl_user_amount_slot,json=plUserAmountSlot,proto3" json:"pl_user_amount_slot,omitempty"`
	PlUserAmountMachine  string `protobuf:"bytes,26,opt,name=pl_user_amount_machine,json=plUserAmountMachine,proto3" json:"pl_user_amount_machine,omitempty"`
	TotalDeposit         string `protobuf:"bytes,27,opt,name=totalDeposit,proto3" json:"totalDeposit,omitempty"`
	TotalWithdraw        string `protobuf:"bytes,28,opt,name=totalWithdraw,proto3" json:"totalWithdraw,omitempty"`
	TotalBonus           string `protobuf:"bytes,29,opt,name=totalBonus,proto3" json:"totalBonus,omitempty"`
	CommissionRate       string `protobuf:"bytes,30,opt,name=commissionRate,proto3" json:"commissionRate,omitempty"`
	ProviderRateReal     string `protobuf:"bytes,31,opt,name=provider_rate_real,json=providerRateReal,proto3" json:"provider_rate_real,omitempty"`
	ProviderRateSport    string `protobuf:"bytes,32,opt,name=provider_rate_sport,json=providerRateSport,proto3" json:"provider_rate_sport,omitempty"`
	ProviderRateSlot     string `protobuf:"bytes,33,opt,name=provider_rate_slot,json=providerRateSlot,proto3" json:"provider_rate_slot,omitempty"`
	ProviderRateMachine  string `protobuf:"bytes,34,opt,name=provider_rate_machine,json=providerRateMachine,proto3" json:"provider_rate_machine,omitempty"`
}

func (x *AgentReportItem) Reset() {
	*x = AgentReportItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentrpc_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentReportItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentReportItem) ProtoMessage() {}

func (x *AgentReportItem) ProtoReflect() protoreflect.Message {
	mi := &file_agentrpc_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentReportItem.ProtoReflect.Descriptor instead.
func (*AgentReportItem) Descriptor() ([]byte, []int) {
	return file_agentrpc_proto_rawDescGZIP(), []int{1}
}

func (x *AgentReportItem) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AgentReportItem) GetAgentName() string {
	if x != nil {
		return x.AgentName
	}
	return ""
}

func (x *AgentReportItem) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *AgentReportItem) GetLevel() string {
	if x != nil {
		return x.Level
	}
	return ""
}

func (x *AgentReportItem) GetExpiredAt() string {
	if x != nil {
		return x.ExpiredAt
	}
	return ""
}

func (x *AgentReportItem) GetCurrentLowerAgent() string {
	if x != nil {
		return x.CurrentLowerAgent
	}
	return ""
}

func (x *AgentReportItem) GetCurrentLowerUser() string {
	if x != nil {
		return x.CurrentLowerUser
	}
	return ""
}

func (x *AgentReportItem) GetCurrentUser() string {
	if x != nil {
		return x.CurrentUser
	}
	return ""
}

func (x *AgentReportItem) GetCommission() string {
	if x != nil {
		return x.Commission
	}
	return ""
}

func (x *AgentReportItem) GetDepositRate() string {
	if x != nil {
		return x.DepositRate
	}
	return ""
}

func (x *AgentReportItem) GetLowerAmountReal() string {
	if x != nil {
		return x.LowerAmountReal
	}
	return ""
}

func (x *AgentReportItem) GetLowerAmountSport() string {
	if x != nil {
		return x.LowerAmountSport
	}
	return ""
}

func (x *AgentReportItem) GetLowerAmountSlot() string {
	if x != nil {
		return x.LowerAmountSlot
	}
	return ""
}

func (x *AgentReportItem) GetLowerAmountMachine() string {
	if x != nil {
		return x.LowerAmountMachine
	}
	return ""
}

func (x *AgentReportItem) GetUserAmountReal() string {
	if x != nil {
		return x.UserAmountReal
	}
	return ""
}

func (x *AgentReportItem) GetUserAmountSport() string {
	if x != nil {
		return x.UserAmountSport
	}
	return ""
}

func (x *AgentReportItem) GetUserAmountSlot() string {
	if x != nil {
		return x.UserAmountSlot
	}
	return ""
}

func (x *AgentReportItem) GetUserAmountMachine() string {
	if x != nil {
		return x.UserAmountMachine
	}
	return ""
}

func (x *AgentReportItem) GetPlLowerAmountReal() string {
	if x != nil {
		return x.PlLowerAmountReal
	}
	return ""
}

func (x *AgentReportItem) GetPlLowerAmountSport() string {
	if x != nil {
		return x.PlLowerAmountSport
	}
	return ""
}

func (x *AgentReportItem) GetPlLowerAmountSlot() string {
	if x != nil {
		return x.PlLowerAmountSlot
	}
	return ""
}

func (x *AgentReportItem) GetPlLowerAmountMachine() string {
	if x != nil {
		return x.PlLowerAmountMachine
	}
	return ""
}

func (x *AgentReportItem) GetPlUserAmountReal() string {
	if x != nil {
		return x.PlUserAmountReal
	}
	return ""
}

func (x *AgentReportItem) GetPlUserAmountSport() string {
	if x != nil {
		return x.PlUserAmountSport
	}
	return ""
}

func (x *AgentReportItem) GetPlUserAmountSlot() string {
	if x != nil {
		return x.PlUserAmountSlot
	}
	return ""
}

func (x *AgentReportItem) GetPlUserAmountMachine() string {
	if x != nil {
		return x.PlUserAmountMachine
	}
	return ""
}

func (x *AgentReportItem) GetTotalDeposit() string {
	if x != nil {
		return x.TotalDeposit
	}
	return ""
}

func (x *AgentReportItem) GetTotalWithdraw() string {
	if x != nil {
		return x.TotalWithdraw
	}
	return ""
}

func (x *AgentReportItem) GetTotalBonus() string {
	if x != nil {
		return x.TotalBonus
	}
	return ""
}

func (x *AgentReportItem) GetCommissionRate() string {
	if x != nil {
		return x.CommissionRate
	}
	return ""
}

func (x *AgentReportItem) GetProviderRateReal() string {
	if x != nil {
		return x.ProviderRateReal
	}
	return ""
}

func (x *AgentReportItem) GetProviderRateSport() string {
	if x != nil {
		return x.ProviderRateSport
	}
	return ""
}

func (x *AgentReportItem) GetProviderRateSlot() string {
	if x != nil {
		return x.ProviderRateSlot
	}
	return ""
}

func (x *AgentReportItem) GetProviderRateMachine() string {
	if x != nil {
		return x.ProviderRateMachine
	}
	return ""
}

type AgentReportDailyItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CommissionRate   string `protobuf:"bytes,2,opt,name=commissionRate,proto3" json:"commissionRate,omitempty"`
	Commission       string `protobuf:"bytes,3,opt,name=commission,proto3" json:"commission,omitempty"`
	LowerCommission  string `protobuf:"bytes,4,opt,name=lowerCommission,proto3" json:"lowerCommission,omitempty"`
	PlAmount         string `protobuf:"bytes,5,opt,name=plAmount,proto3" json:"plAmount,omitempty"`
	ProviderFeeTotal string `protobuf:"bytes,6,opt,name=provider_fee_total,json=providerFeeTotal,proto3" json:"provider_fee_total,omitempty"`
	TotalBonus       string `protobuf:"bytes,7,opt,name=totalBonus,proto3" json:"totalBonus,omitempty"`
	TotalDeposit     string `protobuf:"bytes,8,opt,name=totalDeposit,proto3" json:"totalDeposit,omitempty"`
	AgentName        string `protobuf:"bytes,9,opt,name=agentName,proto3" json:"agentName,omitempty"`
}

func (x *AgentReportDailyItem) Reset() {
	*x = AgentReportDailyItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentrpc_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentReportDailyItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentReportDailyItem) ProtoMessage() {}

func (x *AgentReportDailyItem) ProtoReflect() protoreflect.Message {
	mi := &file_agentrpc_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentReportDailyItem.ProtoReflect.Descriptor instead.
func (*AgentReportDailyItem) Descriptor() ([]byte, []int) {
	return file_agentrpc_proto_rawDescGZIP(), []int{2}
}

func (x *AgentReportDailyItem) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AgentReportDailyItem) GetCommissionRate() string {
	if x != nil {
		return x.CommissionRate
	}
	return ""
}

func (x *AgentReportDailyItem) GetCommission() string {
	if x != nil {
		return x.Commission
	}
	return ""
}

func (x *AgentReportDailyItem) GetLowerCommission() string {
	if x != nil {
		return x.LowerCommission
	}
	return ""
}

func (x *AgentReportDailyItem) GetPlAmount() string {
	if x != nil {
		return x.PlAmount
	}
	return ""
}

func (x *AgentReportDailyItem) GetProviderFeeTotal() string {
	if x != nil {
		return x.ProviderFeeTotal
	}
	return ""
}

func (x *AgentReportDailyItem) GetTotalBonus() string {
	if x != nil {
		return x.TotalBonus
	}
	return ""
}

func (x *AgentReportDailyItem) GetTotalDeposit() string {
	if x != nil {
		return x.TotalDeposit
	}
	return ""
}

func (x *AgentReportDailyItem) GetAgentName() string {
	if x != nil {
		return x.AgentName
	}
	return ""
}

type TransferResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *TransferResp) Reset() {
	*x = TransferResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentrpc_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransferResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferResp) ProtoMessage() {}

func (x *TransferResp) ProtoReflect() protoreflect.Message {
	mi := &file_agentrpc_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferResp.ProtoReflect.Descriptor instead.
func (*TransferResp) Descriptor() ([]byte, []int) {
	return file_agentrpc_proto_rawDescGZIP(), []int{3}
}

func (x *TransferResp) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type AddConfigReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username       string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	PasswordHash   string `protobuf:"bytes,2,opt,name=passwordHash,proto3" json:"passwordHash,omitempty"`
	Mobile         string `protobuf:"bytes,3,opt,name=mobile,proto3" json:"mobile,omitempty"`
	PromoCategory  string `protobuf:"bytes,4,opt,name=promoCategory,proto3" json:"promoCategory,omitempty"`
	Status         string `protobuf:"bytes,5,opt,name=status,proto3" json:"status,omitempty"`
	PromoCode      string `protobuf:"bytes,6,opt,name=promoCode,proto3" json:"promoCode,omitempty"`
	CommissionRate string `protobuf:"bytes,7,opt,name=commissionRate,proto3" json:"commissionRate,omitempty"`
	ExpiredAt      string `protobuf:"bytes,8,opt,name=expiredAt,proto3" json:"expiredAt,omitempty"`
}

func (x *AddConfigReq) Reset() {
	*x = AddConfigReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentrpc_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddConfigReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddConfigReq) ProtoMessage() {}

func (x *AddConfigReq) ProtoReflect() protoreflect.Message {
	mi := &file_agentrpc_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddConfigReq.ProtoReflect.Descriptor instead.
func (*AddConfigReq) Descriptor() ([]byte, []int) {
	return file_agentrpc_proto_rawDescGZIP(), []int{4}
}

func (x *AddConfigReq) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *AddConfigReq) GetPasswordHash() string {
	if x != nil {
		return x.PasswordHash
	}
	return ""
}

func (x *AddConfigReq) GetMobile() string {
	if x != nil {
		return x.Mobile
	}
	return ""
}

func (x *AddConfigReq) GetPromoCategory() string {
	if x != nil {
		return x.PromoCategory
	}
	return ""
}

func (x *AddConfigReq) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *AddConfigReq) GetPromoCode() string {
	if x != nil {
		return x.PromoCode
	}
	return ""
}

func (x *AddConfigReq) GetCommissionRate() string {
	if x != nil {
		return x.CommissionRate
	}
	return ""
}

func (x *AddConfigReq) GetExpiredAt() string {
	if x != nil {
		return x.ExpiredAt
	}
	return ""
}

type AddConfigRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data bool   `protobuf:"varint,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *AddConfigRes) Reset() {
	*x = AddConfigRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentrpc_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddConfigRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddConfigRes) ProtoMessage() {}

func (x *AddConfigRes) ProtoReflect() protoreflect.Message {
	mi := &file_agentrpc_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddConfigRes.ProtoReflect.Descriptor instead.
func (*AddConfigRes) Descriptor() ([]byte, []int) {
	return file_agentrpc_proto_rawDescGZIP(), []int{5}
}

func (x *AddConfigRes) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *AddConfigRes) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *AddConfigRes) GetData() bool {
	if x != nil {
		return x.Data
	}
	return false
}

type AgentReportProfitRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32                  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string                 `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *AgentReportProfitData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *AgentReportProfitRes) Reset() {
	*x = AgentReportProfitRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentrpc_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentReportProfitRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentReportProfitRes) ProtoMessage() {}

func (x *AgentReportProfitRes) ProtoReflect() protoreflect.Message {
	mi := &file_agentrpc_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentReportProfitRes.ProtoReflect.Descriptor instead.
func (*AgentReportProfitRes) Descriptor() ([]byte, []int) {
	return file_agentrpc_proto_rawDescGZIP(), []int{6}
}

func (x *AgentReportProfitRes) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *AgentReportProfitRes) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *AgentReportProfitRes) GetData() *AgentReportProfitData {
	if x != nil {
		return x.Data
	}
	return nil
}

type WithdrawalStatisticsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid              int64  `protobuf:"varint,1,opt,name=Uid,proto3" json:"Uid,omitempty"`
	AdminUsername    string `protobuf:"bytes,2,opt,name=AdminUsername,proto3" json:"AdminUsername,omitempty"`
	CategoryTransfer int64  `protobuf:"varint,3,opt,name=CategoryTransfer,proto3" json:"CategoryTransfer,omitempty"`
	EndTime          int64  `protobuf:"varint,4,opt,name=EndTime,proto3" json:"EndTime,omitempty"`
	Id               string `protobuf:"bytes,5,opt,name=Id,proto3" json:"Id,omitempty"`
	Mobile           string `protobuf:"bytes,6,opt,name=Mobile,proto3" json:"Mobile,omitempty"`
	StartTime        int64  `protobuf:"varint,7,opt,name=StartTime,proto3" json:"StartTime,omitempty"`
	Status           int64  `protobuf:"varint,8,opt,name=Status,proto3" json:"Status,omitempty"`
	Username         string `protobuf:"bytes,9,opt,name=Username,proto3" json:"Username,omitempty"`
}

func (x *WithdrawalStatisticsReq) Reset() {
	*x = WithdrawalStatisticsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentrpc_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WithdrawalStatisticsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WithdrawalStatisticsReq) ProtoMessage() {}

func (x *WithdrawalStatisticsReq) ProtoReflect() protoreflect.Message {
	mi := &file_agentrpc_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WithdrawalStatisticsReq.ProtoReflect.Descriptor instead.
func (*WithdrawalStatisticsReq) Descriptor() ([]byte, []int) {
	return file_agentrpc_proto_rawDescGZIP(), []int{7}
}

func (x *WithdrawalStatisticsReq) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *WithdrawalStatisticsReq) GetAdminUsername() string {
	if x != nil {
		return x.AdminUsername
	}
	return ""
}

func (x *WithdrawalStatisticsReq) GetCategoryTransfer() int64 {
	if x != nil {
		return x.CategoryTransfer
	}
	return 0
}

func (x *WithdrawalStatisticsReq) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *WithdrawalStatisticsReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *WithdrawalStatisticsReq) GetMobile() string {
	if x != nil {
		return x.Mobile
	}
	return ""
}

func (x *WithdrawalStatisticsReq) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *WithdrawalStatisticsReq) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *WithdrawalStatisticsReq) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

type DepositStatisticsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Coin int64 `protobuf:"varint,1,opt,name=Coin,proto3" json:"Coin,omitempty"`
}

func (x *DepositStatisticsResp) Reset() {
	*x = DepositStatisticsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentrpc_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DepositStatisticsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DepositStatisticsResp) ProtoMessage() {}

func (x *DepositStatisticsResp) ProtoReflect() protoreflect.Message {
	mi := &file_agentrpc_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DepositStatisticsResp.ProtoReflect.Descriptor instead.
func (*DepositStatisticsResp) Descriptor() ([]byte, []int) {
	return file_agentrpc_proto_rawDescGZIP(), []int{8}
}

func (x *DepositStatisticsResp) GetCoin() int64 {
	if x != nil {
		return x.Coin
	}
	return 0
}

type ConfigRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32             `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string            `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data map[string]string `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ConfigRes) Reset() {
	*x = ConfigRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentrpc_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigRes) ProtoMessage() {}

func (x *ConfigRes) ProtoReflect() protoreflect.Message {
	mi := &file_agentrpc_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigRes.ProtoReflect.Descriptor instead.
func (*ConfigRes) Descriptor() ([]byte, []int) {
	return file_agentrpc_proto_rawDescGZIP(), []int{9}
}

func (x *ConfigRes) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ConfigRes) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *ConfigRes) GetData() map[string]string {
	if x != nil {
		return x.Data
	}
	return nil
}

type AgentLineListRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32              `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string             `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *AgentLineListData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *AgentLineListRes) Reset() {
	*x = AgentLineListRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentrpc_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentLineListRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentLineListRes) ProtoMessage() {}

func (x *AgentLineListRes) ProtoReflect() protoreflect.Message {
	mi := &file_agentrpc_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentLineListRes.ProtoReflect.Descriptor instead.
func (*AgentLineListRes) Descriptor() ([]byte, []int) {
	return file_agentrpc_proto_rawDescGZIP(), []int{10}
}

func (x *AgentLineListRes) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *AgentLineListRes) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *AgentLineListRes) GetData() *AgentLineListData {
	if x != nil {
		return x.Data
	}
	return nil
}

type AgentReportProfitItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                      string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	AgentId                 string `protobuf:"bytes,2,opt,name=agent_id,json=agentId,proto3" json:"agent_id,omitempty"`
	AgentName               string `protobuf:"bytes,3,opt,name=agent_name,json=agentName,proto3" json:"agent_name,omitempty"`
	RegisterAt              string `protobuf:"bytes,4,opt,name=register_at,json=registerAt,proto3" json:"register_at,omitempty"`
	AgentLevel              string `protobuf:"bytes,5,opt,name=agent_level,json=agentLevel,proto3" json:"agent_level,omitempty"`
	AgentLevelOne           string `protobuf:"bytes,6,opt,name=agent_level_one,json=agentLevelOne,proto3" json:"agent_level_one,omitempty"`
	AgentLevelTwo           string `protobuf:"bytes,7,opt,name=agent_level_two,json=agentLevelTwo,proto3" json:"agent_level_two,omitempty"`
	AgentTotal              string `protobuf:"bytes,8,opt,name=agent_total,json=agentTotal,proto3" json:"agent_total,omitempty"`
	AgentUserTotal          string `protobuf:"bytes,9,opt,name=agent_user_total,json=agentUserTotal,proto3" json:"agent_user_total,omitempty"`
	AgentDirectUserTotal    string `protobuf:"bytes,10,opt,name=agent_direct_user_total,json=agentDirectUserTotal,proto3" json:"agent_direct_user_total,omitempty"`
	DepositAmount           string `protobuf:"bytes,11,opt,name=deposit_amount,json=depositAmount,proto3" json:"deposit_amount,omitempty"`
	WithdrawalAmount        string `protobuf:"bytes,12,opt,name=withdrawal_amount,json=withdrawalAmount,proto3" json:"withdrawal_amount,omitempty"`
	DuserDepositAmount      string `protobuf:"bytes,13,opt,name=duser_deposit_amount,json=duserDepositAmount,proto3" json:"duser_deposit_amount,omitempty"`
	DuserWithdrawalAmount   string `protobuf:"bytes,14,opt,name=duser_withdrawal_amount,json=duserWithdrawalAmount,proto3" json:"duser_withdrawal_amount,omitempty"`
	BetAmountReal           string `protobuf:"bytes,15,opt,name=bet_amount_real,json=betAmountReal,proto3" json:"bet_amount_real,omitempty"`
	BetAmountSport          string `protobuf:"bytes,16,opt,name=bet_amount_sport,json=betAmountSport,proto3" json:"bet_amount_sport,omitempty"`
	BetAmountSlot           string `protobuf:"bytes,17,opt,name=bet_amount_slot,json=betAmountSlot,proto3" json:"bet_amount_slot,omitempty"`
	BetAmountMachine        string `protobuf:"bytes,18,opt,name=bet_amount_machine,json=betAmountMachine,proto3" json:"bet_amount_machine,omitempty"`
	PlAmountReal            string `protobuf:"bytes,19,opt,name=pl_amount_real,json=plAmountReal,proto3" json:"pl_amount_real,omitempty"`
	PlAmountSport           string `protobuf:"bytes,20,opt,name=pl_amount_sport,json=plAmountSport,proto3" json:"pl_amount_sport,omitempty"`
	PlAmountSlot            string `protobuf:"bytes,21,opt,name=pl_amount_slot,json=plAmountSlot,proto3" json:"pl_amount_slot,omitempty"`
	PlAmountMachine         string `protobuf:"bytes,22,opt,name=pl_amount_machine,json=plAmountMachine,proto3" json:"pl_amount_machine,omitempty"`
	DuserBetAmountReal      string `protobuf:"bytes,23,opt,name=duser_bet_amount_real,json=duserBetAmountReal,proto3" json:"duser_bet_amount_real,omitempty"`
	DuserBetAmountSport     string `protobuf:"bytes,24,opt,name=duser_bet_amount_sport,json=duserBetAmountSport,proto3" json:"duser_bet_amount_sport,omitempty"`
	DuserBetAmountSlot      string `protobuf:"bytes,25,opt,name=duser_bet_amount_slot,json=duserBetAmountSlot,proto3" json:"duser_bet_amount_slot,omitempty"`
	DuserBetAmountMachine   string `protobuf:"bytes,26,opt,name=duser_bet_amount_machine,json=duserBetAmountMachine,proto3" json:"duser_bet_amount_machine,omitempty"`
	DuserPlAmountReal       string `protobuf:"bytes,27,opt,name=duser_pl_amount_real,json=duserPlAmountReal,proto3" json:"duser_pl_amount_real,omitempty"`
	DuserPlAmountSport      string `protobuf:"bytes,28,opt,name=duser_pl_amount_sport,json=duserPlAmountSport,proto3" json:"duser_pl_amount_sport,omitempty"`
	DuserPlAmountSlot       string `protobuf:"bytes,29,opt,name=duser_pl_amount_slot,json=duserPlAmountSlot,proto3" json:"duser_pl_amount_slot,omitempty"`
	DuserPlAmountMachine    string `protobuf:"bytes,30,opt,name=duser_pl_amount_machine,json=duserPlAmountMachine,proto3" json:"duser_pl_amount_machine,omitempty"`
	ProviderFeeReal         string `protobuf:"bytes,31,opt,name=provider_fee_real,json=providerFeeReal,proto3" json:"provider_fee_real,omitempty"`
	ProviderFeeSport        string `protobuf:"bytes,32,opt,name=provider_fee_sport,json=providerFeeSport,proto3" json:"provider_fee_sport,omitempty"`
	ProviderFeeSlot         string `protobuf:"bytes,33,opt,name=provider_fee_slot,json=providerFeeSlot,proto3" json:"provider_fee_slot,omitempty"`
	ProviderFeeMachine      string `protobuf:"bytes,34,opt,name=provider_fee_machine,json=providerFeeMachine,proto3" json:"provider_fee_machine,omitempty"`
	DuserProviderFeeReal    string `protobuf:"bytes,35,opt,name=duser_provider_fee_real,json=duserProviderFeeReal,proto3" json:"duser_provider_fee_real,omitempty"`
	DuserProviderFeeSport   string `protobuf:"bytes,36,opt,name=duser_provider_fee_sport,json=duserProviderFeeSport,proto3" json:"duser_provider_fee_sport,omitempty"`
	DuserProviderFeeSlot    string `protobuf:"bytes,37,opt,name=duser_provider_fee_slot,json=duserProviderFeeSlot,proto3" json:"duser_provider_fee_slot,omitempty"`
	DuserProviderFeeMachine string `protobuf:"bytes,38,opt,name=duser_provider_fee_machine,json=duserProviderFeeMachine,proto3" json:"duser_provider_fee_machine,omitempty"`
	WithdrawalFee           string `protobuf:"bytes,39,opt,name=withdrawal_fee,json=withdrawalFee,proto3" json:"withdrawal_fee,omitempty"`
	DuserWithdrawalFee      string `protobuf:"bytes,40,opt,name=duser_withdrawal_fee,json=duserWithdrawalFee,proto3" json:"duser_withdrawal_fee,omitempty"`
	BonusAmount             string `protobuf:"bytes,41,opt,name=bonus_amount,json=bonusAmount,proto3" json:"bonus_amount,omitempty"`
	DuserBonusAmount        string `protobuf:"bytes,42,opt,name=duser_bonus_amount,json=duserBonusAmount,proto3" json:"duser_bonus_amount,omitempty"`
	CommissionAmount        string `protobuf:"bytes,43,opt,name=commission_amount,json=commissionAmount,proto3" json:"commission_amount,omitempty"`
}

func (x *AgentReportProfitItem) Reset() {
	*x = AgentReportProfitItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentrpc_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentReportProfitItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentReportProfitItem) ProtoMessage() {}

func (x *AgentReportProfitItem) ProtoReflect() protoreflect.Message {
	mi := &file_agentrpc_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentReportProfitItem.ProtoReflect.Descriptor instead.
func (*AgentReportProfitItem) Descriptor() ([]byte, []int) {
	return file_agentrpc_proto_rawDescGZIP(), []int{11}
}

func (x *AgentReportProfitItem) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AgentReportProfitItem) GetAgentId() string {
	if x != nil {
		return x.AgentId
	}
	return ""
}

func (x *AgentReportProfitItem) GetAgentName() string {
	if x != nil {
		return x.AgentName
	}
	return ""
}

func (x *AgentReportProfitItem) GetRegisterAt() string {
	if x != nil {
		return x.RegisterAt
	}
	return ""
}

func (x *AgentReportProfitItem) GetAgentLevel() string {
	if x != nil {
		return x.AgentLevel
	}
	return ""
}

func (x *AgentReportProfitItem) GetAgentLevelOne() string {
	if x != nil {
		return x.AgentLevelOne
	}
	return ""
}

func (x *AgentReportProfitItem) GetAgentLevelTwo() string {
	if x != nil {
		return x.AgentLevelTwo
	}
	return ""
}

func (x *AgentReportProfitItem) GetAgentTotal() string {
	if x != nil {
		return x.AgentTotal
	}
	return ""
}

func (x *AgentReportProfitItem) GetAgentUserTotal() string {
	if x != nil {
		return x.AgentUserTotal
	}
	return ""
}

func (x *AgentReportProfitItem) GetAgentDirectUserTotal() string {
	if x != nil {
		return x.AgentDirectUserTotal
	}
	return ""
}

func (x *AgentReportProfitItem) GetDepositAmount() string {
	if x != nil {
		return x.DepositAmount
	}
	return ""
}

func (x *AgentReportProfitItem) GetWithdrawalAmount() string {
	if x != nil {
		return x.WithdrawalAmount
	}
	return ""
}

func (x *AgentReportProfitItem) GetDuserDepositAmount() string {
	if x != nil {
		return x.DuserDepositAmount
	}
	return ""
}

func (x *AgentReportProfitItem) GetDuserWithdrawalAmount() string {
	if x != nil {
		return x.DuserWithdrawalAmount
	}
	return ""
}

func (x *AgentReportProfitItem) GetBetAmountReal() string {
	if x != nil {
		return x.BetAmountReal
	}
	return ""
}

func (x *AgentReportProfitItem) GetBetAmountSport() string {
	if x != nil {
		return x.BetAmountSport
	}
	return ""
}

func (x *AgentReportProfitItem) GetBetAmountSlot() string {
	if x != nil {
		return x.BetAmountSlot
	}
	return ""
}

func (x *AgentReportProfitItem) GetBetAmountMachine() string {
	if x != nil {
		return x.BetAmountMachine
	}
	return ""
}

func (x *AgentReportProfitItem) GetPlAmountReal() string {
	if x != nil {
		return x.PlAmountReal
	}
	return ""
}

func (x *AgentReportProfitItem) GetPlAmountSport() string {
	if x != nil {
		return x.PlAmountSport
	}
	return ""
}

func (x *AgentReportProfitItem) GetPlAmountSlot() string {
	if x != nil {
		return x.PlAmountSlot
	}
	return ""
}

func (x *AgentReportProfitItem) GetPlAmountMachine() string {
	if x != nil {
		return x.PlAmountMachine
	}
	return ""
}

func (x *AgentReportProfitItem) GetDuserBetAmountReal() string {
	if x != nil {
		return x.DuserBetAmountReal
	}
	return ""
}

func (x *AgentReportProfitItem) GetDuserBetAmountSport() string {
	if x != nil {
		return x.DuserBetAmountSport
	}
	return ""
}

func (x *AgentReportProfitItem) GetDuserBetAmountSlot() string {
	if x != nil {
		return x.DuserBetAmountSlot
	}
	return ""
}

func (x *AgentReportProfitItem) GetDuserBetAmountMachine() string {
	if x != nil {
		return x.DuserBetAmountMachine
	}
	return ""
}

func (x *AgentReportProfitItem) GetDuserPlAmountReal() string {
	if x != nil {
		return x.DuserPlAmountReal
	}
	return ""
}

func (x *AgentReportProfitItem) GetDuserPlAmountSport() string {
	if x != nil {
		return x.DuserPlAmountSport
	}
	return ""
}

func (x *AgentReportProfitItem) GetDuserPlAmountSlot() string {
	if x != nil {
		return x.DuserPlAmountSlot
	}
	return ""
}

func (x *AgentReportProfitItem) GetDuserPlAmountMachine() string {
	if x != nil {
		return x.DuserPlAmountMachine
	}
	return ""
}

func (x *AgentReportProfitItem) GetProviderFeeReal() string {
	if x != nil {
		return x.ProviderFeeReal
	}
	return ""
}

func (x *AgentReportProfitItem) GetProviderFeeSport() string {
	if x != nil {
		return x.ProviderFeeSport
	}
	return ""
}

func (x *AgentReportProfitItem) GetProviderFeeSlot() string {
	if x != nil {
		return x.ProviderFeeSlot
	}
	return ""
}

func (x *AgentReportProfitItem) GetProviderFeeMachine() string {
	if x != nil {
		return x.ProviderFeeMachine
	}
	return ""
}

func (x *AgentReportProfitItem) GetDuserProviderFeeReal() string {
	if x != nil {
		return x.DuserProviderFeeReal
	}
	return ""
}

func (x *AgentReportProfitItem) GetDuserProviderFeeSport() string {
	if x != nil {
		return x.DuserProviderFeeSport
	}
	return ""
}

func (x *AgentReportProfitItem) GetDuserProviderFeeSlot() string {
	if x != nil {
		return x.DuserProviderFeeSlot
	}
	return ""
}

func (x *AgentReportProfitItem) GetDuserProviderFeeMachine() string {
	if x != nil {
		return x.DuserProviderFeeMachine
	}
	return ""
}

func (x *AgentReportProfitItem) GetWithdrawalFee() string {
	if x != nil {
		return x.WithdrawalFee
	}
	return ""
}

func (x *AgentReportProfitItem) GetDuserWithdrawalFee() string {
	if x != nil {
		return x.DuserWithdrawalFee
	}
	return ""
}

func (x *AgentReportProfitItem) GetBonusAmount() string {
	if x != nil {
		return x.BonusAmount
	}
	return ""
}

func (x *AgentReportProfitItem) GetDuserBonusAmount() string {
	if x != nil {
		return x.DuserBonusAmount
	}
	return ""
}

func (x *AgentReportProfitItem) GetCommissionAmount() string {
	if x != nil {
		return x.CommissionAmount
	}
	return ""
}

type TransferReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Coin   float32 `protobuf:"fixed32,1,opt,name=Coin,proto3" json:"Coin,omitempty"`
	Sign   bool    `protobuf:"varint,2,opt,name=Sign,proto3" json:"Sign,omitempty"`
	UserId int64   `protobuf:"varint,3,opt,name=UserId,proto3" json:"UserId,omitempty"`
}

func (x *TransferReq) Reset() {
	*x = TransferReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentrpc_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransferReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferReq) ProtoMessage() {}

func (x *TransferReq) ProtoReflect() protoreflect.Message {
	mi := &file_agentrpc_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferReq.ProtoReflect.Descriptor instead.
func (*TransferReq) Descriptor() ([]byte, []int) {
	return file_agentrpc_proto_rawDescGZIP(), []int{12}
}

func (x *TransferReq) GetCoin() float32 {
	if x != nil {
		return x.Coin
	}
	return 0
}

func (x *TransferReq) GetSign() bool {
	if x != nil {
		return x.Sign
	}
	return false
}

func (x *TransferReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type EmptyResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EmptyResp) Reset() {
	*x = EmptyResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentrpc_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmptyResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmptyResp) ProtoMessage() {}

func (x *EmptyResp) ProtoReflect() protoreflect.Message {
	mi := &file_agentrpc_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmptyResp.ProtoReflect.Descriptor instead.
func (*EmptyResp) Descriptor() ([]byte, []int) {
	return file_agentrpc_proto_rawDescGZIP(), []int{13}
}

type AgentReportMemberItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                          string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	DailyDate                   string `protobuf:"bytes,2,opt,name=daily_date,json=dailyDate,proto3" json:"daily_date,omitempty"`                                                              //日期
	DailyDateStr                string `protobuf:"bytes,3,opt,name=daily_date_str,json=dailyDateStr,proto3" json:"daily_date_str,omitempty"`                                                   //日期字符串
	Uid                         string `protobuf:"bytes,4,opt,name=uid,proto3" json:"uid,omitempty"`                                                                                           //用户id
	Username                    string `protobuf:"bytes,5,opt,name=username,proto3" json:"username,omitempty"`                                                                                 //用户名
	VipLevel                    string `protobuf:"bytes,6,opt,name=vip_level,json=vipLevel,proto3" json:"vip_level,omitempty"`                                                                 //vip等级
	RegisterAt                  string `protobuf:"bytes,7,opt,name=register_at,json=registerAt,proto3" json:"register_at,omitempty"`                                                           //注册时间
	ExpiredAt                   string `protobuf:"bytes,8,opt,name=expired_at,json=expiredAt,proto3" json:"expired_at,omitempty"`                                                              //会员过期天数
	BelongAgentLevel            string `protobuf:"bytes,9,opt,name=belong_agent_level,json=belongAgentLevel,proto3" json:"belong_agent_level,omitempty"`                                       //代理层级
	AgentLevelOne               string `protobuf:"bytes,10,opt,name=agent_level_one,json=agentLevelOne,proto3" json:"agent_level_one,omitempty"`                                               //一级代理
	AgentLevelTwo               string `protobuf:"bytes,11,opt,name=agent_level_two,json=agentLevelTwo,proto3" json:"agent_level_two,omitempty"`                                               //二级代理
	AgentLevelThree             string `protobuf:"bytes,12,opt,name=agent_level_three,json=agentLevelThree,proto3" json:"agent_level_three,omitempty"`                                         //三级代理
	CommissionRateLevelTwo      string `protobuf:"bytes,14,opt,name=commission_rate_level_two,json=commissionRateLevelTwo,proto3" json:"commission_rate_level_two,omitempty"`                  //二级佣金比例
	CommissionRateLevelOne      string `protobuf:"bytes,13,opt,name=commission_rate_level_one,json=commissionRateLevelOne,proto3" json:"commission_rate_level_one,omitempty"`                  //一级佣金比例
	CommissionRateLevelThree    string `protobuf:"bytes,15,opt,name=commission_rate_level_three,json=commissionRateLevelThree,proto3" json:"commission_rate_level_three,omitempty"`            //三级佣金比例
	CommissionRateLevelOneAct   string `protobuf:"bytes,16,opt,name=commission_rate_level_one_act,json=commissionRateLevelOneAct,proto3" json:"commission_rate_level_one_act,omitempty"`       //一级实际佣金比例
	CommissionRateLevelTwoAct   string `protobuf:"bytes,17,opt,name=commission_rate_level_two_act,json=commissionRateLevelTwoAct,proto3" json:"commission_rate_level_two_act,omitempty"`       //二级实际佣金比例
	CommissionRateLevelThreeAct string `protobuf:"bytes,18,opt,name=commission_rate_level_three_act,json=commissionRateLevelThreeAct,proto3" json:"commission_rate_level_three_act,omitempty"` //三级实际佣金比例
	CommissionAmountLevelOne    string `protobuf:"bytes,19,opt,name=commission_amount_level_one,json=commissionAmountLevelOne,proto3" json:"commission_amount_level_one,omitempty"`            //一级佣金
	CommissionAmountLevelTwo    string `protobuf:"bytes,21,opt,name=commission_amount_level_two,json=commissionAmountLevelTwo,proto3" json:"commission_amount_level_two,omitempty"`            //二级佣金
	CommissionAmountLevelThree  string `protobuf:"bytes,20,opt,name=commission_amount_level_three,json=commissionAmountLevelThree,proto3" json:"commission_amount_level_three,omitempty"`      //三级佣金
	BetAmountReal               string `protobuf:"bytes,22,opt,name=bet_amount_real,json=betAmountReal,proto3" json:"bet_amount_real,omitempty"`                                               //真人下注金额
	BetAmountSport              string `protobuf:"bytes,23,opt,name=bet_amount_sport,json=betAmountSport,proto3" json:"bet_amount_sport,omitempty"`                                            //体育下注金额
	BetAmountSlot               string `protobuf:"bytes,24,opt,name=bet_amount_slot,json=betAmountSlot,proto3" json:"bet_amount_slot,omitempty"`                                               //老虎机下注金额
	BetAmountMachine            string `protobuf:"bytes,25,opt,name=bet_amount_machine,json=betAmountMachine,proto3" json:"bet_amount_machine,omitempty"`                                      //真人老虎机下注金额
	PlAmountReal                string `protobuf:"bytes,26,opt,name=pl_amount_real,json=plAmountReal,proto3" json:"pl_amount_real,omitempty"`                                                  //真人盈亏金额
	PlAmountSport               string `protobuf:"bytes,27,opt,name=pl_amount_sport,json=plAmountSport,proto3" json:"pl_amount_sport,omitempty"`                                               //体育盈亏金额
	PlAmountSlot                string `protobuf:"bytes,28,opt,name=pl_amount_slot,json=plAmountSlot,proto3" json:"pl_amount_slot,omitempty"`                                                  //老虎机盈亏金额
	PlAmountMachine             string `protobuf:"bytes,29,opt,name=pl_amount_machine,json=plAmountMachine,proto3" json:"pl_amount_machine,omitempty"`                                         //真人老虎机盈亏金额
	PlAmountTotal               string `protobuf:"bytes,30,opt,name=pl_amount_total,json=plAmountTotal,proto3" json:"pl_amount_total,omitempty"`                                               //盈亏合计金额
	CommissionRateReal          string `protobuf:"bytes,31,opt,name=commission_rate_real,json=commissionRateReal,proto3" json:"commission_rate_real,omitempty"`                                //真人佣金费率
	CommissionRateSport         string `protobuf:"bytes,32,opt,name=commission_rate_sport,json=commissionRateSport,proto3" json:"commission_rate_sport,omitempty"`                             //体育佣金费率
	CommissionRateSlot          string `protobuf:"bytes,33,opt,name=commission_rate_slot,json=commissionRateSlot,proto3" json:"commission_rate_slot,omitempty"`                                //老虎机佣金费率
	CommissionRateMachine       string `protobuf:"bytes,34,opt,name=commission_rate_machine,json=commissionRateMachine,proto3" json:"commission_rate_machine,omitempty"`                       //真人老虎机佣金费率
	DepositAmount               string `protobuf:"bytes,35,opt,name=deposit_amount,json=depositAmount,proto3" json:"deposit_amount,omitempty"`                                                 //存款金额
	WithdrawalAmount            string `protobuf:"bytes,36,opt,name=withdrawal_amount,json=withdrawalAmount,proto3" json:"withdrawal_amount,omitempty"`                                        //提款金额
	BonusAmount                 string `protobuf:"bytes,37,opt,name=bonus_amount,json=bonusAmount,proto3" json:"bonus_amount,omitempty"`                                                       //彩金金额
	DepositRate                 string `protobuf:"bytes,38,opt,name=deposit_rate,json=depositRate,proto3" json:"deposit_rate,omitempty"`                                                       //存款费率
	DepositFee                  string `protobuf:"bytes,39,opt,name=deposit_fee,json=depositFee,proto3" json:"deposit_fee,omitempty"`                                                          //存款手续费
	ProviderRateReal            string `protobuf:"bytes,40,opt,name=provider_rate_real,json=providerRateReal,proto3" json:"provider_rate_real,omitempty"`                                      //真人厂商费率
	ProviderRateSport           string `protobuf:"bytes,41,opt,name=provider_rate_sport,json=providerRateSport,proto3" json:"provider_rate_sport,omitempty"`                                   //体育厂商费率
	ProviderRateSlot            string `protobuf:"bytes,42,opt,name=provider_rate_slot,json=providerRateSlot,proto3" json:"provider_rate_slot,omitempty"`                                      //老虎机厂商费率
	ProviderRateMachine         string `protobuf:"bytes,43,opt,name=provider_rate_machine,json=providerRateMachine,proto3" json:"provider_rate_machine,omitempty"`                             //真人老虎机厂商费率
	ProviderFeeReal             string `protobuf:"bytes,44,opt,name=provider_fee_real,json=providerFeeReal,proto3" json:"provider_fee_real,omitempty"`                                         //真人厂商扣费
	ProviderFeeSport            string `protobuf:"bytes,45,opt,name=provider_fee_sport,json=providerFeeSport,proto3" json:"provider_fee_sport,omitempty"`                                      //体育厂商扣费
	ProviderFeeSlot             string `protobuf:"bytes,46,opt,name=provider_fee_slot,json=providerFeeSlot,proto3" json:"provider_fee_slot,omitempty"`                                         //老虎机厂商扣费
	ProviderFeeMachine          string `protobuf:"bytes,47,opt,name=provider_fee_machine,json=providerFeeMachine,proto3" json:"provider_fee_machine,omitempty"`                                //真人老虎机厂商扣费
	ProviderFeeTotal            string `protobuf:"bytes,48,opt,name=provider_fee_total,json=providerFeeTotal,proto3" json:"provider_fee_total,omitempty"`                                      //厂商扣费合计
	AgentCommission             string `protobuf:"bytes,49,opt,name=agent_commission,json=agentCommission,proto3" json:"agent_commission,omitempty"`                                           //代理佣金
}

func (x *AgentReportMemberItem) Reset() {
	*x = AgentReportMemberItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentrpc_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentReportMemberItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentReportMemberItem) ProtoMessage() {}

func (x *AgentReportMemberItem) ProtoReflect() protoreflect.Message {
	mi := &file_agentrpc_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentReportMemberItem.ProtoReflect.Descriptor instead.
func (*AgentReportMemberItem) Descriptor() ([]byte, []int) {
	return file_agentrpc_proto_rawDescGZIP(), []int{14}
}

func (x *AgentReportMemberItem) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AgentReportMemberItem) GetDailyDate() string {
	if x != nil {
		return x.DailyDate
	}
	return ""
}

func (x *AgentReportMemberItem) GetDailyDateStr() string {
	if x != nil {
		return x.DailyDateStr
	}
	return ""
}

func (x *AgentReportMemberItem) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *AgentReportMemberItem) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *AgentReportMemberItem) GetVipLevel() string {
	if x != nil {
		return x.VipLevel
	}
	return ""
}

func (x *AgentReportMemberItem) GetRegisterAt() string {
	if x != nil {
		return x.RegisterAt
	}
	return ""
}

func (x *AgentReportMemberItem) GetExpiredAt() string {
	if x != nil {
		return x.ExpiredAt
	}
	return ""
}

func (x *AgentReportMemberItem) GetBelongAgentLevel() string {
	if x != nil {
		return x.BelongAgentLevel
	}
	return ""
}

func (x *AgentReportMemberItem) GetAgentLevelOne() string {
	if x != nil {
		return x.AgentLevelOne
	}
	return ""
}

func (x *AgentReportMemberItem) GetAgentLevelTwo() string {
	if x != nil {
		return x.AgentLevelTwo
	}
	return ""
}

func (x *AgentReportMemberItem) GetAgentLevelThree() string {
	if x != nil {
		return x.AgentLevelThree
	}
	return ""
}

func (x *AgentReportMemberItem) GetCommissionRateLevelTwo() string {
	if x != nil {
		return x.CommissionRateLevelTwo
	}
	return ""
}

func (x *AgentReportMemberItem) GetCommissionRateLevelOne() string {
	if x != nil {
		return x.CommissionRateLevelOne
	}
	return ""
}

func (x *AgentReportMemberItem) GetCommissionRateLevelThree() string {
	if x != nil {
		return x.CommissionRateLevelThree
	}
	return ""
}

func (x *AgentReportMemberItem) GetCommissionRateLevelOneAct() string {
	if x != nil {
		return x.CommissionRateLevelOneAct
	}
	return ""
}

func (x *AgentReportMemberItem) GetCommissionRateLevelTwoAct() string {
	if x != nil {
		return x.CommissionRateLevelTwoAct
	}
	return ""
}

func (x *AgentReportMemberItem) GetCommissionRateLevelThreeAct() string {
	if x != nil {
		return x.CommissionRateLevelThreeAct
	}
	return ""
}

func (x *AgentReportMemberItem) GetCommissionAmountLevelOne() string {
	if x != nil {
		return x.CommissionAmountLevelOne
	}
	return ""
}

func (x *AgentReportMemberItem) GetCommissionAmountLevelTwo() string {
	if x != nil {
		return x.CommissionAmountLevelTwo
	}
	return ""
}

func (x *AgentReportMemberItem) GetCommissionAmountLevelThree() string {
	if x != nil {
		return x.CommissionAmountLevelThree
	}
	return ""
}

func (x *AgentReportMemberItem) GetBetAmountReal() string {
	if x != nil {
		return x.BetAmountReal
	}
	return ""
}

func (x *AgentReportMemberItem) GetBetAmountSport() string {
	if x != nil {
		return x.BetAmountSport
	}
	return ""
}

func (x *AgentReportMemberItem) GetBetAmountSlot() string {
	if x != nil {
		return x.BetAmountSlot
	}
	return ""
}

func (x *AgentReportMemberItem) GetBetAmountMachine() string {
	if x != nil {
		return x.BetAmountMachine
	}
	return ""
}

func (x *AgentReportMemberItem) GetPlAmountReal() string {
	if x != nil {
		return x.PlAmountReal
	}
	return ""
}

func (x *AgentReportMemberItem) GetPlAmountSport() string {
	if x != nil {
		return x.PlAmountSport
	}
	return ""
}

func (x *AgentReportMemberItem) GetPlAmountSlot() string {
	if x != nil {
		return x.PlAmountSlot
	}
	return ""
}

func (x *AgentReportMemberItem) GetPlAmountMachine() string {
	if x != nil {
		return x.PlAmountMachine
	}
	return ""
}

func (x *AgentReportMemberItem) GetPlAmountTotal() string {
	if x != nil {
		return x.PlAmountTotal
	}
	return ""
}

func (x *AgentReportMemberItem) GetCommissionRateReal() string {
	if x != nil {
		return x.CommissionRateReal
	}
	return ""
}

func (x *AgentReportMemberItem) GetCommissionRateSport() string {
	if x != nil {
		return x.CommissionRateSport
	}
	return ""
}

func (x *AgentReportMemberItem) GetCommissionRateSlot() string {
	if x != nil {
		return x.CommissionRateSlot
	}
	return ""
}

func (x *AgentReportMemberItem) GetCommissionRateMachine() string {
	if x != nil {
		return x.CommissionRateMachine
	}
	return ""
}

func (x *AgentReportMemberItem) GetDepositAmount() string {
	if x != nil {
		return x.DepositAmount
	}
	return ""
}

func (x *AgentReportMemberItem) GetWithdrawalAmount() string {
	if x != nil {
		return x.WithdrawalAmount
	}
	return ""
}

func (x *AgentReportMemberItem) GetBonusAmount() string {
	if x != nil {
		return x.BonusAmount
	}
	return ""
}

func (x *AgentReportMemberItem) GetDepositRate() string {
	if x != nil {
		return x.DepositRate
	}
	return ""
}

func (x *AgentReportMemberItem) GetDepositFee() string {
	if x != nil {
		return x.DepositFee
	}
	return ""
}

func (x *AgentReportMemberItem) GetProviderRateReal() string {
	if x != nil {
		return x.ProviderRateReal
	}
	return ""
}

func (x *AgentReportMemberItem) GetProviderRateSport() string {
	if x != nil {
		return x.ProviderRateSport
	}
	return ""
}

func (x *AgentReportMemberItem) GetProviderRateSlot() string {
	if x != nil {
		return x.ProviderRateSlot
	}
	return ""
}

func (x *AgentReportMemberItem) GetProviderRateMachine() string {
	if x != nil {
		return x.ProviderRateMachine
	}
	return ""
}

func (x *AgentReportMemberItem) GetProviderFeeReal() string {
	if x != nil {
		return x.ProviderFeeReal
	}
	return ""
}

func (x *AgentReportMemberItem) GetProviderFeeSport() string {
	if x != nil {
		return x.ProviderFeeSport
	}
	return ""
}

func (x *AgentReportMemberItem) GetProviderFeeSlot() string {
	if x != nil {
		return x.ProviderFeeSlot
	}
	return ""
}

func (x *AgentReportMemberItem) GetProviderFeeMachine() string {
	if x != nil {
		return x.ProviderFeeMachine
	}
	return ""
}

func (x *AgentReportMemberItem) GetProviderFeeTotal() string {
	if x != nil {
		return x.ProviderFeeTotal
	}
	return ""
}

func (x *AgentReportMemberItem) GetAgentCommission() string {
	if x != nil {
		return x.AgentCommission
	}
	return ""
}

type AgentReportMemberRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32                  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string                 `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *AgentReportMemberData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *AgentReportMemberRes) Reset() {
	*x = AgentReportMemberRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentrpc_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentReportMemberRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentReportMemberRes) ProtoMessage() {}

func (x *AgentReportMemberRes) ProtoReflect() protoreflect.Message {
	mi := &file_agentrpc_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentReportMemberRes.ProtoReflect.Descriptor instead.
func (*AgentReportMemberRes) Descriptor() ([]byte, []int) {
	return file_agentrpc_proto_rawDescGZIP(), []int{15}
}

func (x *AgentReportMemberRes) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *AgentReportMemberRes) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *AgentReportMemberRes) GetData() *AgentReportMemberData {
	if x != nil {
		return x.Data
	}
	return nil
}

type AgentReportData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current   string             `protobuf:"bytes,1,opt,name=current,proto3" json:"current,omitempty"`
	Size      string             `protobuf:"bytes,2,opt,name=size,proto3" json:"size,omitempty"`
	List      []*AgentReportItem `protobuf:"bytes,3,rep,name=list,proto3" json:"list,omitempty"`
	Total     string             `protobuf:"bytes,4,opt,name=total,proto3" json:"total,omitempty"`
	Pages     string             `protobuf:"bytes,5,opt,name=pages,proto3" json:"pages,omitempty"`
	ScrollId  string             `protobuf:"bytes,6,opt,name=scrollId,proto3" json:"scrollId,omitempty"`
	SortValue string             `protobuf:"bytes,7,opt,name=sortValue,proto3" json:"sortValue,omitempty"`
	SortId    string             `protobuf:"bytes,8,opt,name=sortId,proto3" json:"sortId,omitempty"`
}

func (x *AgentReportData) Reset() {
	*x = AgentReportData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentrpc_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentReportData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentReportData) ProtoMessage() {}

func (x *AgentReportData) ProtoReflect() protoreflect.Message {
	mi := &file_agentrpc_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentReportData.ProtoReflect.Descriptor instead.
func (*AgentReportData) Descriptor() ([]byte, []int) {
	return file_agentrpc_proto_rawDescGZIP(), []int{16}
}

func (x *AgentReportData) GetCurrent() string {
	if x != nil {
		return x.Current
	}
	return ""
}

func (x *AgentReportData) GetSize() string {
	if x != nil {
		return x.Size
	}
	return ""
}

func (x *AgentReportData) GetList() []*AgentReportItem {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *AgentReportData) GetTotal() string {
	if x != nil {
		return x.Total
	}
	return ""
}

func (x *AgentReportData) GetPages() string {
	if x != nil {
		return x.Pages
	}
	return ""
}

func (x *AgentReportData) GetScrollId() string {
	if x != nil {
		return x.ScrollId
	}
	return ""
}

func (x *AgentReportData) GetSortValue() string {
	if x != nil {
		return x.SortValue
	}
	return ""
}

func (x *AgentReportData) GetSortId() string {
	if x != nil {
		return x.SortId
	}
	return ""
}

type AgentReportDailyRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32                 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string                `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *AgentReportDailyData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *AgentReportDailyRes) Reset() {
	*x = AgentReportDailyRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentrpc_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentReportDailyRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentReportDailyRes) ProtoMessage() {}

func (x *AgentReportDailyRes) ProtoReflect() protoreflect.Message {
	mi := &file_agentrpc_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentReportDailyRes.ProtoReflect.Descriptor instead.
func (*AgentReportDailyRes) Descriptor() ([]byte, []int) {
	return file_agentrpc_proto_rawDescGZIP(), []int{17}
}

func (x *AgentReportDailyRes) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *AgentReportDailyRes) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *AgentReportDailyRes) GetData() *AgentReportDailyData {
	if x != nil {
		return x.Data
	}
	return nil
}

type DepositStatisticsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid       int64  `protobuf:"varint,1,opt,name=Uid,proto3" json:"Uid,omitempty"`
	Category  string `protobuf:"bytes,2,opt,name=Category,proto3" json:"Category,omitempty"`
	Code      string `protobuf:"bytes,3,opt,name=Code,proto3" json:"Code,omitempty"`
	EndTime   int64  `protobuf:"varint,4,opt,name=EndTime,proto3" json:"EndTime,omitempty"`
	Id        string `protobuf:"bytes,5,opt,name=Id,proto3" json:"Id,omitempty"`
	Mobile    string `protobuf:"bytes,6,opt,name=Mobile,proto3" json:"Mobile,omitempty"`
	StartTime int64  `protobuf:"varint,7,opt,name=StartTime,proto3" json:"StartTime,omitempty"`
	Status    int64  `protobuf:"varint,8,opt,name=Status,proto3" json:"Status,omitempty"`
	Username  string `protobuf:"bytes,9,opt,name=Username,proto3" json:"Username,omitempty"`
}

func (x *DepositStatisticsReq) Reset() {
	*x = DepositStatisticsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentrpc_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DepositStatisticsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DepositStatisticsReq) ProtoMessage() {}

func (x *DepositStatisticsReq) ProtoReflect() protoreflect.Message {
	mi := &file_agentrpc_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DepositStatisticsReq.ProtoReflect.Descriptor instead.
func (*DepositStatisticsReq) Descriptor() ([]byte, []int) {
	return file_agentrpc_proto_rawDescGZIP(), []int{18}
}

func (x *DepositStatisticsReq) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *DepositStatisticsReq) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *DepositStatisticsReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *DepositStatisticsReq) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *DepositStatisticsReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DepositStatisticsReq) GetMobile() string {
	if x != nil {
		return x.Mobile
	}
	return ""
}

func (x *DepositStatisticsReq) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *DepositStatisticsReq) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *DepositStatisticsReq) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

type PasswordUpdateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	OldPassword string `protobuf:"bytes,2,opt,name=oldPassword,proto3" json:"oldPassword,omitempty"`
	NewPassword string `protobuf:"bytes,3,opt,name=newPassword,proto3" json:"newPassword,omitempty"`
}

func (x *PasswordUpdateReq) Reset() {
	*x = PasswordUpdateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentrpc_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PasswordUpdateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PasswordUpdateReq) ProtoMessage() {}

func (x *PasswordUpdateReq) ProtoReflect() protoreflect.Message {
	mi := &file_agentrpc_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PasswordUpdateReq.ProtoReflect.Descriptor instead.
func (*PasswordUpdateReq) Descriptor() ([]byte, []int) {
	return file_agentrpc_proto_rawDescGZIP(), []int{19}
}

func (x *PasswordUpdateReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PasswordUpdateReq) GetOldPassword() string {
	if x != nil {
		return x.OldPassword
	}
	return ""
}

func (x *PasswordUpdateReq) GetNewPassword() string {
	if x != nil {
		return x.NewPassword
	}
	return ""
}

type AgentCommissionReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type           string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Id             string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	CommissionRate string `protobuf:"bytes,3,opt,name=commissionRate,proto3" json:"commissionRate,omitempty"`
}

func (x *AgentCommissionReq) Reset() {
	*x = AgentCommissionReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentrpc_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentCommissionReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentCommissionReq) ProtoMessage() {}

func (x *AgentCommissionReq) ProtoReflect() protoreflect.Message {
	mi := &file_agentrpc_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentCommissionReq.ProtoReflect.Descriptor instead.
func (*AgentCommissionReq) Descriptor() ([]byte, []int) {
	return file_agentrpc_proto_rawDescGZIP(), []int{20}
}

func (x *AgentCommissionReq) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *AgentCommissionReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AgentCommissionReq) GetCommissionRate() string {
	if x != nil {
		return x.CommissionRate
	}
	return ""
}

type AgentReportProfitData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current   string                   `protobuf:"bytes,1,opt,name=current,proto3" json:"current,omitempty"`
	Size      string                   `protobuf:"bytes,2,opt,name=size,proto3" json:"size,omitempty"`
	List      []*AgentReportProfitItem `protobuf:"bytes,3,rep,name=list,proto3" json:"list,omitempty"`
	Total     string                   `protobuf:"bytes,4,opt,name=total,proto3" json:"total,omitempty"`
	Pages     string                   `protobuf:"bytes,5,opt,name=pages,proto3" json:"pages,omitempty"`
	ScrollId  string                   `protobuf:"bytes,6,opt,name=scrollId,proto3" json:"scrollId,omitempty"`
	SortValue string                   `protobuf:"bytes,7,opt,name=sortValue,proto3" json:"sortValue,omitempty"`
	SortId    string                   `protobuf:"bytes,8,opt,name=sortId,proto3" json:"sortId,omitempty"`
}

func (x *AgentReportProfitData) Reset() {
	*x = AgentReportProfitData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentrpc_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentReportProfitData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentReportProfitData) ProtoMessage() {}

func (x *AgentReportProfitData) ProtoReflect() protoreflect.Message {
	mi := &file_agentrpc_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentReportProfitData.ProtoReflect.Descriptor instead.
func (*AgentReportProfitData) Descriptor() ([]byte, []int) {
	return file_agentrpc_proto_rawDescGZIP(), []int{21}
}

func (x *AgentReportProfitData) GetCurrent() string {
	if x != nil {
		return x.Current
	}
	return ""
}

func (x *AgentReportProfitData) GetSize() string {
	if x != nil {
		return x.Size
	}
	return ""
}

func (x *AgentReportProfitData) GetList() []*AgentReportProfitItem {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *AgentReportProfitData) GetTotal() string {
	if x != nil {
		return x.Total
	}
	return ""
}

func (x *AgentReportProfitData) GetPages() string {
	if x != nil {
		return x.Pages
	}
	return ""
}

func (x *AgentReportProfitData) GetScrollId() string {
	if x != nil {
		return x.ScrollId
	}
	return ""
}

func (x *AgentReportProfitData) GetSortValue() string {
	if x != nil {
		return x.SortValue
	}
	return ""
}

func (x *AgentReportProfitData) GetSortId() string {
	if x != nil {
		return x.SortId
	}
	return ""
}

type ConfigReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RateSlot       float32 `protobuf:"fixed32,1,opt,name=rateSlot,proto3" json:"rateSlot,omitempty"`
	RateReal       float32 `protobuf:"fixed32,2,opt,name=rateReal,proto3" json:"rateReal,omitempty"`
	RateSport      float32 `protobuf:"fixed32,3,opt,name=rateSport,proto3" json:"rateSport,omitempty"`
	RateMachine    float32 `protobuf:"fixed32,4,opt,name=rateMachine,proto3" json:"rateMachine,omitempty"`
	RateWithdrawal float32 `protobuf:"fixed32,5,opt,name=rateWithdrawal,proto3" json:"rateWithdrawal,omitempty"`
	Type           int32   `protobuf:"varint,6,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *ConfigReq) Reset() {
	*x = ConfigReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentrpc_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigReq) ProtoMessage() {}

func (x *ConfigReq) ProtoReflect() protoreflect.Message {
	mi := &file_agentrpc_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigReq.ProtoReflect.Descriptor instead.
func (*ConfigReq) Descriptor() ([]byte, []int) {
	return file_agentrpc_proto_rawDescGZIP(), []int{22}
}

func (x *ConfigReq) GetRateSlot() float32 {
	if x != nil {
		return x.RateSlot
	}
	return 0
}

func (x *ConfigReq) GetRateReal() float32 {
	if x != nil {
		return x.RateReal
	}
	return 0
}

func (x *ConfigReq) GetRateSport() float32 {
	if x != nil {
		return x.RateSport
	}
	return 0
}

func (x *ConfigReq) GetRateMachine() float32 {
	if x != nil {
		return x.RateMachine
	}
	return 0
}

func (x *ConfigReq) GetRateWithdrawal() float32 {
	if x != nil {
		return x.RateWithdrawal
	}
	return 0
}

func (x *ConfigReq) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

type AgentCommissionRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32                `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string               `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *AgentCommissionData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *AgentCommissionRes) Reset() {
	*x = AgentCommissionRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentrpc_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentCommissionRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentCommissionRes) ProtoMessage() {}

func (x *AgentCommissionRes) ProtoReflect() protoreflect.Message {
	mi := &file_agentrpc_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentCommissionRes.ProtoReflect.Descriptor instead.
func (*AgentCommissionRes) Descriptor() ([]byte, []int) {
	return file_agentrpc_proto_rawDescGZIP(), []int{23}
}

func (x *AgentCommissionRes) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *AgentCommissionRes) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *AgentCommissionRes) GetData() *AgentCommissionData {
	if x != nil {
		return x.Data
	}
	return nil
}

type AgentLineListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current   int32             `protobuf:"varint,1,opt,name=current,proto3" json:"current,omitempty"`
	Size      int32             `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	Data      map[string]string `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	SortField []string          `protobuf:"bytes,4,rep,name=sortField,proto3" json:"sortField,omitempty"`
	SortKey   string            `protobuf:"bytes,5,opt,name=sortKey,proto3" json:"sortKey,omitempty"`
}

func (x *AgentLineListReq) Reset() {
	*x = AgentLineListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentrpc_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentLineListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentLineListReq) ProtoMessage() {}

func (x *AgentLineListReq) ProtoReflect() protoreflect.Message {
	mi := &file_agentrpc_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentLineListReq.ProtoReflect.Descriptor instead.
func (*AgentLineListReq) Descriptor() ([]byte, []int) {
	return file_agentrpc_proto_rawDescGZIP(), []int{24}
}

func (x *AgentLineListReq) GetCurrent() int32 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *AgentLineListReq) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *AgentLineListReq) GetData() map[string]string {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *AgentLineListReq) GetSortField() []string {
	if x != nil {
		return x.SortField
	}
	return nil
}

func (x *AgentLineListReq) GetSortKey() string {
	if x != nil {
		return x.SortKey
	}
	return ""
}

type AgentLineListItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Username         string `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	Email            string `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	Mobile           string `protobuf:"bytes,4,opt,name=mobile,proto3" json:"mobile,omitempty"`
	Status           int32  `protobuf:"varint,5,opt,name=status,proto3" json:"status,omitempty"`
	PromoCode        string `protobuf:"bytes,6,opt,name=promoCode,proto3" json:"promoCode,omitempty"`
	CreatedAt        int64  `protobuf:"varint,7,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt        int64  `protobuf:"varint,8,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	OperatorName     string `protobuf:"bytes,9,opt,name=operatorName,proto3" json:"operatorName,omitempty"`
	FreezeAt         int64  `protobuf:"varint,10,opt,name=freezeAt,proto3" json:"freezeAt,omitempty"`
	FreezeCause      string `protobuf:"bytes,11,opt,name=freezeCause,proto3" json:"freezeCause,omitempty"`
	SupLevelTopCname string `protobuf:"bytes,12,opt,name=supLevelTopCname,proto3" json:"supLevelTopCname,omitempty"`
	Secret           string `protobuf:"bytes,13,opt,name=secret,proto3" json:"secret,omitempty"`
	CodeUrl          string `protobuf:"bytes,14,opt,name=codeUrl,proto3" json:"codeUrl,omitempty"`
	CodeStatus       int64  `protobuf:"varint,15,opt,name=codeStatus,proto3" json:"codeStatus,omitempty"`
}

func (x *AgentLineListItem) Reset() {
	*x = AgentLineListItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentrpc_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentLineListItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentLineListItem) ProtoMessage() {}

func (x *AgentLineListItem) ProtoReflect() protoreflect.Message {
	mi := &file_agentrpc_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentLineListItem.ProtoReflect.Descriptor instead.
func (*AgentLineListItem) Descriptor() ([]byte, []int) {
	return file_agentrpc_proto_rawDescGZIP(), []int{25}
}

func (x *AgentLineListItem) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AgentLineListItem) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *AgentLineListItem) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *AgentLineListItem) GetMobile() string {
	if x != nil {
		return x.Mobile
	}
	return ""
}

func (x *AgentLineListItem) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *AgentLineListItem) GetPromoCode() string {
	if x != nil {
		return x.PromoCode
	}
	return ""
}

func (x *AgentLineListItem) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *AgentLineListItem) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *AgentLineListItem) GetOperatorName() string {
	if x != nil {
		return x.OperatorName
	}
	return ""
}

func (x *AgentLineListItem) GetFreezeAt() int64 {
	if x != nil {
		return x.FreezeAt
	}
	return 0
}

func (x *AgentLineListItem) GetFreezeCause() string {
	if x != nil {
		return x.FreezeCause
	}
	return ""
}

func (x *AgentLineListItem) GetSupLevelTopCname() string {
	if x != nil {
		return x.SupLevelTopCname
	}
	return ""
}

func (x *AgentLineListItem) GetSecret() string {
	if x != nil {
		return x.Secret
	}
	return ""
}

func (x *AgentLineListItem) GetCodeUrl() string {
	if x != nil {
		return x.CodeUrl
	}
	return ""
}

func (x *AgentLineListItem) GetCodeStatus() int64 {
	if x != nil {
		return x.CodeStatus
	}
	return 0
}

type AgentLineListData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current   string               `protobuf:"bytes,1,opt,name=current,proto3" json:"current,omitempty"`
	Size      string               `protobuf:"bytes,2,opt,name=size,proto3" json:"size,omitempty"`
	List      []*AgentLineListItem `protobuf:"bytes,3,rep,name=list,proto3" json:"list,omitempty"`
	Total     string               `protobuf:"bytes,4,opt,name=total,proto3" json:"total,omitempty"`
	Pages     string               `protobuf:"bytes,5,opt,name=pages,proto3" json:"pages,omitempty"`
	ScrollId  string               `protobuf:"bytes,6,opt,name=scrollId,proto3" json:"scrollId,omitempty"`
	SortValue string               `protobuf:"bytes,7,opt,name=sortValue,proto3" json:"sortValue,omitempty"`
	SortId    string               `protobuf:"bytes,8,opt,name=sortId,proto3" json:"sortId,omitempty"`
}

func (x *AgentLineListData) Reset() {
	*x = AgentLineListData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentrpc_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentLineListData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentLineListData) ProtoMessage() {}

func (x *AgentLineListData) ProtoReflect() protoreflect.Message {
	mi := &file_agentrpc_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentLineListData.ProtoReflect.Descriptor instead.
func (*AgentLineListData) Descriptor() ([]byte, []int) {
	return file_agentrpc_proto_rawDescGZIP(), []int{26}
}

func (x *AgentLineListData) GetCurrent() string {
	if x != nil {
		return x.Current
	}
	return ""
}

func (x *AgentLineListData) GetSize() string {
	if x != nil {
		return x.Size
	}
	return ""
}

func (x *AgentLineListData) GetList() []*AgentLineListItem {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *AgentLineListData) GetTotal() string {
	if x != nil {
		return x.Total
	}
	return ""
}

func (x *AgentLineListData) GetPages() string {
	if x != nil {
		return x.Pages
	}
	return ""
}

func (x *AgentLineListData) GetScrollId() string {
	if x != nil {
		return x.ScrollId
	}
	return ""
}

func (x *AgentLineListData) GetSortValue() string {
	if x != nil {
		return x.SortValue
	}
	return ""
}

func (x *AgentLineListData) GetSortId() string {
	if x != nil {
		return x.SortId
	}
	return ""
}

type AgentReportRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32            `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string           `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *AgentReportData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *AgentReportRes) Reset() {
	*x = AgentReportRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentrpc_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentReportRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentReportRes) ProtoMessage() {}

func (x *AgentReportRes) ProtoReflect() protoreflect.Message {
	mi := &file_agentrpc_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentReportRes.ProtoReflect.Descriptor instead.
func (*AgentReportRes) Descriptor() ([]byte, []int) {
	return file_agentrpc_proto_rawDescGZIP(), []int{27}
}

func (x *AgentReportRes) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *AgentReportRes) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *AgentReportRes) GetData() *AgentReportData {
	if x != nil {
		return x.Data
	}
	return nil
}

type WithdrawalStatisticsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CoinWithdrawal       int64 `protobuf:"varint,1,opt,name=CoinWithdrawal,proto3" json:"CoinWithdrawal,omitempty"`
	CoinWithdrawalReally int64 `protobuf:"varint,2,opt,name=CoinWithdrawalReally,proto3" json:"CoinWithdrawalReally,omitempty"`
}

func (x *WithdrawalStatisticsResp) Reset() {
	*x = WithdrawalStatisticsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentrpc_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WithdrawalStatisticsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WithdrawalStatisticsResp) ProtoMessage() {}

func (x *WithdrawalStatisticsResp) ProtoReflect() protoreflect.Message {
	mi := &file_agentrpc_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WithdrawalStatisticsResp.ProtoReflect.Descriptor instead.
func (*WithdrawalStatisticsResp) Descriptor() ([]byte, []int) {
	return file_agentrpc_proto_rawDescGZIP(), []int{28}
}

func (x *WithdrawalStatisticsResp) GetCoinWithdrawal() int64 {
	if x != nil {
		return x.CoinWithdrawal
	}
	return 0
}

func (x *WithdrawalStatisticsResp) GetCoinWithdrawalReally() int64 {
	if x != nil {
		return x.CoinWithdrawalReally
	}
	return 0
}

type AgentReportReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current   int32             `protobuf:"varint,1,opt,name=current,proto3" json:"current,omitempty"`
	Size      int32             `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	Data      map[string]string `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	SortField []string          `protobuf:"bytes,4,rep,name=sortField,proto3" json:"sortField,omitempty"`
	SortKey   string            `protobuf:"bytes,5,opt,name=sortKey,proto3" json:"sortKey,omitempty"`
}

func (x *AgentReportReq) Reset() {
	*x = AgentReportReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentrpc_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentReportReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentReportReq) ProtoMessage() {}

func (x *AgentReportReq) ProtoReflect() protoreflect.Message {
	mi := &file_agentrpc_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentReportReq.ProtoReflect.Descriptor instead.
func (*AgentReportReq) Descriptor() ([]byte, []int) {
	return file_agentrpc_proto_rawDescGZIP(), []int{29}
}

func (x *AgentReportReq) GetCurrent() int32 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *AgentReportReq) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *AgentReportReq) GetData() map[string]string {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *AgentReportReq) GetSortField() []string {
	if x != nil {
		return x.SortField
	}
	return nil
}

func (x *AgentReportReq) GetSortKey() string {
	if x != nil {
		return x.SortKey
	}
	return ""
}

type AgentReportMemberData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current   string                   `protobuf:"bytes,1,opt,name=current,proto3" json:"current,omitempty"`
	Size      string                   `protobuf:"bytes,2,opt,name=size,proto3" json:"size,omitempty"`
	List      []*AgentReportMemberItem `protobuf:"bytes,3,rep,name=list,proto3" json:"list,omitempty"`
	Total     string                   `protobuf:"bytes,4,opt,name=total,proto3" json:"total,omitempty"`
	Pages     string                   `protobuf:"bytes,5,opt,name=pages,proto3" json:"pages,omitempty"`
	ScrollId  string                   `protobuf:"bytes,6,opt,name=scrollId,proto3" json:"scrollId,omitempty"`
	SortValue string                   `protobuf:"bytes,7,opt,name=sortValue,proto3" json:"sortValue,omitempty"`
	SortId    string                   `protobuf:"bytes,8,opt,name=sortId,proto3" json:"sortId,omitempty"`
}

func (x *AgentReportMemberData) Reset() {
	*x = AgentReportMemberData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentrpc_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentReportMemberData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentReportMemberData) ProtoMessage() {}

func (x *AgentReportMemberData) ProtoReflect() protoreflect.Message {
	mi := &file_agentrpc_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentReportMemberData.ProtoReflect.Descriptor instead.
func (*AgentReportMemberData) Descriptor() ([]byte, []int) {
	return file_agentrpc_proto_rawDescGZIP(), []int{30}
}

func (x *AgentReportMemberData) GetCurrent() string {
	if x != nil {
		return x.Current
	}
	return ""
}

func (x *AgentReportMemberData) GetSize() string {
	if x != nil {
		return x.Size
	}
	return ""
}

func (x *AgentReportMemberData) GetList() []*AgentReportMemberItem {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *AgentReportMemberData) GetTotal() string {
	if x != nil {
		return x.Total
	}
	return ""
}

func (x *AgentReportMemberData) GetPages() string {
	if x != nil {
		return x.Pages
	}
	return ""
}

func (x *AgentReportMemberData) GetScrollId() string {
	if x != nil {
		return x.ScrollId
	}
	return ""
}

func (x *AgentReportMemberData) GetSortValue() string {
	if x != nil {
		return x.SortValue
	}
	return ""
}

func (x *AgentReportMemberData) GetSortId() string {
	if x != nil {
		return x.SortId
	}
	return ""
}

type AgentReportDailyData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current   string                  `protobuf:"bytes,1,opt,name=current,proto3" json:"current,omitempty"`
	Size      string                  `protobuf:"bytes,2,opt,name=size,proto3" json:"size,omitempty"`
	List      []*AgentReportDailyItem `protobuf:"bytes,3,rep,name=list,proto3" json:"list,omitempty"`
	Total     string                  `protobuf:"bytes,4,opt,name=total,proto3" json:"total,omitempty"`
	Pages     string                  `protobuf:"bytes,5,opt,name=pages,proto3" json:"pages,omitempty"`
	ScrollId  string                  `protobuf:"bytes,6,opt,name=scrollId,proto3" json:"scrollId,omitempty"`
	SortValue string                  `protobuf:"bytes,7,opt,name=sortValue,proto3" json:"sortValue,omitempty"`
	SortId    string                  `protobuf:"bytes,8,opt,name=sortId,proto3" json:"sortId,omitempty"`
}

func (x *AgentReportDailyData) Reset() {
	*x = AgentReportDailyData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentrpc_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentReportDailyData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentReportDailyData) ProtoMessage() {}

func (x *AgentReportDailyData) ProtoReflect() protoreflect.Message {
	mi := &file_agentrpc_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentReportDailyData.ProtoReflect.Descriptor instead.
func (*AgentReportDailyData) Descriptor() ([]byte, []int) {
	return file_agentrpc_proto_rawDescGZIP(), []int{31}
}

func (x *AgentReportDailyData) GetCurrent() string {
	if x != nil {
		return x.Current
	}
	return ""
}

func (x *AgentReportDailyData) GetSize() string {
	if x != nil {
		return x.Size
	}
	return ""
}

func (x *AgentReportDailyData) GetList() []*AgentReportDailyItem {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *AgentReportDailyData) GetTotal() string {
	if x != nil {
		return x.Total
	}
	return ""
}

func (x *AgentReportDailyData) GetPages() string {
	if x != nil {
		return x.Pages
	}
	return ""
}

func (x *AgentReportDailyData) GetScrollId() string {
	if x != nil {
		return x.ScrollId
	}
	return ""
}

func (x *AgentReportDailyData) GetSortValue() string {
	if x != nil {
		return x.SortValue
	}
	return ""
}

func (x *AgentReportDailyData) GetSortId() string {
	if x != nil {
		return x.SortId
	}
	return ""
}

type CommissionRateListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sign bool `protobuf:"varint,1,opt,name=sign,proto3" json:"sign,omitempty"`
}

func (x *CommissionRateListReq) Reset() {
	*x = CommissionRateListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentrpc_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommissionRateListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommissionRateListReq) ProtoMessage() {}

func (x *CommissionRateListReq) ProtoReflect() protoreflect.Message {
	mi := &file_agentrpc_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommissionRateListReq.ProtoReflect.Descriptor instead.
func (*CommissionRateListReq) Descriptor() ([]byte, []int) {
	return file_agentrpc_proto_rawDescGZIP(), []int{32}
}

func (x *CommissionRateListReq) GetSign() bool {
	if x != nil {
		return x.Sign
	}
	return false
}

type CommissionRateListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32                     `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string                    `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data []*CommissionRateListData `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *CommissionRateListResp) Reset() {
	*x = CommissionRateListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentrpc_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommissionRateListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommissionRateListResp) ProtoMessage() {}

func (x *CommissionRateListResp) ProtoReflect() protoreflect.Message {
	mi := &file_agentrpc_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommissionRateListResp.ProtoReflect.Descriptor instead.
func (*CommissionRateListResp) Descriptor() ([]byte, []int) {
	return file_agentrpc_proto_rawDescGZIP(), []int{33}
}

func (x *CommissionRateListResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *CommissionRateListResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *CommissionRateListResp) GetData() []*CommissionRateListData {
	if x != nil {
		return x.Data
	}
	return nil
}

type CommissionRateListData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AgentLevel     int64  `protobuf:"varint,1,opt,name=agentLevel,proto3" json:"agentLevel,omitempty"`
	AgentLevelRate string `protobuf:"bytes,2,opt,name=agentLevelRate,proto3" json:"agentLevelRate,omitempty"` //佣金比例
}

func (x *CommissionRateListData) Reset() {
	*x = CommissionRateListData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentrpc_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommissionRateListData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommissionRateListData) ProtoMessage() {}

func (x *CommissionRateListData) ProtoReflect() protoreflect.Message {
	mi := &file_agentrpc_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommissionRateListData.ProtoReflect.Descriptor instead.
func (*CommissionRateListData) Descriptor() ([]byte, []int) {
	return file_agentrpc_proto_rawDescGZIP(), []int{34}
}

func (x *CommissionRateListData) GetAgentLevel() int64 {
	if x != nil {
		return x.AgentLevel
	}
	return 0
}

func (x *CommissionRateListData) GetAgentLevelRate() string {
	if x != nil {
		return x.AgentLevelRate
	}
	return ""
}

type TeamBenefitsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TeamBenefitsReq) Reset() {
	*x = TeamBenefitsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentrpc_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TeamBenefitsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TeamBenefitsReq) ProtoMessage() {}

func (x *TeamBenefitsReq) ProtoReflect() protoreflect.Message {
	mi := &file_agentrpc_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TeamBenefitsReq.ProtoReflect.Descriptor instead.
func (*TeamBenefitsReq) Descriptor() ([]byte, []int) {
	return file_agentrpc_proto_rawDescGZIP(), []int{35}
}

type TeamBenefitsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32             `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string            `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *TeamBenefitsData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *TeamBenefitsResp) Reset() {
	*x = TeamBenefitsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentrpc_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TeamBenefitsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TeamBenefitsResp) ProtoMessage() {}

func (x *TeamBenefitsResp) ProtoReflect() protoreflect.Message {
	mi := &file_agentrpc_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TeamBenefitsResp.ProtoReflect.Descriptor instead.
func (*TeamBenefitsResp) Descriptor() ([]byte, []int) {
	return file_agentrpc_proto_rawDescGZIP(), []int{36}
}

func (x *TeamBenefitsResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *TeamBenefitsResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *TeamBenefitsResp) GetData() *TeamBenefitsData {
	if x != nil {
		return x.Data
	}
	return nil
}

type TeamBenefitsData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TodayIncreaseAgentNum int64   `protobuf:"varint,1,opt,name=todayIncreaseAgentNum,proto3" json:"todayIncreaseAgentNum,omitempty"` // 今日新增代理
	TotalAgentNum         int64   `protobuf:"varint,2,opt,name=totalAgentNum,proto3" json:"totalAgentNum,omitempty"`                 // 总代理人数
	TotalCommission       float64 `protobuf:"fixed64,3,opt,name=totalCommission,proto3" json:"totalCommission,omitempty"`            // 总佣金
	AllowWithdrawal       float64 `protobuf:"fixed64,4,opt,name=allowWithdrawal,proto3" json:"allowWithdrawal,omitempty"`            // 佣金可提现金额
}

func (x *TeamBenefitsData) Reset() {
	*x = TeamBenefitsData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentrpc_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TeamBenefitsData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TeamBenefitsData) ProtoMessage() {}

func (x *TeamBenefitsData) ProtoReflect() protoreflect.Message {
	mi := &file_agentrpc_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TeamBenefitsData.ProtoReflect.Descriptor instead.
func (*TeamBenefitsData) Descriptor() ([]byte, []int) {
	return file_agentrpc_proto_rawDescGZIP(), []int{37}
}

func (x *TeamBenefitsData) GetTodayIncreaseAgentNum() int64 {
	if x != nil {
		return x.TodayIncreaseAgentNum
	}
	return 0
}

func (x *TeamBenefitsData) GetTotalAgentNum() int64 {
	if x != nil {
		return x.TotalAgentNum
	}
	return 0
}

func (x *TeamBenefitsData) GetTotalCommission() float64 {
	if x != nil {
		return x.TotalCommission
	}
	return 0
}

func (x *TeamBenefitsData) GetAllowWithdrawal() float64 {
	if x != nil {
		return x.AllowWithdrawal
	}
	return 0
}

type CommissionRecordsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current   int32                     `protobuf:"varint,1,opt,name=current,proto3" json:"current,omitempty"`
	Size      int32                     `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	SortKey   string                    `protobuf:"bytes,3,opt,name=sortKey,proto3" json:"sortKey,omitempty"`
	SortField []string                  `protobuf:"bytes,4,rep,name=sortField,proto3" json:"sortField,omitempty"`
	Data      *CommissionRecordsDataReq `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *CommissionRecordsReq) Reset() {
	*x = CommissionRecordsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentrpc_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommissionRecordsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommissionRecordsReq) ProtoMessage() {}

func (x *CommissionRecordsReq) ProtoReflect() protoreflect.Message {
	mi := &file_agentrpc_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommissionRecordsReq.ProtoReflect.Descriptor instead.
func (*CommissionRecordsReq) Descriptor() ([]byte, []int) {
	return file_agentrpc_proto_rawDescGZIP(), []int{38}
}

func (x *CommissionRecordsReq) GetCurrent() int32 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *CommissionRecordsReq) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *CommissionRecordsReq) GetSortKey() string {
	if x != nil {
		return x.SortKey
	}
	return ""
}

func (x *CommissionRecordsReq) GetSortField() []string {
	if x != nil {
		return x.SortField
	}
	return nil
}

func (x *CommissionRecordsReq) GetData() *CommissionRecordsDataReq {
	if x != nil {
		return x.Data
	}
	return nil
}

type CommissionRecordsDataReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartTime int64 `protobuf:"varint,1,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime   int64 `protobuf:"varint,2,opt,name=endTime,proto3" json:"endTime,omitempty"`
}

func (x *CommissionRecordsDataReq) Reset() {
	*x = CommissionRecordsDataReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentrpc_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommissionRecordsDataReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommissionRecordsDataReq) ProtoMessage() {}

func (x *CommissionRecordsDataReq) ProtoReflect() protoreflect.Message {
	mi := &file_agentrpc_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommissionRecordsDataReq.ProtoReflect.Descriptor instead.
func (*CommissionRecordsDataReq) Descriptor() ([]byte, []int) {
	return file_agentrpc_proto_rawDescGZIP(), []int{39}
}

func (x *CommissionRecordsDataReq) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *CommissionRecordsDataReq) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

type CommissionRecordsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32                  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string                 `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *CommissionRecordsData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *CommissionRecordsResp) Reset() {
	*x = CommissionRecordsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentrpc_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommissionRecordsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommissionRecordsResp) ProtoMessage() {}

func (x *CommissionRecordsResp) ProtoReflect() protoreflect.Message {
	mi := &file_agentrpc_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommissionRecordsResp.ProtoReflect.Descriptor instead.
func (*CommissionRecordsResp) Descriptor() ([]byte, []int) {
	return file_agentrpc_proto_rawDescGZIP(), []int{40}
}

func (x *CommissionRecordsResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *CommissionRecordsResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *CommissionRecordsResp) GetData() *CommissionRecordsData {
	if x != nil {
		return x.Data
	}
	return nil
}

type CommissionRecordsData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current   string                       `protobuf:"bytes,1,opt,name=current,proto3" json:"current,omitempty"`
	Pages     string                       `protobuf:"bytes,2,opt,name=pages,proto3" json:"pages,omitempty"`
	Size      string                       `protobuf:"bytes,3,opt,name=size,proto3" json:"size,omitempty"`
	Total     string                       `protobuf:"bytes,4,opt,name=total,proto3" json:"total,omitempty"`
	SortId    string                       `protobuf:"bytes,5,opt,name=sortId,proto3" json:"sortId,omitempty"`
	SortValue string                       `protobuf:"bytes,6,opt,name=sortValue,proto3" json:"sortValue,omitempty"`
	List      []*CommissionRecordsDataItem `protobuf:"bytes,7,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *CommissionRecordsData) Reset() {
	*x = CommissionRecordsData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentrpc_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommissionRecordsData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommissionRecordsData) ProtoMessage() {}

func (x *CommissionRecordsData) ProtoReflect() protoreflect.Message {
	mi := &file_agentrpc_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommissionRecordsData.ProtoReflect.Descriptor instead.
func (*CommissionRecordsData) Descriptor() ([]byte, []int) {
	return file_agentrpc_proto_rawDescGZIP(), []int{41}
}

func (x *CommissionRecordsData) GetCurrent() string {
	if x != nil {
		return x.Current
	}
	return ""
}

func (x *CommissionRecordsData) GetPages() string {
	if x != nil {
		return x.Pages
	}
	return ""
}

func (x *CommissionRecordsData) GetSize() string {
	if x != nil {
		return x.Size
	}
	return ""
}

func (x *CommissionRecordsData) GetTotal() string {
	if x != nil {
		return x.Total
	}
	return ""
}

func (x *CommissionRecordsData) GetSortId() string {
	if x != nil {
		return x.SortId
	}
	return ""
}

func (x *CommissionRecordsData) GetSortValue() string {
	if x != nil {
		return x.SortValue
	}
	return ""
}

func (x *CommissionRecordsData) GetList() []*CommissionRecordsDataItem {
	if x != nil {
		return x.List
	}
	return nil
}

type CommissionRecordsDataItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username        string  `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	AgentLevel      int64   `protobuf:"varint,2,opt,name=agentLevel,proto3" json:"agentLevel,omitempty"`            //代理等级
	BettingTurnOver float64 `protobuf:"fixed64,3,opt,name=bettingTurnOver,proto3" json:"bettingTurnOver,omitempty"` //投注金额
	CommissionUsd   float64 `protobuf:"fixed64,4,opt,name=commissionUsd,proto3" json:"commissionUsd,omitempty"`     //佣金金额
	Currency        string  `protobuf:"bytes,5,opt,name=currency,proto3" json:"currency,omitempty"`                 //货币
	CreatedAt       int64   `protobuf:"varint,6,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt       int64   `protobuf:"varint,7,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
}

func (x *CommissionRecordsDataItem) Reset() {
	*x = CommissionRecordsDataItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentrpc_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommissionRecordsDataItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommissionRecordsDataItem) ProtoMessage() {}

func (x *CommissionRecordsDataItem) ProtoReflect() protoreflect.Message {
	mi := &file_agentrpc_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommissionRecordsDataItem.ProtoReflect.Descriptor instead.
func (*CommissionRecordsDataItem) Descriptor() ([]byte, []int) {
	return file_agentrpc_proto_rawDescGZIP(), []int{42}
}

func (x *CommissionRecordsDataItem) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *CommissionRecordsDataItem) GetAgentLevel() int64 {
	if x != nil {
		return x.AgentLevel
	}
	return 0
}

func (x *CommissionRecordsDataItem) GetBettingTurnOver() float64 {
	if x != nil {
		return x.BettingTurnOver
	}
	return 0
}

func (x *CommissionRecordsDataItem) GetCommissionUsd() float64 {
	if x != nil {
		return x.CommissionUsd
	}
	return 0
}

func (x *CommissionRecordsDataItem) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *CommissionRecordsDataItem) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *CommissionRecordsDataItem) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

type SubordinateDetailsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sign bool `protobuf:"varint,1,opt,name=sign,proto3" json:"sign,omitempty"`
}

func (x *SubordinateDetailsReq) Reset() {
	*x = SubordinateDetailsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentrpc_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubordinateDetailsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubordinateDetailsReq) ProtoMessage() {}

func (x *SubordinateDetailsReq) ProtoReflect() protoreflect.Message {
	mi := &file_agentrpc_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubordinateDetailsReq.ProtoReflect.Descriptor instead.
func (*SubordinateDetailsReq) Descriptor() ([]byte, []int) {
	return file_agentrpc_proto_rawDescGZIP(), []int{43}
}

func (x *SubordinateDetailsReq) GetSign() bool {
	if x != nil {
		return x.Sign
	}
	return false
}

type SubordinateDetailsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32                   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string                  `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *SubordinateDetailsData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *SubordinateDetailsResp) Reset() {
	*x = SubordinateDetailsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentrpc_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubordinateDetailsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubordinateDetailsResp) ProtoMessage() {}

func (x *SubordinateDetailsResp) ProtoReflect() protoreflect.Message {
	mi := &file_agentrpc_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubordinateDetailsResp.ProtoReflect.Descriptor instead.
func (*SubordinateDetailsResp) Descriptor() ([]byte, []int) {
	return file_agentrpc_proto_rawDescGZIP(), []int{44}
}

func (x *SubordinateDetailsResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *SubordinateDetailsResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *SubordinateDetailsResp) GetData() *SubordinateDetailsData {
	if x != nil {
		return x.Data
	}
	return nil
}

type SubordinateDetailsData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Level1          *SubordinateDetailsResSubDto `protobuf:"bytes,1,opt,name=level1,proto3" json:"level1,omitempty"`                     // 下1级
	Level2          *SubordinateDetailsResSubDto `protobuf:"bytes,2,opt,name=level2,proto3" json:"level2,omitempty"`                     // 下2级
	Level3          *SubordinateDetailsResSubDto `protobuf:"bytes,3,opt,name=level3,proto3" json:"level3,omitempty"`                     // 下3级
	Commission      float64                      `protobuf:"fixed64,4,opt,name=commission,proto3" json:"commission,omitempty"`           // 佣金金额
	BettingTurnOver float64                      `protobuf:"fixed64,5,opt,name=bettingTurnOver,proto3" json:"bettingTurnOver,omitempty"` // 流水
}

func (x *SubordinateDetailsData) Reset() {
	*x = SubordinateDetailsData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentrpc_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubordinateDetailsData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubordinateDetailsData) ProtoMessage() {}

func (x *SubordinateDetailsData) ProtoReflect() protoreflect.Message {
	mi := &file_agentrpc_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubordinateDetailsData.ProtoReflect.Descriptor instead.
func (*SubordinateDetailsData) Descriptor() ([]byte, []int) {
	return file_agentrpc_proto_rawDescGZIP(), []int{45}
}

func (x *SubordinateDetailsData) GetLevel1() *SubordinateDetailsResSubDto {
	if x != nil {
		return x.Level1
	}
	return nil
}

func (x *SubordinateDetailsData) GetLevel2() *SubordinateDetailsResSubDto {
	if x != nil {
		return x.Level2
	}
	return nil
}

func (x *SubordinateDetailsData) GetLevel3() *SubordinateDetailsResSubDto {
	if x != nil {
		return x.Level3
	}
	return nil
}

func (x *SubordinateDetailsData) GetCommission() float64 {
	if x != nil {
		return x.Commission
	}
	return 0
}

func (x *SubordinateDetailsData) GetBettingTurnOver() float64 {
	if x != nil {
		return x.BettingTurnOver
	}
	return 0
}

type SubordinateDetailsResSubDto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nums            int64   `protobuf:"varint,1,opt,name=nums,proto3" json:"nums,omitempty"`                        //代理人数
	Commission      float64 `protobuf:"fixed64,2,opt,name=commission,proto3" json:"commission,omitempty"`           //佣金金额
	BettingTurnOver float64 `protobuf:"fixed64,3,opt,name=bettingTurnOver,proto3" json:"bettingTurnOver,omitempty"` //流水
}

func (x *SubordinateDetailsResSubDto) Reset() {
	*x = SubordinateDetailsResSubDto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentrpc_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubordinateDetailsResSubDto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubordinateDetailsResSubDto) ProtoMessage() {}

func (x *SubordinateDetailsResSubDto) ProtoReflect() protoreflect.Message {
	mi := &file_agentrpc_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubordinateDetailsResSubDto.ProtoReflect.Descriptor instead.
func (*SubordinateDetailsResSubDto) Descriptor() ([]byte, []int) {
	return file_agentrpc_proto_rawDescGZIP(), []int{46}
}

func (x *SubordinateDetailsResSubDto) GetNums() int64 {
	if x != nil {
		return x.Nums
	}
	return 0
}

func (x *SubordinateDetailsResSubDto) GetCommission() float64 {
	if x != nil {
		return x.Commission
	}
	return 0
}

func (x *SubordinateDetailsResSubDto) GetBettingTurnOver() float64 {
	if x != nil {
		return x.BettingTurnOver
	}
	return 0
}

type SuperAddConfigReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username       string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	PasswordHash   string `protobuf:"bytes,2,opt,name=passwordHash,proto3" json:"passwordHash,omitempty"`
	Mobile         string `protobuf:"bytes,3,opt,name=mobile,proto3" json:"mobile,omitempty"`
	Status         string `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`
	CommissionRate string `protobuf:"bytes,5,opt,name=commissionRate,proto3" json:"commissionRate,omitempty"`
	ExpiredAt      string `protobuf:"bytes,6,opt,name=expiredAt,proto3" json:"expiredAt,omitempty"`
	PromoCategory  string `protobuf:"bytes,7,opt,name=promoCategory,proto3" json:"promoCategory,omitempty"`
}

func (x *SuperAddConfigReq) Reset() {
	*x = SuperAddConfigReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentrpc_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SuperAddConfigReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SuperAddConfigReq) ProtoMessage() {}

func (x *SuperAddConfigReq) ProtoReflect() protoreflect.Message {
	mi := &file_agentrpc_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SuperAddConfigReq.ProtoReflect.Descriptor instead.
func (*SuperAddConfigReq) Descriptor() ([]byte, []int) {
	return file_agentrpc_proto_rawDescGZIP(), []int{47}
}

func (x *SuperAddConfigReq) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *SuperAddConfigReq) GetPasswordHash() string {
	if x != nil {
		return x.PasswordHash
	}
	return ""
}

func (x *SuperAddConfigReq) GetMobile() string {
	if x != nil {
		return x.Mobile
	}
	return ""
}

func (x *SuperAddConfigReq) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *SuperAddConfigReq) GetCommissionRate() string {
	if x != nil {
		return x.CommissionRate
	}
	return ""
}

func (x *SuperAddConfigReq) GetExpiredAt() string {
	if x != nil {
		return x.ExpiredAt
	}
	return ""
}

func (x *SuperAddConfigReq) GetPromoCategory() string {
	if x != nil {
		return x.PromoCategory
	}
	return ""
}

type SuperAddConfigResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data bool   `protobuf:"varint,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *SuperAddConfigResp) Reset() {
	*x = SuperAddConfigResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentrpc_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SuperAddConfigResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SuperAddConfigResp) ProtoMessage() {}

func (x *SuperAddConfigResp) ProtoReflect() protoreflect.Message {
	mi := &file_agentrpc_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SuperAddConfigResp.ProtoReflect.Descriptor instead.
func (*SuperAddConfigResp) Descriptor() ([]byte, []int) {
	return file_agentrpc_proto_rawDescGZIP(), []int{48}
}

func (x *SuperAddConfigResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *SuperAddConfigResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *SuperAddConfigResp) GetData() bool {
	if x != nil {
		return x.Data
	}
	return false
}

type AgentCommissionRecordReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current   int64                         `protobuf:"varint,1,opt,name=current,proto3" json:"current,omitempty"`
	Size      int64                         `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	SortKey   string                        `protobuf:"bytes,3,opt,name=sortKey,proto3" json:"sortKey,omitempty"`
	SortField []string                      `protobuf:"bytes,4,rep,name=sortField,proto3" json:"sortField,omitempty"`
	Data      *AgentCommissionRecordDataReq `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *AgentCommissionRecordReq) Reset() {
	*x = AgentCommissionRecordReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentrpc_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentCommissionRecordReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentCommissionRecordReq) ProtoMessage() {}

func (x *AgentCommissionRecordReq) ProtoReflect() protoreflect.Message {
	mi := &file_agentrpc_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentCommissionRecordReq.ProtoReflect.Descriptor instead.
func (*AgentCommissionRecordReq) Descriptor() ([]byte, []int) {
	return file_agentrpc_proto_rawDescGZIP(), []int{49}
}

func (x *AgentCommissionRecordReq) GetCurrent() int64 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *AgentCommissionRecordReq) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *AgentCommissionRecordReq) GetSortKey() string {
	if x != nil {
		return x.SortKey
	}
	return ""
}

func (x *AgentCommissionRecordReq) GetSortField() []string {
	if x != nil {
		return x.SortField
	}
	return nil
}

func (x *AgentCommissionRecordReq) GetData() *AgentCommissionRecordDataReq {
	if x != nil {
		return x.Data
	}
	return nil
}

type AgentCommissionRecordDataReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username  string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Status    int64  `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	StartTime int64  `protobuf:"varint,3,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime   int64  `protobuf:"varint,4,opt,name=endTime,proto3" json:"endTime,omitempty"`
}

func (x *AgentCommissionRecordDataReq) Reset() {
	*x = AgentCommissionRecordDataReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentrpc_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentCommissionRecordDataReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentCommissionRecordDataReq) ProtoMessage() {}

func (x *AgentCommissionRecordDataReq) ProtoReflect() protoreflect.Message {
	mi := &file_agentrpc_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentCommissionRecordDataReq.ProtoReflect.Descriptor instead.
func (*AgentCommissionRecordDataReq) Descriptor() ([]byte, []int) {
	return file_agentrpc_proto_rawDescGZIP(), []int{50}
}

func (x *AgentCommissionRecordDataReq) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *AgentCommissionRecordDataReq) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *AgentCommissionRecordDataReq) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *AgentCommissionRecordDataReq) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

type AgentCommissionRecordResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32                          `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string                         `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *AgentCommissionRecordDataResp `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *AgentCommissionRecordResp) Reset() {
	*x = AgentCommissionRecordResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentrpc_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentCommissionRecordResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentCommissionRecordResp) ProtoMessage() {}

func (x *AgentCommissionRecordResp) ProtoReflect() protoreflect.Message {
	mi := &file_agentrpc_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentCommissionRecordResp.ProtoReflect.Descriptor instead.
func (*AgentCommissionRecordResp) Descriptor() ([]byte, []int) {
	return file_agentrpc_proto_rawDescGZIP(), []int{51}
}

func (x *AgentCommissionRecordResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *AgentCommissionRecordResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *AgentCommissionRecordResp) GetData() *AgentCommissionRecordDataResp {
	if x != nil {
		return x.Data
	}
	return nil
}

type AgentCommissionRecordDataResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current string                           `protobuf:"bytes,1,opt,name=current,proto3" json:"current,omitempty"`
	Pages   string                           `protobuf:"bytes,2,opt,name=pages,proto3" json:"pages,omitempty"`
	Size    string                           `protobuf:"bytes,3,opt,name=size,proto3" json:"size,omitempty"`
	Total   string                           `protobuf:"bytes,4,opt,name=total,proto3" json:"total,omitempty"`
	List    []*AgentCommissionRecordDataItem `protobuf:"bytes,5,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *AgentCommissionRecordDataResp) Reset() {
	*x = AgentCommissionRecordDataResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentrpc_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentCommissionRecordDataResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentCommissionRecordDataResp) ProtoMessage() {}

func (x *AgentCommissionRecordDataResp) ProtoReflect() protoreflect.Message {
	mi := &file_agentrpc_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentCommissionRecordDataResp.ProtoReflect.Descriptor instead.
func (*AgentCommissionRecordDataResp) Descriptor() ([]byte, []int) {
	return file_agentrpc_proto_rawDescGZIP(), []int{52}
}

func (x *AgentCommissionRecordDataResp) GetCurrent() string {
	if x != nil {
		return x.Current
	}
	return ""
}

func (x *AgentCommissionRecordDataResp) GetPages() string {
	if x != nil {
		return x.Pages
	}
	return ""
}

func (x *AgentCommissionRecordDataResp) GetSize() string {
	if x != nil {
		return x.Size
	}
	return ""
}

func (x *AgentCommissionRecordDataResp) GetTotal() string {
	if x != nil {
		return x.Total
	}
	return ""
}

func (x *AgentCommissionRecordDataResp) GetList() []*AgentCommissionRecordDataItem {
	if x != nil {
		return x.List
	}
	return nil
}

type AgentCommissionRecordDataItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	AmountTotal    string `protobuf:"bytes,2,opt,name=amountTotal,proto3" json:"amountTotal,omitempty"`       //当月佣金额度
	AmountWithdraw string `protobuf:"bytes,3,opt,name=amountWithdraw,proto3" json:"amountWithdraw,omitempty"` //当前已发放额度
	CreatedAt      int64  `protobuf:"varint,4,opt,name=createdAt,proto3" json:"createdAt,omitempty"`          //创建时间
	CreatedMonth   string `protobuf:"bytes,5,opt,name=createdMonth,proto3" json:"createdMonth,omitempty"`     //月份
	LevelId        int64  `protobuf:"varint,6,opt,name=levelId,proto3" json:"levelId,omitempty"`
	LevelName      string `protobuf:"bytes,7,opt,name=levelName,proto3" json:"levelName,omitempty"`
	OperateName    string `protobuf:"bytes,8,opt,name=operateName,proto3" json:"operateName,omitempty"`
	OperateTime    string `protobuf:"bytes,9,opt,name=operateTime,proto3" json:"operateTime,omitempty"`
	Status         int64  `protobuf:"varint,10,opt,name=status,proto3" json:"status,omitempty"`
	Uid            int64  `protobuf:"varint,11,opt,name=uid,proto3" json:"uid,omitempty"`
	UpdatedAt      int64  `protobuf:"varint,12,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	Username       string `protobuf:"bytes,13,opt,name=username,proto3" json:"username,omitempty"`
	Balance        string `protobuf:"bytes,14,opt,name=balance,proto3" json:"balance,omitempty"` // 可提现额度
}

func (x *AgentCommissionRecordDataItem) Reset() {
	*x = AgentCommissionRecordDataItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentrpc_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentCommissionRecordDataItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentCommissionRecordDataItem) ProtoMessage() {}

func (x *AgentCommissionRecordDataItem) ProtoReflect() protoreflect.Message {
	mi := &file_agentrpc_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentCommissionRecordDataItem.ProtoReflect.Descriptor instead.
func (*AgentCommissionRecordDataItem) Descriptor() ([]byte, []int) {
	return file_agentrpc_proto_rawDescGZIP(), []int{53}
}

func (x *AgentCommissionRecordDataItem) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AgentCommissionRecordDataItem) GetAmountTotal() string {
	if x != nil {
		return x.AmountTotal
	}
	return ""
}

func (x *AgentCommissionRecordDataItem) GetAmountWithdraw() string {
	if x != nil {
		return x.AmountWithdraw
	}
	return ""
}

func (x *AgentCommissionRecordDataItem) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *AgentCommissionRecordDataItem) GetCreatedMonth() string {
	if x != nil {
		return x.CreatedMonth
	}
	return ""
}

func (x *AgentCommissionRecordDataItem) GetLevelId() int64 {
	if x != nil {
		return x.LevelId
	}
	return 0
}

func (x *AgentCommissionRecordDataItem) GetLevelName() string {
	if x != nil {
		return x.LevelName
	}
	return ""
}

func (x *AgentCommissionRecordDataItem) GetOperateName() string {
	if x != nil {
		return x.OperateName
	}
	return ""
}

func (x *AgentCommissionRecordDataItem) GetOperateTime() string {
	if x != nil {
		return x.OperateTime
	}
	return ""
}

func (x *AgentCommissionRecordDataItem) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *AgentCommissionRecordDataItem) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *AgentCommissionRecordDataItem) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *AgentCommissionRecordDataItem) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *AgentCommissionRecordDataItem) GetBalance() string {
	if x != nil {
		return x.Balance
	}
	return ""
}

type AgentCommissionUpdateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AgentId   int64  `protobuf:"varint,1,opt,name=agentId,proto3" json:"agentId,omitempty"`
	Amount    string `protobuf:"bytes,2,opt,name=amount,proto3" json:"amount,omitempty"`
	Id        int64  `protobuf:"varint,3,opt,name=id,proto3" json:"id,omitempty"`
	MonthTime string `protobuf:"bytes,4,opt,name=monthTime,proto3" json:"monthTime,omitempty"`
	Optype    int64  `protobuf:"varint,5,opt,name=optype,proto3" json:"optype,omitempty"` //1==发放 2==扣除
}

func (x *AgentCommissionUpdateReq) Reset() {
	*x = AgentCommissionUpdateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentrpc_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentCommissionUpdateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentCommissionUpdateReq) ProtoMessage() {}

func (x *AgentCommissionUpdateReq) ProtoReflect() protoreflect.Message {
	mi := &file_agentrpc_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentCommissionUpdateReq.ProtoReflect.Descriptor instead.
func (*AgentCommissionUpdateReq) Descriptor() ([]byte, []int) {
	return file_agentrpc_proto_rawDescGZIP(), []int{54}
}

func (x *AgentCommissionUpdateReq) GetAgentId() int64 {
	if x != nil {
		return x.AgentId
	}
	return 0
}

func (x *AgentCommissionUpdateReq) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *AgentCommissionUpdateReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AgentCommissionUpdateReq) GetMonthTime() string {
	if x != nil {
		return x.MonthTime
	}
	return ""
}

func (x *AgentCommissionUpdateReq) GetOptype() int64 {
	if x != nil {
		return x.Optype
	}
	return 0
}

type AgentCommissionUpdateResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data bool   `protobuf:"varint,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *AgentCommissionUpdateResp) Reset() {
	*x = AgentCommissionUpdateResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentrpc_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentCommissionUpdateResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentCommissionUpdateResp) ProtoMessage() {}

func (x *AgentCommissionUpdateResp) ProtoReflect() protoreflect.Message {
	mi := &file_agentrpc_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentCommissionUpdateResp.ProtoReflect.Descriptor instead.
func (*AgentCommissionUpdateResp) Descriptor() ([]byte, []int) {
	return file_agentrpc_proto_rawDescGZIP(), []int{55}
}

func (x *AgentCommissionUpdateResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *AgentCommissionUpdateResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *AgentCommissionUpdateResp) GetData() bool {
	if x != nil {
		return x.Data
	}
	return false
}

type AgentCommissionWithdrawRecoredReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current   int64                                  `protobuf:"varint,1,opt,name=current,proto3" json:"current,omitempty"`
	Size      int64                                  `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	SortKey   string                                 `protobuf:"bytes,3,opt,name=sortKey,proto3" json:"sortKey,omitempty"`
	SortField []string                               `protobuf:"bytes,4,rep,name=sortField,proto3" json:"sortField,omitempty"`
	Data      *AgentCommissionWithdrawRecoredDataReq `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *AgentCommissionWithdrawRecoredReq) Reset() {
	*x = AgentCommissionWithdrawRecoredReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentrpc_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentCommissionWithdrawRecoredReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentCommissionWithdrawRecoredReq) ProtoMessage() {}

func (x *AgentCommissionWithdrawRecoredReq) ProtoReflect() protoreflect.Message {
	mi := &file_agentrpc_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentCommissionWithdrawRecoredReq.ProtoReflect.Descriptor instead.
func (*AgentCommissionWithdrawRecoredReq) Descriptor() ([]byte, []int) {
	return file_agentrpc_proto_rawDescGZIP(), []int{56}
}

func (x *AgentCommissionWithdrawRecoredReq) GetCurrent() int64 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *AgentCommissionWithdrawRecoredReq) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *AgentCommissionWithdrawRecoredReq) GetSortKey() string {
	if x != nil {
		return x.SortKey
	}
	return ""
}

func (x *AgentCommissionWithdrawRecoredReq) GetSortField() []string {
	if x != nil {
		return x.SortField
	}
	return nil
}

func (x *AgentCommissionWithdrawRecoredReq) GetData() *AgentCommissionWithdrawRecoredDataReq {
	if x != nil {
		return x.Data
	}
	return nil
}

type AgentCommissionWithdrawRecoredDataReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username  string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Id        string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Status    int64  `protobuf:"varint,3,opt,name=status,proto3" json:"status,omitempty"`
	StartTime int64  `protobuf:"varint,4,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime   int64  `protobuf:"varint,5,opt,name=endTime,proto3" json:"endTime,omitempty"`
}

func (x *AgentCommissionWithdrawRecoredDataReq) Reset() {
	*x = AgentCommissionWithdrawRecoredDataReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentrpc_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentCommissionWithdrawRecoredDataReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentCommissionWithdrawRecoredDataReq) ProtoMessage() {}

func (x *AgentCommissionWithdrawRecoredDataReq) ProtoReflect() protoreflect.Message {
	mi := &file_agentrpc_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentCommissionWithdrawRecoredDataReq.ProtoReflect.Descriptor instead.
func (*AgentCommissionWithdrawRecoredDataReq) Descriptor() ([]byte, []int) {
	return file_agentrpc_proto_rawDescGZIP(), []int{57}
}

func (x *AgentCommissionWithdrawRecoredDataReq) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *AgentCommissionWithdrawRecoredDataReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AgentCommissionWithdrawRecoredDataReq) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *AgentCommissionWithdrawRecoredDataReq) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *AgentCommissionWithdrawRecoredDataReq) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

type AgentCommissionWithdrawRecoredResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32                               `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string                              `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *AgentCommissionWithdrawRecoredData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *AgentCommissionWithdrawRecoredResp) Reset() {
	*x = AgentCommissionWithdrawRecoredResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentrpc_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentCommissionWithdrawRecoredResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentCommissionWithdrawRecoredResp) ProtoMessage() {}

func (x *AgentCommissionWithdrawRecoredResp) ProtoReflect() protoreflect.Message {
	mi := &file_agentrpc_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentCommissionWithdrawRecoredResp.ProtoReflect.Descriptor instead.
func (*AgentCommissionWithdrawRecoredResp) Descriptor() ([]byte, []int) {
	return file_agentrpc_proto_rawDescGZIP(), []int{58}
}

func (x *AgentCommissionWithdrawRecoredResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *AgentCommissionWithdrawRecoredResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *AgentCommissionWithdrawRecoredResp) GetData() *AgentCommissionWithdrawRecoredData {
	if x != nil {
		return x.Data
	}
	return nil
}

type AgentCommissionWithdrawRecoredData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current string                                    `protobuf:"bytes,1,opt,name=current,proto3" json:"current,omitempty"`
	Pages   string                                    `protobuf:"bytes,2,opt,name=pages,proto3" json:"pages,omitempty"`
	Size    string                                    `protobuf:"bytes,3,opt,name=size,proto3" json:"size,omitempty"`
	Total   string                                    `protobuf:"bytes,4,opt,name=total,proto3" json:"total,omitempty"`
	List    []*AgentCommissionWithdrawRecoredDataItem `protobuf:"bytes,5,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *AgentCommissionWithdrawRecoredData) Reset() {
	*x = AgentCommissionWithdrawRecoredData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentrpc_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentCommissionWithdrawRecoredData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentCommissionWithdrawRecoredData) ProtoMessage() {}

func (x *AgentCommissionWithdrawRecoredData) ProtoReflect() protoreflect.Message {
	mi := &file_agentrpc_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentCommissionWithdrawRecoredData.ProtoReflect.Descriptor instead.
func (*AgentCommissionWithdrawRecoredData) Descriptor() ([]byte, []int) {
	return file_agentrpc_proto_rawDescGZIP(), []int{59}
}

func (x *AgentCommissionWithdrawRecoredData) GetCurrent() string {
	if x != nil {
		return x.Current
	}
	return ""
}

func (x *AgentCommissionWithdrawRecoredData) GetPages() string {
	if x != nil {
		return x.Pages
	}
	return ""
}

func (x *AgentCommissionWithdrawRecoredData) GetSize() string {
	if x != nil {
		return x.Size
	}
	return ""
}

func (x *AgentCommissionWithdrawRecoredData) GetTotal() string {
	if x != nil {
		return x.Total
	}
	return ""
}

func (x *AgentCommissionWithdrawRecoredData) GetList() []*AgentCommissionWithdrawRecoredDataItem {
	if x != nil {
		return x.List
	}
	return nil
}

type AgentCommissionWithdrawRecoredDataItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CPFAccountBank    string `protobuf:"bytes,2,opt,name=CPFAccountBank,proto3" json:"CPFAccountBank,omitempty"`
	CPFAccountName    string `protobuf:"bytes,3,opt,name=CPFAccountName,proto3" json:"CPFAccountName,omitempty"`
	CategoryCurrency  int64  `protobuf:"varint,4,opt,name=categoryCurrency,proto3" json:"categoryCurrency,omitempty"`
	CategoryTransfer  int64  `protobuf:"varint,5,opt,name=categoryTransfer,proto3" json:"categoryTransfer,omitempty"`
	Code              string `protobuf:"bytes,6,opt,name=code,proto3" json:"code,omitempty"`
	CoinBefore        string `protobuf:"bytes,7,opt,name=coinBefore,proto3" json:"coinBefore,omitempty"`
	CreatedAt         int64  `protobuf:"varint,8,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	Currency          string `protobuf:"bytes,9,opt,name=currency,proto3" json:"currency,omitempty"`
	CustomizeNoticeId int64  `protobuf:"varint,10,opt,name=customizeNoticeId,proto3" json:"customizeNoticeId,omitempty"`
	ExchangeRate      string `protobuf:"bytes,11,opt,name=exchangeRate,proto3" json:"exchangeRate,omitempty"`
	ExtraInfo         string `protobuf:"bytes,12,opt,name=extraInfo,proto3" json:"extraInfo,omitempty"`
	OperateTime       int64  `protobuf:"varint,13,opt,name=operateTime,proto3" json:"operateTime,omitempty"`
	OperateUsername   string `protobuf:"bytes,14,opt,name=operateUsername,proto3" json:"operateUsername,omitempty"`
	PlatName          string `protobuf:"bytes,15,opt,name=platName,proto3" json:"platName,omitempty"`
	PlatNickName      string `protobuf:"bytes,16,opt,name=platNickName,proto3" json:"platNickName,omitempty"`
	PlatOrderId       string `protobuf:"bytes,17,opt,name=platOrderId,proto3" json:"platOrderId,omitempty"`
	RealAmount        string `protobuf:"bytes,18,opt,name=realAmount,proto3" json:"realAmount,omitempty"`
	Remark            string `protobuf:"bytes,19,opt,name=remark,proto3" json:"remark,omitempty"`
	Status            int64  `protobuf:"varint,20,opt,name=status,proto3" json:"status,omitempty"`
	Uid               int64  `protobuf:"varint,21,opt,name=uid,proto3" json:"uid,omitempty"`
	UpdatedAt         int64  `protobuf:"varint,22,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	Username          string `protobuf:"bytes,23,opt,name=username,proto3" json:"username,omitempty"`
	WithdrawAmount    string `protobuf:"bytes,24,opt,name=withdrawAmount,proto3" json:"withdrawAmount,omitempty"`
}

func (x *AgentCommissionWithdrawRecoredDataItem) Reset() {
	*x = AgentCommissionWithdrawRecoredDataItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentrpc_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentCommissionWithdrawRecoredDataItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentCommissionWithdrawRecoredDataItem) ProtoMessage() {}

func (x *AgentCommissionWithdrawRecoredDataItem) ProtoReflect() protoreflect.Message {
	mi := &file_agentrpc_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentCommissionWithdrawRecoredDataItem.ProtoReflect.Descriptor instead.
func (*AgentCommissionWithdrawRecoredDataItem) Descriptor() ([]byte, []int) {
	return file_agentrpc_proto_rawDescGZIP(), []int{60}
}

func (x *AgentCommissionWithdrawRecoredDataItem) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AgentCommissionWithdrawRecoredDataItem) GetCPFAccountBank() string {
	if x != nil {
		return x.CPFAccountBank
	}
	return ""
}

func (x *AgentCommissionWithdrawRecoredDataItem) GetCPFAccountName() string {
	if x != nil {
		return x.CPFAccountName
	}
	return ""
}

func (x *AgentCommissionWithdrawRecoredDataItem) GetCategoryCurrency() int64 {
	if x != nil {
		return x.CategoryCurrency
	}
	return 0
}

func (x *AgentCommissionWithdrawRecoredDataItem) GetCategoryTransfer() int64 {
	if x != nil {
		return x.CategoryTransfer
	}
	return 0
}

func (x *AgentCommissionWithdrawRecoredDataItem) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *AgentCommissionWithdrawRecoredDataItem) GetCoinBefore() string {
	if x != nil {
		return x.CoinBefore
	}
	return ""
}

func (x *AgentCommissionWithdrawRecoredDataItem) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *AgentCommissionWithdrawRecoredDataItem) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *AgentCommissionWithdrawRecoredDataItem) GetCustomizeNoticeId() int64 {
	if x != nil {
		return x.CustomizeNoticeId
	}
	return 0
}

func (x *AgentCommissionWithdrawRecoredDataItem) GetExchangeRate() string {
	if x != nil {
		return x.ExchangeRate
	}
	return ""
}

func (x *AgentCommissionWithdrawRecoredDataItem) GetExtraInfo() string {
	if x != nil {
		return x.ExtraInfo
	}
	return ""
}

func (x *AgentCommissionWithdrawRecoredDataItem) GetOperateTime() int64 {
	if x != nil {
		return x.OperateTime
	}
	return 0
}

func (x *AgentCommissionWithdrawRecoredDataItem) GetOperateUsername() string {
	if x != nil {
		return x.OperateUsername
	}
	return ""
}

func (x *AgentCommissionWithdrawRecoredDataItem) GetPlatName() string {
	if x != nil {
		return x.PlatName
	}
	return ""
}

func (x *AgentCommissionWithdrawRecoredDataItem) GetPlatNickName() string {
	if x != nil {
		return x.PlatNickName
	}
	return ""
}

func (x *AgentCommissionWithdrawRecoredDataItem) GetPlatOrderId() string {
	if x != nil {
		return x.PlatOrderId
	}
	return ""
}

func (x *AgentCommissionWithdrawRecoredDataItem) GetRealAmount() string {
	if x != nil {
		return x.RealAmount
	}
	return ""
}

func (x *AgentCommissionWithdrawRecoredDataItem) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *AgentCommissionWithdrawRecoredDataItem) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *AgentCommissionWithdrawRecoredDataItem) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *AgentCommissionWithdrawRecoredDataItem) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *AgentCommissionWithdrawRecoredDataItem) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *AgentCommissionWithdrawRecoredDataItem) GetWithdrawAmount() string {
	if x != nil {
		return x.WithdrawAmount
	}
	return ""
}

type AgentCommissionLogReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current   int64                      `protobuf:"varint,1,opt,name=current,proto3" json:"current,omitempty"`
	Size      int64                      `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	SortKey   string                     `protobuf:"bytes,3,opt,name=sortKey,proto3" json:"sortKey,omitempty"`
	SortField []string                   `protobuf:"bytes,4,rep,name=sortField,proto3" json:"sortField,omitempty"`
	Data      *AgentCommissionLogDataReq `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *AgentCommissionLogReq) Reset() {
	*x = AgentCommissionLogReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentrpc_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentCommissionLogReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentCommissionLogReq) ProtoMessage() {}

func (x *AgentCommissionLogReq) ProtoReflect() protoreflect.Message {
	mi := &file_agentrpc_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentCommissionLogReq.ProtoReflect.Descriptor instead.
func (*AgentCommissionLogReq) Descriptor() ([]byte, []int) {
	return file_agentrpc_proto_rawDescGZIP(), []int{61}
}

func (x *AgentCommissionLogReq) GetCurrent() int64 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *AgentCommissionLogReq) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *AgentCommissionLogReq) GetSortKey() string {
	if x != nil {
		return x.SortKey
	}
	return ""
}

func (x *AgentCommissionLogReq) GetSortField() []string {
	if x != nil {
		return x.SortField
	}
	return nil
}

func (x *AgentCommissionLogReq) GetData() *AgentCommissionLogDataReq {
	if x != nil {
		return x.Data
	}
	return nil
}

type AgentCommissionLogDataReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username  string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Id        string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Category  int64  `protobuf:"varint,3,opt,name=category,proto3" json:"category,omitempty"`
	StartTime int64  `protobuf:"varint,4,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime   int64  `protobuf:"varint,5,opt,name=endTime,proto3" json:"endTime,omitempty"`
}

func (x *AgentCommissionLogDataReq) Reset() {
	*x = AgentCommissionLogDataReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentrpc_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentCommissionLogDataReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentCommissionLogDataReq) ProtoMessage() {}

func (x *AgentCommissionLogDataReq) ProtoReflect() protoreflect.Message {
	mi := &file_agentrpc_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentCommissionLogDataReq.ProtoReflect.Descriptor instead.
func (*AgentCommissionLogDataReq) Descriptor() ([]byte, []int) {
	return file_agentrpc_proto_rawDescGZIP(), []int{62}
}

func (x *AgentCommissionLogDataReq) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *AgentCommissionLogDataReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AgentCommissionLogDataReq) GetCategory() int64 {
	if x != nil {
		return x.Category
	}
	return 0
}

func (x *AgentCommissionLogDataReq) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *AgentCommissionLogDataReq) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

type AgentCommissionLogResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32                   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string                  `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *AgentCommissionLogData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *AgentCommissionLogResp) Reset() {
	*x = AgentCommissionLogResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentrpc_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentCommissionLogResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentCommissionLogResp) ProtoMessage() {}

func (x *AgentCommissionLogResp) ProtoReflect() protoreflect.Message {
	mi := &file_agentrpc_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentCommissionLogResp.ProtoReflect.Descriptor instead.
func (*AgentCommissionLogResp) Descriptor() ([]byte, []int) {
	return file_agentrpc_proto_rawDescGZIP(), []int{63}
}

func (x *AgentCommissionLogResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *AgentCommissionLogResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *AgentCommissionLogResp) GetData() *AgentCommissionLogData {
	if x != nil {
		return x.Data
	}
	return nil
}

type AgentCommissionLogData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current string                        `protobuf:"bytes,1,opt,name=current,proto3" json:"current,omitempty"`
	Pages   string                        `protobuf:"bytes,2,opt,name=pages,proto3" json:"pages,omitempty"`
	Size    string                        `protobuf:"bytes,3,opt,name=size,proto3" json:"size,omitempty"`
	Total   string                        `protobuf:"bytes,4,opt,name=total,proto3" json:"total,omitempty"`
	List    []*AgentCommissionLogDataItem `protobuf:"bytes,5,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *AgentCommissionLogData) Reset() {
	*x = AgentCommissionLogData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentrpc_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentCommissionLogData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentCommissionLogData) ProtoMessage() {}

func (x *AgentCommissionLogData) ProtoReflect() protoreflect.Message {
	mi := &file_agentrpc_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentCommissionLogData.ProtoReflect.Descriptor instead.
func (*AgentCommissionLogData) Descriptor() ([]byte, []int) {
	return file_agentrpc_proto_rawDescGZIP(), []int{64}
}

func (x *AgentCommissionLogData) GetCurrent() string {
	if x != nil {
		return x.Current
	}
	return ""
}

func (x *AgentCommissionLogData) GetPages() string {
	if x != nil {
		return x.Pages
	}
	return ""
}

func (x *AgentCommissionLogData) GetSize() string {
	if x != nil {
		return x.Size
	}
	return ""
}

func (x *AgentCommissionLogData) GetTotal() string {
	if x != nil {
		return x.Total
	}
	return ""
}

func (x *AgentCommissionLogData) GetList() []*AgentCommissionLogDataItem {
	if x != nil {
		return x.List
	}
	return nil
}

type AgentCommissionLogDataItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Category   int64  `protobuf:"varint,1,opt,name=category,proto3" json:"category,omitempty"`
	Coin       string `protobuf:"bytes,2,opt,name=coin,proto3" json:"coin,omitempty"`
	CoinAfter  string `protobuf:"bytes,3,opt,name=coinAfter,proto3" json:"coinAfter,omitempty"`
	CoinBefore string `protobuf:"bytes,4,opt,name=coinBefore,proto3" json:"coinBefore,omitempty"`
	CreatedAt  int64  `protobuf:"varint,5,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	Id         string `protobuf:"bytes,6,opt,name=id,proto3" json:"id,omitempty"`
	OutIn      int64  `protobuf:"varint,7,opt,name=outIn,proto3" json:"outIn,omitempty"`
	ReferId    string `protobuf:"bytes,8,opt,name=referId,proto3" json:"referId,omitempty"`
	Uid        int64  `protobuf:"varint,9,opt,name=uid,proto3" json:"uid,omitempty"`
	Username   string `protobuf:"bytes,10,opt,name=username,proto3" json:"username,omitempty"`
}

func (x *AgentCommissionLogDataItem) Reset() {
	*x = AgentCommissionLogDataItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentrpc_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentCommissionLogDataItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentCommissionLogDataItem) ProtoMessage() {}

func (x *AgentCommissionLogDataItem) ProtoReflect() protoreflect.Message {
	mi := &file_agentrpc_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentCommissionLogDataItem.ProtoReflect.Descriptor instead.
func (*AgentCommissionLogDataItem) Descriptor() ([]byte, []int) {
	return file_agentrpc_proto_rawDescGZIP(), []int{65}
}

func (x *AgentCommissionLogDataItem) GetCategory() int64 {
	if x != nil {
		return x.Category
	}
	return 0
}

func (x *AgentCommissionLogDataItem) GetCoin() string {
	if x != nil {
		return x.Coin
	}
	return ""
}

func (x *AgentCommissionLogDataItem) GetCoinAfter() string {
	if x != nil {
		return x.CoinAfter
	}
	return ""
}

func (x *AgentCommissionLogDataItem) GetCoinBefore() string {
	if x != nil {
		return x.CoinBefore
	}
	return ""
}

func (x *AgentCommissionLogDataItem) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *AgentCommissionLogDataItem) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AgentCommissionLogDataItem) GetOutIn() int64 {
	if x != nil {
		return x.OutIn
	}
	return 0
}

func (x *AgentCommissionLogDataItem) GetReferId() string {
	if x != nil {
		return x.ReferId
	}
	return ""
}

func (x *AgentCommissionLogDataItem) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *AgentCommissionLogDataItem) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

type AgentResetPasswordReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Password string `protobuf:"bytes,1,opt,name=password,proto3" json:"password,omitempty"`
	Uid      int64  `protobuf:"varint,2,opt,name=uid,proto3" json:"uid,omitempty"`
}

func (x *AgentResetPasswordReq) Reset() {
	*x = AgentResetPasswordReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentrpc_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentResetPasswordReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentResetPasswordReq) ProtoMessage() {}

func (x *AgentResetPasswordReq) ProtoReflect() protoreflect.Message {
	mi := &file_agentrpc_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentResetPasswordReq.ProtoReflect.Descriptor instead.
func (*AgentResetPasswordReq) Descriptor() ([]byte, []int) {
	return file_agentrpc_proto_rawDescGZIP(), []int{66}
}

func (x *AgentResetPasswordReq) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *AgentResetPasswordReq) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

type AgentResetPasswordResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *AgentResetPasswordResp) Reset() {
	*x = AgentResetPasswordResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentrpc_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentResetPasswordResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentResetPasswordResp) ProtoMessage() {}

func (x *AgentResetPasswordResp) ProtoReflect() protoreflect.Message {
	mi := &file_agentrpc_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentResetPasswordResp.ProtoReflect.Descriptor instead.
func (*AgentResetPasswordResp) Descriptor() ([]byte, []int) {
	return file_agentrpc_proto_rawDescGZIP(), []int{67}
}

func (x *AgentResetPasswordResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *AgentResetPasswordResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type AgentLoginReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	Code     string `protobuf:"bytes,3,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *AgentLoginReq) Reset() {
	*x = AgentLoginReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentrpc_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentLoginReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentLoginReq) ProtoMessage() {}

func (x *AgentLoginReq) ProtoReflect() protoreflect.Message {
	mi := &file_agentrpc_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentLoginReq.ProtoReflect.Descriptor instead.
func (*AgentLoginReq) Descriptor() ([]byte, []int) {
	return file_agentrpc_proto_rawDescGZIP(), []int{68}
}

func (x *AgentLoginReq) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *AgentLoginReq) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *AgentLoginReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type AgentLoginResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32           `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string          `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *AgentLoginData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *AgentLoginResp) Reset() {
	*x = AgentLoginResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentrpc_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentLoginResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentLoginResp) ProtoMessage() {}

func (x *AgentLoginResp) ProtoReflect() protoreflect.Message {
	mi := &file_agentrpc_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentLoginResp.ProtoReflect.Descriptor instead.
func (*AgentLoginResp) Descriptor() ([]byte, []int) {
	return file_agentrpc_proto_rawDescGZIP(), []int{69}
}

func (x *AgentLoginResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *AgentLoginResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *AgentLoginResp) GetData() *AgentLoginData {
	if x != nil {
		return x.Data
	}
	return nil
}

type AgentGenerateGoogleSecretReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
}

func (x *AgentGenerateGoogleSecretReq) Reset() {
	*x = AgentGenerateGoogleSecretReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentrpc_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentGenerateGoogleSecretReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentGenerateGoogleSecretReq) ProtoMessage() {}

func (x *AgentGenerateGoogleSecretReq) ProtoReflect() protoreflect.Message {
	mi := &file_agentrpc_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentGenerateGoogleSecretReq.ProtoReflect.Descriptor instead.
func (*AgentGenerateGoogleSecretReq) Descriptor() ([]byte, []int) {
	return file_agentrpc_proto_rawDescGZIP(), []int{70}
}

func (x *AgentGenerateGoogleSecretReq) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

type AgentGenerateGoogleSecretResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32                          `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string                         `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *AgentGenerateGoogleSecretData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *AgentGenerateGoogleSecretResp) Reset() {
	*x = AgentGenerateGoogleSecretResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentrpc_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentGenerateGoogleSecretResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentGenerateGoogleSecretResp) ProtoMessage() {}

func (x *AgentGenerateGoogleSecretResp) ProtoReflect() protoreflect.Message {
	mi := &file_agentrpc_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentGenerateGoogleSecretResp.ProtoReflect.Descriptor instead.
func (*AgentGenerateGoogleSecretResp) Descriptor() ([]byte, []int) {
	return file_agentrpc_proto_rawDescGZIP(), []int{71}
}

func (x *AgentGenerateGoogleSecretResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *AgentGenerateGoogleSecretResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *AgentGenerateGoogleSecretResp) GetData() *AgentGenerateGoogleSecretData {
	if x != nil {
		return x.Data
	}
	return nil
}

type AgentGenerateGoogleSecretData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Secret string `protobuf:"bytes,1,opt,name=secret,proto3" json:"secret,omitempty"`
	Url    string `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *AgentGenerateGoogleSecretData) Reset() {
	*x = AgentGenerateGoogleSecretData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentrpc_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentGenerateGoogleSecretData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentGenerateGoogleSecretData) ProtoMessage() {}

func (x *AgentGenerateGoogleSecretData) ProtoReflect() protoreflect.Message {
	mi := &file_agentrpc_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentGenerateGoogleSecretData.ProtoReflect.Descriptor instead.
func (*AgentGenerateGoogleSecretData) Descriptor() ([]byte, []int) {
	return file_agentrpc_proto_rawDescGZIP(), []int{72}
}

func (x *AgentGenerateGoogleSecretData) GetSecret() string {
	if x != nil {
		return x.Secret
	}
	return ""
}

func (x *AgentGenerateGoogleSecretData) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type AgentLoginData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address           string  `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	AreaCode          string  `protobuf:"bytes,2,opt,name=areaCode,proto3" json:"areaCode,omitempty"`
	Avatar            string  `protobuf:"bytes,3,opt,name=avatar,proto3" json:"avatar,omitempty"`
	BindBank          int64   `protobuf:"varint,4,opt,name=bindBank,proto3" json:"bindBank,omitempty"`
	Birthday          string  `protobuf:"bytes,5,opt,name=birthday,proto3" json:"birthday,omitempty"`
	CoinCommission    float64 `protobuf:"fixed64,6,opt,name=coinCommission,proto3" json:"coinCommission,omitempty"`
	CreatedAt         int64   `protobuf:"varint,7,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	Email             string  `protobuf:"bytes,8,opt,name=email,proto3" json:"email,omitempty"`
	Fcoin             float64 `protobuf:"fixed64,9,opt,name=fcoin,proto3" json:"fcoin,omitempty"`
	Flag              int64   `protobuf:"varint,10,opt,name=flag,proto3" json:"flag,omitempty"`
	FreezeAt          int64   `protobuf:"varint,11,opt,name=freezeAt,proto3" json:"freezeAt,omitempty"`
	FreezeCause       string  `protobuf:"bytes,12,opt,name=freezeCause,proto3" json:"freezeCause,omitempty"`
	GoogleCodeStatus  int64   `protobuf:"varint,13,opt,name=googleCodeStatus,proto3" json:"googleCodeStatus,omitempty"`
	Id                int64   `protobuf:"varint,14,opt,name=id,proto3" json:"id,omitempty"`
	IdPath            string  `protobuf:"bytes,15,opt,name=idPath,proto3" json:"idPath,omitempty"`
	Ip                string  `protobuf:"bytes,16,opt,name=ip,proto3" json:"ip,omitempty"`
	IpRegion          string  `protobuf:"bytes,17,opt,name=ipRegion,proto3" json:"ipRegion,omitempty"`
	IsPromoter        int64   `protobuf:"varint,18,opt,name=isPromoter,proto3" json:"isPromoter,omitempty"`
	LastLoginDeviceId string  `protobuf:"bytes,19,opt,name=lastLoginDeviceId,proto3" json:"lastLoginDeviceId,omitempty"`
	LastLoginIp       string  `protobuf:"bytes,20,opt,name=lastLoginIp,proto3" json:"lastLoginIp,omitempty"`
	LastLoginIpRegion string  `protobuf:"bytes,21,opt,name=lastLoginIpRegion,proto3" json:"lastLoginIpRegion,omitempty"`
	LastLoginTime     int64   `protobuf:"varint,22,opt,name=lastLoginTime,proto3" json:"lastLoginTime,omitempty"`
	LevelId           int64   `protobuf:"varint,23,opt,name=levelId,proto3" json:"levelId,omitempty"`
	MerchantId        int64   `protobuf:"varint,24,opt,name=merchantId,proto3" json:"merchantId,omitempty"`
	Mobile            string  `protobuf:"bytes,25,opt,name=mobile,proto3" json:"mobile,omitempty"`
	OperatorName      string  `protobuf:"bytes,26,opt,name=operatorName,proto3" json:"operatorName,omitempty"`
	PasswordCoin      string  `protobuf:"bytes,27,opt,name=passwordCoin,proto3" json:"passwordCoin,omitempty"`
	PasswordHash      string  `protobuf:"bytes,28,opt,name=passwordHash,proto3" json:"passwordHash,omitempty"`
	PromoCode         string  `protobuf:"bytes,29,opt,name=promoCode,proto3" json:"promoCode,omitempty"`
	PromotionUrl      string  `protobuf:"bytes,30,opt,name=promotionUrl,proto3" json:"promotionUrl,omitempty"`
	QrCodeUrl         string  `protobuf:"bytes,31,opt,name=qrCodeUrl,proto3" json:"qrCodeUrl,omitempty"`
	RealName          string  `protobuf:"bytes,32,opt,name=realName,proto3" json:"realName,omitempty"`
	Role              int64   `protobuf:"varint,33,opt,name=role,proto3" json:"role,omitempty"`
	Score             int64   `protobuf:"varint,34,opt,name=score,proto3" json:"score,omitempty"`
	Sex               int64   `protobuf:"varint,35,opt,name=sex,proto3" json:"sex,omitempty"`
	Signature         string  `protobuf:"bytes,36,opt,name=signature,proto3" json:"signature,omitempty"`
	Status            int64   `protobuf:"varint,37,opt,name=status,proto3" json:"status,omitempty"`
	SupLevelTop       int64   `protobuf:"varint,38,opt,name=supLevelTop,proto3" json:"supLevelTop,omitempty"`
	SupLevelTopCname  string  `protobuf:"bytes,39,opt,name=supLevelTopCname,proto3" json:"supLevelTopCname,omitempty"`
	SupUid1           int64   `protobuf:"varint,40,opt,name=supUid1,proto3" json:"supUid1,omitempty"`
	SupUid2           int64   `protobuf:"varint,41,opt,name=supUid2,proto3" json:"supUid2,omitempty"`
	SupUid3           int64   `protobuf:"varint,42,opt,name=supUid3,proto3" json:"supUid3,omitempty"`
	SupUidTop         int64   `protobuf:"varint,43,opt,name=supUidTop,proto3" json:"supUidTop,omitempty"`
	SupUsername1      string  `protobuf:"bytes,44,opt,name=supUsername1,proto3" json:"supUsername1,omitempty"`
	SupUsernameTop    string  `protobuf:"bytes,45,opt,name=supUsernameTop,proto3" json:"supUsernameTop,omitempty"`
	ThirdLoginType    string  `protobuf:"bytes,46,opt,name=thirdLoginType,proto3" json:"thirdLoginType,omitempty"`
	Token             string  `protobuf:"bytes,47,opt,name=token,proto3" json:"token,omitempty"`
	UpdatedAt         int64   `protobuf:"varint,48,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	Username          string  `protobuf:"bytes,49,opt,name=username,proto3" json:"username,omitempty"`
	BankId            int64   `protobuf:"varint,50,opt,name=bankId,proto3" json:"bankId,omitempty"`
	GoogleUrl         string  `protobuf:"bytes,51,opt,name=googleUrl,proto3" json:"googleUrl,omitempty"`
}

func (x *AgentLoginData) Reset() {
	*x = AgentLoginData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentrpc_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentLoginData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentLoginData) ProtoMessage() {}

func (x *AgentLoginData) ProtoReflect() protoreflect.Message {
	mi := &file_agentrpc_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentLoginData.ProtoReflect.Descriptor instead.
func (*AgentLoginData) Descriptor() ([]byte, []int) {
	return file_agentrpc_proto_rawDescGZIP(), []int{73}
}

func (x *AgentLoginData) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *AgentLoginData) GetAreaCode() string {
	if x != nil {
		return x.AreaCode
	}
	return ""
}

func (x *AgentLoginData) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *AgentLoginData) GetBindBank() int64 {
	if x != nil {
		return x.BindBank
	}
	return 0
}

func (x *AgentLoginData) GetBirthday() string {
	if x != nil {
		return x.Birthday
	}
	return ""
}

func (x *AgentLoginData) GetCoinCommission() float64 {
	if x != nil {
		return x.CoinCommission
	}
	return 0
}

func (x *AgentLoginData) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *AgentLoginData) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *AgentLoginData) GetFcoin() float64 {
	if x != nil {
		return x.Fcoin
	}
	return 0
}

func (x *AgentLoginData) GetFlag() int64 {
	if x != nil {
		return x.Flag
	}
	return 0
}

func (x *AgentLoginData) GetFreezeAt() int64 {
	if x != nil {
		return x.FreezeAt
	}
	return 0
}

func (x *AgentLoginData) GetFreezeCause() string {
	if x != nil {
		return x.FreezeCause
	}
	return ""
}

func (x *AgentLoginData) GetGoogleCodeStatus() int64 {
	if x != nil {
		return x.GoogleCodeStatus
	}
	return 0
}

func (x *AgentLoginData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AgentLoginData) GetIdPath() string {
	if x != nil {
		return x.IdPath
	}
	return ""
}

func (x *AgentLoginData) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *AgentLoginData) GetIpRegion() string {
	if x != nil {
		return x.IpRegion
	}
	return ""
}

func (x *AgentLoginData) GetIsPromoter() int64 {
	if x != nil {
		return x.IsPromoter
	}
	return 0
}

func (x *AgentLoginData) GetLastLoginDeviceId() string {
	if x != nil {
		return x.LastLoginDeviceId
	}
	return ""
}

func (x *AgentLoginData) GetLastLoginIp() string {
	if x != nil {
		return x.LastLoginIp
	}
	return ""
}

func (x *AgentLoginData) GetLastLoginIpRegion() string {
	if x != nil {
		return x.LastLoginIpRegion
	}
	return ""
}

func (x *AgentLoginData) GetLastLoginTime() int64 {
	if x != nil {
		return x.LastLoginTime
	}
	return 0
}

func (x *AgentLoginData) GetLevelId() int64 {
	if x != nil {
		return x.LevelId
	}
	return 0
}

func (x *AgentLoginData) GetMerchantId() int64 {
	if x != nil {
		return x.MerchantId
	}
	return 0
}

func (x *AgentLoginData) GetMobile() string {
	if x != nil {
		return x.Mobile
	}
	return ""
}

func (x *AgentLoginData) GetOperatorName() string {
	if x != nil {
		return x.OperatorName
	}
	return ""
}

func (x *AgentLoginData) GetPasswordCoin() string {
	if x != nil {
		return x.PasswordCoin
	}
	return ""
}

func (x *AgentLoginData) GetPasswordHash() string {
	if x != nil {
		return x.PasswordHash
	}
	return ""
}

func (x *AgentLoginData) GetPromoCode() string {
	if x != nil {
		return x.PromoCode
	}
	return ""
}

func (x *AgentLoginData) GetPromotionUrl() string {
	if x != nil {
		return x.PromotionUrl
	}
	return ""
}

func (x *AgentLoginData) GetQrCodeUrl() string {
	if x != nil {
		return x.QrCodeUrl
	}
	return ""
}

func (x *AgentLoginData) GetRealName() string {
	if x != nil {
		return x.RealName
	}
	return ""
}

func (x *AgentLoginData) GetRole() int64 {
	if x != nil {
		return x.Role
	}
	return 0
}

func (x *AgentLoginData) GetScore() int64 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *AgentLoginData) GetSex() int64 {
	if x != nil {
		return x.Sex
	}
	return 0
}

func (x *AgentLoginData) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *AgentLoginData) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *AgentLoginData) GetSupLevelTop() int64 {
	if x != nil {
		return x.SupLevelTop
	}
	return 0
}

func (x *AgentLoginData) GetSupLevelTopCname() string {
	if x != nil {
		return x.SupLevelTopCname
	}
	return ""
}

func (x *AgentLoginData) GetSupUid1() int64 {
	if x != nil {
		return x.SupUid1
	}
	return 0
}

func (x *AgentLoginData) GetSupUid2() int64 {
	if x != nil {
		return x.SupUid2
	}
	return 0
}

func (x *AgentLoginData) GetSupUid3() int64 {
	if x != nil {
		return x.SupUid3
	}
	return 0
}

func (x *AgentLoginData) GetSupUidTop() int64 {
	if x != nil {
		return x.SupUidTop
	}
	return 0
}

func (x *AgentLoginData) GetSupUsername1() string {
	if x != nil {
		return x.SupUsername1
	}
	return ""
}

func (x *AgentLoginData) GetSupUsernameTop() string {
	if x != nil {
		return x.SupUsernameTop
	}
	return ""
}

func (x *AgentLoginData) GetThirdLoginType() string {
	if x != nil {
		return x.ThirdLoginType
	}
	return ""
}

func (x *AgentLoginData) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *AgentLoginData) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *AgentLoginData) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *AgentLoginData) GetBankId() int64 {
	if x != nil {
		return x.BankId
	}
	return 0
}

func (x *AgentLoginData) GetGoogleUrl() string {
	if x != nil {
		return x.GoogleUrl
	}
	return ""
}

type AgentInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AgentInfoReq) Reset() {
	*x = AgentInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentrpc_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentInfoReq) ProtoMessage() {}

func (x *AgentInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_agentrpc_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentInfoReq.ProtoReflect.Descriptor instead.
func (*AgentInfoReq) Descriptor() ([]byte, []int) {
	return file_agentrpc_proto_rawDescGZIP(), []int{74}
}

type AgentInfoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32           `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string          `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *AgentLoginData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *AgentInfoResp) Reset() {
	*x = AgentInfoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentrpc_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentInfoResp) ProtoMessage() {}

func (x *AgentInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_agentrpc_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentInfoResp.ProtoReflect.Descriptor instead.
func (*AgentInfoResp) Descriptor() ([]byte, []int) {
	return file_agentrpc_proto_rawDescGZIP(), []int{75}
}

func (x *AgentInfoResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *AgentInfoResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *AgentInfoResp) GetData() *AgentLoginData {
	if x != nil {
		return x.Data
	}
	return nil
}

type AgentStatisticsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartTime int64 `protobuf:"varint,1,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime   int64 `protobuf:"varint,2,opt,name=endTime,proto3" json:"endTime,omitempty"`
}

func (x *AgentStatisticsReq) Reset() {
	*x = AgentStatisticsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentrpc_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentStatisticsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentStatisticsReq) ProtoMessage() {}

func (x *AgentStatisticsReq) ProtoReflect() protoreflect.Message {
	mi := &file_agentrpc_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentStatisticsReq.ProtoReflect.Descriptor instead.
func (*AgentStatisticsReq) Descriptor() ([]byte, []int) {
	return file_agentrpc_proto_rawDescGZIP(), []int{76}
}

func (x *AgentStatisticsReq) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *AgentStatisticsReq) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

type AgentStatisticsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32                `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string               `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *AgentStatisticsData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *AgentStatisticsResp) Reset() {
	*x = AgentStatisticsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentrpc_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentStatisticsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentStatisticsResp) ProtoMessage() {}

func (x *AgentStatisticsResp) ProtoReflect() protoreflect.Message {
	mi := &file_agentrpc_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentStatisticsResp.ProtoReflect.Descriptor instead.
func (*AgentStatisticsResp) Descriptor() ([]byte, []int) {
	return file_agentrpc_proto_rawDescGZIP(), []int{77}
}

func (x *AgentStatisticsResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *AgentStatisticsResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *AgentStatisticsResp) GetData() *AgentStatisticsData {
	if x != nil {
		return x.Data
	}
	return nil
}

type AgentStatisticsData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AllUserCount             int64   `protobuf:"varint,1,opt,name=allUserCount,proto3" json:"allUserCount,omitempty"`
	BetAmount                float64 `protobuf:"fixed64,2,opt,name=betAmount,proto3" json:"betAmount,omitempty"`
	BetCount                 int64   `protobuf:"varint,3,opt,name=betCount,proto3" json:"betCount,omitempty"`
	BonusAmount              float64 `protobuf:"fixed64,4,opt,name=bonusAmount,proto3" json:"bonusAmount,omitempty"`
	BonusCount               int64   `protobuf:"varint,5,opt,name=bonusCount,proto3" json:"bonusCount,omitempty"`
	BonusTypeCount           int64   `protobuf:"varint,6,opt,name=bonusTypeCount,proto3" json:"bonusTypeCount,omitempty"`
	DepositAmount            float64 `protobuf:"fixed64,7,opt,name=depositAmount,proto3" json:"depositAmount,omitempty"`
	DepositCount             int64   `protobuf:"varint,8,opt,name=depositCount,proto3" json:"depositCount,omitempty"`
	DepositRatio             float64 `protobuf:"fixed64,9,opt,name=depositRatio,proto3" json:"depositRatio,omitempty"`
	FirstDepositAmount       float64 `protobuf:"fixed64,10,opt,name=firstDepositAmount,proto3" json:"firstDepositAmount,omitempty"`
	FirstDepositCount        int64   `protobuf:"varint,11,opt,name=firstDepositCount,proto3" json:"firstDepositCount,omitempty"`
	NewUserCount             int64   `protobuf:"varint,12,opt,name=newUserCount,proto3" json:"newUserCount,omitempty"`
	Ngr                      float64 `protobuf:"fixed64,13,opt,name=ngr,proto3" json:"ngr,omitempty"`
	OtherDepositAmount       float64 `protobuf:"fixed64,14,opt,name=otherDepositAmount,proto3" json:"otherDepositAmount,omitempty"`
	PayoutAmount             float64 `protobuf:"fixed64,15,opt,name=payoutAmount,proto3" json:"payoutAmount,omitempty"`
	SecondDepositAmount      float64 `protobuf:"fixed64,16,opt,name=secondDepositAmount,proto3" json:"secondDepositAmount,omitempty"`
	SecondDepositCount       int64   `protobuf:"varint,17,opt,name=secondDepositCount,proto3" json:"secondDepositCount,omitempty"`
	ThirdDepositAmount       float64 `protobuf:"fixed64,18,opt,name=thirdDepositAmount,proto3" json:"thirdDepositAmount,omitempty"`
	ThirdDepositCount        int64   `protobuf:"varint,19,opt,name=thirdDepositCount,proto3" json:"thirdDepositCount,omitempty"`
	TransferBonusAmount      float64 `protobuf:"fixed64,20,opt,name=transferBonusAmount,proto3" json:"transferBonusAmount,omitempty"`
	TransferDepositAmount    float64 `protobuf:"fixed64,21,opt,name=transferDepositAmount,proto3" json:"transferDepositAmount,omitempty"`
	TransferWithdrawalAmount float64 `protobuf:"fixed64,22,opt,name=transferWithdrawalAmount,proto3" json:"transferWithdrawalAmount,omitempty"`
	ValidAmount              float64 `protobuf:"fixed64,23,opt,name=validAmount,proto3" json:"validAmount,omitempty"`
	WithdrawalAmount         float64 `protobuf:"fixed64,24,opt,name=withdrawalAmount,proto3" json:"withdrawalAmount,omitempty"`
}

func (x *AgentStatisticsData) Reset() {
	*x = AgentStatisticsData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentrpc_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentStatisticsData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentStatisticsData) ProtoMessage() {}

func (x *AgentStatisticsData) ProtoReflect() protoreflect.Message {
	mi := &file_agentrpc_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentStatisticsData.ProtoReflect.Descriptor instead.
func (*AgentStatisticsData) Descriptor() ([]byte, []int) {
	return file_agentrpc_proto_rawDescGZIP(), []int{78}
}

func (x *AgentStatisticsData) GetAllUserCount() int64 {
	if x != nil {
		return x.AllUserCount
	}
	return 0
}

func (x *AgentStatisticsData) GetBetAmount() float64 {
	if x != nil {
		return x.BetAmount
	}
	return 0
}

func (x *AgentStatisticsData) GetBetCount() int64 {
	if x != nil {
		return x.BetCount
	}
	return 0
}

func (x *AgentStatisticsData) GetBonusAmount() float64 {
	if x != nil {
		return x.BonusAmount
	}
	return 0
}

func (x *AgentStatisticsData) GetBonusCount() int64 {
	if x != nil {
		return x.BonusCount
	}
	return 0
}

func (x *AgentStatisticsData) GetBonusTypeCount() int64 {
	if x != nil {
		return x.BonusTypeCount
	}
	return 0
}

func (x *AgentStatisticsData) GetDepositAmount() float64 {
	if x != nil {
		return x.DepositAmount
	}
	return 0
}

func (x *AgentStatisticsData) GetDepositCount() int64 {
	if x != nil {
		return x.DepositCount
	}
	return 0
}

func (x *AgentStatisticsData) GetDepositRatio() float64 {
	if x != nil {
		return x.DepositRatio
	}
	return 0
}

func (x *AgentStatisticsData) GetFirstDepositAmount() float64 {
	if x != nil {
		return x.FirstDepositAmount
	}
	return 0
}

func (x *AgentStatisticsData) GetFirstDepositCount() int64 {
	if x != nil {
		return x.FirstDepositCount
	}
	return 0
}

func (x *AgentStatisticsData) GetNewUserCount() int64 {
	if x != nil {
		return x.NewUserCount
	}
	return 0
}

func (x *AgentStatisticsData) GetNgr() float64 {
	if x != nil {
		return x.Ngr
	}
	return 0
}

func (x *AgentStatisticsData) GetOtherDepositAmount() float64 {
	if x != nil {
		return x.OtherDepositAmount
	}
	return 0
}

func (x *AgentStatisticsData) GetPayoutAmount() float64 {
	if x != nil {
		return x.PayoutAmount
	}
	return 0
}

func (x *AgentStatisticsData) GetSecondDepositAmount() float64 {
	if x != nil {
		return x.SecondDepositAmount
	}
	return 0
}

func (x *AgentStatisticsData) GetSecondDepositCount() int64 {
	if x != nil {
		return x.SecondDepositCount
	}
	return 0
}

func (x *AgentStatisticsData) GetThirdDepositAmount() float64 {
	if x != nil {
		return x.ThirdDepositAmount
	}
	return 0
}

func (x *AgentStatisticsData) GetThirdDepositCount() int64 {
	if x != nil {
		return x.ThirdDepositCount
	}
	return 0
}

func (x *AgentStatisticsData) GetTransferBonusAmount() float64 {
	if x != nil {
		return x.TransferBonusAmount
	}
	return 0
}

func (x *AgentStatisticsData) GetTransferDepositAmount() float64 {
	if x != nil {
		return x.TransferDepositAmount
	}
	return 0
}

func (x *AgentStatisticsData) GetTransferWithdrawalAmount() float64 {
	if x != nil {
		return x.TransferWithdrawalAmount
	}
	return 0
}

func (x *AgentStatisticsData) GetValidAmount() float64 {
	if x != nil {
		return x.ValidAmount
	}
	return 0
}

func (x *AgentStatisticsData) GetWithdrawalAmount() float64 {
	if x != nil {
		return x.WithdrawalAmount
	}
	return 0
}

type LogoutRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *LogoutRequest) Reset() {
	*x = LogoutRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentrpc_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogoutRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogoutRequest) ProtoMessage() {}

func (x *LogoutRequest) ProtoReflect() protoreflect.Message {
	mi := &file_agentrpc_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogoutRequest.ProtoReflect.Descriptor instead.
func (*LogoutRequest) Descriptor() ([]byte, []int) {
	return file_agentrpc_proto_rawDescGZIP(), []int{79}
}

type LogoutResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data bool   `protobuf:"varint,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *LogoutResponse) Reset() {
	*x = LogoutResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentrpc_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogoutResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogoutResponse) ProtoMessage() {}

func (x *LogoutResponse) ProtoReflect() protoreflect.Message {
	mi := &file_agentrpc_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogoutResponse.ProtoReflect.Descriptor instead.
func (*LogoutResponse) Descriptor() ([]byte, []int) {
	return file_agentrpc_proto_rawDescGZIP(), []int{80}
}

func (x *LogoutResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *LogoutResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *LogoutResponse) GetData() bool {
	if x != nil {
		return x.Data
	}
	return false
}

type OnlineUserCountListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current   int64                       `protobuf:"varint,1,opt,name=current,proto3" json:"current,omitempty"`
	Size      int64                       `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	SortKey   string                      `protobuf:"bytes,3,opt,name=sortKey,proto3" json:"sortKey,omitempty"`
	SortField string                      `protobuf:"bytes,4,opt,name=sortField,proto3" json:"sortField,omitempty"`
	Data      *OnlineUserCountListDataReq `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *OnlineUserCountListReq) Reset() {
	*x = OnlineUserCountListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentrpc_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OnlineUserCountListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OnlineUserCountListReq) ProtoMessage() {}

func (x *OnlineUserCountListReq) ProtoReflect() protoreflect.Message {
	mi := &file_agentrpc_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OnlineUserCountListReq.ProtoReflect.Descriptor instead.
func (*OnlineUserCountListReq) Descriptor() ([]byte, []int) {
	return file_agentrpc_proto_rawDescGZIP(), []int{81}
}

func (x *OnlineUserCountListReq) GetCurrent() int64 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *OnlineUserCountListReq) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *OnlineUserCountListReq) GetSortKey() string {
	if x != nil {
		return x.SortKey
	}
	return ""
}

func (x *OnlineUserCountListReq) GetSortField() string {
	if x != nil {
		return x.SortField
	}
	return ""
}

func (x *OnlineUserCountListReq) GetData() *OnlineUserCountListDataReq {
	if x != nil {
		return x.Data
	}
	return nil
}

type OnlineUserCountListDataReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username    string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	SupUsername string `protobuf:"bytes,2,opt,name=supUsername,proto3" json:"supUsername,omitempty"`
	Ip          string `protobuf:"bytes,3,opt,name=ip,proto3" json:"ip,omitempty"`
	Device      string `protobuf:"bytes,4,opt,name=device,proto3" json:"device,omitempty"`
}

func (x *OnlineUserCountListDataReq) Reset() {
	*x = OnlineUserCountListDataReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentrpc_proto_msgTypes[82]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OnlineUserCountListDataReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OnlineUserCountListDataReq) ProtoMessage() {}

func (x *OnlineUserCountListDataReq) ProtoReflect() protoreflect.Message {
	mi := &file_agentrpc_proto_msgTypes[82]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OnlineUserCountListDataReq.ProtoReflect.Descriptor instead.
func (*OnlineUserCountListDataReq) Descriptor() ([]byte, []int) {
	return file_agentrpc_proto_rawDescGZIP(), []int{82}
}

func (x *OnlineUserCountListDataReq) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *OnlineUserCountListDataReq) GetSupUsername() string {
	if x != nil {
		return x.SupUsername
	}
	return ""
}

func (x *OnlineUserCountListDataReq) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *OnlineUserCountListDataReq) GetDevice() string {
	if x != nil {
		return x.Device
	}
	return ""
}

type OnlineUserCountListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32                    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string                   `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *OnlineUserCountListData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *OnlineUserCountListResp) Reset() {
	*x = OnlineUserCountListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentrpc_proto_msgTypes[83]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OnlineUserCountListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OnlineUserCountListResp) ProtoMessage() {}

func (x *OnlineUserCountListResp) ProtoReflect() protoreflect.Message {
	mi := &file_agentrpc_proto_msgTypes[83]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OnlineUserCountListResp.ProtoReflect.Descriptor instead.
func (*OnlineUserCountListResp) Descriptor() ([]byte, []int) {
	return file_agentrpc_proto_rawDescGZIP(), []int{83}
}

func (x *OnlineUserCountListResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *OnlineUserCountListResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *OnlineUserCountListResp) GetData() *OnlineUserCountListData {
	if x != nil {
		return x.Data
	}
	return nil
}

type OnlineUserCountListData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current int64                          `protobuf:"varint,1,opt,name=current,proto3" json:"current,omitempty"`
	Pages   int64                          `protobuf:"varint,2,opt,name=pages,proto3" json:"pages,omitempty"`
	Size    int64                          `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
	Total   int64                          `protobuf:"varint,4,opt,name=total,proto3" json:"total,omitempty"`
	List    []*OnlineUserCountListDataItem `protobuf:"bytes,5,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *OnlineUserCountListData) Reset() {
	*x = OnlineUserCountListData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentrpc_proto_msgTypes[84]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OnlineUserCountListData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OnlineUserCountListData) ProtoMessage() {}

func (x *OnlineUserCountListData) ProtoReflect() protoreflect.Message {
	mi := &file_agentrpc_proto_msgTypes[84]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OnlineUserCountListData.ProtoReflect.Descriptor instead.
func (*OnlineUserCountListData) Descriptor() ([]byte, []int) {
	return file_agentrpc_proto_rawDescGZIP(), []int{84}
}

func (x *OnlineUserCountListData) GetCurrent() int64 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *OnlineUserCountListData) GetPages() int64 {
	if x != nil {
		return x.Pages
	}
	return 0
}

func (x *OnlineUserCountListData) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *OnlineUserCountListData) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *OnlineUserCountListData) GetList() []*OnlineUserCountListDataItem {
	if x != nil {
		return x.List
	}
	return nil
}

type OnlineUserCountListDataItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid         string  `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Username    string  `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	Coin        float64 `protobuf:"fixed64,3,opt,name=coin,proto3" json:"coin,omitempty"`
	LevelText   string  `protobuf:"bytes,4,opt,name=levelText,proto3" json:"levelText,omitempty"`
	SupUsername string  `protobuf:"bytes,5,opt,name=supUsername,proto3" json:"supUsername,omitempty"`
	Ip          string  `protobuf:"bytes,6,opt,name=ip,proto3" json:"ip,omitempty"`
	Device      string  `protobuf:"bytes,7,opt,name=device,proto3" json:"device,omitempty"`
	LoginTime   int64   `protobuf:"varint,8,opt,name=loginTime,proto3" json:"loginTime,omitempty"`
	SupUid1     int64   `protobuf:"varint,9,opt,name=supUid1,proto3" json:"supUid1,omitempty"`
	LevelId     int64   `protobuf:"varint,10,opt,name=levelId,proto3" json:"levelId,omitempty"`
}

func (x *OnlineUserCountListDataItem) Reset() {
	*x = OnlineUserCountListDataItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentrpc_proto_msgTypes[85]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OnlineUserCountListDataItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OnlineUserCountListDataItem) ProtoMessage() {}

func (x *OnlineUserCountListDataItem) ProtoReflect() protoreflect.Message {
	mi := &file_agentrpc_proto_msgTypes[85]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OnlineUserCountListDataItem.ProtoReflect.Descriptor instead.
func (*OnlineUserCountListDataItem) Descriptor() ([]byte, []int) {
	return file_agentrpc_proto_rawDescGZIP(), []int{85}
}

func (x *OnlineUserCountListDataItem) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *OnlineUserCountListDataItem) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *OnlineUserCountListDataItem) GetCoin() float64 {
	if x != nil {
		return x.Coin
	}
	return 0
}

func (x *OnlineUserCountListDataItem) GetLevelText() string {
	if x != nil {
		return x.LevelText
	}
	return ""
}

func (x *OnlineUserCountListDataItem) GetSupUsername() string {
	if x != nil {
		return x.SupUsername
	}
	return ""
}

func (x *OnlineUserCountListDataItem) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *OnlineUserCountListDataItem) GetDevice() string {
	if x != nil {
		return x.Device
	}
	return ""
}

func (x *OnlineUserCountListDataItem) GetLoginTime() int64 {
	if x != nil {
		return x.LoginTime
	}
	return 0
}

func (x *OnlineUserCountListDataItem) GetSupUid1() int64 {
	if x != nil {
		return x.SupUid1
	}
	return 0
}

func (x *OnlineUserCountListDataItem) GetLevelId() int64 {
	if x != nil {
		return x.LevelId
	}
	return 0
}

type WithdrawRecordListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current   int64                      `protobuf:"varint,1,opt,name=current,proto3" json:"current,omitempty"`
	Size      int64                      `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	SortKey   string                     `protobuf:"bytes,3,opt,name=sortKey,proto3" json:"sortKey,omitempty"`
	SortField []string                   `protobuf:"bytes,4,rep,name=sortField,proto3" json:"sortField,omitempty"`
	Data      *WithdrawRecordListDataReq `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *WithdrawRecordListReq) Reset() {
	*x = WithdrawRecordListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentrpc_proto_msgTypes[86]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WithdrawRecordListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WithdrawRecordListReq) ProtoMessage() {}

func (x *WithdrawRecordListReq) ProtoReflect() protoreflect.Message {
	mi := &file_agentrpc_proto_msgTypes[86]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WithdrawRecordListReq.ProtoReflect.Descriptor instead.
func (*WithdrawRecordListReq) Descriptor() ([]byte, []int) {
	return file_agentrpc_proto_rawDescGZIP(), []int{86}
}

func (x *WithdrawRecordListReq) GetCurrent() int64 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *WithdrawRecordListReq) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *WithdrawRecordListReq) GetSortKey() string {
	if x != nil {
		return x.SortKey
	}
	return ""
}

func (x *WithdrawRecordListReq) GetSortField() []string {
	if x != nil {
		return x.SortField
	}
	return nil
}

func (x *WithdrawRecordListReq) GetData() *WithdrawRecordListDataReq {
	if x != nil {
		return x.Data
	}
	return nil
}

type WithdrawRecordListDataReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartTime int64  `protobuf:"varint,1,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime   int64  `protobuf:"varint,2,opt,name=endTime,proto3" json:"endTime,omitempty"`
	Id        string `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	Username  string `protobuf:"bytes,4,opt,name=username,proto3" json:"username,omitempty"`
	Mobile    string `protobuf:"bytes,5,opt,name=mobile,proto3" json:"mobile,omitempty"`
	Status    string `protobuf:"bytes,6,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *WithdrawRecordListDataReq) Reset() {
	*x = WithdrawRecordListDataReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentrpc_proto_msgTypes[87]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WithdrawRecordListDataReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WithdrawRecordListDataReq) ProtoMessage() {}

func (x *WithdrawRecordListDataReq) ProtoReflect() protoreflect.Message {
	mi := &file_agentrpc_proto_msgTypes[87]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WithdrawRecordListDataReq.ProtoReflect.Descriptor instead.
func (*WithdrawRecordListDataReq) Descriptor() ([]byte, []int) {
	return file_agentrpc_proto_rawDescGZIP(), []int{87}
}

func (x *WithdrawRecordListDataReq) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *WithdrawRecordListDataReq) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *WithdrawRecordListDataReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *WithdrawRecordListDataReq) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *WithdrawRecordListDataReq) GetMobile() string {
	if x != nil {
		return x.Mobile
	}
	return ""
}

func (x *WithdrawRecordListDataReq) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type WithdrawRecordListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32                   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string                  `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *WithdrawRecordListData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *WithdrawRecordListResp) Reset() {
	*x = WithdrawRecordListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentrpc_proto_msgTypes[88]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WithdrawRecordListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WithdrawRecordListResp) ProtoMessage() {}

func (x *WithdrawRecordListResp) ProtoReflect() protoreflect.Message {
	mi := &file_agentrpc_proto_msgTypes[88]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WithdrawRecordListResp.ProtoReflect.Descriptor instead.
func (*WithdrawRecordListResp) Descriptor() ([]byte, []int) {
	return file_agentrpc_proto_rawDescGZIP(), []int{88}
}

func (x *WithdrawRecordListResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *WithdrawRecordListResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *WithdrawRecordListResp) GetData() *WithdrawRecordListData {
	if x != nil {
		return x.Data
	}
	return nil
}

type WithdrawRecordListData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current    int64                          `protobuf:"varint,1,opt,name=current,proto3" json:"current,omitempty"`
	Pages      int64                          `protobuf:"varint,2,opt,name=pages,proto3" json:"pages,omitempty"`
	Size       int64                          `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
	Total      int64                          `protobuf:"varint,4,opt,name=total,proto3" json:"total,omitempty"`
	Amount     float64                        `protobuf:"fixed64,5,opt,name=amount,proto3" json:"amount,omitempty"`
	RealAmount float64                        `protobuf:"fixed64,6,opt,name=real_amount,json=realAmount,proto3" json:"real_amount,omitempty"`
	List       []*WinCoinWithdrawalRecordItem `protobuf:"bytes,7,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *WithdrawRecordListData) Reset() {
	*x = WithdrawRecordListData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentrpc_proto_msgTypes[89]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WithdrawRecordListData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WithdrawRecordListData) ProtoMessage() {}

func (x *WithdrawRecordListData) ProtoReflect() protoreflect.Message {
	mi := &file_agentrpc_proto_msgTypes[89]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WithdrawRecordListData.ProtoReflect.Descriptor instead.
func (*WithdrawRecordListData) Descriptor() ([]byte, []int) {
	return file_agentrpc_proto_rawDescGZIP(), []int{89}
}

func (x *WithdrawRecordListData) GetCurrent() int64 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *WithdrawRecordListData) GetPages() int64 {
	if x != nil {
		return x.Pages
	}
	return 0
}

func (x *WithdrawRecordListData) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *WithdrawRecordListData) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *WithdrawRecordListData) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *WithdrawRecordListData) GetRealAmount() float64 {
	if x != nil {
		return x.RealAmount
	}
	return 0
}

func (x *WithdrawRecordListData) GetList() []*WinCoinWithdrawalRecordItem {
	if x != nil {
		return x.List
	}
	return nil
}

type WinCoinWithdrawalRecordItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                      int64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Uid                     int64   `protobuf:"varint,2,opt,name=uid,proto3" json:"uid,omitempty"`                            // UID
	Username                string  `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`                   // 用户名
	Code                    string  `protobuf:"bytes,4,opt,name=code,proto3" json:"code,omitempty"`                           // 支付通道编码
	PlatName                string  `protobuf:"bytes,5,opt,name=platName,proto3" json:"platName,omitempty"`                   // 平台名称
	PlatNickName            string  `protobuf:"bytes,6,opt,name=platNickName,proto3" json:"platNickName,omitempty"`           // 平台自定义名称
	WithdrawalAddress       string  `protobuf:"bytes,7,opt,name=withdrawalAddress,proto3" json:"withdrawalAddress,omitempty"` // 加密地址
	WithdrawalAmount        float64 `protobuf:"fixed64,8,opt,name=withdrawalAmount,proto3" json:"withdrawalAmount,omitempty"`
	ExchangeRate            string  `protobuf:"bytes,9,opt,name=exchangeRate,proto3" json:"exchangeRate,omitempty"`
	MainNetFees             string  `protobuf:"bytes,10,opt,name=mainNetFees,proto3" json:"mainNetFees,omitempty"`
	RealAmount              float64 `protobuf:"fixed64,11,opt,name=realAmount,proto3" json:"realAmount,omitempty"` // 到账金额
	CoinBefore              float64 `protobuf:"fixed64,12,opt,name=coinBefore,proto3" json:"coinBefore,omitempty"`
	Status                  int64   `protobuf:"varint,13,opt,name=status,proto3" json:"status,omitempty"` // 状态: 0-申请中，1-提款成功，2-提款失败，3-稽核成功 4-代付种
	CreatedAt               int64   `protobuf:"varint,14,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt               int64   `protobuf:"varint,15,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	AdminUsername           string  `protobuf:"bytes,16,opt,name=adminUsername,proto3" json:"adminUsername,omitempty"`
	WithdrawalAdminUsername string  `protobuf:"bytes,17,opt,name=withdrawalAdminUsername,proto3" json:"withdrawalAdminUsername,omitempty"`
	CustomizeNoticeContent  string  `protobuf:"bytes,18,opt,name=customizeNoticeContent,proto3" json:"customizeNoticeContent,omitempty"`
	AuditType               int64   `protobuf:"varint,19,opt,name=auditType,proto3" json:"auditType,omitempty"`
	CategoryTransfer        int64   `protobuf:"varint,20,opt,name=categoryTransfer,proto3" json:"categoryTransfer,omitempty"`
	CategoryTransferName    string  `protobuf:"bytes,21,opt,name=categoryTransferName,proto3" json:"categoryTransferName,omitempty"`
	FinanceOperatorAt       int64   `protobuf:"varint,22,opt,name=financeOperatorAt,proto3" json:"financeOperatorAt,omitempty"`
	MerchantId              int64   `protobuf:"varint,23,opt,name=merchantId,proto3" json:"merchantId,omitempty"`
	MerchantName            string  `protobuf:"bytes,24,opt,name=merchantName,proto3" json:"merchantName,omitempty"`
	MerchantCategory        string  `protobuf:"bytes,25,opt,name=merchantCategory,proto3" json:"merchantCategory,omitempty"`
	Mobile                  string  `protobuf:"bytes,26,opt,name=mobile,proto3" json:"mobile,omitempty"`
	UserLevel               string  `protobuf:"bytes,27,opt,name=userLevel,proto3" json:"userLevel,omitempty"`
}

func (x *WinCoinWithdrawalRecordItem) Reset() {
	*x = WinCoinWithdrawalRecordItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentrpc_proto_msgTypes[90]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WinCoinWithdrawalRecordItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WinCoinWithdrawalRecordItem) ProtoMessage() {}

func (x *WinCoinWithdrawalRecordItem) ProtoReflect() protoreflect.Message {
	mi := &file_agentrpc_proto_msgTypes[90]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WinCoinWithdrawalRecordItem.ProtoReflect.Descriptor instead.
func (*WinCoinWithdrawalRecordItem) Descriptor() ([]byte, []int) {
	return file_agentrpc_proto_rawDescGZIP(), []int{90}
}

func (x *WinCoinWithdrawalRecordItem) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *WinCoinWithdrawalRecordItem) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *WinCoinWithdrawalRecordItem) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *WinCoinWithdrawalRecordItem) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *WinCoinWithdrawalRecordItem) GetPlatName() string {
	if x != nil {
		return x.PlatName
	}
	return ""
}

func (x *WinCoinWithdrawalRecordItem) GetPlatNickName() string {
	if x != nil {
		return x.PlatNickName
	}
	return ""
}

func (x *WinCoinWithdrawalRecordItem) GetWithdrawalAddress() string {
	if x != nil {
		return x.WithdrawalAddress
	}
	return ""
}

func (x *WinCoinWithdrawalRecordItem) GetWithdrawalAmount() float64 {
	if x != nil {
		return x.WithdrawalAmount
	}
	return 0
}

func (x *WinCoinWithdrawalRecordItem) GetExchangeRate() string {
	if x != nil {
		return x.ExchangeRate
	}
	return ""
}

func (x *WinCoinWithdrawalRecordItem) GetMainNetFees() string {
	if x != nil {
		return x.MainNetFees
	}
	return ""
}

func (x *WinCoinWithdrawalRecordItem) GetRealAmount() float64 {
	if x != nil {
		return x.RealAmount
	}
	return 0
}

func (x *WinCoinWithdrawalRecordItem) GetCoinBefore() float64 {
	if x != nil {
		return x.CoinBefore
	}
	return 0
}

func (x *WinCoinWithdrawalRecordItem) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *WinCoinWithdrawalRecordItem) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *WinCoinWithdrawalRecordItem) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *WinCoinWithdrawalRecordItem) GetAdminUsername() string {
	if x != nil {
		return x.AdminUsername
	}
	return ""
}

func (x *WinCoinWithdrawalRecordItem) GetWithdrawalAdminUsername() string {
	if x != nil {
		return x.WithdrawalAdminUsername
	}
	return ""
}

func (x *WinCoinWithdrawalRecordItem) GetCustomizeNoticeContent() string {
	if x != nil {
		return x.CustomizeNoticeContent
	}
	return ""
}

func (x *WinCoinWithdrawalRecordItem) GetAuditType() int64 {
	if x != nil {
		return x.AuditType
	}
	return 0
}

func (x *WinCoinWithdrawalRecordItem) GetCategoryTransfer() int64 {
	if x != nil {
		return x.CategoryTransfer
	}
	return 0
}

func (x *WinCoinWithdrawalRecordItem) GetCategoryTransferName() string {
	if x != nil {
		return x.CategoryTransferName
	}
	return ""
}

func (x *WinCoinWithdrawalRecordItem) GetFinanceOperatorAt() int64 {
	if x != nil {
		return x.FinanceOperatorAt
	}
	return 0
}

func (x *WinCoinWithdrawalRecordItem) GetMerchantId() int64 {
	if x != nil {
		return x.MerchantId
	}
	return 0
}

func (x *WinCoinWithdrawalRecordItem) GetMerchantName() string {
	if x != nil {
		return x.MerchantName
	}
	return ""
}

func (x *WinCoinWithdrawalRecordItem) GetMerchantCategory() string {
	if x != nil {
		return x.MerchantCategory
	}
	return ""
}

func (x *WinCoinWithdrawalRecordItem) GetMobile() string {
	if x != nil {
		return x.Mobile
	}
	return ""
}

func (x *WinCoinWithdrawalRecordItem) GetUserLevel() string {
	if x != nil {
		return x.UserLevel
	}
	return ""
}

type DepositListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current   int64               `protobuf:"varint,1,opt,name=current,proto3" json:"current,omitempty"`
	Size      int64               `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	SortKey   string              `protobuf:"bytes,3,opt,name=sortKey,proto3" json:"sortKey,omitempty"`
	SortField []string            `protobuf:"bytes,4,rep,name=sortField,proto3" json:"sortField,omitempty"`
	Data      *DepositListDataReq `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *DepositListReq) Reset() {
	*x = DepositListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentrpc_proto_msgTypes[91]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DepositListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DepositListReq) ProtoMessage() {}

func (x *DepositListReq) ProtoReflect() protoreflect.Message {
	mi := &file_agentrpc_proto_msgTypes[91]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DepositListReq.ProtoReflect.Descriptor instead.
func (*DepositListReq) Descriptor() ([]byte, []int) {
	return file_agentrpc_proto_rawDescGZIP(), []int{91}
}

func (x *DepositListReq) GetCurrent() int64 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *DepositListReq) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *DepositListReq) GetSortKey() string {
	if x != nil {
		return x.SortKey
	}
	return ""
}

func (x *DepositListReq) GetSortField() []string {
	if x != nil {
		return x.SortField
	}
	return nil
}

func (x *DepositListReq) GetData() *DepositListDataReq {
	if x != nil {
		return x.Data
	}
	return nil
}

type DepositListDataReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username  string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Mobile    string `protobuf:"bytes,2,opt,name=mobile,proto3" json:"mobile,omitempty"`
	Id        string `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	Status    string `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`
	StartTime int64  `protobuf:"varint,5,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime   int64  `protobuf:"varint,6,opt,name=endTime,proto3" json:"endTime,omitempty"`
}

func (x *DepositListDataReq) Reset() {
	*x = DepositListDataReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentrpc_proto_msgTypes[92]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DepositListDataReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DepositListDataReq) ProtoMessage() {}

func (x *DepositListDataReq) ProtoReflect() protoreflect.Message {
	mi := &file_agentrpc_proto_msgTypes[92]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DepositListDataReq.ProtoReflect.Descriptor instead.
func (*DepositListDataReq) Descriptor() ([]byte, []int) {
	return file_agentrpc_proto_rawDescGZIP(), []int{92}
}

func (x *DepositListDataReq) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *DepositListDataReq) GetMobile() string {
	if x != nil {
		return x.Mobile
	}
	return ""
}

func (x *DepositListDataReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DepositListDataReq) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *DepositListDataReq) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *DepositListDataReq) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

type DepositListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32            `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string           `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *DepositListData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *DepositListResp) Reset() {
	*x = DepositListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentrpc_proto_msgTypes[93]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DepositListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DepositListResp) ProtoMessage() {}

func (x *DepositListResp) ProtoReflect() protoreflect.Message {
	mi := &file_agentrpc_proto_msgTypes[93]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DepositListResp.ProtoReflect.Descriptor instead.
func (*DepositListResp) Descriptor() ([]byte, []int) {
	return file_agentrpc_proto_rawDescGZIP(), []int{93}
}

func (x *DepositListResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *DepositListResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *DepositListResp) GetData() *DepositListData {
	if x != nil {
		return x.Data
	}
	return nil
}

type DepositListData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current    string                 `protobuf:"bytes,1,opt,name=current,proto3" json:"current,omitempty"`
	Pages      string                 `protobuf:"bytes,2,opt,name=pages,proto3" json:"pages,omitempty"`
	Size       string                 `protobuf:"bytes,3,opt,name=size,proto3" json:"size,omitempty"`
	Total      string                 `protobuf:"bytes,4,opt,name=total,proto3" json:"total,omitempty"`
	Amount     float64                `protobuf:"fixed64,5,opt,name=amount,proto3" json:"amount,omitempty"`
	RealAmount float64                `protobuf:"fixed64,6,opt,name=real_amount,json=realAmount,proto3" json:"real_amount,omitempty"`
	List       []*DepositListDataItem `protobuf:"bytes,7,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *DepositListData) Reset() {
	*x = DepositListData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentrpc_proto_msgTypes[94]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DepositListData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DepositListData) ProtoMessage() {}

func (x *DepositListData) ProtoReflect() protoreflect.Message {
	mi := &file_agentrpc_proto_msgTypes[94]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DepositListData.ProtoReflect.Descriptor instead.
func (*DepositListData) Descriptor() ([]byte, []int) {
	return file_agentrpc_proto_rawDescGZIP(), []int{94}
}

func (x *DepositListData) GetCurrent() string {
	if x != nil {
		return x.Current
	}
	return ""
}

func (x *DepositListData) GetPages() string {
	if x != nil {
		return x.Pages
	}
	return ""
}

func (x *DepositListData) GetSize() string {
	if x != nil {
		return x.Size
	}
	return ""
}

func (x *DepositListData) GetTotal() string {
	if x != nil {
		return x.Total
	}
	return ""
}

func (x *DepositListData) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *DepositListData) GetRealAmount() float64 {
	if x != nil {
		return x.RealAmount
	}
	return 0
}

func (x *DepositListData) GetList() []*DepositListDataItem {
	if x != nil {
		return x.List
	}
	return nil
}

type DepositListDataItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Category         int64  `protobuf:"varint,1,opt,name=category,proto3" json:"category,omitempty"`
	Code             string `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	CreatedAt        int64  `protobuf:"varint,3,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	ExchangeRate     string `protobuf:"bytes,4,opt,name=exchangeRate,proto3" json:"exchangeRate,omitempty"`
	Id               string `protobuf:"bytes,5,opt,name=id,proto3" json:"id,omitempty"`
	LevelText        string `protobuf:"bytes,6,opt,name=levelText,proto3" json:"levelText,omitempty"`
	MerchantCategory int64  `protobuf:"varint,7,opt,name=merchantCategory,proto3" json:"merchantCategory,omitempty"`
	MerchantId       int64  `protobuf:"varint,8,opt,name=merchantId,proto3" json:"merchantId,omitempty"`
	MerchantName     string `protobuf:"bytes,9,opt,name=merchantName,proto3" json:"merchantName,omitempty"`
	Mobile           string `protobuf:"bytes,10,opt,name=mobile,proto3" json:"mobile,omitempty"`
	OperatorName     string `protobuf:"bytes,11,opt,name=operatorName,proto3" json:"operatorName,omitempty"`
	OrderId          string `protobuf:"bytes,12,opt,name=orderId,proto3" json:"orderId,omitempty"`
	PayAddress       string `protobuf:"bytes,13,opt,name=payAddress,proto3" json:"payAddress,omitempty"`
	PayAmount        string `protobuf:"bytes,14,opt,name=payAmount,proto3" json:"payAmount,omitempty"`
	PlatName         string `protobuf:"bytes,15,opt,name=platName,proto3" json:"platName,omitempty"`
	PlatNickName     string `protobuf:"bytes,16,opt,name=platNickName,proto3" json:"platNickName,omitempty"`
	PlatOrderId      string `protobuf:"bytes,17,opt,name=platOrderId,proto3" json:"platOrderId,omitempty"`
	RealAmount       string `protobuf:"bytes,18,opt,name=realAmount,proto3" json:"realAmount,omitempty"`
	Status           int64  `protobuf:"varint,19,opt,name=status,proto3" json:"status,omitempty"`
	SupUsername      string `protobuf:"bytes,20,opt,name=supUsername,proto3" json:"supUsername,omitempty"`
	UpdatedAt        int64  `protobuf:"varint,21,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	Username         string `protobuf:"bytes,22,opt,name=username,proto3" json:"username,omitempty"`
}

func (x *DepositListDataItem) Reset() {
	*x = DepositListDataItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentrpc_proto_msgTypes[95]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DepositListDataItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DepositListDataItem) ProtoMessage() {}

func (x *DepositListDataItem) ProtoReflect() protoreflect.Message {
	mi := &file_agentrpc_proto_msgTypes[95]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DepositListDataItem.ProtoReflect.Descriptor instead.
func (*DepositListDataItem) Descriptor() ([]byte, []int) {
	return file_agentrpc_proto_rawDescGZIP(), []int{95}
}

func (x *DepositListDataItem) GetCategory() int64 {
	if x != nil {
		return x.Category
	}
	return 0
}

func (x *DepositListDataItem) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *DepositListDataItem) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *DepositListDataItem) GetExchangeRate() string {
	if x != nil {
		return x.ExchangeRate
	}
	return ""
}

func (x *DepositListDataItem) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DepositListDataItem) GetLevelText() string {
	if x != nil {
		return x.LevelText
	}
	return ""
}

func (x *DepositListDataItem) GetMerchantCategory() int64 {
	if x != nil {
		return x.MerchantCategory
	}
	return 0
}

func (x *DepositListDataItem) GetMerchantId() int64 {
	if x != nil {
		return x.MerchantId
	}
	return 0
}

func (x *DepositListDataItem) GetMerchantName() string {
	if x != nil {
		return x.MerchantName
	}
	return ""
}

func (x *DepositListDataItem) GetMobile() string {
	if x != nil {
		return x.Mobile
	}
	return ""
}

func (x *DepositListDataItem) GetOperatorName() string {
	if x != nil {
		return x.OperatorName
	}
	return ""
}

func (x *DepositListDataItem) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *DepositListDataItem) GetPayAddress() string {
	if x != nil {
		return x.PayAddress
	}
	return ""
}

func (x *DepositListDataItem) GetPayAmount() string {
	if x != nil {
		return x.PayAmount
	}
	return ""
}

func (x *DepositListDataItem) GetPlatName() string {
	if x != nil {
		return x.PlatName
	}
	return ""
}

func (x *DepositListDataItem) GetPlatNickName() string {
	if x != nil {
		return x.PlatNickName
	}
	return ""
}

func (x *DepositListDataItem) GetPlatOrderId() string {
	if x != nil {
		return x.PlatOrderId
	}
	return ""
}

func (x *DepositListDataItem) GetRealAmount() string {
	if x != nil {
		return x.RealAmount
	}
	return ""
}

func (x *DepositListDataItem) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *DepositListDataItem) GetSupUsername() string {
	if x != nil {
		return x.SupUsername
	}
	return ""
}

func (x *DepositListDataItem) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *DepositListDataItem) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

type TaskAgentDepositCommssionReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Time string `protobuf:"bytes,1,opt,name=time,proto3" json:"time,omitempty"`
}

func (x *TaskAgentDepositCommssionReq) Reset() {
	*x = TaskAgentDepositCommssionReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentrpc_proto_msgTypes[96]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskAgentDepositCommssionReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskAgentDepositCommssionReq) ProtoMessage() {}

func (x *TaskAgentDepositCommssionReq) ProtoReflect() protoreflect.Message {
	mi := &file_agentrpc_proto_msgTypes[96]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskAgentDepositCommssionReq.ProtoReflect.Descriptor instead.
func (*TaskAgentDepositCommssionReq) Descriptor() ([]byte, []int) {
	return file_agentrpc_proto_rawDescGZIP(), []int{96}
}

func (x *TaskAgentDepositCommssionReq) GetTime() string {
	if x != nil {
		return x.Time
	}
	return ""
}

type TaskAgentDepositCommssionResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data bool   `protobuf:"varint,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *TaskAgentDepositCommssionResp) Reset() {
	*x = TaskAgentDepositCommssionResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentrpc_proto_msgTypes[97]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskAgentDepositCommssionResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskAgentDepositCommssionResp) ProtoMessage() {}

func (x *TaskAgentDepositCommssionResp) ProtoReflect() protoreflect.Message {
	mi := &file_agentrpc_proto_msgTypes[97]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskAgentDepositCommssionResp.ProtoReflect.Descriptor instead.
func (*TaskAgentDepositCommssionResp) Descriptor() ([]byte, []int) {
	return file_agentrpc_proto_rawDescGZIP(), []int{97}
}

func (x *TaskAgentDepositCommssionResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *TaskAgentDepositCommssionResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *TaskAgentDepositCommssionResp) GetData() bool {
	if x != nil {
		return x.Data
	}
	return false
}

type TaskAgentBetCommssionReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Time string `protobuf:"bytes,1,opt,name=time,proto3" json:"time,omitempty"`
}

func (x *TaskAgentBetCommssionReq) Reset() {
	*x = TaskAgentBetCommssionReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentrpc_proto_msgTypes[98]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskAgentBetCommssionReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskAgentBetCommssionReq) ProtoMessage() {}

func (x *TaskAgentBetCommssionReq) ProtoReflect() protoreflect.Message {
	mi := &file_agentrpc_proto_msgTypes[98]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskAgentBetCommssionReq.ProtoReflect.Descriptor instead.
func (*TaskAgentBetCommssionReq) Descriptor() ([]byte, []int) {
	return file_agentrpc_proto_rawDescGZIP(), []int{98}
}

func (x *TaskAgentBetCommssionReq) GetTime() string {
	if x != nil {
		return x.Time
	}
	return ""
}

type TaskAgentBetCommssionResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data bool   `protobuf:"varint,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *TaskAgentBetCommssionResp) Reset() {
	*x = TaskAgentBetCommssionResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentrpc_proto_msgTypes[99]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskAgentBetCommssionResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskAgentBetCommssionResp) ProtoMessage() {}

func (x *TaskAgentBetCommssionResp) ProtoReflect() protoreflect.Message {
	mi := &file_agentrpc_proto_msgTypes[99]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskAgentBetCommssionResp.ProtoReflect.Descriptor instead.
func (*TaskAgentBetCommssionResp) Descriptor() ([]byte, []int) {
	return file_agentrpc_proto_rawDescGZIP(), []int{99}
}

func (x *TaskAgentBetCommssionResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *TaskAgentBetCommssionResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *TaskAgentBetCommssionResp) GetData() bool {
	if x != nil {
		return x.Data
	}
	return false
}

type AgentCommissionProfitReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current   int64                         `protobuf:"varint,1,opt,name=current,proto3" json:"current,omitempty"`
	Size      int64                         `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	SortKey   string                        `protobuf:"bytes,3,opt,name=sortKey,proto3" json:"sortKey,omitempty"`
	SortField []string                      `protobuf:"bytes,4,rep,name=sortField,proto3" json:"sortField,omitempty"`
	Data      *AgentCommissionProfitDataReq `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *AgentCommissionProfitReq) Reset() {
	*x = AgentCommissionProfitReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentrpc_proto_msgTypes[100]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentCommissionProfitReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentCommissionProfitReq) ProtoMessage() {}

func (x *AgentCommissionProfitReq) ProtoReflect() protoreflect.Message {
	mi := &file_agentrpc_proto_msgTypes[100]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentCommissionProfitReq.ProtoReflect.Descriptor instead.
func (*AgentCommissionProfitReq) Descriptor() ([]byte, []int) {
	return file_agentrpc_proto_rawDescGZIP(), []int{100}
}

func (x *AgentCommissionProfitReq) GetCurrent() int64 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *AgentCommissionProfitReq) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *AgentCommissionProfitReq) GetSortKey() string {
	if x != nil {
		return x.SortKey
	}
	return ""
}

func (x *AgentCommissionProfitReq) GetSortField() []string {
	if x != nil {
		return x.SortField
	}
	return nil
}

func (x *AgentCommissionProfitReq) GetData() *AgentCommissionProfitDataReq {
	if x != nil {
		return x.Data
	}
	return nil
}

type AgentCommissionProfitDataReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AgentId    string `protobuf:"bytes,1,opt,name=agentId,proto3" json:"agentId,omitempty"`
	Username   string `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	Status     string `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	StartTime  int64  `protobuf:"varint,4,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime    int64  `protobuf:"varint,5,opt,name=endTime,proto3" json:"endTime,omitempty"`
	ExportFlag int64  `protobuf:"varint,6,opt,name=exportFlag,proto3" json:"exportFlag,omitempty"` //导出flag 0:默认查询 1:导出
}

func (x *AgentCommissionProfitDataReq) Reset() {
	*x = AgentCommissionProfitDataReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentrpc_proto_msgTypes[101]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentCommissionProfitDataReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentCommissionProfitDataReq) ProtoMessage() {}

func (x *AgentCommissionProfitDataReq) ProtoReflect() protoreflect.Message {
	mi := &file_agentrpc_proto_msgTypes[101]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentCommissionProfitDataReq.ProtoReflect.Descriptor instead.
func (*AgentCommissionProfitDataReq) Descriptor() ([]byte, []int) {
	return file_agentrpc_proto_rawDescGZIP(), []int{101}
}

func (x *AgentCommissionProfitDataReq) GetAgentId() string {
	if x != nil {
		return x.AgentId
	}
	return ""
}

func (x *AgentCommissionProfitDataReq) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *AgentCommissionProfitDataReq) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *AgentCommissionProfitDataReq) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *AgentCommissionProfitDataReq) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *AgentCommissionProfitDataReq) GetExportFlag() int64 {
	if x != nil {
		return x.ExportFlag
	}
	return 0
}

type AgentCommissionProfitResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32                          `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string                         `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *AgentCommissionProfitDataResp `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *AgentCommissionProfitResp) Reset() {
	*x = AgentCommissionProfitResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentrpc_proto_msgTypes[102]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentCommissionProfitResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentCommissionProfitResp) ProtoMessage() {}

func (x *AgentCommissionProfitResp) ProtoReflect() protoreflect.Message {
	mi := &file_agentrpc_proto_msgTypes[102]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentCommissionProfitResp.ProtoReflect.Descriptor instead.
func (*AgentCommissionProfitResp) Descriptor() ([]byte, []int) {
	return file_agentrpc_proto_rawDescGZIP(), []int{102}
}

func (x *AgentCommissionProfitResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *AgentCommissionProfitResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *AgentCommissionProfitResp) GetData() *AgentCommissionProfitDataResp {
	if x != nil {
		return x.Data
	}
	return nil
}

type AgentCommissionProfitDataResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current      string                           `protobuf:"bytes,1,opt,name=current,proto3" json:"current,omitempty"`
	Pages        string                           `protobuf:"bytes,2,opt,name=pages,proto3" json:"pages,omitempty"`
	Size         string                           `protobuf:"bytes,3,opt,name=size,proto3" json:"size,omitempty"`
	Total        string                           `protobuf:"bytes,4,opt,name=total,proto3" json:"total,omitempty"`
	TotalCoin    float64                          `protobuf:"fixed64,5,opt,name=totalCoin,proto3" json:"totalCoin,omitempty"`       //累计金额
	TotalBetCoin float64                          `protobuf:"fixed64,6,opt,name=totalBetCoin,proto3" json:"totalBetCoin,omitempty"` //投总额
	List         []*AgentCommissionProfitDataItem `protobuf:"bytes,7,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *AgentCommissionProfitDataResp) Reset() {
	*x = AgentCommissionProfitDataResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentrpc_proto_msgTypes[103]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentCommissionProfitDataResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentCommissionProfitDataResp) ProtoMessage() {}

func (x *AgentCommissionProfitDataResp) ProtoReflect() protoreflect.Message {
	mi := &file_agentrpc_proto_msgTypes[103]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentCommissionProfitDataResp.ProtoReflect.Descriptor instead.
func (*AgentCommissionProfitDataResp) Descriptor() ([]byte, []int) {
	return file_agentrpc_proto_rawDescGZIP(), []int{103}
}

func (x *AgentCommissionProfitDataResp) GetCurrent() string {
	if x != nil {
		return x.Current
	}
	return ""
}

func (x *AgentCommissionProfitDataResp) GetPages() string {
	if x != nil {
		return x.Pages
	}
	return ""
}

func (x *AgentCommissionProfitDataResp) GetSize() string {
	if x != nil {
		return x.Size
	}
	return ""
}

func (x *AgentCommissionProfitDataResp) GetTotal() string {
	if x != nil {
		return x.Total
	}
	return ""
}

func (x *AgentCommissionProfitDataResp) GetTotalCoin() float64 {
	if x != nil {
		return x.TotalCoin
	}
	return 0
}

func (x *AgentCommissionProfitDataResp) GetTotalBetCoin() float64 {
	if x != nil {
		return x.TotalBetCoin
	}
	return 0
}

func (x *AgentCommissionProfitDataResp) GetList() []*AgentCommissionProfitDataItem {
	if x != nil {
		return x.List
	}
	return nil
}

type AgentCommissionProfitDataItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                   int64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Uid                  int64   `protobuf:"varint,2,opt,name=uid,proto3" json:"uid,omitempty"`
	Username             string  `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`
	Riqi                 int64   `protobuf:"varint,4,opt,name=riqi,proto3" json:"riqi,omitempty"`
	Coin                 float64 `protobuf:"fixed64,5,opt,name=coin,proto3" json:"coin,omitempty"`                   //佣金金额
	SubUid               string  `protobuf:"bytes,6,opt,name=subUid,proto3" json:"subUid,omitempty"`                 //下级UID
	SubUsername          string  `protobuf:"bytes,7,opt,name=subUsername,proto3" json:"subUsername,omitempty"`       //下级Username
	AgentLevel           int64   `protobuf:"varint,8,opt,name=agentLevel,proto3" json:"agentLevel,omitempty"`        //下级等级
	SubBetTrunover       string  `protobuf:"bytes,9,opt,name=subBetTrunover,proto3" json:"subBetTrunover,omitempty"` // 投注总额/会员数
	Status               int64   `protobuf:"varint,10,opt,name=status,proto3" json:"status,omitempty"`               // 发放状态:0-未发放 1-已发放；字典key:dic_coin_commission_status
	CreatedAt            int64   `protobuf:"varint,11,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	CoinExport           float64 `protobuf:"fixed64,12,opt,name=coinExport,proto3" json:"coinExport,omitempty"`                   // 佣金金额-导出专用
	SubBetTrunoverExport string  `protobuf:"bytes,13,opt,name=subBetTrunoverExport,proto3" json:"subBetTrunoverExport,omitempty"` // 投注总额/会员数-导出专用
}

func (x *AgentCommissionProfitDataItem) Reset() {
	*x = AgentCommissionProfitDataItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentrpc_proto_msgTypes[104]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentCommissionProfitDataItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentCommissionProfitDataItem) ProtoMessage() {}

func (x *AgentCommissionProfitDataItem) ProtoReflect() protoreflect.Message {
	mi := &file_agentrpc_proto_msgTypes[104]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentCommissionProfitDataItem.ProtoReflect.Descriptor instead.
func (*AgentCommissionProfitDataItem) Descriptor() ([]byte, []int) {
	return file_agentrpc_proto_rawDescGZIP(), []int{104}
}

func (x *AgentCommissionProfitDataItem) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AgentCommissionProfitDataItem) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *AgentCommissionProfitDataItem) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *AgentCommissionProfitDataItem) GetRiqi() int64 {
	if x != nil {
		return x.Riqi
	}
	return 0
}

func (x *AgentCommissionProfitDataItem) GetCoin() float64 {
	if x != nil {
		return x.Coin
	}
	return 0
}

func (x *AgentCommissionProfitDataItem) GetSubUid() string {
	if x != nil {
		return x.SubUid
	}
	return ""
}

func (x *AgentCommissionProfitDataItem) GetSubUsername() string {
	if x != nil {
		return x.SubUsername
	}
	return ""
}

func (x *AgentCommissionProfitDataItem) GetAgentLevel() int64 {
	if x != nil {
		return x.AgentLevel
	}
	return 0
}

func (x *AgentCommissionProfitDataItem) GetSubBetTrunover() string {
	if x != nil {
		return x.SubBetTrunover
	}
	return ""
}

func (x *AgentCommissionProfitDataItem) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *AgentCommissionProfitDataItem) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *AgentCommissionProfitDataItem) GetCoinExport() float64 {
	if x != nil {
		return x.CoinExport
	}
	return 0
}

func (x *AgentCommissionProfitDataItem) GetSubBetTrunoverExport() string {
	if x != nil {
		return x.SubBetTrunoverExport
	}
	return ""
}

type TaskAgentCommssionScheduleReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TaskAgentCommssionScheduleReq) Reset() {
	*x = TaskAgentCommssionScheduleReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentrpc_proto_msgTypes[105]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskAgentCommssionScheduleReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskAgentCommssionScheduleReq) ProtoMessage() {}

func (x *TaskAgentCommssionScheduleReq) ProtoReflect() protoreflect.Message {
	mi := &file_agentrpc_proto_msgTypes[105]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskAgentCommssionScheduleReq.ProtoReflect.Descriptor instead.
func (*TaskAgentCommssionScheduleReq) Descriptor() ([]byte, []int) {
	return file_agentrpc_proto_rawDescGZIP(), []int{105}
}

type TaskAgentCommssionScheduleResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data bool   `protobuf:"varint,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *TaskAgentCommssionScheduleResp) Reset() {
	*x = TaskAgentCommssionScheduleResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentrpc_proto_msgTypes[106]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskAgentCommssionScheduleResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskAgentCommssionScheduleResp) ProtoMessage() {}

func (x *TaskAgentCommssionScheduleResp) ProtoReflect() protoreflect.Message {
	mi := &file_agentrpc_proto_msgTypes[106]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskAgentCommssionScheduleResp.ProtoReflect.Descriptor instead.
func (*TaskAgentCommssionScheduleResp) Descriptor() ([]byte, []int) {
	return file_agentrpc_proto_rawDescGZIP(), []int{106}
}

func (x *TaskAgentCommssionScheduleResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *TaskAgentCommssionScheduleResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *TaskAgentCommssionScheduleResp) GetData() bool {
	if x != nil {
		return x.Data
	}
	return false
}

type AgentWithDrawalCommssionReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BankId           int64   `protobuf:"varint,1,opt,name=bankId,proto3" json:"bankId,omitempty"`
	WithdrawalAmount float64 `protobuf:"fixed64,2,opt,name=withdrawalAmount,proto3" json:"withdrawalAmount,omitempty"`
	PayType          int64   `protobuf:"varint,3,opt,name=payType,proto3" json:"payType,omitempty"`
}

func (x *AgentWithDrawalCommssionReq) Reset() {
	*x = AgentWithDrawalCommssionReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentrpc_proto_msgTypes[107]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentWithDrawalCommssionReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentWithDrawalCommssionReq) ProtoMessage() {}

func (x *AgentWithDrawalCommssionReq) ProtoReflect() protoreflect.Message {
	mi := &file_agentrpc_proto_msgTypes[107]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentWithDrawalCommssionReq.ProtoReflect.Descriptor instead.
func (*AgentWithDrawalCommssionReq) Descriptor() ([]byte, []int) {
	return file_agentrpc_proto_rawDescGZIP(), []int{107}
}

func (x *AgentWithDrawalCommssionReq) GetBankId() int64 {
	if x != nil {
		return x.BankId
	}
	return 0
}

func (x *AgentWithDrawalCommssionReq) GetWithdrawalAmount() float64 {
	if x != nil {
		return x.WithdrawalAmount
	}
	return 0
}

func (x *AgentWithDrawalCommssionReq) GetPayType() int64 {
	if x != nil {
		return x.PayType
	}
	return 0
}

type AgentWithDrawalCommssionResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *AgentWithDrawalCommssionResp) Reset() {
	*x = AgentWithDrawalCommssionResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentrpc_proto_msgTypes[108]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentWithDrawalCommssionResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentWithDrawalCommssionResp) ProtoMessage() {}

func (x *AgentWithDrawalCommssionResp) ProtoReflect() protoreflect.Message {
	mi := &file_agentrpc_proto_msgTypes[108]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentWithDrawalCommssionResp.ProtoReflect.Descriptor instead.
func (*AgentWithDrawalCommssionResp) Descriptor() ([]byte, []int) {
	return file_agentrpc_proto_rawDescGZIP(), []int{108}
}

func (x *AgentWithDrawalCommssionResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *AgentWithDrawalCommssionResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type AgentBindAccountReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BankUser    string `protobuf:"bytes,1,opt,name=bank_user,json=bankUser,proto3" json:"bank_user,omitempty"`
	BankName    string `protobuf:"bytes,2,opt,name=bank_name,json=bankName,proto3" json:"bank_name,omitempty"`
	BankAccount string `protobuf:"bytes,3,opt,name=bank_account,json=bankAccount,proto3" json:"bank_account,omitempty"` //卡号
}

func (x *AgentBindAccountReq) Reset() {
	*x = AgentBindAccountReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentrpc_proto_msgTypes[109]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentBindAccountReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentBindAccountReq) ProtoMessage() {}

func (x *AgentBindAccountReq) ProtoReflect() protoreflect.Message {
	mi := &file_agentrpc_proto_msgTypes[109]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentBindAccountReq.ProtoReflect.Descriptor instead.
func (*AgentBindAccountReq) Descriptor() ([]byte, []int) {
	return file_agentrpc_proto_rawDescGZIP(), []int{109}
}

func (x *AgentBindAccountReq) GetBankUser() string {
	if x != nil {
		return x.BankUser
	}
	return ""
}

func (x *AgentBindAccountReq) GetBankName() string {
	if x != nil {
		return x.BankName
	}
	return ""
}

func (x *AgentBindAccountReq) GetBankAccount() string {
	if x != nil {
		return x.BankAccount
	}
	return ""
}

type AgentBindAccountResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data string `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *AgentBindAccountResp) Reset() {
	*x = AgentBindAccountResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentrpc_proto_msgTypes[110]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentBindAccountResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentBindAccountResp) ProtoMessage() {}

func (x *AgentBindAccountResp) ProtoReflect() protoreflect.Message {
	mi := &file_agentrpc_proto_msgTypes[110]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentBindAccountResp.ProtoReflect.Descriptor instead.
func (*AgentBindAccountResp) Descriptor() ([]byte, []int) {
	return file_agentrpc_proto_rawDescGZIP(), []int{110}
}

func (x *AgentBindAccountResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *AgentBindAccountResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *AgentBindAccountResp) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

type AgentPayAccountReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BankId int64 `protobuf:"varint,1,opt,name=bank_id,json=bankId,proto3" json:"bank_id,omitempty"`
}

func (x *AgentPayAccountReq) Reset() {
	*x = AgentPayAccountReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentrpc_proto_msgTypes[111]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentPayAccountReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentPayAccountReq) ProtoMessage() {}

func (x *AgentPayAccountReq) ProtoReflect() protoreflect.Message {
	mi := &file_agentrpc_proto_msgTypes[111]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentPayAccountReq.ProtoReflect.Descriptor instead.
func (*AgentPayAccountReq) Descriptor() ([]byte, []int) {
	return file_agentrpc_proto_rawDescGZIP(), []int{111}
}

func (x *AgentPayAccountReq) GetBankId() int64 {
	if x != nil {
		return x.BankId
	}
	return 0
}

type AgentPayAccountResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32           `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string          `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *PayAccountData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *AgentPayAccountResp) Reset() {
	*x = AgentPayAccountResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentrpc_proto_msgTypes[112]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentPayAccountResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentPayAccountResp) ProtoMessage() {}

func (x *AgentPayAccountResp) ProtoReflect() protoreflect.Message {
	mi := &file_agentrpc_proto_msgTypes[112]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentPayAccountResp.ProtoReflect.Descriptor instead.
func (*AgentPayAccountResp) Descriptor() ([]byte, []int) {
	return file_agentrpc_proto_rawDescGZIP(), []int{112}
}

func (x *AgentPayAccountResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *AgentPayAccountResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *AgentPayAccountResp) GetData() *PayAccountData {
	if x != nil {
		return x.Data
	}
	return nil
}

type PayAccountData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BankAddress string  `protobuf:"bytes,1,opt,name=bank_address,json=bankAddress,proto3" json:"bank_address,omitempty"`
	BankName    string  `protobuf:"bytes,2,opt,name=bank_name,json=bankName,proto3" json:"bank_name,omitempty"`
	BankUser    string  `protobuf:"bytes,3,opt,name=bank_user,json=bankUser,proto3" json:"bank_user,omitempty"`
	Coin        float64 `protobuf:"fixed64,4,opt,name=coin,proto3" json:"coin,omitempty"`
}

func (x *PayAccountData) Reset() {
	*x = PayAccountData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentrpc_proto_msgTypes[113]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PayAccountData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayAccountData) ProtoMessage() {}

func (x *PayAccountData) ProtoReflect() protoreflect.Message {
	mi := &file_agentrpc_proto_msgTypes[113]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayAccountData.ProtoReflect.Descriptor instead.
func (*PayAccountData) Descriptor() ([]byte, []int) {
	return file_agentrpc_proto_rawDescGZIP(), []int{113}
}

func (x *PayAccountData) GetBankAddress() string {
	if x != nil {
		return x.BankAddress
	}
	return ""
}

func (x *PayAccountData) GetBankName() string {
	if x != nil {
		return x.BankName
	}
	return ""
}

func (x *PayAccountData) GetBankUser() string {
	if x != nil {
		return x.BankUser
	}
	return ""
}

func (x *PayAccountData) GetCoin() float64 {
	if x != nil {
		return x.Coin
	}
	return 0
}

type AgentWithDrawalAuditReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *AgentWithDrawalAuditReq) Reset() {
	*x = AgentWithDrawalAuditReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentrpc_proto_msgTypes[114]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentWithDrawalAuditReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentWithDrawalAuditReq) ProtoMessage() {}

func (x *AgentWithDrawalAuditReq) ProtoReflect() protoreflect.Message {
	mi := &file_agentrpc_proto_msgTypes[114]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentWithDrawalAuditReq.ProtoReflect.Descriptor instead.
func (*AgentWithDrawalAuditReq) Descriptor() ([]byte, []int) {
	return file_agentrpc_proto_rawDescGZIP(), []int{114}
}

func (x *AgentWithDrawalAuditReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type AgentWithDrawalAuditResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data string `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *AgentWithDrawalAuditResp) Reset() {
	*x = AgentWithDrawalAuditResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentrpc_proto_msgTypes[115]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentWithDrawalAuditResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentWithDrawalAuditResp) ProtoMessage() {}

func (x *AgentWithDrawalAuditResp) ProtoReflect() protoreflect.Message {
	mi := &file_agentrpc_proto_msgTypes[115]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentWithDrawalAuditResp.ProtoReflect.Descriptor instead.
func (*AgentWithDrawalAuditResp) Descriptor() ([]byte, []int) {
	return file_agentrpc_proto_rawDescGZIP(), []int{115}
}

func (x *AgentWithDrawalAuditResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *AgentWithDrawalAuditResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *AgentWithDrawalAuditResp) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

type AgentWithDrawalRejectReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Remark string `protobuf:"bytes,2,opt,name=remark,proto3" json:"remark,omitempty"` //备注
}

func (x *AgentWithDrawalRejectReq) Reset() {
	*x = AgentWithDrawalRejectReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentrpc_proto_msgTypes[116]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentWithDrawalRejectReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentWithDrawalRejectReq) ProtoMessage() {}

func (x *AgentWithDrawalRejectReq) ProtoReflect() protoreflect.Message {
	mi := &file_agentrpc_proto_msgTypes[116]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentWithDrawalRejectReq.ProtoReflect.Descriptor instead.
func (*AgentWithDrawalRejectReq) Descriptor() ([]byte, []int) {
	return file_agentrpc_proto_rawDescGZIP(), []int{116}
}

func (x *AgentWithDrawalRejectReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AgentWithDrawalRejectReq) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

type AgentWithDrawalRejectResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data string `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *AgentWithDrawalRejectResp) Reset() {
	*x = AgentWithDrawalRejectResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentrpc_proto_msgTypes[117]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentWithDrawalRejectResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentWithDrawalRejectResp) ProtoMessage() {}

func (x *AgentWithDrawalRejectResp) ProtoReflect() protoreflect.Message {
	mi := &file_agentrpc_proto_msgTypes[117]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentWithDrawalRejectResp.ProtoReflect.Descriptor instead.
func (*AgentWithDrawalRejectResp) Descriptor() ([]byte, []int) {
	return file_agentrpc_proto_rawDescGZIP(), []int{117}
}

func (x *AgentWithDrawalRejectResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *AgentWithDrawalRejectResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *AgentWithDrawalRejectResp) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

type AgentUserListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current   int64                 `protobuf:"varint,1,opt,name=current,proto3" json:"current,omitempty"`
	Size      int64                 `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	SortKey   string                `protobuf:"bytes,3,opt,name=sortKey,proto3" json:"sortKey,omitempty"`
	SortField []string              `protobuf:"bytes,4,rep,name=sortField,proto3" json:"sortField,omitempty"`
	Data      *AgentUserListDataReq `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *AgentUserListReq) Reset() {
	*x = AgentUserListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentrpc_proto_msgTypes[118]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentUserListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentUserListReq) ProtoMessage() {}

func (x *AgentUserListReq) ProtoReflect() protoreflect.Message {
	mi := &file_agentrpc_proto_msgTypes[118]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentUserListReq.ProtoReflect.Descriptor instead.
func (*AgentUserListReq) Descriptor() ([]byte, []int) {
	return file_agentrpc_proto_rawDescGZIP(), []int{118}
}

func (x *AgentUserListReq) GetCurrent() int64 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *AgentUserListReq) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *AgentUserListReq) GetSortKey() string {
	if x != nil {
		return x.SortKey
	}
	return ""
}

func (x *AgentUserListReq) GetSortField() []string {
	if x != nil {
		return x.SortField
	}
	return nil
}

func (x *AgentUserListReq) GetData() *AgentUserListDataReq {
	if x != nil {
		return x.Data
	}
	return nil
}

type AgentUserListDataReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                 int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Username           string `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	Mobile             string `protobuf:"bytes,3,opt,name=mobile,proto3" json:"mobile,omitempty"`
	Email              string `protobuf:"bytes,4,opt,name=email,proto3" json:"email,omitempty"`
	RegisterIp         string `protobuf:"bytes,5,opt,name=registerIp,proto3" json:"registerIp,omitempty"`
	LastLoginIp        string `protobuf:"bytes,6,opt,name=lastLoginIp,proto3" json:"lastLoginIp,omitempty"`
	Status             int64  `protobuf:"varint,7,opt,name=status,proto3" json:"status,omitempty"`
	StartTime          int64  `protobuf:"varint,8,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime            int64  `protobuf:"varint,9,opt,name=endTime,proto3" json:"endTime,omitempty"`
	LastLoginStartTime int64  `protobuf:"varint,10,opt,name=lastLoginStartTime,proto3" json:"lastLoginStartTime,omitempty"`
	LastLoginEndTime   int64  `protobuf:"varint,11,opt,name=lastLoginEndTime,proto3" json:"lastLoginEndTime,omitempty"`
}

func (x *AgentUserListDataReq) Reset() {
	*x = AgentUserListDataReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentrpc_proto_msgTypes[119]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentUserListDataReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentUserListDataReq) ProtoMessage() {}

func (x *AgentUserListDataReq) ProtoReflect() protoreflect.Message {
	mi := &file_agentrpc_proto_msgTypes[119]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentUserListDataReq.ProtoReflect.Descriptor instead.
func (*AgentUserListDataReq) Descriptor() ([]byte, []int) {
	return file_agentrpc_proto_rawDescGZIP(), []int{119}
}

func (x *AgentUserListDataReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AgentUserListDataReq) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *AgentUserListDataReq) GetMobile() string {
	if x != nil {
		return x.Mobile
	}
	return ""
}

func (x *AgentUserListDataReq) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *AgentUserListDataReq) GetRegisterIp() string {
	if x != nil {
		return x.RegisterIp
	}
	return ""
}

func (x *AgentUserListDataReq) GetLastLoginIp() string {
	if x != nil {
		return x.LastLoginIp
	}
	return ""
}

func (x *AgentUserListDataReq) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *AgentUserListDataReq) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *AgentUserListDataReq) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *AgentUserListDataReq) GetLastLoginStartTime() int64 {
	if x != nil {
		return x.LastLoginStartTime
	}
	return 0
}

func (x *AgentUserListDataReq) GetLastLoginEndTime() int64 {
	if x != nil {
		return x.LastLoginEndTime
	}
	return 0
}

type AgentUserListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32                  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string                 `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *AgentUserListDataResp `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *AgentUserListResp) Reset() {
	*x = AgentUserListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentrpc_proto_msgTypes[120]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentUserListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentUserListResp) ProtoMessage() {}

func (x *AgentUserListResp) ProtoReflect() protoreflect.Message {
	mi := &file_agentrpc_proto_msgTypes[120]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentUserListResp.ProtoReflect.Descriptor instead.
func (*AgentUserListResp) Descriptor() ([]byte, []int) {
	return file_agentrpc_proto_rawDescGZIP(), []int{120}
}

func (x *AgentUserListResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *AgentUserListResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *AgentUserListResp) GetData() *AgentUserListDataResp {
	if x != nil {
		return x.Data
	}
	return nil
}

type AgentUserListDataResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MembersCount          int64                    `protobuf:"varint,1,opt,name=membersCount,proto3" json:"membersCount,omitempty"`
	DepositMembersCount   int64                    `protobuf:"varint,2,opt,name=depositMembersCount,proto3" json:"depositMembersCount,omitempty"`
	DepositAmountTotal    float64                  `protobuf:"fixed64,3,opt,name=depositAmountTotal,proto3" json:"depositAmountTotal,omitempty"`
	WithdrawalAmountTotal float64                  `protobuf:"fixed64,4,opt,name=withdrawalAmountTotal,proto3" json:"withdrawalAmountTotal,omitempty"`
	SubAmountTotal        float64                  `protobuf:"fixed64,5,opt,name=subAmountTotal,proto3" json:"subAmountTotal,omitempty"`
	BetAmountTotal        float64                  `protobuf:"fixed64,6,opt,name=betAmountTotal,proto3" json:"betAmountTotal,omitempty"`
	PlAmountTotal         float64                  `protobuf:"fixed64,7,opt,name=plAmountTotal,proto3" json:"plAmountTotal,omitempty"`
	Current               int64                    `protobuf:"varint,8,opt,name=current,proto3" json:"current,omitempty"`
	Size                  int64                    `protobuf:"varint,9,opt,name=size,proto3" json:"size,omitempty"`
	Pages                 int64                    `protobuf:"varint,10,opt,name=pages,proto3" json:"pages,omitempty"`
	Total                 int64                    `protobuf:"varint,11,opt,name=total,proto3" json:"total,omitempty"`
	List                  []*AgentUserListDataItem `protobuf:"bytes,12,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *AgentUserListDataResp) Reset() {
	*x = AgentUserListDataResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentrpc_proto_msgTypes[121]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentUserListDataResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentUserListDataResp) ProtoMessage() {}

func (x *AgentUserListDataResp) ProtoReflect() protoreflect.Message {
	mi := &file_agentrpc_proto_msgTypes[121]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentUserListDataResp.ProtoReflect.Descriptor instead.
func (*AgentUserListDataResp) Descriptor() ([]byte, []int) {
	return file_agentrpc_proto_rawDescGZIP(), []int{121}
}

func (x *AgentUserListDataResp) GetMembersCount() int64 {
	if x != nil {
		return x.MembersCount
	}
	return 0
}

func (x *AgentUserListDataResp) GetDepositMembersCount() int64 {
	if x != nil {
		return x.DepositMembersCount
	}
	return 0
}

func (x *AgentUserListDataResp) GetDepositAmountTotal() float64 {
	if x != nil {
		return x.DepositAmountTotal
	}
	return 0
}

func (x *AgentUserListDataResp) GetWithdrawalAmountTotal() float64 {
	if x != nil {
		return x.WithdrawalAmountTotal
	}
	return 0
}

func (x *AgentUserListDataResp) GetSubAmountTotal() float64 {
	if x != nil {
		return x.SubAmountTotal
	}
	return 0
}

func (x *AgentUserListDataResp) GetBetAmountTotal() float64 {
	if x != nil {
		return x.BetAmountTotal
	}
	return 0
}

func (x *AgentUserListDataResp) GetPlAmountTotal() float64 {
	if x != nil {
		return x.PlAmountTotal
	}
	return 0
}

func (x *AgentUserListDataResp) GetCurrent() int64 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *AgentUserListDataResp) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *AgentUserListDataResp) GetPages() int64 {
	if x != nil {
		return x.Pages
	}
	return 0
}

func (x *AgentUserListDataResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *AgentUserListDataResp) GetList() []*AgentUserListDataItem {
	if x != nil {
		return x.List
	}
	return nil
}

type AgentUserListDataItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               int64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` //UID
	Username         string  `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	CreateTime       int64   `protobuf:"varint,3,opt,name=createTime,proto3" json:"createTime,omitempty"`
	LastLoginTime    int64   `protobuf:"varint,4,opt,name=lastLoginTime,proto3" json:"lastLoginTime,omitempty"`
	LevelId          int64   `protobuf:"varint,5,opt,name=levelId,proto3" json:"levelId,omitempty"`
	DepositCount     int64   `protobuf:"varint,6,opt,name=depositCount,proto3" json:"depositCount,omitempty"`
	DepositAmount    float64 `protobuf:"fixed64,7,opt,name=depositAmount,proto3" json:"depositAmount,omitempty"`
	BetAmountTotal   float64 `protobuf:"fixed64,8,opt,name=betAmountTotal,proto3" json:"betAmountTotal,omitempty"`
	PlAmountTotal    float64 `protobuf:"fixed64,9,opt,name=plAmountTotal,proto3" json:"plAmountTotal,omitempty"`
	WithdrawalCount  int64   `protobuf:"varint,10,opt,name=withdrawalCount,proto3" json:"withdrawalCount,omitempty"`
	WithdrawalAmount float64 `protobuf:"fixed64,11,opt,name=withdrawalAmount,proto3" json:"withdrawalAmount,omitempty"`
	SubAmount        float64 `protobuf:"fixed64,12,opt,name=subAmount,proto3" json:"subAmount,omitempty"`
	Mobile           string  `protobuf:"bytes,13,opt,name=mobile,proto3" json:"mobile,omitempty"`
	Email            string  `protobuf:"bytes,14,opt,name=email,proto3" json:"email,omitempty"`
	Status           int64   `protobuf:"varint,15,opt,name=status,proto3" json:"status,omitempty"`
	AgentNameTop     string  `protobuf:"bytes,16,opt,name=agentNameTop,proto3" json:"agentNameTop,omitempty"`
	FreezeCause      string  `protobuf:"bytes,17,opt,name=freezeCause,proto3" json:"freezeCause,omitempty"`
	FreezeTime       int64   `protobuf:"varint,18,opt,name=freezeTime,proto3" json:"freezeTime,omitempty"`
	MemberType       int64   `protobuf:"varint,19,opt,name=memberType,proto3" json:"memberType,omitempty"`
	LevelText        string  `protobuf:"bytes,20,opt,name=levelText,proto3" json:"levelText,omitempty"`
}

func (x *AgentUserListDataItem) Reset() {
	*x = AgentUserListDataItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentrpc_proto_msgTypes[122]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentUserListDataItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentUserListDataItem) ProtoMessage() {}

func (x *AgentUserListDataItem) ProtoReflect() protoreflect.Message {
	mi := &file_agentrpc_proto_msgTypes[122]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentUserListDataItem.ProtoReflect.Descriptor instead.
func (*AgentUserListDataItem) Descriptor() ([]byte, []int) {
	return file_agentrpc_proto_rawDescGZIP(), []int{122}
}

func (x *AgentUserListDataItem) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AgentUserListDataItem) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *AgentUserListDataItem) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *AgentUserListDataItem) GetLastLoginTime() int64 {
	if x != nil {
		return x.LastLoginTime
	}
	return 0
}

func (x *AgentUserListDataItem) GetLevelId() int64 {
	if x != nil {
		return x.LevelId
	}
	return 0
}

func (x *AgentUserListDataItem) GetDepositCount() int64 {
	if x != nil {
		return x.DepositCount
	}
	return 0
}

func (x *AgentUserListDataItem) GetDepositAmount() float64 {
	if x != nil {
		return x.DepositAmount
	}
	return 0
}

func (x *AgentUserListDataItem) GetBetAmountTotal() float64 {
	if x != nil {
		return x.BetAmountTotal
	}
	return 0
}

func (x *AgentUserListDataItem) GetPlAmountTotal() float64 {
	if x != nil {
		return x.PlAmountTotal
	}
	return 0
}

func (x *AgentUserListDataItem) GetWithdrawalCount() int64 {
	if x != nil {
		return x.WithdrawalCount
	}
	return 0
}

func (x *AgentUserListDataItem) GetWithdrawalAmount() float64 {
	if x != nil {
		return x.WithdrawalAmount
	}
	return 0
}

func (x *AgentUserListDataItem) GetSubAmount() float64 {
	if x != nil {
		return x.SubAmount
	}
	return 0
}

func (x *AgentUserListDataItem) GetMobile() string {
	if x != nil {
		return x.Mobile
	}
	return ""
}

func (x *AgentUserListDataItem) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *AgentUserListDataItem) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *AgentUserListDataItem) GetAgentNameTop() string {
	if x != nil {
		return x.AgentNameTop
	}
	return ""
}

func (x *AgentUserListDataItem) GetFreezeCause() string {
	if x != nil {
		return x.FreezeCause
	}
	return ""
}

func (x *AgentUserListDataItem) GetFreezeTime() int64 {
	if x != nil {
		return x.FreezeTime
	}
	return 0
}

func (x *AgentUserListDataItem) GetMemberType() int64 {
	if x != nil {
		return x.MemberType
	}
	return 0
}

func (x *AgentUserListDataItem) GetLevelText() string {
	if x != nil {
		return x.LevelText
	}
	return ""
}

type TaskAgentUserDailyReportReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TaskAgentUserDailyReportReq) Reset() {
	*x = TaskAgentUserDailyReportReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentrpc_proto_msgTypes[123]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskAgentUserDailyReportReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskAgentUserDailyReportReq) ProtoMessage() {}

func (x *TaskAgentUserDailyReportReq) ProtoReflect() protoreflect.Message {
	mi := &file_agentrpc_proto_msgTypes[123]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskAgentUserDailyReportReq.ProtoReflect.Descriptor instead.
func (*TaskAgentUserDailyReportReq) Descriptor() ([]byte, []int) {
	return file_agentrpc_proto_rawDescGZIP(), []int{123}
}

type TaskAgentUserDailyReportResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data bool   `protobuf:"varint,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *TaskAgentUserDailyReportResp) Reset() {
	*x = TaskAgentUserDailyReportResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentrpc_proto_msgTypes[124]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskAgentUserDailyReportResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskAgentUserDailyReportResp) ProtoMessage() {}

func (x *TaskAgentUserDailyReportResp) ProtoReflect() protoreflect.Message {
	mi := &file_agentrpc_proto_msgTypes[124]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskAgentUserDailyReportResp.ProtoReflect.Descriptor instead.
func (*TaskAgentUserDailyReportResp) Descriptor() ([]byte, []int) {
	return file_agentrpc_proto_rawDescGZIP(), []int{124}
}

func (x *TaskAgentUserDailyReportResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *TaskAgentUserDailyReportResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *TaskAgentUserDailyReportResp) GetData() bool {
	if x != nil {
		return x.Data
	}
	return false
}

type AdminAgentUserListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current   int64                      `protobuf:"varint,1,opt,name=current,proto3" json:"current,omitempty"`
	Size      int64                      `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	SortKey   string                     `protobuf:"bytes,3,opt,name=sortKey,proto3" json:"sortKey,omitempty"`
	SortField []string                   `protobuf:"bytes,4,rep,name=sortField,proto3" json:"sortField,omitempty"`
	Data      *AdminAgentUserListDataReq `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *AdminAgentUserListReq) Reset() {
	*x = AdminAgentUserListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentrpc_proto_msgTypes[125]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminAgentUserListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminAgentUserListReq) ProtoMessage() {}

func (x *AdminAgentUserListReq) ProtoReflect() protoreflect.Message {
	mi := &file_agentrpc_proto_msgTypes[125]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminAgentUserListReq.ProtoReflect.Descriptor instead.
func (*AdminAgentUserListReq) Descriptor() ([]byte, []int) {
	return file_agentrpc_proto_rawDescGZIP(), []int{125}
}

func (x *AdminAgentUserListReq) GetCurrent() int64 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *AdminAgentUserListReq) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *AdminAgentUserListReq) GetSortKey() string {
	if x != nil {
		return x.SortKey
	}
	return ""
}

func (x *AdminAgentUserListReq) GetSortField() []string {
	if x != nil {
		return x.SortField
	}
	return nil
}

func (x *AdminAgentUserListReq) GetData() *AdminAgentUserListDataReq {
	if x != nil {
		return x.Data
	}
	return nil
}

type AdminAgentUserListDataReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username     string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	SupUsername1 string `protobuf:"bytes,2,opt,name=supUsername1,proto3" json:"supUsername1,omitempty"`
	Status       string `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	StartTime    int64  `protobuf:"varint,4,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime      int64  `protobuf:"varint,5,opt,name=endTime,proto3" json:"endTime,omitempty"`
}

func (x *AdminAgentUserListDataReq) Reset() {
	*x = AdminAgentUserListDataReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentrpc_proto_msgTypes[126]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminAgentUserListDataReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminAgentUserListDataReq) ProtoMessage() {}

func (x *AdminAgentUserListDataReq) ProtoReflect() protoreflect.Message {
	mi := &file_agentrpc_proto_msgTypes[126]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminAgentUserListDataReq.ProtoReflect.Descriptor instead.
func (*AdminAgentUserListDataReq) Descriptor() ([]byte, []int) {
	return file_agentrpc_proto_rawDescGZIP(), []int{126}
}

func (x *AdminAgentUserListDataReq) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *AdminAgentUserListDataReq) GetSupUsername1() string {
	if x != nil {
		return x.SupUsername1
	}
	return ""
}

func (x *AdminAgentUserListDataReq) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *AdminAgentUserListDataReq) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *AdminAgentUserListDataReq) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

type AdminAgentUserListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32                       `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string                      `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *AdminAgentUserListDataResp `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *AdminAgentUserListResp) Reset() {
	*x = AdminAgentUserListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentrpc_proto_msgTypes[127]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminAgentUserListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminAgentUserListResp) ProtoMessage() {}

func (x *AdminAgentUserListResp) ProtoReflect() protoreflect.Message {
	mi := &file_agentrpc_proto_msgTypes[127]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminAgentUserListResp.ProtoReflect.Descriptor instead.
func (*AdminAgentUserListResp) Descriptor() ([]byte, []int) {
	return file_agentrpc_proto_rawDescGZIP(), []int{127}
}

func (x *AdminAgentUserListResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *AdminAgentUserListResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *AdminAgentUserListResp) GetData() *AdminAgentUserListDataResp {
	if x != nil {
		return x.Data
	}
	return nil
}

type AdminAgentUserListDataResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current string                        `protobuf:"bytes,1,opt,name=current,proto3" json:"current,omitempty"`
	Size    string                        `protobuf:"bytes,2,opt,name=size,proto3" json:"size,omitempty"`
	Pages   string                        `protobuf:"bytes,3,opt,name=pages,proto3" json:"pages,omitempty"`
	Total   string                        `protobuf:"bytes,4,opt,name=total,proto3" json:"total,omitempty"`
	List    []*AdminAgentUserListDataItem `protobuf:"bytes,5,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *AdminAgentUserListDataResp) Reset() {
	*x = AdminAgentUserListDataResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentrpc_proto_msgTypes[128]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminAgentUserListDataResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminAgentUserListDataResp) ProtoMessage() {}

func (x *AdminAgentUserListDataResp) ProtoReflect() protoreflect.Message {
	mi := &file_agentrpc_proto_msgTypes[128]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminAgentUserListDataResp.ProtoReflect.Descriptor instead.
func (*AdminAgentUserListDataResp) Descriptor() ([]byte, []int) {
	return file_agentrpc_proto_rawDescGZIP(), []int{128}
}

func (x *AdminAgentUserListDataResp) GetCurrent() string {
	if x != nil {
		return x.Current
	}
	return ""
}

func (x *AdminAgentUserListDataResp) GetSize() string {
	if x != nil {
		return x.Size
	}
	return ""
}

func (x *AdminAgentUserListDataResp) GetPages() string {
	if x != nil {
		return x.Pages
	}
	return ""
}

func (x *AdminAgentUserListDataResp) GetTotal() string {
	if x != nil {
		return x.Total
	}
	return ""
}

func (x *AdminAgentUserListDataResp) GetList() []*AdminAgentUserListDataItem {
	if x != nil {
		return x.List
	}
	return nil
}

type AdminAgentUserListDataItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Coin                    string `protobuf:"bytes,1,opt,name=coin,proto3" json:"coin,omitempty"`
	CoinAdjust              string `protobuf:"bytes,2,opt,name=coinAdjust,proto3" json:"coinAdjust,omitempty"`
	CoinBalance             string `protobuf:"bytes,3,opt,name=coinBalance,proto3" json:"coinBalance,omitempty"`
	CoinBalanceExport       string `protobuf:"bytes,4,opt,name=coinBalanceExport,proto3" json:"coinBalanceExport,omitempty"`
	CoinBet                 string `protobuf:"bytes,5,opt,name=coinBet,proto3" json:"coinBet,omitempty"`
	CoinBetBonus            string `protobuf:"bytes,6,opt,name=coinBetBonus,proto3" json:"coinBetBonus,omitempty"`
	CoinBetBonusExport      string `protobuf:"bytes,7,opt,name=coinBetBonusExport,proto3" json:"coinBetBonusExport,omitempty"`
	CoinBetExport           string `protobuf:"bytes,8,opt,name=coinBetExport,proto3" json:"coinBetExport,omitempty"`
	CoinCommission          string `protobuf:"bytes,9,opt,name=coinCommission,proto3" json:"coinCommission,omitempty"`
	CoinCommissionExport    string `protobuf:"bytes,10,opt,name=coinCommissionExport,proto3" json:"coinCommissionExport,omitempty"`
	CoinDeposit             string `protobuf:"bytes,11,opt,name=coinDeposit,proto3" json:"coinDeposit,omitempty"`
	CoinExport              string `protobuf:"bytes,12,opt,name=coinExport,proto3" json:"coinExport,omitempty"`
	CoinProfit              string `protobuf:"bytes,13,opt,name=coinProfit,proto3" json:"coinProfit,omitempty"`
	CoinProfitExport        string `protobuf:"bytes,14,opt,name=coinProfitExport,proto3" json:"coinProfitExport,omitempty"`
	CoinWithdrawal          string `protobuf:"bytes,15,opt,name=coinWithdrawal,proto3" json:"coinWithdrawal,omitempty"`
	CoinWithdrawalReally    string `protobuf:"bytes,16,opt,name=coinWithdrawalReally,proto3" json:"coinWithdrawalReally,omitempty"`
	CreatedAt               int64  `protobuf:"varint,17,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	DepositSuccCnt          int64  `protobuf:"varint,18,opt,name=depositSuccCnt,proto3" json:"depositSuccCnt,omitempty"`
	DepositSuccUserCnt      int64  `protobuf:"varint,19,opt,name=depositSuccUserCnt,proto3" json:"depositSuccUserCnt,omitempty"`
	DirectNums              int64  `protobuf:"varint,20,opt,name=directNums,proto3" json:"directNums,omitempty"`
	Email                   string `protobuf:"bytes,21,opt,name=email,proto3" json:"email,omitempty"`
	FirstDepositSuccAmt     string `protobuf:"bytes,22,opt,name=firstDepositSuccAmt,proto3" json:"firstDepositSuccAmt,omitempty"`
	FirstDepositSuccCnt     int64  `protobuf:"varint,23,opt,name=firstDepositSuccCnt,proto3" json:"firstDepositSuccCnt,omitempty"`
	Id                      int64  `protobuf:"varint,24,opt,name=id,proto3" json:"id,omitempty"`
	LastLoginTime           int64  `protobuf:"varint,25,opt,name=lastLoginTime,proto3" json:"lastLoginTime,omitempty"`
	LevelId                 int64  `protobuf:"varint,26,opt,name=levelId,proto3" json:"levelId,omitempty"`
	LevelText               string `protobuf:"bytes,27,opt,name=levelText,proto3" json:"levelText,omitempty"`
	Mobile                  string `protobuf:"bytes,28,opt,name=mobile,proto3" json:"mobile,omitempty"`
	OperatorName            string `protobuf:"bytes,29,opt,name=operatorName,proto3" json:"operatorName,omitempty"`
	Role                    int64  `protobuf:"varint,30,opt,name=role,proto3" json:"role,omitempty"`
	Status                  int64  `protobuf:"varint,31,opt,name=status,proto3" json:"status,omitempty"`
	SupLevelTop             int64  `protobuf:"varint,32,opt,name=supLevelTop,proto3" json:"supLevelTop,omitempty"`
	SupLevelTopName         string `protobuf:"bytes,33,opt,name=supLevelTopName,proto3" json:"supLevelTopName,omitempty"`
	SupUsername1            string `protobuf:"bytes,34,opt,name=supUsername1,proto3" json:"supUsername1,omitempty"`
	TeamNums                int64  `protobuf:"varint,35,opt,name=teamNums,proto3" json:"teamNums,omitempty"`
	UpdatedAt               int64  `protobuf:"varint,36,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	UserDepositSuccCnt      int64  `protobuf:"varint,37,opt,name=userDepositSuccCnt,proto3" json:"userDepositSuccCnt,omitempty"`
	UserFirstDepositSuccAmt string `protobuf:"bytes,38,opt,name=userFirstDepositSuccAmt,proto3" json:"userFirstDepositSuccAmt,omitempty"`
	UserWithdrawSuccCnt     int64  `protobuf:"varint,39,opt,name=userWithdrawSuccCnt,proto3" json:"userWithdrawSuccCnt,omitempty"`
	Username                string `protobuf:"bytes,40,opt,name=username,proto3" json:"username,omitempty"`
	WithdrawSuccCnt         int64  `protobuf:"varint,41,opt,name=withdrawSuccCnt,proto3" json:"withdrawSuccCnt,omitempty"`
	WithdrawSuccUserCnt     int64  `protobuf:"varint,42,opt,name=withdrawSuccUserCnt,proto3" json:"withdrawSuccUserCnt,omitempty"`
	AgentLevel              string `protobuf:"bytes,43,opt,name=agentLevel,proto3" json:"agentLevel,omitempty"`
	SuperUid                int64  `protobuf:"varint,44,opt,name=superUid,proto3" json:"superUid,omitempty"`
}

func (x *AdminAgentUserListDataItem) Reset() {
	*x = AdminAgentUserListDataItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentrpc_proto_msgTypes[129]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminAgentUserListDataItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminAgentUserListDataItem) ProtoMessage() {}

func (x *AdminAgentUserListDataItem) ProtoReflect() protoreflect.Message {
	mi := &file_agentrpc_proto_msgTypes[129]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminAgentUserListDataItem.ProtoReflect.Descriptor instead.
func (*AdminAgentUserListDataItem) Descriptor() ([]byte, []int) {
	return file_agentrpc_proto_rawDescGZIP(), []int{129}
}

func (x *AdminAgentUserListDataItem) GetCoin() string {
	if x != nil {
		return x.Coin
	}
	return ""
}

func (x *AdminAgentUserListDataItem) GetCoinAdjust() string {
	if x != nil {
		return x.CoinAdjust
	}
	return ""
}

func (x *AdminAgentUserListDataItem) GetCoinBalance() string {
	if x != nil {
		return x.CoinBalance
	}
	return ""
}

func (x *AdminAgentUserListDataItem) GetCoinBalanceExport() string {
	if x != nil {
		return x.CoinBalanceExport
	}
	return ""
}

func (x *AdminAgentUserListDataItem) GetCoinBet() string {
	if x != nil {
		return x.CoinBet
	}
	return ""
}

func (x *AdminAgentUserListDataItem) GetCoinBetBonus() string {
	if x != nil {
		return x.CoinBetBonus
	}
	return ""
}

func (x *AdminAgentUserListDataItem) GetCoinBetBonusExport() string {
	if x != nil {
		return x.CoinBetBonusExport
	}
	return ""
}

func (x *AdminAgentUserListDataItem) GetCoinBetExport() string {
	if x != nil {
		return x.CoinBetExport
	}
	return ""
}

func (x *AdminAgentUserListDataItem) GetCoinCommission() string {
	if x != nil {
		return x.CoinCommission
	}
	return ""
}

func (x *AdminAgentUserListDataItem) GetCoinCommissionExport() string {
	if x != nil {
		return x.CoinCommissionExport
	}
	return ""
}

func (x *AdminAgentUserListDataItem) GetCoinDeposit() string {
	if x != nil {
		return x.CoinDeposit
	}
	return ""
}

func (x *AdminAgentUserListDataItem) GetCoinExport() string {
	if x != nil {
		return x.CoinExport
	}
	return ""
}

func (x *AdminAgentUserListDataItem) GetCoinProfit() string {
	if x != nil {
		return x.CoinProfit
	}
	return ""
}

func (x *AdminAgentUserListDataItem) GetCoinProfitExport() string {
	if x != nil {
		return x.CoinProfitExport
	}
	return ""
}

func (x *AdminAgentUserListDataItem) GetCoinWithdrawal() string {
	if x != nil {
		return x.CoinWithdrawal
	}
	return ""
}

func (x *AdminAgentUserListDataItem) GetCoinWithdrawalReally() string {
	if x != nil {
		return x.CoinWithdrawalReally
	}
	return ""
}

func (x *AdminAgentUserListDataItem) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *AdminAgentUserListDataItem) GetDepositSuccCnt() int64 {
	if x != nil {
		return x.DepositSuccCnt
	}
	return 0
}

func (x *AdminAgentUserListDataItem) GetDepositSuccUserCnt() int64 {
	if x != nil {
		return x.DepositSuccUserCnt
	}
	return 0
}

func (x *AdminAgentUserListDataItem) GetDirectNums() int64 {
	if x != nil {
		return x.DirectNums
	}
	return 0
}

func (x *AdminAgentUserListDataItem) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *AdminAgentUserListDataItem) GetFirstDepositSuccAmt() string {
	if x != nil {
		return x.FirstDepositSuccAmt
	}
	return ""
}

func (x *AdminAgentUserListDataItem) GetFirstDepositSuccCnt() int64 {
	if x != nil {
		return x.FirstDepositSuccCnt
	}
	return 0
}

func (x *AdminAgentUserListDataItem) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AdminAgentUserListDataItem) GetLastLoginTime() int64 {
	if x != nil {
		return x.LastLoginTime
	}
	return 0
}

func (x *AdminAgentUserListDataItem) GetLevelId() int64 {
	if x != nil {
		return x.LevelId
	}
	return 0
}

func (x *AdminAgentUserListDataItem) GetLevelText() string {
	if x != nil {
		return x.LevelText
	}
	return ""
}

func (x *AdminAgentUserListDataItem) GetMobile() string {
	if x != nil {
		return x.Mobile
	}
	return ""
}

func (x *AdminAgentUserListDataItem) GetOperatorName() string {
	if x != nil {
		return x.OperatorName
	}
	return ""
}

func (x *AdminAgentUserListDataItem) GetRole() int64 {
	if x != nil {
		return x.Role
	}
	return 0
}

func (x *AdminAgentUserListDataItem) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *AdminAgentUserListDataItem) GetSupLevelTop() int64 {
	if x != nil {
		return x.SupLevelTop
	}
	return 0
}

func (x *AdminAgentUserListDataItem) GetSupLevelTopName() string {
	if x != nil {
		return x.SupLevelTopName
	}
	return ""
}

func (x *AdminAgentUserListDataItem) GetSupUsername1() string {
	if x != nil {
		return x.SupUsername1
	}
	return ""
}

func (x *AdminAgentUserListDataItem) GetTeamNums() int64 {
	if x != nil {
		return x.TeamNums
	}
	return 0
}

func (x *AdminAgentUserListDataItem) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *AdminAgentUserListDataItem) GetUserDepositSuccCnt() int64 {
	if x != nil {
		return x.UserDepositSuccCnt
	}
	return 0
}

func (x *AdminAgentUserListDataItem) GetUserFirstDepositSuccAmt() string {
	if x != nil {
		return x.UserFirstDepositSuccAmt
	}
	return ""
}

func (x *AdminAgentUserListDataItem) GetUserWithdrawSuccCnt() int64 {
	if x != nil {
		return x.UserWithdrawSuccCnt
	}
	return 0
}

func (x *AdminAgentUserListDataItem) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *AdminAgentUserListDataItem) GetWithdrawSuccCnt() int64 {
	if x != nil {
		return x.WithdrawSuccCnt
	}
	return 0
}

func (x *AdminAgentUserListDataItem) GetWithdrawSuccUserCnt() int64 {
	if x != nil {
		return x.WithdrawSuccUserCnt
	}
	return 0
}

func (x *AdminAgentUserListDataItem) GetAgentLevel() string {
	if x != nil {
		return x.AgentLevel
	}
	return ""
}

func (x *AdminAgentUserListDataItem) GetSuperUid() int64 {
	if x != nil {
		return x.SuperUid
	}
	return 0
}

type AgentTeamReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current   int64             `protobuf:"varint,1,opt,name=current,proto3" json:"current,omitempty"`
	Size      int64             `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	SortKey   string            `protobuf:"bytes,3,opt,name=sortKey,proto3" json:"sortKey,omitempty"`
	SortField []string          `protobuf:"bytes,4,rep,name=sortField,proto3" json:"sortField,omitempty"`
	Data      *AgentTeamDataReq `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *AgentTeamReq) Reset() {
	*x = AgentTeamReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentrpc_proto_msgTypes[130]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentTeamReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentTeamReq) ProtoMessage() {}

func (x *AgentTeamReq) ProtoReflect() protoreflect.Message {
	mi := &file_agentrpc_proto_msgTypes[130]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentTeamReq.ProtoReflect.Descriptor instead.
func (*AgentTeamReq) Descriptor() ([]byte, []int) {
	return file_agentrpc_proto_rawDescGZIP(), []int{130}
}

func (x *AgentTeamReq) GetCurrent() int64 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *AgentTeamReq) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *AgentTeamReq) GetSortKey() string {
	if x != nil {
		return x.SortKey
	}
	return ""
}

func (x *AgentTeamReq) GetSortField() []string {
	if x != nil {
		return x.SortField
	}
	return nil
}

func (x *AgentTeamReq) GetData() *AgentTeamDataReq {
	if x != nil {
		return x.Data
	}
	return nil
}

type AgentTeamDataReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AgentId    int64  `protobuf:"varint,1,opt,name=agentId,proto3" json:"agentId,omitempty"`
	Username   string `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	AgentLevel string `protobuf:"bytes,3,opt,name=agentLevel,proto3" json:"agentLevel,omitempty"`
	Status     string `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`
	StartTime  int64  `protobuf:"varint,5,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime    int64  `protobuf:"varint,6,opt,name=endTime,proto3" json:"endTime,omitempty"`
}

func (x *AgentTeamDataReq) Reset() {
	*x = AgentTeamDataReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentrpc_proto_msgTypes[131]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentTeamDataReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentTeamDataReq) ProtoMessage() {}

func (x *AgentTeamDataReq) ProtoReflect() protoreflect.Message {
	mi := &file_agentrpc_proto_msgTypes[131]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentTeamDataReq.ProtoReflect.Descriptor instead.
func (*AgentTeamDataReq) Descriptor() ([]byte, []int) {
	return file_agentrpc_proto_rawDescGZIP(), []int{131}
}

func (x *AgentTeamDataReq) GetAgentId() int64 {
	if x != nil {
		return x.AgentId
	}
	return 0
}

func (x *AgentTeamDataReq) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *AgentTeamDataReq) GetAgentLevel() string {
	if x != nil {
		return x.AgentLevel
	}
	return ""
}

func (x *AgentTeamDataReq) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *AgentTeamDataReq) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *AgentTeamDataReq) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

type AgentTeamResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32              `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string             `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *AgentTeamDataResp `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *AgentTeamResp) Reset() {
	*x = AgentTeamResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentrpc_proto_msgTypes[132]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentTeamResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentTeamResp) ProtoMessage() {}

func (x *AgentTeamResp) ProtoReflect() protoreflect.Message {
	mi := &file_agentrpc_proto_msgTypes[132]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentTeamResp.ProtoReflect.Descriptor instead.
func (*AgentTeamResp) Descriptor() ([]byte, []int) {
	return file_agentrpc_proto_rawDescGZIP(), []int{132}
}

func (x *AgentTeamResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *AgentTeamResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *AgentTeamResp) GetData() *AgentTeamDataResp {
	if x != nil {
		return x.Data
	}
	return nil
}

type AgentTeamDataResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current int64                `protobuf:"varint,1,opt,name=current,proto3" json:"current,omitempty"`
	Size    int64                `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	Total   int64                `protobuf:"varint,3,opt,name=total,proto3" json:"total,omitempty"`
	Pages   int64                `protobuf:"varint,4,opt,name=pages,proto3" json:"pages,omitempty"`
	List    []*AgentTeamDataItem `protobuf:"bytes,5,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *AgentTeamDataResp) Reset() {
	*x = AgentTeamDataResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentrpc_proto_msgTypes[133]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentTeamDataResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentTeamDataResp) ProtoMessage() {}

func (x *AgentTeamDataResp) ProtoReflect() protoreflect.Message {
	mi := &file_agentrpc_proto_msgTypes[133]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentTeamDataResp.ProtoReflect.Descriptor instead.
func (*AgentTeamDataResp) Descriptor() ([]byte, []int) {
	return file_agentrpc_proto_rawDescGZIP(), []int{133}
}

func (x *AgentTeamDataResp) GetCurrent() int64 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *AgentTeamDataResp) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *AgentTeamDataResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *AgentTeamDataResp) GetPages() int64 {
	if x != nil {
		return x.Pages
	}
	return 0
}

func (x *AgentTeamDataResp) GetList() []*AgentTeamDataItem {
	if x != nil {
		return x.List
	}
	return nil
}

type AgentTeamDataItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                   int64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Username             string  `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	AgentLevel           int64   `protobuf:"varint,3,opt,name=agentLevel,proto3" json:"agentLevel,omitempty"`
	Coin                 float64 `protobuf:"fixed64,4,opt,name=coin,proto3" json:"coin,omitempty"`
	Status               int64   `protobuf:"varint,5,opt,name=status,proto3" json:"status,omitempty"`
	CreatedAt            int64   `protobuf:"varint,6,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	CoinDeposit          float64 `protobuf:"fixed64,7,opt,name=coinDeposit,proto3" json:"coinDeposit,omitempty"`
	CoinWithdrawal       float64 `protobuf:"fixed64,8,opt,name=coinWithdrawal,proto3" json:"coinWithdrawal,omitempty"`
	CoinWithdrawalReally float64 `protobuf:"fixed64,9,opt,name=coinWithdrawalReally,proto3" json:"coinWithdrawalReally,omitempty"`
	CoinAdjust           float64 `protobuf:"fixed64,10,opt,name=coinAdjust,proto3" json:"coinAdjust,omitempty"`
	CoinBet              float64 `protobuf:"fixed64,11,opt,name=coinBet,proto3" json:"coinBet,omitempty"`
	CoinBetBonus         float64 `protobuf:"fixed64,12,opt,name=coinBetBonus,proto3" json:"coinBetBonus,omitempty"`
	CoinProfit           float64 `protobuf:"fixed64,13,opt,name=coinProfit,proto3" json:"coinProfit,omitempty"`
	SupUsername          string  `protobuf:"bytes,14,opt,name=supUsername,proto3" json:"supUsername,omitempty"`
	DepositSuccCnt       int64   `protobuf:"varint,15,opt,name=depositSuccCnt,proto3" json:"depositSuccCnt,omitempty"`
	WithdrawSuccCnt      int64   `protobuf:"varint,16,opt,name=withdrawSuccCnt,proto3" json:"withdrawSuccCnt,omitempty"`
	FirstDepositSuccAmt  float64 `protobuf:"fixed64,17,opt,name=firstDepositSuccAmt,proto3" json:"firstDepositSuccAmt,omitempty"`
}

func (x *AgentTeamDataItem) Reset() {
	*x = AgentTeamDataItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentrpc_proto_msgTypes[134]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentTeamDataItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentTeamDataItem) ProtoMessage() {}

func (x *AgentTeamDataItem) ProtoReflect() protoreflect.Message {
	mi := &file_agentrpc_proto_msgTypes[134]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentTeamDataItem.ProtoReflect.Descriptor instead.
func (*AgentTeamDataItem) Descriptor() ([]byte, []int) {
	return file_agentrpc_proto_rawDescGZIP(), []int{134}
}

func (x *AgentTeamDataItem) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AgentTeamDataItem) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *AgentTeamDataItem) GetAgentLevel() int64 {
	if x != nil {
		return x.AgentLevel
	}
	return 0
}

func (x *AgentTeamDataItem) GetCoin() float64 {
	if x != nil {
		return x.Coin
	}
	return 0
}

func (x *AgentTeamDataItem) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *AgentTeamDataItem) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *AgentTeamDataItem) GetCoinDeposit() float64 {
	if x != nil {
		return x.CoinDeposit
	}
	return 0
}

func (x *AgentTeamDataItem) GetCoinWithdrawal() float64 {
	if x != nil {
		return x.CoinWithdrawal
	}
	return 0
}

func (x *AgentTeamDataItem) GetCoinWithdrawalReally() float64 {
	if x != nil {
		return x.CoinWithdrawalReally
	}
	return 0
}

func (x *AgentTeamDataItem) GetCoinAdjust() float64 {
	if x != nil {
		return x.CoinAdjust
	}
	return 0
}

func (x *AgentTeamDataItem) GetCoinBet() float64 {
	if x != nil {
		return x.CoinBet
	}
	return 0
}

func (x *AgentTeamDataItem) GetCoinBetBonus() float64 {
	if x != nil {
		return x.CoinBetBonus
	}
	return 0
}

func (x *AgentTeamDataItem) GetCoinProfit() float64 {
	if x != nil {
		return x.CoinProfit
	}
	return 0
}

func (x *AgentTeamDataItem) GetSupUsername() string {
	if x != nil {
		return x.SupUsername
	}
	return ""
}

func (x *AgentTeamDataItem) GetDepositSuccCnt() int64 {
	if x != nil {
		return x.DepositSuccCnt
	}
	return 0
}

func (x *AgentTeamDataItem) GetWithdrawSuccCnt() int64 {
	if x != nil {
		return x.WithdrawSuccCnt
	}
	return 0
}

func (x *AgentTeamDataItem) GetFirstDepositSuccAmt() float64 {
	if x != nil {
		return x.FirstDepositSuccAmt
	}
	return 0
}

type AgentBoardStaticReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartTime int64 `protobuf:"varint,1,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime   int64 `protobuf:"varint,2,opt,name=endTime,proto3" json:"endTime,omitempty"`
}

func (x *AgentBoardStaticReq) Reset() {
	*x = AgentBoardStaticReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentrpc_proto_msgTypes[135]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentBoardStaticReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentBoardStaticReq) ProtoMessage() {}

func (x *AgentBoardStaticReq) ProtoReflect() protoreflect.Message {
	mi := &file_agentrpc_proto_msgTypes[135]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentBoardStaticReq.ProtoReflect.Descriptor instead.
func (*AgentBoardStaticReq) Descriptor() ([]byte, []int) {
	return file_agentrpc_proto_rawDescGZIP(), []int{135}
}

func (x *AgentBoardStaticReq) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *AgentBoardStaticReq) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

type AgentBoardStaticResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32                 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string                `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *AgentBoardStaticData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *AgentBoardStaticResp) Reset() {
	*x = AgentBoardStaticResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentrpc_proto_msgTypes[136]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentBoardStaticResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentBoardStaticResp) ProtoMessage() {}

func (x *AgentBoardStaticResp) ProtoReflect() protoreflect.Message {
	mi := &file_agentrpc_proto_msgTypes[136]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentBoardStaticResp.ProtoReflect.Descriptor instead.
func (*AgentBoardStaticResp) Descriptor() ([]byte, []int) {
	return file_agentrpc_proto_rawDescGZIP(), []int{136}
}

func (x *AgentBoardStaticResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *AgentBoardStaticResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *AgentBoardStaticResp) GetData() *AgentBoardStaticData {
	if x != nil {
		return x.Data
	}
	return nil
}

type AgentBoardStaticData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rate      float64 `protobuf:"fixed64,1,opt,name=rate,proto3" json:"rate,omitempty"`           //比例
	Commssion float64 `protobuf:"fixed64,2,opt,name=commssion,proto3" json:"commssion,omitempty"` // 佣金
	Profit    float64 `protobuf:"fixed64,3,opt,name=profit,proto3" json:"profit,omitempty"`       //盈亏
}

func (x *AgentBoardStaticData) Reset() {
	*x = AgentBoardStaticData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentrpc_proto_msgTypes[137]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentBoardStaticData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentBoardStaticData) ProtoMessage() {}

func (x *AgentBoardStaticData) ProtoReflect() protoreflect.Message {
	mi := &file_agentrpc_proto_msgTypes[137]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentBoardStaticData.ProtoReflect.Descriptor instead.
func (*AgentBoardStaticData) Descriptor() ([]byte, []int) {
	return file_agentrpc_proto_rawDescGZIP(), []int{137}
}

func (x *AgentBoardStaticData) GetRate() float64 {
	if x != nil {
		return x.Rate
	}
	return 0
}

func (x *AgentBoardStaticData) GetCommssion() float64 {
	if x != nil {
		return x.Commssion
	}
	return 0
}

func (x *AgentBoardStaticData) GetProfit() float64 {
	if x != nil {
		return x.Profit
	}
	return 0
}

type SuperAgentListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current   int64                  `protobuf:"varint,1,opt,name=current,proto3" json:"current,omitempty"`
	Size      int64                  `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	SortKey   string                 `protobuf:"bytes,3,opt,name=sortKey,proto3" json:"sortKey,omitempty"`
	SortField []string               `protobuf:"bytes,4,rep,name=sortField,proto3" json:"sortField,omitempty"`
	Data      *SuperAgentListDataReq `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *SuperAgentListReq) Reset() {
	*x = SuperAgentListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentrpc_proto_msgTypes[138]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SuperAgentListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SuperAgentListReq) ProtoMessage() {}

func (x *SuperAgentListReq) ProtoReflect() protoreflect.Message {
	mi := &file_agentrpc_proto_msgTypes[138]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SuperAgentListReq.ProtoReflect.Descriptor instead.
func (*SuperAgentListReq) Descriptor() ([]byte, []int) {
	return file_agentrpc_proto_rawDescGZIP(), []int{138}
}

func (x *SuperAgentListReq) GetCurrent() int64 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *SuperAgentListReq) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *SuperAgentListReq) GetSortKey() string {
	if x != nil {
		return x.SortKey
	}
	return ""
}

func (x *SuperAgentListReq) GetSortField() []string {
	if x != nil {
		return x.SortField
	}
	return nil
}

func (x *SuperAgentListReq) GetData() *SuperAgentListDataReq {
	if x != nil {
		return x.Data
	}
	return nil
}

type SuperAgentListDataReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username  string   `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Mobile    string   `protobuf:"bytes,2,opt,name=mobile,proto3" json:"mobile,omitempty"`
	Email     string   `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	Status    []string `protobuf:"bytes,4,rep,name=status,proto3" json:"status,omitempty"`
	LevelTop  string   `protobuf:"bytes,5,opt,name=levelTop,proto3" json:"levelTop,omitempty"`
	StartTime int64    `protobuf:"varint,6,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime   int64    `protobuf:"varint,7,opt,name=endTime,proto3" json:"endTime,omitempty"`
}

func (x *SuperAgentListDataReq) Reset() {
	*x = SuperAgentListDataReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentrpc_proto_msgTypes[139]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SuperAgentListDataReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SuperAgentListDataReq) ProtoMessage() {}

func (x *SuperAgentListDataReq) ProtoReflect() protoreflect.Message {
	mi := &file_agentrpc_proto_msgTypes[139]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SuperAgentListDataReq.ProtoReflect.Descriptor instead.
func (*SuperAgentListDataReq) Descriptor() ([]byte, []int) {
	return file_agentrpc_proto_rawDescGZIP(), []int{139}
}

func (x *SuperAgentListDataReq) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *SuperAgentListDataReq) GetMobile() string {
	if x != nil {
		return x.Mobile
	}
	return ""
}

func (x *SuperAgentListDataReq) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *SuperAgentListDataReq) GetStatus() []string {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *SuperAgentListDataReq) GetLevelTop() string {
	if x != nil {
		return x.LevelTop
	}
	return ""
}

func (x *SuperAgentListDataReq) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *SuperAgentListDataReq) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

type SuperAgentListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32                   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string                  `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *SuperAgentListDataResp `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *SuperAgentListResp) Reset() {
	*x = SuperAgentListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentrpc_proto_msgTypes[140]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SuperAgentListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SuperAgentListResp) ProtoMessage() {}

func (x *SuperAgentListResp) ProtoReflect() protoreflect.Message {
	mi := &file_agentrpc_proto_msgTypes[140]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SuperAgentListResp.ProtoReflect.Descriptor instead.
func (*SuperAgentListResp) Descriptor() ([]byte, []int) {
	return file_agentrpc_proto_rawDescGZIP(), []int{140}
}

func (x *SuperAgentListResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *SuperAgentListResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *SuperAgentListResp) GetData() *SuperAgentListDataResp {
	if x != nil {
		return x.Data
	}
	return nil
}

type SuperAgentListDataResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current string                    `protobuf:"bytes,1,opt,name=current,proto3" json:"current,omitempty"`
	Size    string                    `protobuf:"bytes,2,opt,name=size,proto3" json:"size,omitempty"`
	Total   string                    `protobuf:"bytes,3,opt,name=total,proto3" json:"total,omitempty"`
	Pages   string                    `protobuf:"bytes,4,opt,name=pages,proto3" json:"pages,omitempty"`
	List    []*SuperAgentListDataItem `protobuf:"bytes,5,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *SuperAgentListDataResp) Reset() {
	*x = SuperAgentListDataResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentrpc_proto_msgTypes[141]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SuperAgentListDataResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SuperAgentListDataResp) ProtoMessage() {}

func (x *SuperAgentListDataResp) ProtoReflect() protoreflect.Message {
	mi := &file_agentrpc_proto_msgTypes[141]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SuperAgentListDataResp.ProtoReflect.Descriptor instead.
func (*SuperAgentListDataResp) Descriptor() ([]byte, []int) {
	return file_agentrpc_proto_rawDescGZIP(), []int{141}
}

func (x *SuperAgentListDataResp) GetCurrent() string {
	if x != nil {
		return x.Current
	}
	return ""
}

func (x *SuperAgentListDataResp) GetSize() string {
	if x != nil {
		return x.Size
	}
	return ""
}

func (x *SuperAgentListDataResp) GetTotal() string {
	if x != nil {
		return x.Total
	}
	return ""
}

func (x *SuperAgentListDataResp) GetPages() string {
	if x != nil {
		return x.Pages
	}
	return ""
}

func (x *SuperAgentListDataResp) GetList() []*SuperAgentListDataItem {
	if x != nil {
		return x.List
	}
	return nil
}

type SuperAgentListDataItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Username         string `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	Mobile           string `protobuf:"bytes,3,opt,name=mobile,proto3" json:"mobile,omitempty"`
	Email            string `protobuf:"bytes,4,opt,name=email,proto3" json:"email,omitempty"`
	Status           int64  `protobuf:"varint,5,opt,name=status,proto3" json:"status,omitempty"`
	PromoCode        string `protobuf:"bytes,6,opt,name=promoCode,proto3" json:"promoCode,omitempty"`
	SupLevelTopCname string `protobuf:"bytes,7,opt,name=supLevelTopCname,proto3" json:"supLevelTopCname,omitempty"`
	UpdatedAt        int64  `protobuf:"varint,8,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	OperatorName     string `protobuf:"bytes,9,opt,name=operatorName,proto3" json:"operatorName,omitempty"`
	CreatedAt        int64  `protobuf:"varint,10,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	FreezeAt         int64  `protobuf:"varint,11,opt,name=freezeAt,proto3" json:"freezeAt,omitempty"`
	FreezeCause      string `protobuf:"bytes,12,opt,name=freezeCause,proto3" json:"freezeCause,omitempty"`
	Secret           string `protobuf:"bytes,13,opt,name=Secret,proto3" json:"Secret,omitempty"`
	CodeUrl          string `protobuf:"bytes,14,opt,name=CodeUrl,proto3" json:"CodeUrl,omitempty"`
	CodeStatus       int64  `protobuf:"varint,15,opt,name=CodeStatus,proto3" json:"CodeStatus,omitempty"`
}

func (x *SuperAgentListDataItem) Reset() {
	*x = SuperAgentListDataItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentrpc_proto_msgTypes[142]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SuperAgentListDataItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SuperAgentListDataItem) ProtoMessage() {}

func (x *SuperAgentListDataItem) ProtoReflect() protoreflect.Message {
	mi := &file_agentrpc_proto_msgTypes[142]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SuperAgentListDataItem.ProtoReflect.Descriptor instead.
func (*SuperAgentListDataItem) Descriptor() ([]byte, []int) {
	return file_agentrpc_proto_rawDescGZIP(), []int{142}
}

func (x *SuperAgentListDataItem) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SuperAgentListDataItem) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *SuperAgentListDataItem) GetMobile() string {
	if x != nil {
		return x.Mobile
	}
	return ""
}

func (x *SuperAgentListDataItem) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *SuperAgentListDataItem) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *SuperAgentListDataItem) GetPromoCode() string {
	if x != nil {
		return x.PromoCode
	}
	return ""
}

func (x *SuperAgentListDataItem) GetSupLevelTopCname() string {
	if x != nil {
		return x.SupLevelTopCname
	}
	return ""
}

func (x *SuperAgentListDataItem) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *SuperAgentListDataItem) GetOperatorName() string {
	if x != nil {
		return x.OperatorName
	}
	return ""
}

func (x *SuperAgentListDataItem) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *SuperAgentListDataItem) GetFreezeAt() int64 {
	if x != nil {
		return x.FreezeAt
	}
	return 0
}

func (x *SuperAgentListDataItem) GetFreezeCause() string {
	if x != nil {
		return x.FreezeCause
	}
	return ""
}

func (x *SuperAgentListDataItem) GetSecret() string {
	if x != nil {
		return x.Secret
	}
	return ""
}

func (x *SuperAgentListDataItem) GetCodeUrl() string {
	if x != nil {
		return x.CodeUrl
	}
	return ""
}

func (x *SuperAgentListDataItem) GetCodeStatus() int64 {
	if x != nil {
		return x.CodeStatus
	}
	return 0
}

type AgentNextUserListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current   int64                     `protobuf:"varint,1,opt,name=current,proto3" json:"current,omitempty"`
	Size      int64                     `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	SortKey   string                    `protobuf:"bytes,3,opt,name=sortKey,proto3" json:"sortKey,omitempty"`
	SortField []string                  `protobuf:"bytes,4,rep,name=sortField,proto3" json:"sortField,omitempty"`
	Data      *AgentNextUserListDataReq `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *AgentNextUserListReq) Reset() {
	*x = AgentNextUserListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentrpc_proto_msgTypes[143]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentNextUserListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentNextUserListReq) ProtoMessage() {}

func (x *AgentNextUserListReq) ProtoReflect() protoreflect.Message {
	mi := &file_agentrpc_proto_msgTypes[143]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentNextUserListReq.ProtoReflect.Descriptor instead.
func (*AgentNextUserListReq) Descriptor() ([]byte, []int) {
	return file_agentrpc_proto_rawDescGZIP(), []int{143}
}

func (x *AgentNextUserListReq) GetCurrent() int64 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *AgentNextUserListReq) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *AgentNextUserListReq) GetSortKey() string {
	if x != nil {
		return x.SortKey
	}
	return ""
}

func (x *AgentNextUserListReq) GetSortField() []string {
	if x != nil {
		return x.SortField
	}
	return nil
}

func (x *AgentNextUserListReq) GetData() *AgentNextUserListDataReq {
	if x != nil {
		return x.Data
	}
	return nil
}

type AgentNextUserListDataReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                 int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Username           string `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	SupUsername1       string `protobuf:"bytes,3,opt,name=supUsername1,proto3" json:"supUsername1,omitempty"`
	SupAgentName       string `protobuf:"bytes,4,opt,name=supAgentName,proto3" json:"supAgentName,omitempty"`
	Mobile             string `protobuf:"bytes,5,opt,name=mobile,proto3" json:"mobile,omitempty"`
	Email              string `protobuf:"bytes,6,opt,name=email,proto3" json:"email,omitempty"`
	RegisterIp         string `protobuf:"bytes,7,opt,name=registerIp,proto3" json:"registerIp,omitempty"`
	LastLoginIp        string `protobuf:"bytes,8,opt,name=lastLoginIp,proto3" json:"lastLoginIp,omitempty"`
	LevelId            int64  `protobuf:"varint,9,opt,name=levelId,proto3" json:"levelId,omitempty"`
	FlagId             int64  `protobuf:"varint,10,opt,name=flagId,proto3" json:"flagId,omitempty"`
	AgentNameTop       string `protobuf:"bytes,11,opt,name=agentNameTop,proto3" json:"agentNameTop,omitempty"` //一级代理名称
	MemberType         int64  `protobuf:"varint,12,opt,name=memberType,proto3" json:"memberType,omitempty"`
	MemberDeposit      int64  `protobuf:"varint,13,opt,name=memberDeposit,proto3" json:"memberDeposit,omitempty"` //会员区分
	Status             int64  `protobuf:"varint,14,opt,name=status,proto3" json:"status,omitempty"`
	StartTime          int64  `protobuf:"varint,15,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime            int64  `protobuf:"varint,16,opt,name=endTime,proto3" json:"endTime,omitempty"`
	LastLoginStartTime int64  `protobuf:"varint,17,opt,name=lastLoginStartTime,proto3" json:"lastLoginStartTime,omitempty"`
	LastLoginEndTime   int64  `protobuf:"varint,18,opt,name=lastLoginEndTime,proto3" json:"lastLoginEndTime,omitempty"`
}

func (x *AgentNextUserListDataReq) Reset() {
	*x = AgentNextUserListDataReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentrpc_proto_msgTypes[144]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentNextUserListDataReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentNextUserListDataReq) ProtoMessage() {}

func (x *AgentNextUserListDataReq) ProtoReflect() protoreflect.Message {
	mi := &file_agentrpc_proto_msgTypes[144]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentNextUserListDataReq.ProtoReflect.Descriptor instead.
func (*AgentNextUserListDataReq) Descriptor() ([]byte, []int) {
	return file_agentrpc_proto_rawDescGZIP(), []int{144}
}

func (x *AgentNextUserListDataReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AgentNextUserListDataReq) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *AgentNextUserListDataReq) GetSupUsername1() string {
	if x != nil {
		return x.SupUsername1
	}
	return ""
}

func (x *AgentNextUserListDataReq) GetSupAgentName() string {
	if x != nil {
		return x.SupAgentName
	}
	return ""
}

func (x *AgentNextUserListDataReq) GetMobile() string {
	if x != nil {
		return x.Mobile
	}
	return ""
}

func (x *AgentNextUserListDataReq) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *AgentNextUserListDataReq) GetRegisterIp() string {
	if x != nil {
		return x.RegisterIp
	}
	return ""
}

func (x *AgentNextUserListDataReq) GetLastLoginIp() string {
	if x != nil {
		return x.LastLoginIp
	}
	return ""
}

func (x *AgentNextUserListDataReq) GetLevelId() int64 {
	if x != nil {
		return x.LevelId
	}
	return 0
}

func (x *AgentNextUserListDataReq) GetFlagId() int64 {
	if x != nil {
		return x.FlagId
	}
	return 0
}

func (x *AgentNextUserListDataReq) GetAgentNameTop() string {
	if x != nil {
		return x.AgentNameTop
	}
	return ""
}

func (x *AgentNextUserListDataReq) GetMemberType() int64 {
	if x != nil {
		return x.MemberType
	}
	return 0
}

func (x *AgentNextUserListDataReq) GetMemberDeposit() int64 {
	if x != nil {
		return x.MemberDeposit
	}
	return 0
}

func (x *AgentNextUserListDataReq) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *AgentNextUserListDataReq) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *AgentNextUserListDataReq) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *AgentNextUserListDataReq) GetLastLoginStartTime() int64 {
	if x != nil {
		return x.LastLoginStartTime
	}
	return 0
}

func (x *AgentNextUserListDataReq) GetLastLoginEndTime() int64 {
	if x != nil {
		return x.LastLoginEndTime
	}
	return 0
}

type AgentNextUserListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32                      `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string                     `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *AgentNextUserListDataResp `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *AgentNextUserListResp) Reset() {
	*x = AgentNextUserListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentrpc_proto_msgTypes[145]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentNextUserListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentNextUserListResp) ProtoMessage() {}

func (x *AgentNextUserListResp) ProtoReflect() protoreflect.Message {
	mi := &file_agentrpc_proto_msgTypes[145]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentNextUserListResp.ProtoReflect.Descriptor instead.
func (*AgentNextUserListResp) Descriptor() ([]byte, []int) {
	return file_agentrpc_proto_rawDescGZIP(), []int{145}
}

func (x *AgentNextUserListResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *AgentNextUserListResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *AgentNextUserListResp) GetData() *AgentNextUserListDataResp {
	if x != nil {
		return x.Data
	}
	return nil
}

type AgentNextUserListDataResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current               int64                        `protobuf:"varint,1,opt,name=current,proto3" json:"current,omitempty"`
	Size                  int64                        `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	Total                 int64                        `protobuf:"varint,3,opt,name=total,proto3" json:"total,omitempty"`
	Pages                 int64                        `protobuf:"varint,4,opt,name=pages,proto3" json:"pages,omitempty"`
	MembersCount          int64                        `protobuf:"varint,5,opt,name=membersCount,proto3" json:"membersCount,omitempty"`
	DepositMembersCount   int64                        `protobuf:"varint,6,opt,name=depositMembersCount,proto3" json:"depositMembersCount,omitempty"`
	DepositAmountTotal    float64                      `protobuf:"fixed64,7,opt,name=depositAmountTotal,proto3" json:"depositAmountTotal,omitempty"`
	WithdrawalAmountTotal float64                      `protobuf:"fixed64,8,opt,name=withdrawalAmountTotal,proto3" json:"withdrawalAmountTotal,omitempty"`
	SubAmountTotal        float64                      `protobuf:"fixed64,9,opt,name=subAmountTotal,proto3" json:"subAmountTotal,omitempty"`
	BetAmountTotal        float64                      `protobuf:"fixed64,10,opt,name=betAmountTotal,proto3" json:"betAmountTotal,omitempty"`
	PlAmountTotal         float64                      `protobuf:"fixed64,11,opt,name=plAmountTotal,proto3" json:"plAmountTotal,omitempty"`
	List                  []*AgentNextUserListDataItem `protobuf:"bytes,12,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *AgentNextUserListDataResp) Reset() {
	*x = AgentNextUserListDataResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentrpc_proto_msgTypes[146]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentNextUserListDataResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentNextUserListDataResp) ProtoMessage() {}

func (x *AgentNextUserListDataResp) ProtoReflect() protoreflect.Message {
	mi := &file_agentrpc_proto_msgTypes[146]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentNextUserListDataResp.ProtoReflect.Descriptor instead.
func (*AgentNextUserListDataResp) Descriptor() ([]byte, []int) {
	return file_agentrpc_proto_rawDescGZIP(), []int{146}
}

func (x *AgentNextUserListDataResp) GetCurrent() int64 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *AgentNextUserListDataResp) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *AgentNextUserListDataResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *AgentNextUserListDataResp) GetPages() int64 {
	if x != nil {
		return x.Pages
	}
	return 0
}

func (x *AgentNextUserListDataResp) GetMembersCount() int64 {
	if x != nil {
		return x.MembersCount
	}
	return 0
}

func (x *AgentNextUserListDataResp) GetDepositMembersCount() int64 {
	if x != nil {
		return x.DepositMembersCount
	}
	return 0
}

func (x *AgentNextUserListDataResp) GetDepositAmountTotal() float64 {
	if x != nil {
		return x.DepositAmountTotal
	}
	return 0
}

func (x *AgentNextUserListDataResp) GetWithdrawalAmountTotal() float64 {
	if x != nil {
		return x.WithdrawalAmountTotal
	}
	return 0
}

func (x *AgentNextUserListDataResp) GetSubAmountTotal() float64 {
	if x != nil {
		return x.SubAmountTotal
	}
	return 0
}

func (x *AgentNextUserListDataResp) GetBetAmountTotal() float64 {
	if x != nil {
		return x.BetAmountTotal
	}
	return 0
}

func (x *AgentNextUserListDataResp) GetPlAmountTotal() float64 {
	if x != nil {
		return x.PlAmountTotal
	}
	return 0
}

func (x *AgentNextUserListDataResp) GetList() []*AgentNextUserListDataItem {
	if x != nil {
		return x.List
	}
	return nil
}

type AgentNextUserListDataItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               int64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Username         string  `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	CreatedAt        int64   `protobuf:"varint,3,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	LastLoginTime    int64   `protobuf:"varint,4,opt,name=lastLoginTime,proto3" json:"lastLoginTime,omitempty"`
	AgentName        string  `protobuf:"bytes,5,opt,name=agentName,proto3" json:"agentName,omitempty"`                  //一级代理
	AgentNameTop     string  `protobuf:"bytes,6,opt,name=agentNameTop,proto3" json:"agentNameTop,omitempty"`            // 顶级代理
	LevelText        string  `protobuf:"bytes,7,opt,name=levelText,proto3" json:"levelText,omitempty"`                  //VIP等级
	DepositCount     int64   `protobuf:"varint,8,opt,name=depositCount,proto3" json:"depositCount,omitempty"`           //累计存款次数
	DepositAmount    float64 `protobuf:"fixed64,9,opt,name=depositAmount,proto3" json:"depositAmount,omitempty"`        //累计存款金额
	BetAmountTotal   float64 `protobuf:"fixed64,10,opt,name=betAmountTotal,proto3" json:"betAmountTotal,omitempty"`     //累计投注金额
	PlAmountTotal    float64 `protobuf:"fixed64,11,opt,name=plAmountTotal,proto3" json:"plAmountTotal,omitempty"`       //累计输赢
	WithdrawalCount  int64   `protobuf:"varint,12,opt,name=withdrawalCount,proto3" json:"withdrawalCount,omitempty"`    //累计取款次数
	WithdrawalAmount float64 `protobuf:"fixed64,13,opt,name=withdrawalAmount,proto3" json:"withdrawalAmount,omitempty"` //累计取款金额
	SubAmount        float64 `protobuf:"fixed64,14,opt,name=subAmount,proto3" json:"subAmount,omitempty"`               //累计存提差
	MemberTypeName   string  `protobuf:"bytes,15,opt,name=memberTypeName,proto3" json:"memberTypeName,omitempty"`       //会员类型
	Mobile           string  `protobuf:"bytes,16,opt,name=mobile,proto3" json:"mobile,omitempty"`                       //手机号
	Email            string  `protobuf:"bytes,17,opt,name=email,proto3" json:"email,omitempty"`                         //
	Status           int64   `protobuf:"varint,18,opt,name=status,proto3" json:"status,omitempty"`
	CoinCommission   string  `protobuf:"bytes,19,opt,name=coinCommission,proto3" json:"coinCommission,omitempty"` //佣金可提现金额
	UpdatedAt        int64   `protobuf:"varint,20,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	Coin             float64 `protobuf:"fixed64,21,opt,name=coin,proto3" json:"coin,omitempty"` //可用余额
}

func (x *AgentNextUserListDataItem) Reset() {
	*x = AgentNextUserListDataItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentrpc_proto_msgTypes[147]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentNextUserListDataItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentNextUserListDataItem) ProtoMessage() {}

func (x *AgentNextUserListDataItem) ProtoReflect() protoreflect.Message {
	mi := &file_agentrpc_proto_msgTypes[147]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentNextUserListDataItem.ProtoReflect.Descriptor instead.
func (*AgentNextUserListDataItem) Descriptor() ([]byte, []int) {
	return file_agentrpc_proto_rawDescGZIP(), []int{147}
}

func (x *AgentNextUserListDataItem) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AgentNextUserListDataItem) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *AgentNextUserListDataItem) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *AgentNextUserListDataItem) GetLastLoginTime() int64 {
	if x != nil {
		return x.LastLoginTime
	}
	return 0
}

func (x *AgentNextUserListDataItem) GetAgentName() string {
	if x != nil {
		return x.AgentName
	}
	return ""
}

func (x *AgentNextUserListDataItem) GetAgentNameTop() string {
	if x != nil {
		return x.AgentNameTop
	}
	return ""
}

func (x *AgentNextUserListDataItem) GetLevelText() string {
	if x != nil {
		return x.LevelText
	}
	return ""
}

func (x *AgentNextUserListDataItem) GetDepositCount() int64 {
	if x != nil {
		return x.DepositCount
	}
	return 0
}

func (x *AgentNextUserListDataItem) GetDepositAmount() float64 {
	if x != nil {
		return x.DepositAmount
	}
	return 0
}

func (x *AgentNextUserListDataItem) GetBetAmountTotal() float64 {
	if x != nil {
		return x.BetAmountTotal
	}
	return 0
}

func (x *AgentNextUserListDataItem) GetPlAmountTotal() float64 {
	if x != nil {
		return x.PlAmountTotal
	}
	return 0
}

func (x *AgentNextUserListDataItem) GetWithdrawalCount() int64 {
	if x != nil {
		return x.WithdrawalCount
	}
	return 0
}

func (x *AgentNextUserListDataItem) GetWithdrawalAmount() float64 {
	if x != nil {
		return x.WithdrawalAmount
	}
	return 0
}

func (x *AgentNextUserListDataItem) GetSubAmount() float64 {
	if x != nil {
		return x.SubAmount
	}
	return 0
}

func (x *AgentNextUserListDataItem) GetMemberTypeName() string {
	if x != nil {
		return x.MemberTypeName
	}
	return ""
}

func (x *AgentNextUserListDataItem) GetMobile() string {
	if x != nil {
		return x.Mobile
	}
	return ""
}

func (x *AgentNextUserListDataItem) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *AgentNextUserListDataItem) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *AgentNextUserListDataItem) GetCoinCommission() string {
	if x != nil {
		return x.CoinCommission
	}
	return ""
}

func (x *AgentNextUserListDataItem) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *AgentNextUserListDataItem) GetCoin() float64 {
	if x != nil {
		return x.Coin
	}
	return 0
}

var File_agentrpc_proto protoreflect.FileDescriptor

var file_agentrpc_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x08, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x72, 0x70, 0x63, 0x22, 0x5b, 0x0a, 0x13, 0x61, 0x67,
	0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52,
	0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x78, 0x70,
	0x69, 0x72, 0x65, 0x64, 0x41, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x78,
	0x70, 0x69, 0x72, 0x65, 0x64, 0x41, 0x74, 0x22, 0x99, 0x0b, 0x0a, 0x0f, 0x41, 0x67, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x61,
	0x67, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x61, 0x67, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x1c, 0x0a,
	0x09, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x41, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x41, 0x74, 0x12, 0x2c, 0x0a, 0x11, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x4c, 0x6f, 0x77, 0x65, 0x72, 0x41, 0x67, 0x65, 0x6e, 0x74,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x4c,
	0x6f, 0x77, 0x65, 0x72, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x12, 0x2a, 0x0a, 0x10, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x74, 0x4c, 0x6f, 0x77, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x10, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x4c, 0x6f, 0x77, 0x65,
	0x72, 0x55, 0x73, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6d,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x52, 0x61, 0x74, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x52, 0x61, 0x74, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x6c, 0x6f, 0x77,
	0x65, 0x72, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x61, 0x6c, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x41, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x52, 0x65, 0x61, 0x6c, 0x12, 0x2c, 0x0a, 0x12, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x5f, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x10, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x70,
	0x6f, 0x72, 0x74, 0x12, 0x2a, 0x0a, 0x11, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x5f, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x5f, 0x73, 0x6c, 0x6f, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
	0x6c, 0x6f, 0x77, 0x65, 0x72, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x6c, 0x6f, 0x74, 0x12,
	0x30, 0x0a, 0x14, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x5f,
	0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x6c,
	0x6f, 0x77, 0x65, 0x72, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e,
	0x65, 0x12, 0x28, 0x0a, 0x10, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x5f, 0x72, 0x65, 0x61, 0x6c, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x75, 0x73, 0x65,
	0x72, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x61, 0x6c, 0x12, 0x2a, 0x0a, 0x11, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x73, 0x70, 0x6f, 0x72, 0x74,
	0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x75, 0x73, 0x65, 0x72, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x53, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x73, 0x6c, 0x6f, 0x74, 0x18, 0x11, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x75, 0x73, 0x65, 0x72, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x6c, 0x6f,
	0x74, 0x12, 0x2e, 0x0a, 0x13, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x5f, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11,
	0x75, 0x73, 0x65, 0x72, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e,
	0x65, 0x12, 0x2f, 0x0a, 0x14, 0x70, 0x6c, 0x5f, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x5f, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x61, 0x6c, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x11, 0x70, 0x6c, 0x4c, 0x6f, 0x77, 0x65, 0x72, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65,
	0x61, 0x6c, 0x12, 0x31, 0x0a, 0x15, 0x70, 0x6c, 0x5f, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x5f, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x14, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x12, 0x70, 0x6c, 0x4c, 0x6f, 0x77, 0x65, 0x72, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x53, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x2f, 0x0a, 0x14, 0x70, 0x6c, 0x5f, 0x6c, 0x6f, 0x77, 0x65,
	0x72, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x73, 0x6c, 0x6f, 0x74, 0x18, 0x15, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x11, 0x70, 0x6c, 0x4c, 0x6f, 0x77, 0x65, 0x72, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x53, 0x6c, 0x6f, 0x74, 0x12, 0x35, 0x0a, 0x17, 0x70, 0x6c, 0x5f, 0x6c, 0x6f, 0x77,
	0x65, 0x72, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e,
	0x65, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x70, 0x6c, 0x4c, 0x6f, 0x77, 0x65, 0x72,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x12, 0x2d, 0x0a,
	0x13, 0x70, 0x6c, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x5f,
	0x72, 0x65, 0x61, 0x6c, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x70, 0x6c, 0x55, 0x73,
	0x65, 0x72, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x61, 0x6c, 0x12, 0x2f, 0x0a, 0x14,
	0x70, 0x6c, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x73,
	0x70, 0x6f, 0x72, 0x74, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x70, 0x6c, 0x55, 0x73,
	0x65, 0x72, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x2d, 0x0a,
	0x13, 0x70, 0x6c, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x5f,
	0x73, 0x6c, 0x6f, 0x74, 0x18, 0x19, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x70, 0x6c, 0x55, 0x73,
	0x65, 0x72, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x6c, 0x6f, 0x74, 0x12, 0x33, 0x0a, 0x16,
	0x70, 0x6c, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6d,
	0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x70, 0x6c,
	0x55, 0x73, 0x65, 0x72, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e,
	0x65, 0x12, 0x22, 0x0a, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x44, 0x65,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x57, 0x69,
	0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x12, 0x1e, 0x0a, 0x0a, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x63,
	0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x61, 0x74, 0x65, 0x18, 0x1e, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52,
	0x61, 0x74, 0x65, 0x12, 0x2c, 0x0a, 0x12, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x5f,
	0x72, 0x61, 0x74, 0x65, 0x5f, 0x72, 0x65, 0x61, 0x6c, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x10, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x61, 0x74, 0x65, 0x52, 0x65, 0x61,
	0x6c, 0x12, 0x2e, 0x0a, 0x13, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x5f, 0x72, 0x61,
	0x74, 0x65, 0x5f, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x20, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11,
	0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x61, 0x74, 0x65, 0x53, 0x70, 0x6f, 0x72,
	0x74, 0x12, 0x2c, 0x0a, 0x12, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x5f, 0x72, 0x61,
	0x74, 0x65, 0x5f, 0x73, 0x6c, 0x6f, 0x74, 0x18, 0x21, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x70,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x61, 0x74, 0x65, 0x53, 0x6c, 0x6f, 0x74, 0x12,
	0x32, 0x0a, 0x15, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x5f, 0x72, 0x61, 0x74, 0x65,
	0x5f, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x18, 0x22, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13,
	0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x63, 0x68,
	0x69, 0x6e, 0x65, 0x22, 0xc4, 0x02, 0x0a, 0x14, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x26, 0x0a, 0x0e,
	0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x61, 0x74, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x52, 0x61, 0x74, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x0f, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x43, 0x6f, 0x6d,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x6c,
	0x6f, 0x77, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1a,
	0x0a, 0x08, 0x70, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x70, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2c, 0x0a, 0x12, 0x70, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x5f, 0x66, 0x65, 0x65, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x46, 0x65, 0x65, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x12, 0x1c, 0x0a, 0x09,
	0x61, 0x67, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x28, 0x0a, 0x0c, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x22, 0x88, 0x02, 0x0a, 0x0c, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x48, 0x61, 0x73,
	0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x48, 0x61, 0x73, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x12, 0x24, 0x0a,
	0x0d, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x43, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x70,
	0x72, 0x6f, 0x6d, 0x6f, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x6f, 0x6d,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x61, 0x74,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x41, 0x74, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x41, 0x74, 0x22,
	0x48, 0x0a, 0x0c, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x71, 0x0a, 0x14, 0x41, 0x67, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x52, 0x65,
	0x73, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x33, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x72, 0x70, 0x63,
	0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x50, 0x72, 0x6f, 0x66,
	0x69, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x91, 0x02, 0x0a,
	0x17, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x69,
	0x73, 0x74, 0x69, 0x63, 0x73, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x55, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x55, 0x69, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x41, 0x64,
	0x6d, 0x69, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x2a, 0x0a, 0x10, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x66, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x43, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07,
	0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x45,
	0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x22, 0x2b, 0x0a, 0x15, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x53, 0x74, 0x61, 0x74, 0x69,
	0x73, 0x74, 0x69, 0x63, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x6f, 0x69,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x43, 0x6f, 0x69, 0x6e, 0x22, 0x9d, 0x01,
	0x0a, 0x09, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73,
	0x67, 0x12, 0x31, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1d, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x52, 0x65, 0x73, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x1a, 0x37, 0x0a, 0x09, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x69, 0x0a,
	0x10, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x6e, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x2f, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x72, 0x70, 0x63,
	0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x6e, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x8e, 0x0f, 0x0a, 0x15, 0x41, 0x67, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x49, 0x74,
	0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a,
	0x0a, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b,
	0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x41, 0x74, 0x12, 0x1f, 0x0a,
	0x0b, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x26,
	0x0a, 0x0f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x5f, 0x6f, 0x6e,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x4c, 0x65,
	0x76, 0x65, 0x6c, 0x4f, 0x6e, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f,
	0x6c, 0x65, 0x76, 0x65, 0x6c, 0x5f, 0x74, 0x77, 0x6f, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x54, 0x77, 0x6f, 0x12, 0x1f,
	0x0a, 0x0b, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12,
	0x28, 0x0a, 0x10, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x61, 0x67, 0x65, 0x6e, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x35, 0x0a, 0x17, 0x61, 0x67, 0x65,
	0x6e, 0x74, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x61, 0x67, 0x65, 0x6e,
	0x74, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x55, 0x73, 0x65, 0x72, 0x54, 0x6f, 0x74, 0x61, 0x6c,
	0x12, 0x25, 0x0a, 0x0e, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x5f, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2b, 0x0a, 0x11, 0x77, 0x69, 0x74, 0x68, 0x64,
	0x72, 0x61, 0x77, 0x61, 0x6c, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x10, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x61, 0x6c, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x30, 0x0a, 0x14, 0x64, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x64, 0x65,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x12, 0x64, 0x75, 0x73, 0x65, 0x72, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x36, 0x0a, 0x17, 0x64, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x61, 0x6c, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x64, 0x75, 0x73, 0x65, 0x72, 0x57, 0x69,
	0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x26,
	0x0a, 0x0f, 0x62, 0x65, 0x74, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x61,
	0x6c, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x62, 0x65, 0x74, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x52, 0x65, 0x61, 0x6c, 0x12, 0x28, 0x0a, 0x10, 0x62, 0x65, 0x74, 0x5f, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x62, 0x65, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x70, 0x6f, 0x72, 0x74,
	0x12, 0x26, 0x0a, 0x0f, 0x62, 0x65, 0x74, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x73,
	0x6c, 0x6f, 0x74, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x62, 0x65, 0x74, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x53, 0x6c, 0x6f, 0x74, 0x12, 0x2c, 0x0a, 0x12, 0x62, 0x65, 0x74, 0x5f,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x18, 0x12,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x62, 0x65, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x4d,
	0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x70, 0x6c, 0x5f, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x61, 0x6c, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x70, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x61, 0x6c, 0x12, 0x26, 0x0a, 0x0f,
	0x70, 0x6c, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x18,
	0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x53,
	0x70, 0x6f, 0x72, 0x74, 0x12, 0x24, 0x0a, 0x0e, 0x70, 0x6c, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x5f, 0x73, 0x6c, 0x6f, 0x74, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x6c,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x6c, 0x6f, 0x74, 0x12, 0x2a, 0x0a, 0x11, 0x70, 0x6c,
	0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x18,
	0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x70, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x4d,
	0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x12, 0x31, 0x0a, 0x15, 0x64, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x62, 0x65, 0x74, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x61, 0x6c, 0x18,
	0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x64, 0x75, 0x73, 0x65, 0x72, 0x42, 0x65, 0x74, 0x41,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x61, 0x6c, 0x12, 0x33, 0x0a, 0x16, 0x64, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x62, 0x65, 0x74, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x73, 0x70,
	0x6f, 0x72, 0x74, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x64, 0x75, 0x73, 0x65, 0x72,
	0x42, 0x65, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x31,
	0x0a, 0x15, 0x64, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x62, 0x65, 0x74, 0x5f, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x5f, 0x73, 0x6c, 0x6f, 0x74, 0x18, 0x19, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x64,
	0x75, 0x73, 0x65, 0x72, 0x42, 0x65, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x6c, 0x6f,
	0x74, 0x12, 0x37, 0x0a, 0x18, 0x64, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x62, 0x65, 0x74, 0x5f, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x18, 0x1a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x15, 0x64, 0x75, 0x73, 0x65, 0x72, 0x42, 0x65, 0x74, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x12, 0x2f, 0x0a, 0x14, 0x64, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x70, 0x6c, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x72, 0x65,
	0x61, 0x6c, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x64, 0x75, 0x73, 0x65, 0x72, 0x50,
	0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x61, 0x6c, 0x12, 0x31, 0x0a, 0x15, 0x64,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x70, 0x6c, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x73,
	0x70, 0x6f, 0x72, 0x74, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x64, 0x75, 0x73, 0x65,
	0x72, 0x50, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x2f,
	0x0a, 0x14, 0x64, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x70, 0x6c, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x5f, 0x73, 0x6c, 0x6f, 0x74, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x64, 0x75,
	0x73, 0x65, 0x72, 0x50, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x6c, 0x6f, 0x74, 0x12,
	0x35, 0x0a, 0x17, 0x64, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x70, 0x6c, 0x5f, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x5f, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x14, 0x64, 0x75, 0x73, 0x65, 0x72, 0x50, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x4d,
	0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x5f, 0x66, 0x65, 0x65, 0x5f, 0x72, 0x65, 0x61, 0x6c, 0x18, 0x1f, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x46, 0x65, 0x65, 0x52, 0x65,
	0x61, 0x6c, 0x12, 0x2c, 0x0a, 0x12, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x5f, 0x66,
	0x65, 0x65, 0x5f, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x20, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10,
	0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x46, 0x65, 0x65, 0x53, 0x70, 0x6f, 0x72, 0x74,
	0x12, 0x2a, 0x0a, 0x11, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x5f, 0x66, 0x65, 0x65,
	0x5f, 0x73, 0x6c, 0x6f, 0x74, 0x18, 0x21, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x70, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x46, 0x65, 0x65, 0x53, 0x6c, 0x6f, 0x74, 0x12, 0x30, 0x0a, 0x14,
	0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x5f, 0x66, 0x65, 0x65, 0x5f, 0x6d, 0x61, 0x63,
	0x68, 0x69, 0x6e, 0x65, 0x18, 0x22, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x70, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x46, 0x65, 0x65, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x12, 0x35,
	0x0a, 0x17, 0x64, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x5f, 0x66, 0x65, 0x65, 0x5f, 0x72, 0x65, 0x61, 0x6c, 0x18, 0x23, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x14, 0x64, 0x75, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x46, 0x65,
	0x65, 0x52, 0x65, 0x61, 0x6c, 0x12, 0x37, 0x0a, 0x18, 0x64, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x70,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x5f, 0x66, 0x65, 0x65, 0x5f, 0x73, 0x70, 0x6f, 0x72,
	0x74, 0x18, 0x24, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x64, 0x75, 0x73, 0x65, 0x72, 0x50, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x46, 0x65, 0x65, 0x53, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x35,
	0x0a, 0x17, 0x64, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x5f, 0x66, 0x65, 0x65, 0x5f, 0x73, 0x6c, 0x6f, 0x74, 0x18, 0x25, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x14, 0x64, 0x75, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x46, 0x65,
	0x65, 0x53, 0x6c, 0x6f, 0x74, 0x12, 0x3b, 0x0a, 0x1a, 0x64, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x70,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x5f, 0x66, 0x65, 0x65, 0x5f, 0x6d, 0x61, 0x63, 0x68,
	0x69, 0x6e, 0x65, 0x18, 0x26, 0x20, 0x01, 0x28, 0x09, 0x52, 0x17, 0x64, 0x75, 0x73, 0x65, 0x72,
	0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x46, 0x65, 0x65, 0x4d, 0x61, 0x63, 0x68, 0x69,
	0x6e, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x61, 0x6c,
	0x5f, 0x66, 0x65, 0x65, 0x18, 0x27, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x77, 0x69, 0x74, 0x68,
	0x64, 0x72, 0x61, 0x77, 0x61, 0x6c, 0x46, 0x65, 0x65, 0x12, 0x30, 0x0a, 0x14, 0x64, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x61, 0x6c, 0x5f, 0x66, 0x65,
	0x65, 0x18, 0x28, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x64, 0x75, 0x73, 0x65, 0x72, 0x57, 0x69,
	0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x61, 0x6c, 0x46, 0x65, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x62,
	0x6f, 0x6e, 0x75, 0x73, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x29, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x62, 0x6f, 0x6e, 0x75, 0x73, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2c,
	0x0a, 0x12, 0x64, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x62, 0x6f, 0x6e, 0x75, 0x73, 0x5f, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x2a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x64, 0x75, 0x73, 0x65,
	0x72, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2b, 0x0a, 0x11,
	0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x2b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x4d, 0x0a, 0x0b, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x66, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x6f, 0x69, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x04, 0x43, 0x6f, 0x69, 0x6e, 0x12, 0x12, 0x0a, 0x04,
	0x53, 0x69, 0x67, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x53, 0x69, 0x67, 0x6e,
	0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x0b, 0x0a, 0x09, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x22, 0xad, 0x11, 0x0a, 0x15, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x1d, 0x0a, 0x0a, 0x64, 0x61, 0x69, 0x6c, 0x79, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x61, 0x69, 0x6c, 0x79, 0x44, 0x61, 0x74, 0x65, 0x12, 0x24,
	0x0a, 0x0e, 0x64, 0x61, 0x69, 0x6c, 0x79, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x73, 0x74, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x61, 0x69, 0x6c, 0x79, 0x44, 0x61, 0x74,
	0x65, 0x53, 0x74, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x76, 0x69, 0x70, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x76, 0x69, 0x70, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12,
	0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x61, 0x74, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x41, 0x74,
	0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x2c, 0x0a, 0x12, 0x62, 0x65, 0x6c, 0x6f, 0x6e, 0x67, 0x5f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f,
	0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x62, 0x65, 0x6c,
	0x6f, 0x6e, 0x67, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x26, 0x0a,
	0x0f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x5f, 0x6f, 0x6e, 0x65,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x4c, 0x65, 0x76,
	0x65, 0x6c, 0x4f, 0x6e, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x6c,
	0x65, 0x76, 0x65, 0x6c, 0x5f, 0x74, 0x77, 0x6f, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x61, 0x67, 0x65, 0x6e, 0x74, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x54, 0x77, 0x6f, 0x12, 0x2a, 0x0a,
	0x11, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x5f, 0x74, 0x68, 0x72,
	0x65, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x4c,
	0x65, 0x76, 0x65, 0x6c, 0x54, 0x68, 0x72, 0x65, 0x65, 0x12, 0x39, 0x0a, 0x19, 0x63, 0x6f, 0x6d,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x6c, 0x65, 0x76,
	0x65, 0x6c, 0x5f, 0x74, 0x77, 0x6f, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x16, 0x63, 0x6f,
	0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x61, 0x74, 0x65, 0x4c, 0x65, 0x76, 0x65,
	0x6c, 0x54, 0x77, 0x6f, 0x12, 0x39, 0x0a, 0x19, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x5f, 0x6f, 0x6e,
	0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x16, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x52, 0x61, 0x74, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x4f, 0x6e, 0x65, 0x12,
	0x3d, 0x0a, 0x1b, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x61,
	0x74, 0x65, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x5f, 0x74, 0x68, 0x72, 0x65, 0x65, 0x18, 0x0f,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x18, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x52, 0x61, 0x74, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x54, 0x68, 0x72, 0x65, 0x65, 0x12, 0x40,
	0x0a, 0x1d, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x61, 0x74,
	0x65, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x5f, 0x6f, 0x6e, 0x65, 0x5f, 0x61, 0x63, 0x74, 0x18,
	0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x19, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x52, 0x61, 0x74, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x4f, 0x6e, 0x65, 0x41, 0x63, 0x74,
	0x12, 0x40, 0x0a, 0x1d, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x72,
	0x61, 0x74, 0x65, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x5f, 0x74, 0x77, 0x6f, 0x5f, 0x61, 0x63,
	0x74, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x19, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x52, 0x61, 0x74, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x54, 0x77, 0x6f, 0x41,
	0x63, 0x74, 0x12, 0x44, 0x0a, 0x1f, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x5f, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x5f, 0x74, 0x68, 0x72, 0x65,
	0x65, 0x5f, 0x61, 0x63, 0x74, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1b, 0x63, 0x6f, 0x6d,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x61, 0x74, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c,
	0x54, 0x68, 0x72, 0x65, 0x65, 0x41, 0x63, 0x74, 0x12, 0x3d, 0x0a, 0x1b, 0x63, 0x6f, 0x6d, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6c, 0x65,
	0x76, 0x65, 0x6c, 0x5f, 0x6f, 0x6e, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x18, 0x63,
	0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x4c,
	0x65, 0x76, 0x65, 0x6c, 0x4f, 0x6e, 0x65, 0x12, 0x3d, 0x0a, 0x1b, 0x63, 0x6f, 0x6d, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6c, 0x65, 0x76,
	0x65, 0x6c, 0x5f, 0x74, 0x77, 0x6f, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x18, 0x63, 0x6f,
	0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x65,
	0x76, 0x65, 0x6c, 0x54, 0x77, 0x6f, 0x12, 0x41, 0x0a, 0x1d, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6c, 0x65, 0x76, 0x65,
	0x6c, 0x5f, 0x74, 0x68, 0x72, 0x65, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1a, 0x63,
	0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x4c,
	0x65, 0x76, 0x65, 0x6c, 0x54, 0x68, 0x72, 0x65, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x62, 0x65, 0x74,
	0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x61, 0x6c, 0x18, 0x16, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x62, 0x65, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x61,
	0x6c, 0x12, 0x28, 0x0a, 0x10, 0x62, 0x65, 0x74, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x5f,
	0x73, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x62, 0x65, 0x74,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x26, 0x0a, 0x0f, 0x62,
	0x65, 0x74, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x73, 0x6c, 0x6f, 0x74, 0x18, 0x18,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x62, 0x65, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x53,
	0x6c, 0x6f, 0x74, 0x12, 0x2c, 0x0a, 0x12, 0x62, 0x65, 0x74, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x5f, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x18, 0x19, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x10, 0x62, 0x65, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e,
	0x65, 0x12, 0x24, 0x0a, 0x0e, 0x70, 0x6c, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x72,
	0x65, 0x61, 0x6c, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x6c, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x52, 0x65, 0x61, 0x6c, 0x12, 0x26, 0x0a, 0x0f, 0x70, 0x6c, 0x5f, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x70, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x70, 0x6f, 0x72, 0x74, 0x12,
	0x24, 0x0a, 0x0e, 0x70, 0x6c, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x73, 0x6c, 0x6f,
	0x74, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x53, 0x6c, 0x6f, 0x74, 0x12, 0x2a, 0x0a, 0x11, 0x70, 0x6c, 0x5f, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x5f, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0f, 0x70, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e,
	0x65, 0x12, 0x26, 0x0a, 0x0f, 0x70, 0x6c, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x6c, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x30, 0x0a, 0x14, 0x63, 0x6f, 0x6d,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x72, 0x65, 0x61,
	0x6c, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x52, 0x61, 0x74, 0x65, 0x52, 0x65, 0x61, 0x6c, 0x12, 0x32, 0x0a, 0x15, 0x63,
	0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x73,
	0x70, 0x6f, 0x72, 0x74, 0x18, 0x20, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x63, 0x6f, 0x6d, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x61, 0x74, 0x65, 0x53, 0x70, 0x6f, 0x72, 0x74, 0x12,
	0x30, 0x0a, 0x14, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x61,
	0x74, 0x65, 0x5f, 0x73, 0x6c, 0x6f, 0x74, 0x18, 0x21, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x63,
	0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x61, 0x74, 0x65, 0x53, 0x6c, 0x6f,
	0x74, 0x12, 0x36, 0x0a, 0x17, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f,
	0x72, 0x61, 0x74, 0x65, 0x5f, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x18, 0x22, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x15, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x61,
	0x74, 0x65, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x64, 0x65, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x23, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x2b, 0x0a, 0x11, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x61, 0x6c, 0x5f, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x24, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x77, 0x69, 0x74,
	0x68, 0x64, 0x72, 0x61, 0x77, 0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x21, 0x0a,
	0x0c, 0x62, 0x6f, 0x6e, 0x75, 0x73, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x25, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x62, 0x6f, 0x6e, 0x75, 0x73, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x21, 0x0a, 0x0c, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x5f, 0x72, 0x61, 0x74, 0x65,
	0x18, 0x26, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x52,
	0x61, 0x74, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x5f, 0x66,
	0x65, 0x65, 0x18, 0x27, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x46, 0x65, 0x65, 0x12, 0x2c, 0x0a, 0x12, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x5f, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x72, 0x65, 0x61, 0x6c, 0x18, 0x28, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x10, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x61, 0x6c, 0x12, 0x2e, 0x0a, 0x13, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x5f, 0x72,
	0x61, 0x74, 0x65, 0x5f, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x29, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x11, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x61, 0x74, 0x65, 0x53, 0x70, 0x6f,
	0x72, 0x74, 0x12, 0x2c, 0x0a, 0x12, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x5f, 0x72,
	0x61, 0x74, 0x65, 0x5f, 0x73, 0x6c, 0x6f, 0x74, 0x18, 0x2a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10,
	0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x61, 0x74, 0x65, 0x53, 0x6c, 0x6f, 0x74,
	0x12, 0x32, 0x0a, 0x15, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x5f, 0x72, 0x61, 0x74,
	0x65, 0x5f, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x18, 0x2b, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x13, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x63,
	0x68, 0x69, 0x6e, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x5f, 0x66, 0x65, 0x65, 0x5f, 0x72, 0x65, 0x61, 0x6c, 0x18, 0x2c, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x46, 0x65, 0x65, 0x52, 0x65, 0x61, 0x6c,
	0x12, 0x2c, 0x0a, 0x12, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x5f, 0x66, 0x65, 0x65,
	0x5f, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x2d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x70, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x46, 0x65, 0x65, 0x53, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x2a,
	0x0a, 0x11, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x5f, 0x66, 0x65, 0x65, 0x5f, 0x73,
	0x6c, 0x6f, 0x74, 0x18, 0x2e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x70, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x46, 0x65, 0x65, 0x53, 0x6c, 0x6f, 0x74, 0x12, 0x30, 0x0a, 0x14, 0x70, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x5f, 0x66, 0x65, 0x65, 0x5f, 0x6d, 0x61, 0x63, 0x68, 0x69,
	0x6e, 0x65, 0x18, 0x2f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x46, 0x65, 0x65, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x12, 0x2c, 0x0a, 0x12,
	0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x5f, 0x66, 0x65, 0x65, 0x5f, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x18, 0x30, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x46, 0x65, 0x65, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x29, 0x0a, 0x10, 0x61, 0x67,
	0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x31,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x71, 0x0a, 0x14, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x73, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6d, 0x73, 0x67, 0x12, 0x33, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1f, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x67, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xec, 0x01, 0x0a, 0x0f, 0x41, 0x67, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x2d, 0x0a, 0x04, 0x6c, 0x69,
	0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74,
	0x72, 0x70, 0x63, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x49,
	0x74, 0x65, 0x6d, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12,
	0x14, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x70, 0x61, 0x67, 0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x63, 0x72, 0x6f, 0x6c, 0x6c, 0x49,
	0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x63, 0x72, 0x6f, 0x6c, 0x6c, 0x49,
	0x64, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x6f, 0x72, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x6f, 0x72, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x6f, 0x72, 0x74, 0x49, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x6f, 0x72, 0x74, 0x49, 0x64, 0x22, 0x6f, 0x0a, 0x13, 0x41, 0x67, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x52, 0x65, 0x73, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6d, 0x73, 0x67, 0x12, 0x32, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x67,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xec, 0x01, 0x0a, 0x14, 0x44, 0x65, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x52, 0x65,
	0x71, 0x12, 0x10, 0x0a, 0x03, 0x55, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03,
	0x55, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12,
	0x12, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x0e, 0x0a,
	0x02, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x4d,
	0x6f, 0x62, 0x69, 0x6c, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x55,
	0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x55,
	0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x67, 0x0a, 0x11, 0x50, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b,
	0x6f, 0x6c, 0x64, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x6f, 0x6c, 0x64, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x20,
	0x0a, 0x0b, 0x6e, 0x65, 0x77, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x6e, 0x65, 0x77, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x22, 0x60, 0x0a, 0x12, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x6f,
	0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x61,
	0x74, 0x65, 0x22, 0xf8, 0x01, 0x0a, 0x15, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x33, 0x0a, 0x04, 0x6c, 0x69,
	0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74,
	0x72, 0x70, 0x63, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x65, 0x73, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x61, 0x67, 0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x73,
	0x63, 0x72, 0x6f, 0x6c, 0x6c, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73,
	0x63, 0x72, 0x6f, 0x6c, 0x6c, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x6f, 0x72, 0x74, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x6f, 0x72, 0x74,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x72, 0x74, 0x49, 0x64, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x72, 0x74, 0x49, 0x64, 0x22, 0xbf, 0x01,
	0x0a, 0x09, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x72,
	0x61, 0x74, 0x65, 0x53, 0x6c, 0x6f, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x72,
	0x61, 0x74, 0x65, 0x53, 0x6c, 0x6f, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x72, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x61, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x61, 0x74, 0x65, 0x53, 0x70, 0x6f, 0x72, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09, 0x72, 0x61, 0x74, 0x65, 0x53, 0x70, 0x6f, 0x72,
	0x74, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0b, 0x72, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x63, 0x68,
	0x69, 0x6e, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x72, 0x61, 0x74, 0x65, 0x57, 0x69, 0x74, 0x68, 0x64,
	0x72, 0x61, 0x77, 0x61, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0e, 0x72, 0x61, 0x74,
	0x65, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x61, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22,
	0x6d, 0x0a, 0x12, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x31, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x61, 0x67, 0x65, 0x6e,
	0x74, 0x72, 0x70, 0x63, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xeb,
	0x01, 0x0a, 0x10, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x6e, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x69, 0x7a,
	0x65, 0x12, 0x38, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x24, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74,
	0x4c, 0x69, 0x6e, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x2e, 0x44, 0x61, 0x74, 0x61,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x73,
	0x6f, 0x72, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09,
	0x73, 0x6f, 0x72, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x6f, 0x72,
	0x74, 0x4b, 0x65, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x6f, 0x72, 0x74,
	0x4b, 0x65, 0x79, 0x1a, 0x37, 0x0a, 0x09, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xbf, 0x03, 0x0a,
	0x11, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x6e, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x74,
	0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x43, 0x6f, 0x64,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x22,
	0x0a, 0x0c, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x72, 0x65, 0x65, 0x7a, 0x65, 0x41, 0x74, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x66, 0x72, 0x65, 0x65, 0x7a, 0x65, 0x41, 0x74, 0x12, 0x20,
	0x0a, 0x0b, 0x66, 0x72, 0x65, 0x65, 0x7a, 0x65, 0x43, 0x61, 0x75, 0x73, 0x65, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x66, 0x72, 0x65, 0x65, 0x7a, 0x65, 0x43, 0x61, 0x75, 0x73, 0x65,
	0x12, 0x2a, 0x0a, 0x10, 0x73, 0x75, 0x70, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x54, 0x6f, 0x70, 0x43,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x73, 0x75, 0x70, 0x4c,
	0x65, 0x76, 0x65, 0x6c, 0x54, 0x6f, 0x70, 0x43, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65,
	0x63, 0x72, 0x65, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x64, 0x65, 0x55, 0x72, 0x6c, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x64, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x1e,
	0x0a, 0x0a, 0x63, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0a, 0x63, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xf0,
	0x01, 0x0a, 0x11, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x6e, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x69,
	0x7a, 0x65, 0x12, 0x2f, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x67, 0x65, 0x6e,
	0x74, 0x4c, 0x69, 0x6e, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x6c,
	0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x67,
	0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x61, 0x67, 0x65, 0x73, 0x12,
	0x1a, 0x0a, 0x08, 0x73, 0x63, 0x72, 0x6f, 0x6c, 0x6c, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x73, 0x63, 0x72, 0x6f, 0x6c, 0x6c, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x73,
	0x6f, 0x72, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x73, 0x6f, 0x72, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x72,
	0x74, 0x49, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x72, 0x74, 0x49,
	0x64, 0x22, 0x65, 0x0a, 0x0e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x52, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x2d, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x72,
	0x70, 0x63, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x76, 0x0a, 0x18, 0x57, 0x69, 0x74, 0x68,
	0x64, 0x72, 0x61, 0x77, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x26, 0x0a, 0x0e, 0x43, 0x6f, 0x69, 0x6e, 0x57, 0x69, 0x74, 0x68,
	0x64, 0x72, 0x61, 0x77, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x43, 0x6f,
	0x69, 0x6e, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x61, 0x6c, 0x12, 0x32, 0x0a, 0x14,
	0x43, 0x6f, 0x69, 0x6e, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x61, 0x6c, 0x52, 0x65,
	0x61, 0x6c, 0x6c, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x14, 0x43, 0x6f, 0x69, 0x6e,
	0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x61, 0x6c, 0x52, 0x65, 0x61, 0x6c, 0x6c, 0x79,
	0x22, 0xe7, 0x01, 0x0a, 0x0e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x69, 0x7a,
	0x65, 0x12, 0x36, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x22, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x6f, 0x72,
	0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x73, 0x6f,
	0x72, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x4b,
	0x65, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x4b, 0x65,
	0x79, 0x1a, 0x37, 0x0a, 0x09, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xf8, 0x01, 0x0a, 0x15, 0x41,
	0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x69,
	0x7a, 0x65, 0x12, 0x33, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1f, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x67, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x74, 0x65,
	0x6d, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x14, 0x0a,
	0x05, 0x70, 0x61, 0x67, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x61,
	0x67, 0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x63, 0x72, 0x6f, 0x6c, 0x6c, 0x49, 0x64, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x63, 0x72, 0x6f, 0x6c, 0x6c, 0x49, 0x64, 0x12,
	0x1c, 0x0a, 0x09, 0x73, 0x6f, 0x72, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x73, 0x6f, 0x72, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x6f, 0x72, 0x74, 0x49, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73,
	0x6f, 0x72, 0x74, 0x49, 0x64, 0x22, 0xf6, 0x01, 0x0a, 0x14, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x44, 0x61, 0x74, 0x61, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x32, 0x0a, 0x04,
	0x6c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x61, 0x67, 0x65,
	0x6e, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x65, 0x73, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x61, 0x67, 0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08,
	0x73, 0x63, 0x72, 0x6f, 0x6c, 0x6c, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x73, 0x63, 0x72, 0x6f, 0x6c, 0x6c, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x6f, 0x72, 0x74,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x6f, 0x72,
	0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x72, 0x74, 0x49, 0x64,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x72, 0x74, 0x49, 0x64, 0x22, 0x2b,
	0x0a, 0x15, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x61, 0x74, 0x65,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x67, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x73, 0x69, 0x67, 0x6e, 0x22, 0x74, 0x0a, 0x16, 0x43,
	0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x34, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x61, 0x67, 0x65, 0x6e,
	0x74, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52,
	0x61, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x22, 0x60, 0x0a, 0x16, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52,
	0x61, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1e, 0x0a, 0x0a, 0x61,
	0x67, 0x65, 0x6e, 0x74, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0a, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x26, 0x0a, 0x0e, 0x61,
	0x67, 0x65, 0x6e, 0x74, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52,
	0x61, 0x74, 0x65, 0x22, 0x11, 0x0a, 0x0f, 0x54, 0x65, 0x61, 0x6d, 0x42, 0x65, 0x6e, 0x65, 0x66,
	0x69, 0x74, 0x73, 0x52, 0x65, 0x71, 0x22, 0x68, 0x0a, 0x10, 0x54, 0x65, 0x61, 0x6d, 0x42, 0x65,
	0x6e, 0x65, 0x66, 0x69, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67,
	0x12, 0x2e, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x65, 0x61, 0x6d, 0x42, 0x65,
	0x6e, 0x65, 0x66, 0x69, 0x74, 0x73, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x22, 0xc2, 0x01, 0x0a, 0x10, 0x54, 0x65, 0x61, 0x6d, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x74,
	0x73, 0x44, 0x61, 0x74, 0x61, 0x12, 0x34, 0x0a, 0x15, 0x74, 0x6f, 0x64, 0x61, 0x79, 0x49, 0x6e,
	0x63, 0x72, 0x65, 0x61, 0x73, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x15, 0x74, 0x6f, 0x64, 0x61, 0x79, 0x49, 0x6e, 0x63, 0x72, 0x65,
	0x61, 0x73, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x12, 0x24, 0x0a, 0x0d, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0d, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x4e, 0x75,
	0x6d, 0x12, 0x28, 0x0a, 0x0f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0f, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x0f, 0x61,
	0x6c, 0x6c, 0x6f, 0x77, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x61, 0x6c, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x0f, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x57, 0x69, 0x74, 0x68, 0x64,
	0x72, 0x61, 0x77, 0x61, 0x6c, 0x22, 0xb4, 0x01, 0x0a, 0x14, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x52, 0x65, 0x71, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x73, 0x6f, 0x72, 0x74, 0x4b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73,
	0x6f, 0x72, 0x74, 0x4b, 0x65, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x6f, 0x72, 0x74, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x73, 0x6f, 0x72, 0x74, 0x46,
	0x69, 0x65, 0x6c, 0x64, 0x12, 0x36, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x22, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x6f,
	0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x52, 0x0a, 0x18,
	0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x73, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65,
	0x22, 0x72, 0x0a, 0x15, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12,
	0x33, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e,
	0x61, 0x67, 0x65, 0x6e, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x22, 0xe0, 0x01, 0x0a, 0x15, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x44, 0x61, 0x74, 0x61, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x65,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x61, 0x67, 0x65, 0x73, 0x12, 0x12,
	0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x69,
	0x7a, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x72, 0x74,
	0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x72, 0x74, 0x49, 0x64,
	0x12, 0x1c, 0x0a, 0x09, 0x73, 0x6f, 0x72, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x6f, 0x72, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x37,
	0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x61,
	0x67, 0x65, 0x6e, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x44, 0x61, 0x74, 0x61, 0x49, 0x74, 0x65,
	0x6d, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0xff, 0x01, 0x0a, 0x19, 0x43, 0x6f, 0x6d, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x44, 0x61, 0x74,
	0x61, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x4c, 0x65, 0x76, 0x65,
	0x6c, 0x12, 0x28, 0x0a, 0x0f, 0x62, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x54, 0x75, 0x72, 0x6e,
	0x4f, 0x76, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0f, 0x62, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x54, 0x75, 0x72, 0x6e, 0x4f, 0x76, 0x65, 0x72, 0x12, 0x24, 0x0a, 0x0d, 0x63,
	0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x55, 0x73, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x0d, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x55, 0x73,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x1c, 0x0a,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x2b, 0x0a, 0x15, 0x53, 0x75, 0x62,
	0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52,
	0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x67, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x04, 0x73, 0x69, 0x67, 0x6e, 0x22, 0x74, 0x0a, 0x16, 0x53, 0x75, 0x62, 0x6f, 0x72, 0x64,
	0x69, 0x6e, 0x61, 0x74, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x34, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x72, 0x70, 0x63, 0x2e,
	0x53, 0x75, 0x62, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x9f, 0x02, 0x0a,
	0x16, 0x53, 0x75, 0x62, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x44, 0x61, 0x74, 0x61, 0x12, 0x3d, 0x0a, 0x06, 0x6c, 0x65, 0x76, 0x65, 0x6c,
	0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x72,
	0x70, 0x63, 0x2e, 0x53, 0x75, 0x62, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x53, 0x75, 0x62, 0x44, 0x74, 0x6f, 0x52, 0x06,
	0x6c, 0x65, 0x76, 0x65, 0x6c, 0x31, 0x12, 0x3d, 0x0a, 0x06, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x32,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x72, 0x70,
	0x63, 0x2e, 0x53, 0x75, 0x62, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x53, 0x75, 0x62, 0x44, 0x74, 0x6f, 0x52, 0x06, 0x6c,
	0x65, 0x76, 0x65, 0x6c, 0x32, 0x12, 0x3d, 0x0a, 0x06, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x33, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x72, 0x70, 0x63,
	0x2e, 0x53, 0x75, 0x62, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x53, 0x75, 0x62, 0x44, 0x74, 0x6f, 0x52, 0x06, 0x6c, 0x65,
	0x76, 0x65, 0x6c, 0x33, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x0f, 0x62, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x54,
	0x75, 0x72, 0x6e, 0x4f, 0x76, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0f, 0x62,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x54, 0x75, 0x72, 0x6e, 0x4f, 0x76, 0x65, 0x72, 0x22, 0x7b,
	0x0a, 0x1b, 0x53, 0x75, 0x62, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x53, 0x75, 0x62, 0x44, 0x74, 0x6f, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x75, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x6e, 0x75, 0x6d,
	0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x28, 0x0a, 0x0f, 0x62, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x54, 0x75, 0x72, 0x6e,
	0x4f, 0x76, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0f, 0x62, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x54, 0x75, 0x72, 0x6e, 0x4f, 0x76, 0x65, 0x72, 0x22, 0xef, 0x01, 0x0a, 0x11,
	0x53, 0x75, 0x70, 0x65, 0x72, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65,
	0x71, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a,
	0x0c, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x48, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x48, 0x61, 0x73,
	0x68, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52,
	0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x78, 0x70,
	0x69, 0x72, 0x65, 0x64, 0x41, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x78,
	0x70, 0x69, 0x72, 0x65, 0x64, 0x41, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x6d, 0x6f,
	0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x22, 0x4e, 0x0a,
	0x12, 0x53, 0x75, 0x70, 0x65, 0x72, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xbc, 0x01,
	0x0a, 0x18, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x6f, 0x72, 0x74,
	0x4b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x4b,
	0x65, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x6f, 0x72, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x73, 0x6f, 0x72, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x12, 0x3a, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26,
	0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x43,
	0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x8a, 0x01, 0x0a,
	0x1c, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x7e, 0x0a, 0x19, 0x41, 0x67, 0x65,
	0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73,
	0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x3b, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x61, 0x67, 0x65,
	0x6e, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x65, 0x73, 0x70, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xb6, 0x01, 0x0a, 0x1d, 0x41, 0x67,
	0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x65, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x61, 0x67, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x73,
	0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x3b, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x05, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x41,
	0x67, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x44, 0x61, 0x74, 0x61, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x6c, 0x69,
	0x73, 0x74, 0x22, 0xb5, 0x03, 0x0a, 0x1d, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x44, 0x61, 0x74, 0x61,
	0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x6f,
	0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x26, 0x0a, 0x0e, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x12, 0x1c,
	0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x22, 0x0a, 0x0c,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x4d, 0x6f, 0x6e, 0x74, 0x68,
	0x12, 0x18, 0x0a, 0x07, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x65,
	0x76, 0x65, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6c,
	0x65, 0x76, 0x65, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x6f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x6f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x22, 0x92, 0x01, 0x0a, 0x18, 0x41,
	0x67, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x67, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x49,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x6f, 0x6e,
	0x74, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x6f,
	0x6e, 0x74, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x70, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6f, 0x70, 0x74, 0x79, 0x70, 0x65, 0x22,
	0x55, 0x0a, 0x19, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d,
	0x73, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xce, 0x01, 0x0a, 0x21, 0x41, 0x67, 0x65, 0x6e, 0x74,
	0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72,
	0x61, 0x77, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x65, 0x64, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x6f,
	0x72, 0x74, 0x4b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x6f, 0x72,
	0x74, 0x4b, 0x65, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x6f, 0x72, 0x74, 0x46, 0x69, 0x65, 0x6c,
	0x64, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x73, 0x6f, 0x72, 0x74, 0x46, 0x69, 0x65,
	0x6c, 0x64, 0x12, 0x43, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2f, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x67, 0x65, 0x6e,
	0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x57, 0x69, 0x74, 0x68, 0x64,
	0x72, 0x61, 0x77, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65,
	0x71, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xa3, 0x01, 0x0a, 0x25, 0x41, 0x67, 0x65, 0x6e,
	0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x57, 0x69, 0x74, 0x68, 0x64,
	0x72, 0x61, 0x77, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65,
	0x71, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x8c, 0x01,
	0x0a, 0x22, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x65, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x40, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74,
	0x72, 0x70, 0x63, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xc4, 0x01, 0x0a,
	0x22, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x65, 0x64, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x70, 0x61, 0x67, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x61,
	0x67, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x44, 0x0a,
	0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x61, 0x67,
	0x65, 0x6e, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x6c,
	0x69, 0x73, 0x74, 0x22, 0xb0, 0x06, 0x0a, 0x26, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x52,
	0x65, 0x63, 0x6f, 0x72, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x26,
	0x0a, 0x0e, 0x43, 0x50, 0x46, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x61, 0x6e, 0x6b,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x43, 0x50, 0x46, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x42, 0x61, 0x6e, 0x6b, 0x12, 0x26, 0x0a, 0x0e, 0x43, 0x50, 0x46, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x43, 0x50, 0x46, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2a,
	0x0a, 0x10, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x63, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x2a, 0x0a, 0x10, 0x63, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f,
	0x69, 0x6e, 0x42, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x63, 0x6f, 0x69, 0x6e, 0x42, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x63, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x63, 0x79, 0x12, 0x2c, 0x0a, 0x11, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a,
	0x65, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x49, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x11, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65,
	0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x61,
	0x74, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x52, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x78, 0x74, 0x72, 0x61, 0x49,
	0x6e, 0x66, 0x6f, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x78, 0x74, 0x72, 0x61,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x20, 0x0a, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x65, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c,
	0x70, 0x6c, 0x61, 0x74, 0x4e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x10, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x70, 0x6c, 0x61, 0x74, 0x4e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x70, 0x6c, 0x61, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x6c, 0x61, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x13, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x14, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x15, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x03, 0x75, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x18, 0x16, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x17,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x26,
	0x0a, 0x0e, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xb6, 0x01, 0x0a, 0x15, 0x41, 0x67, 0x65, 0x6e, 0x74,
	0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71,
	0x12, 0x18, 0x0a, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69,
	0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x4b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x73, 0x6f, 0x72, 0x74, 0x4b, 0x65, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x6f, 0x72, 0x74,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x73, 0x6f, 0x72,
	0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x37, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x72, 0x70, 0x63, 0x2e,
	0x41, 0x67, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4c,
	0x6f, 0x67, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22,
	0x9b, 0x01, 0x0a, 0x19, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x67, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x74, 0x0a,
	0x16, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x4c, 0x6f, 0x67, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d,
	0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x34, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x61, 0x67,
	0x65, 0x6e, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x67, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x22, 0xac, 0x01, 0x0a, 0x16, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x67, 0x44, 0x61, 0x74, 0x61, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x65,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x61, 0x67, 0x65, 0x73, 0x12, 0x12,
	0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x69,
	0x7a, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x38, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74,
	0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x72, 0x70,
	0x63, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x4c, 0x6f, 0x67, 0x44, 0x61, 0x74, 0x61, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x6c, 0x69,
	0x73, 0x74, 0x22, 0x96, 0x02, 0x0a, 0x1a, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x67, 0x44, 0x61, 0x74, 0x61, 0x49, 0x74, 0x65,
	0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x69,
	0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x69, 0x6e, 0x41, 0x66, 0x74, 0x65, 0x72, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x69, 0x6e, 0x41, 0x66, 0x74, 0x65, 0x72, 0x12,
	0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x69, 0x6e, 0x42, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x69, 0x6e, 0x42, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x6f, 0x75, 0x74, 0x49, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6f, 0x75,
	0x74, 0x49, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x66, 0x65, 0x72, 0x49, 0x64, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x66, 0x65, 0x72, 0x49, 0x64, 0x12, 0x10, 0x0a,
	0x03, 0x75, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x45, 0x0a, 0x15, 0x41,
	0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x65, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75,
	0x69, 0x64, 0x22, 0x3e, 0x0a, 0x16, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x65, 0x74,
	0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d,
	0x73, 0x67, 0x22, 0x5b, 0x0a, 0x0d, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e,
	0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22,
	0x64, 0x0a, 0x0e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x2c, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x72, 0x70, 0x63,
	0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x3a, 0x0a, 0x1c, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x47, 0x65,
	0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x53, 0x65, 0x63, 0x72,
	0x65, 0x74, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d,
	0x65, 0x22, 0x82, 0x01, 0x0a, 0x1d, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x47, 0x65, 0x6e, 0x65, 0x72,
	0x61, 0x74, 0x65, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x3b, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x72,
	0x70, 0x63, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65,
	0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x49, 0x0a, 0x1d, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x47,
	0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x53, 0x65, 0x63,
	0x72, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12,
	0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72,
	0x6c, 0x22, 0xfe, 0x0b, 0x0a, 0x0e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1a,
	0x0a, 0x08, 0x61, 0x72, 0x65, 0x61, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x61, 0x72, 0x65, 0x61, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76,
	0x61, 0x74, 0x61, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74,
	0x61, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x69, 0x6e, 0x64, 0x42, 0x61, 0x6e, 0x6b, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x62, 0x69, 0x6e, 0x64, 0x42, 0x61, 0x6e, 0x6b, 0x12, 0x1a,
	0x0a, 0x08, 0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x6f,
	0x69, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x0e, 0x63, 0x6f, 0x69, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x63, 0x6f, 0x69, 0x6e, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x66, 0x63, 0x6f, 0x69, 0x6e, 0x12, 0x12, 0x0a, 0x04,
	0x66, 0x6c, 0x61, 0x67, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x66, 0x6c, 0x61, 0x67,
	0x12, 0x1a, 0x0a, 0x08, 0x66, 0x72, 0x65, 0x65, 0x7a, 0x65, 0x41, 0x74, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x66, 0x72, 0x65, 0x65, 0x7a, 0x65, 0x41, 0x74, 0x12, 0x20, 0x0a, 0x0b,
	0x66, 0x72, 0x65, 0x65, 0x7a, 0x65, 0x43, 0x61, 0x75, 0x73, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x66, 0x72, 0x65, 0x65, 0x7a, 0x65, 0x43, 0x61, 0x75, 0x73, 0x65, 0x12, 0x2a,
	0x0a, 0x10, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x43, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x64,
	0x50, 0x61, 0x74, 0x68, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x64, 0x50, 0x61,
	0x74, 0x68, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x70, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x70, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x11,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x70, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x1e,
	0x0a, 0x0a, 0x69, 0x73, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x65, 0x72, 0x18, 0x12, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0a, 0x69, 0x73, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x65, 0x72, 0x12, 0x2c,
	0x0a, 0x11, 0x6c, 0x61, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x49, 0x64, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x6c, 0x61, 0x73, 0x74, 0x4c,
	0x6f, 0x67, 0x69, 0x6e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b,
	0x6c, 0x61, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x49, 0x70, 0x18, 0x14, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x6c, 0x61, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x49, 0x70, 0x12, 0x2c,
	0x0a, 0x11, 0x6c, 0x61, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x49, 0x70, 0x52, 0x65, 0x67,
	0x69, 0x6f, 0x6e, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x6c, 0x61, 0x73, 0x74, 0x4c,
	0x6f, 0x67, 0x69, 0x6e, 0x49, 0x70, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x0d,
	0x6c, 0x61, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x16, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0d, 0x6c, 0x61, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x49, 0x64, 0x18, 0x17, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a,
	0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x18, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x18, 0x19, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x6f,
	0x62, 0x69, 0x6c, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x43, 0x6f, 0x69, 0x6e, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x43, 0x6f, 0x69, 0x6e, 0x12, 0x22, 0x0a, 0x0c,
	0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x48, 0x61, 0x73, 0x68, 0x18, 0x1c, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x48, 0x61, 0x73, 0x68,
	0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x1d, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x22,
	0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x72, 0x6c, 0x18, 0x1e,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x55,
	0x72, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x71, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x55, 0x72, 0x6c, 0x18,
	0x1f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x71, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x55, 0x72, 0x6c,
	0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x61, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x20, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x61, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x72, 0x6f, 0x6c, 0x65, 0x18, 0x21, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x22, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x65, 0x78, 0x18, 0x23, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x03, 0x73, 0x65, 0x78, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x24, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x69, 0x67,
	0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x25, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x20,
	0x0a, 0x0b, 0x73, 0x75, 0x70, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x54, 0x6f, 0x70, 0x18, 0x26, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0b, 0x73, 0x75, 0x70, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x54, 0x6f, 0x70,
	0x12, 0x2a, 0x0a, 0x10, 0x73, 0x75, 0x70, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x54, 0x6f, 0x70, 0x43,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x27, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x73, 0x75, 0x70, 0x4c,
	0x65, 0x76, 0x65, 0x6c, 0x54, 0x6f, 0x70, 0x43, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x73, 0x75, 0x70, 0x55, 0x69, 0x64, 0x31, 0x18, 0x28, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x73,
	0x75, 0x70, 0x55, 0x69, 0x64, 0x31, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x70, 0x55, 0x69, 0x64,
	0x32, 0x18, 0x29, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x73, 0x75, 0x70, 0x55, 0x69, 0x64, 0x32,
	0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x70, 0x55, 0x69, 0x64, 0x33, 0x18, 0x2a, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x73, 0x75, 0x70, 0x55, 0x69, 0x64, 0x33, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x75,
	0x70, 0x55, 0x69, 0x64, 0x54, 0x6f, 0x70, 0x18, 0x2b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73,
	0x75, 0x70, 0x55, 0x69, 0x64, 0x54, 0x6f, 0x70, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x75, 0x70, 0x55,
	0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x31, 0x18, 0x2c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x73, 0x75, 0x70, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x31, 0x12, 0x26, 0x0a, 0x0e,
	0x73, 0x75, 0x70, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x54, 0x6f, 0x70, 0x18, 0x2d,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x75, 0x70, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d,
	0x65, 0x54, 0x6f, 0x70, 0x12, 0x26, 0x0a, 0x0e, 0x74, 0x68, 0x69, 0x72, 0x64, 0x4c, 0x6f, 0x67,
	0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x2e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x74, 0x68,
	0x69, 0x72, 0x64, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x2f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18,
	0x30, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x31, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x62, 0x61, 0x6e, 0x6b, 0x49, 0x64, 0x18, 0x32, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x62, 0x61,
	0x6e, 0x6b, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x55, 0x72,
	0x6c, 0x18, 0x33, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x55,
	0x72, 0x6c, 0x22, 0x0e, 0x0a, 0x0c, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x71, 0x22, 0x63, 0x0a, 0x0d, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x2c, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x72,
	0x70, 0x63, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x4c, 0x0a, 0x12, 0x41, 0x67, 0x65, 0x6e, 0x74,
	0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a,
	0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65,
	0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x6e,
	0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x6e, 0x0a, 0x13, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d,
	0x73, 0x67, 0x12, 0x31, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1d, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x67, 0x65, 0x6e,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xe5, 0x07, 0x0a, 0x13, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x53,
	0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x44, 0x61, 0x74, 0x61, 0x12, 0x22, 0x0a,
	0x0c, 0x61, 0x6c, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0c, 0x61, 0x6c, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x65, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x62, 0x65, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x1a, 0x0a, 0x08, 0x62, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x62, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x62,
	0x6f, 0x6e, 0x75, 0x73, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x0b, 0x62, 0x6f, 0x6e, 0x75, 0x73, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1e, 0x0a,
	0x0a, 0x62, 0x6f, 0x6e, 0x75, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x62, 0x6f, 0x6e, 0x75, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x26, 0x0a,
	0x0e, 0x62, 0x6f, 0x6e, 0x75, 0x73, 0x54, 0x79, 0x70, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x62, 0x6f, 0x6e, 0x75, 0x73, 0x54, 0x79, 0x70, 0x65,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0d, 0x64, 0x65,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x64,
	0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0c, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x22, 0x0a, 0x0c, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x52, 0x61, 0x74, 0x69, 0x6f, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x52, 0x61,
	0x74, 0x69, 0x6f, 0x12, 0x2e, 0x0a, 0x12, 0x66, 0x69, 0x72, 0x73, 0x74, 0x44, 0x65, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x12, 0x66, 0x69, 0x72, 0x73, 0x74, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x2c, 0x0a, 0x11, 0x66, 0x69, 0x72, 0x73, 0x74, 0x44, 0x65, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11,
	0x66, 0x69, 0x72, 0x73, 0x74, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x22, 0x0a, 0x0c, 0x6e, 0x65, 0x77, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x6e, 0x65, 0x77, 0x55, 0x73, 0x65, 0x72,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x67, 0x72, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x03, 0x6e, 0x67, 0x72, 0x12, 0x2e, 0x0a, 0x12, 0x6f, 0x74, 0x68, 0x65, 0x72,
	0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x12, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x61, 0x79, 0x6f, 0x75,
	0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x70,
	0x61, 0x79, 0x6f, 0x75, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x30, 0x0a, 0x13, 0x73,
	0x65, 0x63, 0x6f, 0x6e, 0x64, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x10, 0x20, 0x01, 0x28, 0x01, 0x52, 0x13, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64,
	0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2e, 0x0a,
	0x12, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x11, 0x20, 0x01, 0x28, 0x03, 0x52, 0x12, 0x73, 0x65, 0x63, 0x6f, 0x6e,
	0x64, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2e, 0x0a,
	0x12, 0x74, 0x68, 0x69, 0x72, 0x64, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x12, 0x20, 0x01, 0x28, 0x01, 0x52, 0x12, 0x74, 0x68, 0x69, 0x72, 0x64,
	0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2c, 0x0a,
	0x11, 0x74, 0x68, 0x69, 0x72, 0x64, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x13, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x74, 0x68, 0x69, 0x72, 0x64, 0x44,
	0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x30, 0x0a, 0x13, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x14, 0x20, 0x01, 0x28, 0x01, 0x52, 0x13, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66,
	0x65, 0x72, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x34, 0x0a,
	0x15, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x15, 0x20, 0x01, 0x28, 0x01, 0x52, 0x15, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x3a, 0x0a, 0x18, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x57,
	0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x16, 0x20, 0x01, 0x28, 0x01, 0x52, 0x18, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x57,
	0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x20, 0x0a, 0x0b, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x17,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x2a, 0x0a, 0x10, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x61, 0x6c, 0x41,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x18, 0x20, 0x01, 0x28, 0x01, 0x52, 0x10, 0x77, 0x69, 0x74,
	0x68, 0x64, 0x72, 0x61, 0x77, 0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x0f, 0x0a,
	0x0d, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x4a,
	0x0a, 0x0e, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xb8, 0x01, 0x0a, 0x16, 0x4f,
	0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73,
	0x69, 0x7a, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x4b, 0x65, 0x79, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x4b, 0x65, 0x79, 0x12, 0x1c, 0x0a,
	0x09, 0x73, 0x6f, 0x72, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x73, 0x6f, 0x72, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x38, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x61, 0x67, 0x65, 0x6e,
	0x74, 0x72, 0x70, 0x63, 0x2e, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x55, 0x73, 0x65, 0x72, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x82, 0x01, 0x0a, 0x1a, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65,
	0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x73, 0x75, 0x70, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x75, 0x70, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x22, 0x76, 0x0a, 0x17, 0x4f, 0x6e,
	0x6c, 0x69, 0x6e, 0x65, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x35, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x61, 0x67, 0x65, 0x6e,
	0x74, 0x72, 0x70, 0x63, 0x2e, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x55, 0x73, 0x65, 0x72, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x22, 0xae, 0x01, 0x0a, 0x17, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x55, 0x73, 0x65,
	0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x65,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x70, 0x61, 0x67, 0x65, 0x73, 0x12, 0x12,
	0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69,
	0x7a, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x39, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74,
	0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x72, 0x70,
	0x63, 0x2e, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x6c,
	0x69, 0x73, 0x74, 0x22, 0x99, 0x02, 0x0a, 0x1b, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x55, 0x73,
	0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x49,
	0x74, 0x65, 0x6d, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x04, 0x63, 0x6f, 0x69, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x54, 0x65,
	0x78, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x54,
	0x65, 0x78, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x75, 0x70, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x75, 0x70, 0x55, 0x73, 0x65,
	0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73,
	0x75, 0x70, 0x55, 0x69, 0x64, 0x31, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x73, 0x75,
	0x70, 0x55, 0x69, 0x64, 0x31, 0x12, 0x18, 0x0a, 0x07, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x49, 0x64,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x49, 0x64, 0x22,
	0xb6, 0x01, 0x0a, 0x15, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x52, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x4b,
	0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x4b, 0x65,
	0x79, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x6f, 0x72, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x73, 0x6f, 0x72, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12,
	0x37, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e,
	0x61, 0x67, 0x65, 0x6e, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61,
	0x77, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x65, 0x71, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xaf, 0x01, 0x0a, 0x19, 0x57, 0x69, 0x74,
	0x68, 0x64, 0x72, 0x61, 0x77, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x6f,
	0x62, 0x69, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x6f, 0x62, 0x69,
	0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x74, 0x0a, 0x16, 0x57, 0x69,
	0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x34, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74,
	0x72, 0x70, 0x63, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x52, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x22, 0xe6, 0x01, 0x0a, 0x16, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x65, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x70, 0x61, 0x67, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x73,
	0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f, 0x0a,
	0x0b, 0x72, 0x65, 0x61, 0x6c, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x0a, 0x72, 0x65, 0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x39,
	0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x61,
	0x67, 0x65, 0x6e, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x57, 0x69, 0x6e, 0x43, 0x6f, 0x69, 0x6e, 0x57,
	0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x61, 0x6c, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49,
	0x74, 0x65, 0x6d, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0xcd, 0x07, 0x0a, 0x1b, 0x57, 0x69,
	0x6e, 0x43, 0x6f, 0x69, 0x6e, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x61, 0x6c, 0x52,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75,
	0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75,
	0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70,
	0x6c, 0x61, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70,
	0x6c, 0x61, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x6c, 0x61, 0x74, 0x4e,
	0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70,
	0x6c, 0x61, 0x74, 0x4e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x77,
	0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x61, 0x6c, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77,
	0x61, 0x6c, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x2a, 0x0a, 0x10, 0x77, 0x69, 0x74,
	0x68, 0x64, 0x72, 0x61, 0x77, 0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x10, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x61, 0x6c, 0x41,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x52, 0x61, 0x74, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x78, 0x63,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x61, 0x74, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x6d, 0x61, 0x69,
	0x6e, 0x4e, 0x65, 0x74, 0x46, 0x65, 0x65, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x6d, 0x61, 0x69, 0x6e, 0x4e, 0x65, 0x74, 0x46, 0x65, 0x65, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x72,
	0x65, 0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x0a, 0x72, 0x65, 0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x63,
	0x6f, 0x69, 0x6e, 0x42, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x0a, 0x63, 0x6f, 0x69, 0x6e, 0x42, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x0f,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x24, 0x0a, 0x0d, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x55, 0x73, 0x65,
	0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x38, 0x0a, 0x17, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61,
	0x77, 0x61, 0x6c, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x17, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77,
	0x61, 0x6c, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x36, 0x0a, 0x16, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x4e, 0x6f, 0x74, 0x69,
	0x63, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x16, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x75, 0x64, 0x69, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x61, 0x75, 0x64, 0x69,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x18, 0x14, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x10, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65,
	0x72, 0x12, 0x32, 0x0a, 0x14, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x66, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x14, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65,
	0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x65,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x41, 0x74, 0x18, 0x16, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x11, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f,
	0x72, 0x41, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x49,
	0x64, 0x18, 0x17, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e,
	0x74, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6d, 0x65, 0x72, 0x63, 0x68,
	0x61, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x6d, 0x65, 0x72, 0x63, 0x68,
	0x61, 0x6e, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x19, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x10, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x18, 0x1a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x75,
	0x73, 0x65, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x75, 0x73, 0x65, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x22, 0xa8, 0x01, 0x0a, 0x0e, 0x44, 0x65,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x6f,
	0x72, 0x74, 0x4b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x6f, 0x72,
	0x74, 0x4b, 0x65, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x6f, 0x72, 0x74, 0x46, 0x69, 0x65, 0x6c,
	0x64, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x73, 0x6f, 0x72, 0x74, 0x46, 0x69, 0x65,
	0x6c, 0x64, 0x12, 0x30, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x44, 0x65, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x22, 0xa8, 0x01, 0x0a, 0x12, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x75,
	0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75,
	0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22,
	0x66, 0x0a, 0x0f, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x2d, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x72, 0x70,
	0x63, 0x2e, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xd7, 0x01, 0x0a, 0x0f, 0x44, 0x65, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x65, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x61, 0x67, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x73,
	0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f, 0x0a,
	0x0b, 0x72, 0x65, 0x61, 0x6c, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x0a, 0x72, 0x65, 0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x31,
	0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x61,
	0x67, 0x65, 0x6e, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x4c,
	0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x6c, 0x69, 0x73,
	0x74, 0x22, 0xaf, 0x05, 0x0a, 0x13, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x4c, 0x69, 0x73,
	0x74, 0x44, 0x61, 0x74, 0x61, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x65, 0x78, 0x63, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x52, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65,
	0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x61, 0x74, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x6c,
	0x65, 0x76, 0x65, 0x6c, 0x54, 0x65, 0x78, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x6c, 0x65, 0x76, 0x65, 0x6c, 0x54, 0x65, 0x78, 0x74, 0x12, 0x2a, 0x0a, 0x10, 0x6d, 0x65, 0x72,
	0x63, 0x68, 0x61, 0x6e, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x10, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x43, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e,
	0x74, 0x49, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6d, 0x65, 0x72, 0x63, 0x68,
	0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6d, 0x65, 0x72,
	0x63, 0x68, 0x61, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x6f, 0x62,
	0x69, 0x6c, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c,
	0x65, 0x12, 0x22, 0x0a, 0x0c, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f,
	0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x1e, 0x0a, 0x0a, 0x70, 0x61, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x61, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12,
	0x1c, 0x0a, 0x09, 0x70, 0x61, 0x79, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x79, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a,
	0x08, 0x70, 0x6c, 0x61, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x70, 0x6c, 0x61, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x6c, 0x61,
	0x74, 0x4e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x70, 0x6c, 0x61, 0x74, 0x4e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x70, 0x6c, 0x61, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x11, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x70, 0x6c, 0x61, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x12, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x13, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x75, 0x70, 0x55, 0x73,
	0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x75,
	0x70, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x15, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e,
	0x61, 0x6d, 0x65, 0x22, 0x32, 0x0a, 0x1c, 0x54, 0x61, 0x73, 0x6b, 0x41, 0x67, 0x65, 0x6e, 0x74,
	0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x22, 0x59, 0x0a, 0x1d, 0x54, 0x61, 0x73, 0x6b, 0x41,
	0x67, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x12,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x22, 0x2e, 0x0a, 0x18, 0x54, 0x61, 0x73, 0x6b, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x42,
	0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x69,
	0x6d, 0x65, 0x22, 0x55, 0x0a, 0x19, 0x54, 0x61, 0x73, 0x6b, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x42,
	0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xbc, 0x01, 0x0a, 0x18, 0x41, 0x67,
	0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f,
	0x66, 0x69, 0x74, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04,
	0x73, 0x69, 0x7a, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x4b, 0x65, 0x79, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x4b, 0x65, 0x79, 0x12, 0x1c,
	0x0a, 0x09, 0x73, 0x6f, 0x72, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x09, 0x73, 0x6f, 0x72, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x3a, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x61, 0x67, 0x65,
	0x6e, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x65, 0x71, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xc4, 0x01, 0x0a, 0x1c, 0x41, 0x67, 0x65,
	0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x66,
	0x69, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x67, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x67, 0x65, 0x6e,
	0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x1e, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x46, 0x6c, 0x61, 0x67, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x65, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x46, 0x6c, 0x61, 0x67, 0x22,
	0x7e, 0x0a, 0x19, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d,
	0x73, 0x67, 0x12, 0x3b, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x27, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x67, 0x65, 0x6e,
	0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x66, 0x69,
	0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22,
	0xf8, 0x01, 0x0a, 0x1d, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x70,
	0x61, 0x67, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x61, 0x67, 0x65,
	0x73, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x69, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x69, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x42, 0x65, 0x74, 0x43, 0x6f, 0x69, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x42, 0x65, 0x74, 0x43, 0x6f, 0x69, 0x6e, 0x12, 0x3b, 0x0a,
	0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x61, 0x67,
	0x65, 0x6e, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x44, 0x61, 0x74, 0x61,
	0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x91, 0x03, 0x0a, 0x1d, 0x41,
	0x67, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x50, 0x72,
	0x6f, 0x66, 0x69, 0x74, 0x44, 0x61, 0x74, 0x61, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03,
	0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x69,
	0x71, 0x69, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x72, 0x69, 0x71, 0x69, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x69, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x63, 0x6f,
	0x69, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x75, 0x62, 0x55, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x73, 0x75, 0x62, 0x55, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x75,
	0x62, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x73, 0x75, 0x62, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a,
	0x61, 0x67, 0x65, 0x6e, 0x74, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x26, 0x0a, 0x0e,
	0x73, 0x75, 0x62, 0x42, 0x65, 0x74, 0x54, 0x72, 0x75, 0x6e, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x75, 0x62, 0x42, 0x65, 0x74, 0x54, 0x72, 0x75, 0x6e,
	0x6f, 0x76, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f,
	0x69, 0x6e, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a,
	0x63, 0x6f, 0x69, 0x6e, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x32, 0x0a, 0x14, 0x73, 0x75,
	0x62, 0x42, 0x65, 0x74, 0x54, 0x72, 0x75, 0x6e, 0x6f, 0x76, 0x65, 0x72, 0x45, 0x78, 0x70, 0x6f,
	0x72, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x73, 0x75, 0x62, 0x42, 0x65, 0x74,
	0x54, 0x72, 0x75, 0x6e, 0x6f, 0x76, 0x65, 0x72, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x22, 0x1f,
	0x0a, 0x1d, 0x54, 0x61, 0x73, 0x6b, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x22,
	0x5a, 0x0a, 0x1e, 0x54, 0x61, 0x73, 0x6b, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x6d,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x7b, 0x0a, 0x1b, 0x41,
	0x67, 0x65, 0x6e, 0x74, 0x57, 0x69, 0x74, 0x68, 0x44, 0x72, 0x61, 0x77, 0x61, 0x6c, 0x43, 0x6f,
	0x6d, 0x6d, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x61,
	0x6e, 0x6b, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x62, 0x61, 0x6e, 0x6b,
	0x49, 0x64, 0x12, 0x2a, 0x0a, 0x10, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x61, 0x6c,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x10, 0x77, 0x69,
	0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x18,
	0x0a, 0x07, 0x70, 0x61, 0x79, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x70, 0x61, 0x79, 0x54, 0x79, 0x70, 0x65, 0x22, 0x44, 0x0a, 0x1c, 0x41, 0x67, 0x65, 0x6e,
	0x74, 0x57, 0x69, 0x74, 0x68, 0x44, 0x72, 0x61, 0x77, 0x61, 0x6c, 0x43, 0x6f, 0x6d, 0x6d, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x72,
	0x0a, 0x13, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x42, 0x69, 0x6e, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x61, 0x6e, 0x6b, 0x5f, 0x75, 0x73,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x61, 0x6e, 0x6b, 0x55, 0x73,
	0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x61, 0x6e, 0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x61, 0x6e, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x21, 0x0a, 0x0c, 0x62, 0x61, 0x6e, 0x6b, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x62, 0x61, 0x6e, 0x6b, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x22, 0x50, 0x0a, 0x14, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x42, 0x69, 0x6e, 0x64, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67,
	0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x22, 0x2d, 0x0a, 0x12, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x79,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x62, 0x61,
	0x6e, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x62, 0x61, 0x6e,
	0x6b, 0x49, 0x64, 0x22, 0x69, 0x0a, 0x13, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x79, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67,
	0x12, 0x2c, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18,
	0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x50, 0x61, 0x79, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x81,
	0x01, 0x0a, 0x0e, 0x50, 0x61, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x61, 0x6e, 0x6b, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x62, 0x61, 0x6e, 0x6b, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x61, 0x6e, 0x6b, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x61, 0x6e, 0x6b, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x61, 0x6e, 0x6b, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x61, 0x6e, 0x6b, 0x55, 0x73, 0x65, 0x72, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x69, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x63, 0x6f,
	0x69, 0x6e, 0x22, 0x29, 0x0a, 0x17, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x57, 0x69, 0x74, 0x68, 0x44,
	0x72, 0x61, 0x77, 0x61, 0x6c, 0x41, 0x75, 0x64, 0x69, 0x74, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x54, 0x0a,
	0x18, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x57, 0x69, 0x74, 0x68, 0x44, 0x72, 0x61, 0x77, 0x61, 0x6c,
	0x41, 0x75, 0x64, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12,
	0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x22, 0x42, 0x0a, 0x18, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x57, 0x69, 0x74, 0x68,
	0x44, 0x72, 0x61, 0x77, 0x61, 0x6c, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x22, 0x55, 0x0a, 0x19, 0x41, 0x67, 0x65, 0x6e, 0x74,
	0x57, 0x69, 0x74, 0x68, 0x44, 0x72, 0x61, 0x77, 0x61, 0x6c, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xac,
	0x01, 0x0a, 0x10, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x4b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x4b, 0x65, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x73,
	0x6f, 0x72, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09,
	0x73, 0x6f, 0x72, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x32, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x72,
	0x70, 0x63, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xde, 0x02,
	0x0a, 0x14, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x49, 0x70, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x49, 0x70,
	0x12, 0x20, 0x0a, 0x0b, 0x6c, 0x61, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x49, 0x70, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6c, 0x61, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e,
	0x49, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x2e, 0x0a, 0x12, 0x6c, 0x61, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x12,
	0x6c, 0x61, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x6c, 0x61, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x45,
	0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x6c, 0x61,
	0x73, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x6e,
	0x0a, 0x11, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x33, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x72,
	0x70, 0x63, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xd8,
	0x03, 0x0a, 0x15, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x12, 0x22, 0x0a, 0x0c, 0x6d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c,
	0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x30, 0x0a, 0x13,
	0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x13, 0x64, 0x65, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2e,
	0x0a, 0x12, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x54,
	0x6f, 0x74, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x12, 0x64, 0x65, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x34,
	0x0a, 0x15, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x15, 0x77,
	0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x54,
	0x6f, 0x74, 0x61, 0x6c, 0x12, 0x26, 0x0a, 0x0e, 0x73, 0x75, 0x62, 0x41, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0e, 0x73, 0x75,
	0x62, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x26, 0x0a, 0x0e,
	0x62, 0x65, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x0e, 0x62, 0x65, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x54,
	0x6f, 0x74, 0x61, 0x6c, 0x12, 0x24, 0x0a, 0x0d, 0x70, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0d, 0x70, 0x6c, 0x41,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x65,
	0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x70, 0x61, 0x67, 0x65, 0x73, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x12, 0x33, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x0c, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x67,
	0x65, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x49,
	0x74, 0x65, 0x6d, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x99, 0x05, 0x0a, 0x15, 0x41, 0x67,
	0x65, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x49,
	0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x24, 0x0a, 0x0d, 0x6c, 0x61, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x6c, 0x61, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x69,
	0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x49, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x49, 0x64, 0x12,
	0x22, 0x0a, 0x0c, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0d, 0x64, 0x65, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x62, 0x65, 0x74,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x0e, 0x62, 0x65, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x6f, 0x74, 0x61,
	0x6c, 0x12, 0x24, 0x0a, 0x0d, 0x70, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x6f, 0x74,
	0x61, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0d, 0x70, 0x6c, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x28, 0x0a, 0x0f, 0x77, 0x69, 0x74, 0x68, 0x64,
	0x72, 0x61, 0x77, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0f, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x2a, 0x0a, 0x10, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x61, 0x6c, 0x41,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x01, 0x52, 0x10, 0x77, 0x69, 0x74,
	0x68, 0x64, 0x72, 0x61, 0x77, 0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1c, 0x0a,
	0x09, 0x73, 0x75, 0x62, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x09, 0x73, 0x75, 0x62, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6d,
	0x6f, 0x62, 0x69, 0x6c, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x6f, 0x62,
	0x69, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x54, 0x6f,
	0x70, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x54, 0x6f, 0x70, 0x12, 0x20, 0x0a, 0x0b, 0x66, 0x72, 0x65, 0x65, 0x7a, 0x65, 0x43,
	0x61, 0x75, 0x73, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x66, 0x72, 0x65, 0x65,
	0x7a, 0x65, 0x43, 0x61, 0x75, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x66, 0x72, 0x65, 0x65, 0x7a,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x66, 0x72, 0x65,
	0x65, 0x7a, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x65, 0x76, 0x65, 0x6c,
	0x54, 0x65, 0x78, 0x74, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6c, 0x65, 0x76, 0x65,
	0x6c, 0x54, 0x65, 0x78, 0x74, 0x22, 0x1d, 0x0a, 0x1b, 0x54, 0x61, 0x73, 0x6b, 0x41, 0x67, 0x65,
	0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x52, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x52, 0x65, 0x71, 0x22, 0x58, 0x0a, 0x1c, 0x54, 0x61, 0x73, 0x6b, 0x41, 0x67, 0x65, 0x6e,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xb6,
	0x01, 0x0a, 0x15, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x4b, 0x65,
	0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x4b, 0x65, 0x79,
	0x12, 0x1c, 0x0a, 0x09, 0x73, 0x6f, 0x72, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x09, 0x73, 0x6f, 0x72, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x37,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x61,
	0x67, 0x65, 0x6e, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x41, 0x67, 0x65,
	0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65,
	0x71, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xab, 0x01, 0x0a, 0x19, 0x41, 0x64, 0x6d, 0x69,
	0x6e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x75, 0x70, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x31, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x75, 0x70, 0x55, 0x73, 0x65, 0x72,
	0x6e, 0x61, 0x6d, 0x65, 0x31, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a,
	0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65,
	0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x6e,
	0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x78, 0x0a, 0x16, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x41, 0x67,
	0x65, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x38, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x41,
	0x64, 0x6d, 0x69, 0x6e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73,
	0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22,
	0xb0, 0x01, 0x0a, 0x1a, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x70, 0x61, 0x67, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x61, 0x67,
	0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x38, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74,
	0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x72, 0x70,
	0x63, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x6c, 0x69,
	0x73, 0x74, 0x22, 0xda, 0x0c, 0x0a, 0x1a, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x41, 0x67, 0x65, 0x6e,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x49, 0x74, 0x65,
	0x6d, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x63, 0x6f, 0x69, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x69, 0x6e, 0x41, 0x64, 0x6a,
	0x75, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x69, 0x6e, 0x41,
	0x64, 0x6a, 0x75, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x69, 0x6e, 0x42, 0x61, 0x6c,
	0x61, 0x6e, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x69, 0x6e,
	0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x63, 0x6f, 0x69, 0x6e, 0x42,
	0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x11, 0x63, 0x6f, 0x69, 0x6e, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x45,
	0x78, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x69, 0x6e, 0x42, 0x65, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x69, 0x6e, 0x42, 0x65, 0x74, 0x12,
	0x22, 0x0a, 0x0c, 0x63, 0x6f, 0x69, 0x6e, 0x42, 0x65, 0x74, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6f, 0x69, 0x6e, 0x42, 0x65, 0x74, 0x42, 0x6f,
	0x6e, 0x75, 0x73, 0x12, 0x2e, 0x0a, 0x12, 0x63, 0x6f, 0x69, 0x6e, 0x42, 0x65, 0x74, 0x42, 0x6f,
	0x6e, 0x75, 0x73, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x12, 0x63, 0x6f, 0x69, 0x6e, 0x42, 0x65, 0x74, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x45, 0x78, 0x70,
	0x6f, 0x72, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x6f, 0x69, 0x6e, 0x42, 0x65, 0x74, 0x45, 0x78,
	0x70, 0x6f, 0x72, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f, 0x69, 0x6e,
	0x42, 0x65, 0x74, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x6f, 0x69,
	0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x63, 0x6f, 0x69, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x32, 0x0a, 0x14, 0x63, 0x6f, 0x69, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x14, 0x63, 0x6f, 0x69, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x45,
	0x78, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x69, 0x6e, 0x44, 0x65, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x69, 0x6e,
	0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x69, 0x6e, 0x45,
	0x78, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x69,
	0x6e, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x69, 0x6e, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x69,
	0x6e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x12, 0x2a, 0x0a, 0x10, 0x63, 0x6f, 0x69, 0x6e, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x74, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x10, 0x63, 0x6f, 0x69, 0x6e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x45, 0x78, 0x70,
	0x6f, 0x72, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x6f, 0x69, 0x6e, 0x57, 0x69, 0x74, 0x68, 0x64,
	0x72, 0x61, 0x77, 0x61, 0x6c, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x69,
	0x6e, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x61, 0x6c, 0x12, 0x32, 0x0a, 0x14, 0x63,
	0x6f, 0x69, 0x6e, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x61, 0x6c, 0x52, 0x65, 0x61,
	0x6c, 0x6c, 0x79, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x63, 0x6f, 0x69, 0x6e, 0x57,
	0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x61, 0x6c, 0x52, 0x65, 0x61, 0x6c, 0x6c, 0x79, 0x12,
	0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x11, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x26, 0x0a,
	0x0e, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x53, 0x75, 0x63, 0x63, 0x43, 0x6e, 0x74, 0x18,
	0x12, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x53, 0x75,
	0x63, 0x63, 0x43, 0x6e, 0x74, 0x12, 0x2e, 0x0a, 0x12, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x53, 0x75, 0x63, 0x63, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6e, 0x74, 0x18, 0x13, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x12, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x53, 0x75, 0x63, 0x63, 0x55, 0x73,
	0x65, 0x72, 0x43, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x4e,
	0x75, 0x6d, 0x73, 0x18, 0x14, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x64, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x4e, 0x75, 0x6d, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x15,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x30, 0x0a, 0x13, 0x66,
	0x69, 0x72, 0x73, 0x74, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x53, 0x75, 0x63, 0x63, 0x41,
	0x6d, 0x74, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x66, 0x69, 0x72, 0x73, 0x74, 0x44,
	0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x53, 0x75, 0x63, 0x63, 0x41, 0x6d, 0x74, 0x12, 0x30, 0x0a,
	0x13, 0x66, 0x69, 0x72, 0x73, 0x74, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x53, 0x75, 0x63,
	0x63, 0x43, 0x6e, 0x74, 0x18, 0x17, 0x20, 0x01, 0x28, 0x03, 0x52, 0x13, 0x66, 0x69, 0x72, 0x73,
	0x74, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x53, 0x75, 0x63, 0x63, 0x43, 0x6e, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x18, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x24, 0x0a, 0x0d, 0x6c, 0x61, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x19, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x6c, 0x61, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x69,
	0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x49, 0x64,
	0x18, 0x1a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x49, 0x64, 0x12,
	0x1c, 0x0a, 0x09, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x54, 0x65, 0x78, 0x74, 0x18, 0x1b, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x54, 0x65, 0x78, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d,
	0x6f, 0x62, 0x69, 0x6c, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f,
	0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6c,
	0x65, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x75, 0x70, 0x4c, 0x65, 0x76, 0x65,
	0x6c, 0x54, 0x6f, 0x70, 0x18, 0x20, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x73, 0x75, 0x70, 0x4c,
	0x65, 0x76, 0x65, 0x6c, 0x54, 0x6f, 0x70, 0x12, 0x28, 0x0a, 0x0f, 0x73, 0x75, 0x70, 0x4c, 0x65,
	0x76, 0x65, 0x6c, 0x54, 0x6f, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x21, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0f, 0x73, 0x75, 0x70, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x54, 0x6f, 0x70, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x75, 0x70, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x31, 0x18, 0x22, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x75, 0x70, 0x55, 0x73, 0x65, 0x72,
	0x6e, 0x61, 0x6d, 0x65, 0x31, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x65, 0x61, 0x6d, 0x4e, 0x75, 0x6d,
	0x73, 0x18, 0x23, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x74, 0x65, 0x61, 0x6d, 0x4e, 0x75, 0x6d,
	0x73, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x24,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x2e, 0x0a, 0x12, 0x75, 0x73, 0x65, 0x72, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x53, 0x75,
	0x63, 0x63, 0x43, 0x6e, 0x74, 0x18, 0x25, 0x20, 0x01, 0x28, 0x03, 0x52, 0x12, 0x75, 0x73, 0x65,
	0x72, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x53, 0x75, 0x63, 0x63, 0x43, 0x6e, 0x74, 0x12,
	0x38, 0x0a, 0x17, 0x75, 0x73, 0x65, 0x72, 0x46, 0x69, 0x72, 0x73, 0x74, 0x44, 0x65, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x53, 0x75, 0x63, 0x63, 0x41, 0x6d, 0x74, 0x18, 0x26, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x17, 0x75, 0x73, 0x65, 0x72, 0x46, 0x69, 0x72, 0x73, 0x74, 0x44, 0x65, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x53, 0x75, 0x63, 0x63, 0x41, 0x6d, 0x74, 0x12, 0x30, 0x0a, 0x13, 0x75, 0x73, 0x65,
	0x72, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x53, 0x75, 0x63, 0x63, 0x43, 0x6e, 0x74,
	0x18, 0x27, 0x20, 0x01, 0x28, 0x03, 0x52, 0x13, 0x75, 0x73, 0x65, 0x72, 0x57, 0x69, 0x74, 0x68,
	0x64, 0x72, 0x61, 0x77, 0x53, 0x75, 0x63, 0x63, 0x43, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x75,
	0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x28, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75,
	0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x77, 0x69, 0x74, 0x68, 0x64,
	0x72, 0x61, 0x77, 0x53, 0x75, 0x63, 0x63, 0x43, 0x6e, 0x74, 0x18, 0x29, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0f, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x53, 0x75, 0x63, 0x63, 0x43, 0x6e,
	0x74, 0x12, 0x30, 0x0a, 0x13, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x53, 0x75, 0x63,
	0x63, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6e, 0x74, 0x18, 0x2a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x13,
	0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x53, 0x75, 0x63, 0x63, 0x55, 0x73, 0x65, 0x72,
	0x43, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x4c, 0x65, 0x76, 0x65,
	0x6c, 0x18, 0x2b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x4c, 0x65,
	0x76, 0x65, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x75, 0x70, 0x65, 0x72, 0x55, 0x69, 0x64, 0x18,
	0x2c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x73, 0x75, 0x70, 0x65, 0x72, 0x55, 0x69, 0x64, 0x22,
	0xa4, 0x01, 0x0a, 0x0c, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71,
	0x12, 0x18, 0x0a, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69,
	0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x4b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x73, 0x6f, 0x72, 0x74, 0x4b, 0x65, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x6f, 0x72, 0x74,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x73, 0x6f, 0x72,
	0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x2e, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x72, 0x70, 0x63, 0x2e,
	0x41, 0x67, 0x65, 0x6e, 0x74, 0x54, 0x65, 0x61, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xb8, 0x01, 0x0a, 0x10, 0x41, 0x67, 0x65, 0x6e, 0x74,
	0x54, 0x65, 0x61, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x61,
	0x67, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x61, 0x67,
	0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x4c, 0x65, 0x76, 0x65,
	0x6c, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d,
	0x65, 0x22, 0x66, 0x0a, 0x0d, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x2f, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x72, 0x70,
	0x63, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x54, 0x65, 0x61, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x65, 0x73, 0x70, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x9e, 0x01, 0x0a, 0x11, 0x41, 0x67,
	0x65, 0x6e, 0x74, 0x54, 0x65, 0x61, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x18, 0x0a, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x70, 0x61, 0x67, 0x65, 0x73, 0x12, 0x2f, 0x0a, 0x04, 0x6c, 0x69, 0x73,
	0x74, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x72,
	0x70, 0x63, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x54, 0x65, 0x61, 0x6d, 0x44, 0x61, 0x74, 0x61,
	0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0xcb, 0x04, 0x0a, 0x11, 0x41,
	0x67, 0x65, 0x6e, 0x74, 0x54, 0x65, 0x61, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x49, 0x74, 0x65, 0x6d,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a,
	0x61, 0x67, 0x65, 0x6e, 0x74, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x69, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x63, 0x6f, 0x69, 0x6e,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x69, 0x6e, 0x44, 0x65,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x63, 0x6f, 0x69,
	0x6e, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x6f, 0x69, 0x6e,
	0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x61, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x0e, 0x63, 0x6f, 0x69, 0x6e, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x61, 0x6c,
	0x12, 0x32, 0x0a, 0x14, 0x63, 0x6f, 0x69, 0x6e, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77,
	0x61, 0x6c, 0x52, 0x65, 0x61, 0x6c, 0x6c, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x01, 0x52, 0x14,
	0x63, 0x6f, 0x69, 0x6e, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x61, 0x6c, 0x52, 0x65,
	0x61, 0x6c, 0x6c, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x69, 0x6e, 0x41, 0x64, 0x6a, 0x75,
	0x73, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x63, 0x6f, 0x69, 0x6e, 0x41, 0x64,
	0x6a, 0x75, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x69, 0x6e, 0x42, 0x65, 0x74, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x63, 0x6f, 0x69, 0x6e, 0x42, 0x65, 0x74, 0x12, 0x22,
	0x0a, 0x0c, 0x63, 0x6f, 0x69, 0x6e, 0x42, 0x65, 0x74, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x63, 0x6f, 0x69, 0x6e, 0x42, 0x65, 0x74, 0x42, 0x6f, 0x6e,
	0x75, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x69, 0x6e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x74,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x63, 0x6f, 0x69, 0x6e, 0x50, 0x72, 0x6f, 0x66,
	0x69, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x75, 0x70, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x75, 0x70, 0x55, 0x73, 0x65, 0x72,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x53,
	0x75, 0x63, 0x63, 0x43, 0x6e, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x64, 0x65,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x53, 0x75, 0x63, 0x63, 0x43, 0x6e, 0x74, 0x12, 0x28, 0x0a, 0x0f,
	0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x53, 0x75, 0x63, 0x63, 0x43, 0x6e, 0x74, 0x18,
	0x10, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x53,
	0x75, 0x63, 0x63, 0x43, 0x6e, 0x74, 0x12, 0x30, 0x0a, 0x13, 0x66, 0x69, 0x72, 0x73, 0x74, 0x44,
	0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x53, 0x75, 0x63, 0x63, 0x41, 0x6d, 0x74, 0x18, 0x11, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x13, 0x66, 0x69, 0x72, 0x73, 0x74, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x53, 0x75, 0x63, 0x63, 0x41, 0x6d, 0x74, 0x22, 0x4d, 0x0a, 0x13, 0x41, 0x67, 0x65, 0x6e,
	0x74, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x52, 0x65, 0x71, 0x12,
	0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x70, 0x0a, 0x14, 0x41, 0x67, 0x65, 0x6e, 0x74,
	0x42, 0x6f, 0x61, 0x72, 0x64, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x32, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x41,
	0x67, 0x65, 0x6e, 0x74, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x60, 0x0a, 0x14, 0x41, 0x67, 0x65,
	0x6e, 0x74, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x04, 0x72, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x06, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x22, 0xae, 0x01, 0x0a, 0x11,
	0x53, 0x75, 0x70, 0x65, 0x72, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73,
	0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x4b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x4b, 0x65, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x6f, 0x72,
	0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x73, 0x6f,
	0x72, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x33, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x72, 0x70, 0x63,
	0x2e, 0x53, 0x75, 0x70, 0x65, 0x72, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xcd, 0x01, 0x0a,
	0x15, 0x53, 0x75, 0x70, 0x65, 0x72, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x65, 0x76, 0x65,
	0x6c, 0x54, 0x6f, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x65, 0x76, 0x65,
	0x6c, 0x54, 0x6f, 0x70, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x70, 0x0a, 0x12,
	0x53, 0x75, 0x70, 0x65, 0x72, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x34, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x72, 0x70,
	0x63, 0x2e, 0x53, 0x75, 0x70, 0x65, 0x72, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xa8,
	0x01, 0x0a, 0x16, 0x53, 0x75, 0x70, 0x65, 0x72, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73,
	0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x14, 0x0a,
	0x05, 0x70, 0x61, 0x67, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x61,
	0x67, 0x65, 0x73, 0x12, 0x34, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x05, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x20, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x75, 0x70,
	0x65, 0x72, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x49,
	0x74, 0x65, 0x6d, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0xc4, 0x03, 0x0a, 0x16, 0x53, 0x75,
	0x70, 0x65, 0x72, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61,
	0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69,
	0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x43,
	0x6f, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6d, 0x6f,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x73, 0x75, 0x70, 0x4c, 0x65, 0x76, 0x65, 0x6c,
	0x54, 0x6f, 0x70, 0x43, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10,
	0x73, 0x75, 0x70, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x54, 0x6f, 0x70, 0x43, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x22,
	0x0a, 0x0c, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x1a, 0x0a, 0x08, 0x66, 0x72, 0x65, 0x65, 0x7a, 0x65, 0x41, 0x74, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x66, 0x72, 0x65, 0x65, 0x7a, 0x65, 0x41, 0x74, 0x12, 0x20, 0x0a, 0x0b,
	0x66, 0x72, 0x65, 0x65, 0x7a, 0x65, 0x43, 0x61, 0x75, 0x73, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x66, 0x72, 0x65, 0x65, 0x7a, 0x65, 0x43, 0x61, 0x75, 0x73, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x64, 0x65, 0x55, 0x72,
	0x6c, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x6f, 0x64, 0x65, 0x55, 0x72, 0x6c,
	0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0f,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x43, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x22, 0xb4, 0x01, 0x0a, 0x14, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x4e, 0x65, 0x78, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x4b,
	0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x4b, 0x65,
	0x79, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x6f, 0x72, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x73, 0x6f, 0x72, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12,
	0x36, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e,
	0x61, 0x67, 0x65, 0x6e, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x4e, 0x65,
	0x78, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65,
	0x71, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xc6, 0x04, 0x0a, 0x18, 0x41, 0x67, 0x65, 0x6e,
	0x74, 0x4e, 0x65, 0x78, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x22, 0x0a, 0x0c, 0x73, 0x75, 0x70, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x31,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x75, 0x70, 0x55, 0x73, 0x65, 0x72, 0x6e,
	0x61, 0x6d, 0x65, 0x31, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x75, 0x70, 0x41, 0x67, 0x65, 0x6e, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x75, 0x70, 0x41,
	0x67, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x6f, 0x62, 0x69,
	0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x65, 0x72, 0x49, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x65, 0x72, 0x49, 0x70, 0x12, 0x20, 0x0a, 0x0b, 0x6c, 0x61, 0x73, 0x74, 0x4c, 0x6f,
	0x67, 0x69, 0x6e, 0x49, 0x70, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6c, 0x61, 0x73,
	0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x49, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x6c, 0x65, 0x76, 0x65,
	0x6c, 0x49, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6c, 0x65, 0x76, 0x65, 0x6c,
	0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x6c, 0x61, 0x67, 0x49, 0x64, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x66, 0x6c, 0x61, 0x67, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x67,
	0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x54, 0x6f, 0x70, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x54, 0x6f, 0x70, 0x12, 0x1e,
	0x0a, 0x0a, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0a, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x24,
	0x0a, 0x0d, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x44, 0x65, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e,
	0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x6e, 0x64,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x2e, 0x0a, 0x12, 0x6c, 0x61, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x69,
	0x6e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x12, 0x6c, 0x61, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x6c, 0x61, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x69,
	0x6e, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10,
	0x6c, 0x61, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65,
	0x22, 0x76, 0x0a, 0x15, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x4e, 0x65, 0x78, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12,
	0x37, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e,
	0x61, 0x67, 0x65, 0x6e, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x4e, 0x65,
	0x78, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65,
	0x73, 0x70, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xe0, 0x03, 0x0a, 0x19, 0x41, 0x67, 0x65,
	0x6e, 0x74, 0x4e, 0x65, 0x78, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04,
	0x73, 0x69, 0x7a, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61,
	0x67, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x70, 0x61, 0x67, 0x65, 0x73,
	0x12, 0x22, 0x0a, 0x0c, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x30, 0x0a, 0x13, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x13, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2e, 0x0a, 0x12, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x12, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x34, 0x0a, 0x15, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72,
	0x61, 0x77, 0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x01, 0x52, 0x15, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x61,
	0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x26, 0x0a, 0x0e,
	0x73, 0x75, 0x62, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x0e, 0x73, 0x75, 0x62, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x54,
	0x6f, 0x74, 0x61, 0x6c, 0x12, 0x26, 0x0a, 0x0e, 0x62, 0x65, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0e, 0x62, 0x65,
	0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x24, 0x0a, 0x0d,
	0x70, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x0d, 0x70, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x6f, 0x74,
	0x61, 0x6c, 0x12, 0x37, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x23, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x67, 0x65, 0x6e,
	0x74, 0x4e, 0x65, 0x78, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0xbf, 0x05, 0x0a, 0x19,
	0x41, 0x67, 0x65, 0x6e, 0x74, 0x4e, 0x65, 0x78, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73,
	0x74, 0x44, 0x61, 0x74, 0x61, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65,
	0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65,
	0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x6c, 0x61, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x6c, 0x61, 0x73, 0x74,
	0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x67, 0x65,
	0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x67,
	0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x67, 0x65, 0x6e, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x54, 0x6f, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61,
	0x67, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x54, 0x6f, 0x70, 0x12, 0x1c, 0x0a, 0x09, 0x6c,
	0x65, 0x76, 0x65, 0x6c, 0x54, 0x65, 0x78, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x6c, 0x65, 0x76, 0x65, 0x6c, 0x54, 0x65, 0x78, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x65, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0c, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x24, 0x0a,
	0x0d, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x0d, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x62, 0x65, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0e, 0x62, 0x65, 0x74,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x24, 0x0a, 0x0d, 0x70,
	0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x0d, 0x70, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x6f, 0x74, 0x61,
	0x6c, 0x12, 0x28, 0x0a, 0x0f, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x61, 0x6c, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x77, 0x69, 0x74, 0x68,
	0x64, 0x72, 0x61, 0x77, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2a, 0x0a, 0x10, 0x77,
	0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x01, 0x52, 0x10, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x61,
	0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x75, 0x62, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x73, 0x75, 0x62, 0x41,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54,
	0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d,
	0x6f, 0x62, 0x69, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x11,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x12, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x6f, 0x69, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x69,
	0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x14, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x69,
	0x6e, 0x18, 0x15, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x63, 0x6f, 0x69, 0x6e, 0x32, 0xfc, 0x21,
	0x0a, 0x08, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x72, 0x70, 0x63, 0x12, 0x42, 0x0a, 0x0e, 0x70, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x1b, 0x2e, 0x61,
	0x67, 0x65, 0x6e, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x13, 0x2e, 0x61, 0x67, 0x65, 0x6e,
	0x74, 0x72, 0x70, 0x63, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x12, 0x37,
	0x0a, 0x0b, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x13, 0x2e,
	0x61, 0x67, 0x65, 0x6e, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52,
	0x65, 0x71, 0x1a, 0x13, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x12, 0x3a, 0x0a, 0x08, 0x61, 0x64, 0x64, 0x41, 0x67,
	0x65, 0x6e, 0x74, 0x12, 0x16, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x41,
	0x64, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x61, 0x67,
	0x65, 0x6e, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x52, 0x65, 0x73, 0x12, 0x4d, 0x0a, 0x0f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x72, 0x70,
	0x63, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x72, 0x70, 0x63, 0x2e,
	0x61, 0x67, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x12, 0x47, 0x0a, 0x0d, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x6e, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x1a, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x41,
	0x67, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x6e, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a,
	0x1a, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74,
	0x4c, 0x69, 0x6e, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x12, 0x4d, 0x0a, 0x11, 0x61,
	0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x12, 0x18, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x67, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x61, 0x67, 0x65,
	0x6e, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x73, 0x12, 0x41, 0x0a, 0x0b, 0x61, 0x67,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x18, 0x2e, 0x61, 0x67, 0x65, 0x6e,
	0x74, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x41,
	0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x12, 0x4b, 0x0a,
	0x10, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x44, 0x61, 0x69, 0x6c,
	0x79, 0x12, 0x18, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x67, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x61, 0x67,
	0x65, 0x6e, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x52, 0x65, 0x73, 0x12, 0x4d, 0x0a, 0x11, 0x61, 0x67,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x12,
	0x18, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x61, 0x67, 0x65, 0x6e,
	0x74, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x52, 0x65, 0x73, 0x12, 0x3d, 0x0a, 0x0c, 0x43, 0x6f, 0x69,
	0x6e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x12, 0x15, 0x2e, 0x61, 0x67, 0x65, 0x6e,
	0x74, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x1a, 0x16, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x66, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x54, 0x0a, 0x11, 0x44, 0x65, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x12, 0x1e, 0x2e,
	0x61, 0x67, 0x65, 0x6e, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e,
	0x61, 0x67, 0x65, 0x6e, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x5d,
	0x0a, 0x14, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x74,
	0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x12, 0x21, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x72, 0x70,
	0x63, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x74,
	0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x22, 0x2e, 0x61, 0x67, 0x65, 0x6e,
	0x74, 0x72, 0x70, 0x63, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x61, 0x6c, 0x53,
	0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x57, 0x0a,
	0x12, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x61, 0x74, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x1f, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x43,
	0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x72, 0x70, 0x63, 0x2e,
	0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x61, 0x74, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x45, 0x0a, 0x0c, 0x74, 0x65, 0x61, 0x6d, 0x42, 0x65,
	0x6e, 0x65, 0x66, 0x69, 0x74, 0x73, 0x12, 0x19, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x72, 0x70,
	0x63, 0x2e, 0x54, 0x65, 0x61, 0x6d, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x74, 0x73, 0x52, 0x65,
	0x71, 0x1a, 0x1a, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x65, 0x61,
	0x6d, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x54, 0x0a,
	0x11, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x73, 0x12, 0x1e, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x6f,
	0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x52,
	0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x6f,
	0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x57, 0x0a, 0x12, 0x73, 0x75, 0x62, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61,
	0x74, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x1f, 0x2e, 0x61, 0x67, 0x65, 0x6e,
	0x74, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x75, 0x62, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e, 0x61, 0x67, 0x65,
	0x6e, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x75, 0x62, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74,
	0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x60, 0x0a, 0x15,
	0x61, 0x67, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x22, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x72, 0x70, 0x63,
	0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x23, 0x2e, 0x61, 0x67, 0x65, 0x6e,
	0x74, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x60,
	0x0a, 0x15, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x22, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x72,
	0x70, 0x63, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x23, 0x2e, 0x61, 0x67,
	0x65, 0x6e, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x7b, 0x0a, 0x1e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x65, 0x64, 0x12, 0x2b, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x67,
	0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x57, 0x69, 0x74,
	0x68, 0x64, 0x72, 0x61, 0x77, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x65, 0x64, 0x52, 0x65, 0x71, 0x1a,
	0x2c, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74,
	0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72,
	0x61, 0x77, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x57, 0x0a,
	0x12, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x4c, 0x6f, 0x67, 0x12, 0x1f, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x41,
	0x67, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4c, 0x6f,
	0x67, 0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x72, 0x70, 0x63, 0x2e,
	0x41, 0x67, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4c,
	0x6f, 0x67, 0x52, 0x65, 0x73, 0x70, 0x12, 0x57, 0x0a, 0x12, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x73, 0x65, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x1f, 0x2e, 0x61,
	0x67, 0x65, 0x6e, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73,
	0x65, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e,
	0x61, 0x67, 0x65, 0x6e, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x73, 0x65, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x6c, 0x0a, 0x19, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65,
	0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x26, 0x2e, 0x61,
	0x67, 0x65, 0x6e, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x47, 0x65, 0x6e,
	0x65, 0x72, 0x61, 0x74, 0x65, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x53, 0x65, 0x63, 0x72, 0x65,
	0x74, 0x52, 0x65, 0x71, 0x1a, 0x27, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x72, 0x70, 0x63, 0x2e,
	0x41, 0x67, 0x65, 0x6e, 0x74, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x47, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3a, 0x0a,
	0x05, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x17, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x72, 0x70,
	0x63, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x1a,
	0x18, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74,
	0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3c, 0x0a, 0x09, 0x61, 0x67, 0x65,
	0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x72, 0x70,
	0x63, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x17,
	0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4c, 0x0a, 0x0d, 0x67, 0x65, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x12, 0x1c, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74,
	0x72, 0x70, 0x63, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74,
	0x69, 0x63, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x72, 0x70,
	0x63, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3b, 0x0a, 0x06, 0x6c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x12,
	0x17, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x4c, 0x6f, 0x67, 0x6f, 0x75,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74,
	0x72, 0x70, 0x63, 0x2e, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x5a, 0x0a, 0x13, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x55, 0x73, 0x65, 0x72,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x20, 0x2e, 0x61, 0x67, 0x65, 0x6e,
	0x74, 0x72, 0x70, 0x63, 0x2e, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x55, 0x73, 0x65, 0x72, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x21, 0x2e, 0x61, 0x67,
	0x65, 0x6e, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x55, 0x73, 0x65,
	0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x57,
	0x0a, 0x12, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x1f, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x72, 0x70, 0x63, 0x2e,
	0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x72, 0x70, 0x63,
	0x2e, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x42, 0x0a, 0x0b, 0x64, 0x65, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x18, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x72, 0x70,
	0x63, 0x2e, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x1a, 0x19, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x44, 0x65, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x6c, 0x0a, 0x19, 0x74,
	0x61, 0x73, 0x6b, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x43,
	0x6f, 0x6d, 0x6d, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74,
	0x72, 0x70, 0x63, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x1a, 0x27, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x61, 0x73, 0x6b,
	0x41, 0x67, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x43, 0x6f, 0x6d, 0x6d,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x60, 0x0a, 0x15, 0x74, 0x61, 0x73,
	0x6b, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x42, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x22, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x61,
	0x73, 0x6b, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x42, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x23, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x72, 0x70,
	0x63, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x42, 0x65, 0x74, 0x43, 0x6f,
	0x6d, 0x6d, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x60, 0x0a, 0x15, 0x61,
	0x67, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x50, 0x72,
	0x6f, 0x66, 0x69, 0x74, 0x12, 0x22, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x72, 0x70, 0x63, 0x2e,
	0x41, 0x67, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x23, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74,
	0x72, 0x70, 0x63, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x6b, 0x0a,
	0x16, 0x74, 0x61, 0x73, 0x6b, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x79, 0x43, 0x6f, 0x6d,
	0x6d, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x27, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x72,
	0x70, 0x63, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x6d,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71,
	0x1a, 0x28, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x61, 0x73, 0x6b,
	0x41, 0x67, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x63,
	0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x6d, 0x0a, 0x18, 0x74, 0x61,
	0x73, 0x6b, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x43, 0x6f, 0x6d, 0x6d,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x27, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x72, 0x70,
	0x63, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x1a,
	0x28, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x41,
	0x67, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x68,
	0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x6c, 0x0a, 0x17, 0x74, 0x61, 0x73,
	0x6b, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x59, 0x65, 0x61, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x27, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x72, 0x70, 0x63, 0x2e,
	0x54, 0x61, 0x73, 0x6b, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x28, 0x2e,
	0x61, 0x67, 0x65, 0x6e, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x41, 0x67, 0x65,
	0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x68, 0x65, 0x64,
	0x75, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x69, 0x0a, 0x18, 0x61, 0x67, 0x65, 0x6e, 0x74,
	0x57, 0x69, 0x74, 0x68, 0x44, 0x72, 0x61, 0x77, 0x61, 0x6c, 0x43, 0x6f, 0x6d, 0x6d, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x25, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x41,
	0x67, 0x65, 0x6e, 0x74, 0x57, 0x69, 0x74, 0x68, 0x44, 0x72, 0x61, 0x77, 0x61, 0x6c, 0x43, 0x6f,
	0x6d, 0x6d, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x26, 0x2e, 0x61, 0x67, 0x65,
	0x6e, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x57, 0x69, 0x74, 0x68, 0x44,
	0x72, 0x61, 0x77, 0x61, 0x6c, 0x43, 0x6f, 0x6d, 0x6d, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x51, 0x0a, 0x10, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x42, 0x69, 0x6e, 0x64, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1d, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x72, 0x70,
	0x63, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x42, 0x69, 0x6e, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x72, 0x70, 0x63,
	0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x42, 0x69, 0x6e, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4e, 0x0a, 0x0f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x50, 0x61,
	0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1c, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74,
	0x72, 0x70, 0x63, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x79, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x72, 0x70,
	0x63, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x5d, 0x0a, 0x14, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x57, 0x69,
	0x74, 0x68, 0x44, 0x72, 0x61, 0x77, 0x61, 0x6c, 0x41, 0x75, 0x64, 0x69, 0x74, 0x12, 0x21, 0x2e,
	0x61, 0x67, 0x65, 0x6e, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x57, 0x69,
	0x74, 0x68, 0x44, 0x72, 0x61, 0x77, 0x61, 0x6c, 0x41, 0x75, 0x64, 0x69, 0x74, 0x52, 0x65, 0x71,
	0x1a, 0x22, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x67, 0x65, 0x6e,
	0x74, 0x57, 0x69, 0x74, 0x68, 0x44, 0x72, 0x61, 0x77, 0x61, 0x6c, 0x41, 0x75, 0x64, 0x69, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x60, 0x0a, 0x15, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x57, 0x69, 0x74,
	0x68, 0x44, 0x72, 0x61, 0x77, 0x61, 0x6c, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x22, 0x2e,
	0x61, 0x67, 0x65, 0x6e, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x57, 0x69,
	0x74, 0x68, 0x44, 0x72, 0x61, 0x77, 0x61, 0x6c, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65,
	0x71, 0x1a, 0x23, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x67, 0x65,
	0x6e, 0x74, 0x57, 0x69, 0x74, 0x68, 0x44, 0x72, 0x61, 0x77, 0x61, 0x6c, 0x52, 0x65, 0x6a, 0x65,
	0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x48, 0x0a, 0x0d, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1a, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x72,
	0x70, 0x63, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x41,
	0x67, 0x65, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x69, 0x0a, 0x18, 0x74, 0x61, 0x73, 0x6b, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x25, 0x2e, 0x61,
	0x67, 0x65, 0x6e, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x41, 0x67, 0x65, 0x6e,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x52, 0x65, 0x71, 0x1a, 0x26, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x54,
	0x61, 0x73, 0x6b, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x44, 0x61, 0x69, 0x6c,
	0x79, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x6e, 0x0a, 0x19, 0x74,
	0x61, 0x73, 0x6b, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x65, 0x72, 0x44, 0x61, 0x79, 0x43, 0x6f,
	0x6d, 0x6d, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x27, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74,
	0x72, 0x70, 0x63, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d,
	0x6d, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x65,
	0x71, 0x1a, 0x28, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x61, 0x73,
	0x6b, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53,
	0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x57, 0x0a, 0x12, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x1f, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x64, 0x6d,
	0x69, 0x6e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x1a, 0x20, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x64,
	0x6d, 0x69, 0x6e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x68, 0x0a, 0x13, 0x74, 0x61, 0x73, 0x6b, 0x41, 0x67, 0x65, 0x6e,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x27, 0x2e, 0x61, 0x67,
	0x65, 0x6e, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x41, 0x67, 0x65, 0x6e, 0x74,
	0x43, 0x6f, 0x6d, 0x6d, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c,
	0x65, 0x52, 0x65, 0x71, 0x1a, 0x28, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x72, 0x70, 0x63, 0x2e,
	0x54, 0x61, 0x73, 0x6b, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3c,
	0x0a, 0x09, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x54, 0x65, 0x61, 0x6d, 0x12, 0x16, 0x2e, 0x61, 0x67,
	0x65, 0x6e, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x54, 0x65, 0x61, 0x6d,
	0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x41,
	0x67, 0x65, 0x6e, 0x74, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x12, 0x68, 0x0a, 0x13,
	0x74, 0x61, 0x73, 0x6b, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x12, 0x27, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x54,
	0x61, 0x73, 0x6b, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x28, 0x2e, 0x61,
	0x67, 0x65, 0x6e, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x41, 0x67, 0x65, 0x6e,
	0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75,
	0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x51, 0x0a, 0x10, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x42,
	0x6f, 0x61, 0x72, 0x64, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x12, 0x1d, 0x2e, 0x61, 0x67, 0x65,
	0x6e, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x42, 0x6f, 0x61, 0x72, 0x64,
	0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x61, 0x67, 0x65, 0x6e,
	0x74, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x53,
	0x74, 0x61, 0x74, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4b, 0x0a, 0x0e, 0x73, 0x75, 0x70,
	0x65, 0x72, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1b, 0x2e, 0x61, 0x67,
	0x65, 0x6e, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x75, 0x70, 0x65, 0x72, 0x41, 0x67, 0x65, 0x6e,
	0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74,
	0x72, 0x70, 0x63, 0x2e, 0x53, 0x75, 0x70, 0x65, 0x72, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x54, 0x0a, 0x11, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x6e,
	0x65, 0x78, 0x74, 0x75, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1e, 0x2e, 0x61, 0x67,
	0x65, 0x6e, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x4e, 0x65, 0x78, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x61, 0x67,
	0x65, 0x6e, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x4e, 0x65, 0x78, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x42, 0x0c, 0x5a, 0x0a,
	0x2e, 0x2f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x72, 0x70, 0x63, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_agentrpc_proto_rawDescOnce sync.Once
	file_agentrpc_proto_rawDescData = file_agentrpc_proto_rawDesc
)

func file_agentrpc_proto_rawDescGZIP() []byte {
	file_agentrpc_proto_rawDescOnce.Do(func() {
		file_agentrpc_proto_rawDescData = protoimpl.X.CompressGZIP(file_agentrpc_proto_rawDescData)
	})
	return file_agentrpc_proto_rawDescData
}

var file_agentrpc_proto_msgTypes = make([]protoimpl.MessageInfo, 151)
var file_agentrpc_proto_goTypes = []any{
	(*AgentCommissionData)(nil),                    // 0: agentrpc.agentCommissionData
	(*AgentReportItem)(nil),                        // 1: agentrpc.AgentReportItem
	(*AgentReportDailyItem)(nil),                   // 2: agentrpc.AgentReportDailyItem
	(*TransferResp)(nil),                           // 3: agentrpc.TransferResp
	(*AddConfigReq)(nil),                           // 4: agentrpc.AddConfigReq
	(*AddConfigRes)(nil),                           // 5: agentrpc.AddConfigRes
	(*AgentReportProfitRes)(nil),                   // 6: agentrpc.AgentReportProfitRes
	(*WithdrawalStatisticsReq)(nil),                // 7: agentrpc.WithdrawalStatisticsReq
	(*DepositStatisticsResp)(nil),                  // 8: agentrpc.DepositStatisticsResp
	(*ConfigRes)(nil),                              // 9: agentrpc.ConfigRes
	(*AgentLineListRes)(nil),                       // 10: agentrpc.AgentLineListRes
	(*AgentReportProfitItem)(nil),                  // 11: agentrpc.AgentReportProfitItem
	(*TransferReq)(nil),                            // 12: agentrpc.TransferReq
	(*EmptyResp)(nil),                              // 13: agentrpc.EmptyResp
	(*AgentReportMemberItem)(nil),                  // 14: agentrpc.AgentReportMemberItem
	(*AgentReportMemberRes)(nil),                   // 15: agentrpc.AgentReportMemberRes
	(*AgentReportData)(nil),                        // 16: agentrpc.AgentReportData
	(*AgentReportDailyRes)(nil),                    // 17: agentrpc.AgentReportDailyRes
	(*DepositStatisticsReq)(nil),                   // 18: agentrpc.DepositStatisticsReq
	(*PasswordUpdateReq)(nil),                      // 19: agentrpc.PasswordUpdateReq
	(*AgentCommissionReq)(nil),                     // 20: agentrpc.agentCommissionReq
	(*AgentReportProfitData)(nil),                  // 21: agentrpc.AgentReportProfitData
	(*ConfigReq)(nil),                              // 22: agentrpc.ConfigReq
	(*AgentCommissionRes)(nil),                     // 23: agentrpc.agentCommissionRes
	(*AgentLineListReq)(nil),                       // 24: agentrpc.AgentLineListReq
	(*AgentLineListItem)(nil),                      // 25: agentrpc.AgentLineListItem
	(*AgentLineListData)(nil),                      // 26: agentrpc.AgentLineListData
	(*AgentReportRes)(nil),                         // 27: agentrpc.AgentReportRes
	(*WithdrawalStatisticsResp)(nil),               // 28: agentrpc.WithdrawalStatisticsResp
	(*AgentReportReq)(nil),                         // 29: agentrpc.AgentReportReq
	(*AgentReportMemberData)(nil),                  // 30: agentrpc.AgentReportMemberData
	(*AgentReportDailyData)(nil),                   // 31: agentrpc.AgentReportDailyData
	(*CommissionRateListReq)(nil),                  // 32: agentrpc.CommissionRateListReq
	(*CommissionRateListResp)(nil),                 // 33: agentrpc.CommissionRateListResp
	(*CommissionRateListData)(nil),                 // 34: agentrpc.CommissionRateListData
	(*TeamBenefitsReq)(nil),                        // 35: agentrpc.TeamBenefitsReq
	(*TeamBenefitsResp)(nil),                       // 36: agentrpc.TeamBenefitsResp
	(*TeamBenefitsData)(nil),                       // 37: agentrpc.TeamBenefitsData
	(*CommissionRecordsReq)(nil),                   // 38: agentrpc.CommissionRecordsReq
	(*CommissionRecordsDataReq)(nil),               // 39: agentrpc.CommissionRecordsDataReq
	(*CommissionRecordsResp)(nil),                  // 40: agentrpc.CommissionRecordsResp
	(*CommissionRecordsData)(nil),                  // 41: agentrpc.CommissionRecordsData
	(*CommissionRecordsDataItem)(nil),              // 42: agentrpc.CommissionRecordsDataItem
	(*SubordinateDetailsReq)(nil),                  // 43: agentrpc.SubordinateDetailsReq
	(*SubordinateDetailsResp)(nil),                 // 44: agentrpc.SubordinateDetailsResp
	(*SubordinateDetailsData)(nil),                 // 45: agentrpc.SubordinateDetailsData
	(*SubordinateDetailsResSubDto)(nil),            // 46: agentrpc.SubordinateDetailsResSubDto
	(*SuperAddConfigReq)(nil),                      // 47: agentrpc.SuperAddConfigReq
	(*SuperAddConfigResp)(nil),                     // 48: agentrpc.SuperAddConfigResp
	(*AgentCommissionRecordReq)(nil),               // 49: agentrpc.AgentCommissionRecordReq
	(*AgentCommissionRecordDataReq)(nil),           // 50: agentrpc.AgentCommissionRecordDataReq
	(*AgentCommissionRecordResp)(nil),              // 51: agentrpc.AgentCommissionRecordResp
	(*AgentCommissionRecordDataResp)(nil),          // 52: agentrpc.AgentCommissionRecordDataResp
	(*AgentCommissionRecordDataItem)(nil),          // 53: agentrpc.AgentCommissionRecordDataItem
	(*AgentCommissionUpdateReq)(nil),               // 54: agentrpc.AgentCommissionUpdateReq
	(*AgentCommissionUpdateResp)(nil),              // 55: agentrpc.AgentCommissionUpdateResp
	(*AgentCommissionWithdrawRecoredReq)(nil),      // 56: agentrpc.AgentCommissionWithdrawRecoredReq
	(*AgentCommissionWithdrawRecoredDataReq)(nil),  // 57: agentrpc.AgentCommissionWithdrawRecoredDataReq
	(*AgentCommissionWithdrawRecoredResp)(nil),     // 58: agentrpc.AgentCommissionWithdrawRecoredResp
	(*AgentCommissionWithdrawRecoredData)(nil),     // 59: agentrpc.AgentCommissionWithdrawRecoredData
	(*AgentCommissionWithdrawRecoredDataItem)(nil), // 60: agentrpc.AgentCommissionWithdrawRecoredDataItem
	(*AgentCommissionLogReq)(nil),                  // 61: agentrpc.AgentCommissionLogReq
	(*AgentCommissionLogDataReq)(nil),              // 62: agentrpc.AgentCommissionLogDataReq
	(*AgentCommissionLogResp)(nil),                 // 63: agentrpc.AgentCommissionLogResp
	(*AgentCommissionLogData)(nil),                 // 64: agentrpc.AgentCommissionLogData
	(*AgentCommissionLogDataItem)(nil),             // 65: agentrpc.AgentCommissionLogDataItem
	(*AgentResetPasswordReq)(nil),                  // 66: agentrpc.AgentResetPasswordReq
	(*AgentResetPasswordResp)(nil),                 // 67: agentrpc.AgentResetPasswordResp
	(*AgentLoginReq)(nil),                          // 68: agentrpc.AgentLoginReq
	(*AgentLoginResp)(nil),                         // 69: agentrpc.AgentLoginResp
	(*AgentGenerateGoogleSecretReq)(nil),           // 70: agentrpc.AgentGenerateGoogleSecretReq
	(*AgentGenerateGoogleSecretResp)(nil),          // 71: agentrpc.AgentGenerateGoogleSecretResp
	(*AgentGenerateGoogleSecretData)(nil),          // 72: agentrpc.AgentGenerateGoogleSecretData
	(*AgentLoginData)(nil),                         // 73: agentrpc.AgentLoginData
	(*AgentInfoReq)(nil),                           // 74: agentrpc.AgentInfoReq
	(*AgentInfoResp)(nil),                          // 75: agentrpc.AgentInfoResp
	(*AgentStatisticsReq)(nil),                     // 76: agentrpc.AgentStatisticsReq
	(*AgentStatisticsResp)(nil),                    // 77: agentrpc.AgentStatisticsResp
	(*AgentStatisticsData)(nil),                    // 78: agentrpc.AgentStatisticsData
	(*LogoutRequest)(nil),                          // 79: agentrpc.LogoutRequest
	(*LogoutResponse)(nil),                         // 80: agentrpc.LogoutResponse
	(*OnlineUserCountListReq)(nil),                 // 81: agentrpc.OnlineUserCountListReq
	(*OnlineUserCountListDataReq)(nil),             // 82: agentrpc.OnlineUserCountListDataReq
	(*OnlineUserCountListResp)(nil),                // 83: agentrpc.OnlineUserCountListResp
	(*OnlineUserCountListData)(nil),                // 84: agentrpc.OnlineUserCountListData
	(*OnlineUserCountListDataItem)(nil),            // 85: agentrpc.OnlineUserCountListDataItem
	(*WithdrawRecordListReq)(nil),                  // 86: agentrpc.WithdrawRecordListReq
	(*WithdrawRecordListDataReq)(nil),              // 87: agentrpc.WithdrawRecordListDataReq
	(*WithdrawRecordListResp)(nil),                 // 88: agentrpc.WithdrawRecordListResp
	(*WithdrawRecordListData)(nil),                 // 89: agentrpc.WithdrawRecordListData
	(*WinCoinWithdrawalRecordItem)(nil),            // 90: agentrpc.WinCoinWithdrawalRecordItem
	(*DepositListReq)(nil),                         // 91: agentrpc.DepositListReq
	(*DepositListDataReq)(nil),                     // 92: agentrpc.DepositListDataReq
	(*DepositListResp)(nil),                        // 93: agentrpc.DepositListResp
	(*DepositListData)(nil),                        // 94: agentrpc.DepositListData
	(*DepositListDataItem)(nil),                    // 95: agentrpc.DepositListDataItem
	(*TaskAgentDepositCommssionReq)(nil),           // 96: agentrpc.TaskAgentDepositCommssionReq
	(*TaskAgentDepositCommssionResp)(nil),          // 97: agentrpc.TaskAgentDepositCommssionResp
	(*TaskAgentBetCommssionReq)(nil),               // 98: agentrpc.TaskAgentBetCommssionReq
	(*TaskAgentBetCommssionResp)(nil),              // 99: agentrpc.TaskAgentBetCommssionResp
	(*AgentCommissionProfitReq)(nil),               // 100: agentrpc.AgentCommissionProfitReq
	(*AgentCommissionProfitDataReq)(nil),           // 101: agentrpc.AgentCommissionProfitDataReq
	(*AgentCommissionProfitResp)(nil),              // 102: agentrpc.AgentCommissionProfitResp
	(*AgentCommissionProfitDataResp)(nil),          // 103: agentrpc.AgentCommissionProfitDataResp
	(*AgentCommissionProfitDataItem)(nil),          // 104: agentrpc.AgentCommissionProfitDataItem
	(*TaskAgentCommssionScheduleReq)(nil),          // 105: agentrpc.TaskAgentCommssionScheduleReq
	(*TaskAgentCommssionScheduleResp)(nil),         // 106: agentrpc.TaskAgentCommssionScheduleResp
	(*AgentWithDrawalCommssionReq)(nil),            // 107: agentrpc.AgentWithDrawalCommssionReq
	(*AgentWithDrawalCommssionResp)(nil),           // 108: agentrpc.AgentWithDrawalCommssionResp
	(*AgentBindAccountReq)(nil),                    // 109: agentrpc.AgentBindAccountReq
	(*AgentBindAccountResp)(nil),                   // 110: agentrpc.AgentBindAccountResp
	(*AgentPayAccountReq)(nil),                     // 111: agentrpc.AgentPayAccountReq
	(*AgentPayAccountResp)(nil),                    // 112: agentrpc.AgentPayAccountResp
	(*PayAccountData)(nil),                         // 113: agentrpc.PayAccountData
	(*AgentWithDrawalAuditReq)(nil),                // 114: agentrpc.AgentWithDrawalAuditReq
	(*AgentWithDrawalAuditResp)(nil),               // 115: agentrpc.AgentWithDrawalAuditResp
	(*AgentWithDrawalRejectReq)(nil),               // 116: agentrpc.AgentWithDrawalRejectReq
	(*AgentWithDrawalRejectResp)(nil),              // 117: agentrpc.AgentWithDrawalRejectResp
	(*AgentUserListReq)(nil),                       // 118: agentrpc.AgentUserListReq
	(*AgentUserListDataReq)(nil),                   // 119: agentrpc.AgentUserListDataReq
	(*AgentUserListResp)(nil),                      // 120: agentrpc.AgentUserListResp
	(*AgentUserListDataResp)(nil),                  // 121: agentrpc.AgentUserListDataResp
	(*AgentUserListDataItem)(nil),                  // 122: agentrpc.AgentUserListDataItem
	(*TaskAgentUserDailyReportReq)(nil),            // 123: agentrpc.TaskAgentUserDailyReportReq
	(*TaskAgentUserDailyReportResp)(nil),           // 124: agentrpc.TaskAgentUserDailyReportResp
	(*AdminAgentUserListReq)(nil),                  // 125: agentrpc.AdminAgentUserListReq
	(*AdminAgentUserListDataReq)(nil),              // 126: agentrpc.AdminAgentUserListDataReq
	(*AdminAgentUserListResp)(nil),                 // 127: agentrpc.AdminAgentUserListResp
	(*AdminAgentUserListDataResp)(nil),             // 128: agentrpc.AdminAgentUserListDataResp
	(*AdminAgentUserListDataItem)(nil),             // 129: agentrpc.AdminAgentUserListDataItem
	(*AgentTeamReq)(nil),                           // 130: agentrpc.AgentTeamReq
	(*AgentTeamDataReq)(nil),                       // 131: agentrpc.AgentTeamDataReq
	(*AgentTeamResp)(nil),                          // 132: agentrpc.AgentTeamResp
	(*AgentTeamDataResp)(nil),                      // 133: agentrpc.AgentTeamDataResp
	(*AgentTeamDataItem)(nil),                      // 134: agentrpc.AgentTeamDataItem
	(*AgentBoardStaticReq)(nil),                    // 135: agentrpc.AgentBoardStaticReq
	(*AgentBoardStaticResp)(nil),                   // 136: agentrpc.AgentBoardStaticResp
	(*AgentBoardStaticData)(nil),                   // 137: agentrpc.AgentBoardStaticData
	(*SuperAgentListReq)(nil),                      // 138: agentrpc.SuperAgentListReq
	(*SuperAgentListDataReq)(nil),                  // 139: agentrpc.SuperAgentListDataReq
	(*SuperAgentListResp)(nil),                     // 140: agentrpc.SuperAgentListResp
	(*SuperAgentListDataResp)(nil),                 // 141: agentrpc.SuperAgentListDataResp
	(*SuperAgentListDataItem)(nil),                 // 142: agentrpc.SuperAgentListDataItem
	(*AgentNextUserListReq)(nil),                   // 143: agentrpc.AgentNextUserListReq
	(*AgentNextUserListDataReq)(nil),               // 144: agentrpc.AgentNextUserListDataReq
	(*AgentNextUserListResp)(nil),                  // 145: agentrpc.AgentNextUserListResp
	(*AgentNextUserListDataResp)(nil),              // 146: agentrpc.AgentNextUserListDataResp
	(*AgentNextUserListDataItem)(nil),              // 147: agentrpc.AgentNextUserListDataItem
	nil,                                            // 148: agentrpc.ConfigRes.DataEntry
	nil,                                            // 149: agentrpc.AgentLineListReq.DataEntry
	nil,                                            // 150: agentrpc.AgentReportReq.DataEntry
}
var file_agentrpc_proto_depIdxs = []int32{
	21,  // 0: agentrpc.AgentReportProfitRes.data:type_name -> agentrpc.AgentReportProfitData
	148, // 1: agentrpc.ConfigRes.data:type_name -> agentrpc.ConfigRes.DataEntry
	26,  // 2: agentrpc.AgentLineListRes.data:type_name -> agentrpc.AgentLineListData
	30,  // 3: agentrpc.AgentReportMemberRes.data:type_name -> agentrpc.AgentReportMemberData
	1,   // 4: agentrpc.AgentReportData.list:type_name -> agentrpc.AgentReportItem
	31,  // 5: agentrpc.AgentReportDailyRes.data:type_name -> agentrpc.AgentReportDailyData
	11,  // 6: agentrpc.AgentReportProfitData.list:type_name -> agentrpc.AgentReportProfitItem
	0,   // 7: agentrpc.agentCommissionRes.data:type_name -> agentrpc.agentCommissionData
	149, // 8: agentrpc.AgentLineListReq.data:type_name -> agentrpc.AgentLineListReq.DataEntry
	25,  // 9: agentrpc.AgentLineListData.list:type_name -> agentrpc.AgentLineListItem
	16,  // 10: agentrpc.AgentReportRes.data:type_name -> agentrpc.AgentReportData
	150, // 11: agentrpc.AgentReportReq.data:type_name -> agentrpc.AgentReportReq.DataEntry
	14,  // 12: agentrpc.AgentReportMemberData.list:type_name -> agentrpc.AgentReportMemberItem
	2,   // 13: agentrpc.AgentReportDailyData.list:type_name -> agentrpc.AgentReportDailyItem
	34,  // 14: agentrpc.CommissionRateListResp.data:type_name -> agentrpc.CommissionRateListData
	37,  // 15: agentrpc.TeamBenefitsResp.data:type_name -> agentrpc.TeamBenefitsData
	39,  // 16: agentrpc.CommissionRecordsReq.data:type_name -> agentrpc.CommissionRecordsDataReq
	41,  // 17: agentrpc.CommissionRecordsResp.data:type_name -> agentrpc.CommissionRecordsData
	42,  // 18: agentrpc.CommissionRecordsData.list:type_name -> agentrpc.CommissionRecordsDataItem
	45,  // 19: agentrpc.SubordinateDetailsResp.data:type_name -> agentrpc.SubordinateDetailsData
	46,  // 20: agentrpc.SubordinateDetailsData.level1:type_name -> agentrpc.SubordinateDetailsResSubDto
	46,  // 21: agentrpc.SubordinateDetailsData.level2:type_name -> agentrpc.SubordinateDetailsResSubDto
	46,  // 22: agentrpc.SubordinateDetailsData.level3:type_name -> agentrpc.SubordinateDetailsResSubDto
	50,  // 23: agentrpc.AgentCommissionRecordReq.data:type_name -> agentrpc.AgentCommissionRecordDataReq
	52,  // 24: agentrpc.AgentCommissionRecordResp.data:type_name -> agentrpc.AgentCommissionRecordDataResp
	53,  // 25: agentrpc.AgentCommissionRecordDataResp.list:type_name -> agentrpc.AgentCommissionRecordDataItem
	57,  // 26: agentrpc.AgentCommissionWithdrawRecoredReq.data:type_name -> agentrpc.AgentCommissionWithdrawRecoredDataReq
	59,  // 27: agentrpc.AgentCommissionWithdrawRecoredResp.data:type_name -> agentrpc.AgentCommissionWithdrawRecoredData
	60,  // 28: agentrpc.AgentCommissionWithdrawRecoredData.list:type_name -> agentrpc.AgentCommissionWithdrawRecoredDataItem
	62,  // 29: agentrpc.AgentCommissionLogReq.data:type_name -> agentrpc.AgentCommissionLogDataReq
	64,  // 30: agentrpc.AgentCommissionLogResp.data:type_name -> agentrpc.AgentCommissionLogData
	65,  // 31: agentrpc.AgentCommissionLogData.list:type_name -> agentrpc.AgentCommissionLogDataItem
	73,  // 32: agentrpc.AgentLoginResp.data:type_name -> agentrpc.AgentLoginData
	72,  // 33: agentrpc.AgentGenerateGoogleSecretResp.data:type_name -> agentrpc.AgentGenerateGoogleSecretData
	73,  // 34: agentrpc.AgentInfoResp.data:type_name -> agentrpc.AgentLoginData
	78,  // 35: agentrpc.AgentStatisticsResp.data:type_name -> agentrpc.AgentStatisticsData
	82,  // 36: agentrpc.OnlineUserCountListReq.data:type_name -> agentrpc.OnlineUserCountListDataReq
	84,  // 37: agentrpc.OnlineUserCountListResp.data:type_name -> agentrpc.OnlineUserCountListData
	85,  // 38: agentrpc.OnlineUserCountListData.list:type_name -> agentrpc.OnlineUserCountListDataItem
	87,  // 39: agentrpc.WithdrawRecordListReq.data:type_name -> agentrpc.WithdrawRecordListDataReq
	89,  // 40: agentrpc.WithdrawRecordListResp.data:type_name -> agentrpc.WithdrawRecordListData
	90,  // 41: agentrpc.WithdrawRecordListData.list:type_name -> agentrpc.WinCoinWithdrawalRecordItem
	92,  // 42: agentrpc.DepositListReq.data:type_name -> agentrpc.DepositListDataReq
	94,  // 43: agentrpc.DepositListResp.data:type_name -> agentrpc.DepositListData
	95,  // 44: agentrpc.DepositListData.list:type_name -> agentrpc.DepositListDataItem
	101, // 45: agentrpc.AgentCommissionProfitReq.data:type_name -> agentrpc.AgentCommissionProfitDataReq
	103, // 46: agentrpc.AgentCommissionProfitResp.data:type_name -> agentrpc.AgentCommissionProfitDataResp
	104, // 47: agentrpc.AgentCommissionProfitDataResp.list:type_name -> agentrpc.AgentCommissionProfitDataItem
	113, // 48: agentrpc.AgentPayAccountResp.data:type_name -> agentrpc.PayAccountData
	119, // 49: agentrpc.AgentUserListReq.data:type_name -> agentrpc.AgentUserListDataReq
	121, // 50: agentrpc.AgentUserListResp.data:type_name -> agentrpc.AgentUserListDataResp
	122, // 51: agentrpc.AgentUserListDataResp.list:type_name -> agentrpc.AgentUserListDataItem
	126, // 52: agentrpc.AdminAgentUserListReq.data:type_name -> agentrpc.AdminAgentUserListDataReq
	128, // 53: agentrpc.AdminAgentUserListResp.data:type_name -> agentrpc.AdminAgentUserListDataResp
	129, // 54: agentrpc.AdminAgentUserListDataResp.list:type_name -> agentrpc.AdminAgentUserListDataItem
	131, // 55: agentrpc.AgentTeamReq.data:type_name -> agentrpc.AgentTeamDataReq
	133, // 56: agentrpc.AgentTeamResp.data:type_name -> agentrpc.AgentTeamDataResp
	134, // 57: agentrpc.AgentTeamDataResp.list:type_name -> agentrpc.AgentTeamDataItem
	137, // 58: agentrpc.AgentBoardStaticResp.data:type_name -> agentrpc.AgentBoardStaticData
	139, // 59: agentrpc.SuperAgentListReq.data:type_name -> agentrpc.SuperAgentListDataReq
	141, // 60: agentrpc.SuperAgentListResp.data:type_name -> agentrpc.SuperAgentListDataResp
	142, // 61: agentrpc.SuperAgentListDataResp.list:type_name -> agentrpc.SuperAgentListDataItem
	144, // 62: agentrpc.AgentNextUserListReq.data:type_name -> agentrpc.AgentNextUserListDataReq
	146, // 63: agentrpc.AgentNextUserListResp.data:type_name -> agentrpc.AgentNextUserListDataResp
	147, // 64: agentrpc.AgentNextUserListDataResp.list:type_name -> agentrpc.AgentNextUserListDataItem
	19,  // 65: agentrpc.agentrpc.passwordUpdate:input_type -> agentrpc.PasswordUpdateReq
	22,  // 66: agentrpc.agentrpc.agentConfig:input_type -> agentrpc.ConfigReq
	4,   // 67: agentrpc.agentrpc.addAgent:input_type -> agentrpc.AddConfigReq
	20,  // 68: agentrpc.agentrpc.agentCommission:input_type -> agentrpc.agentCommissionReq
	24,  // 69: agentrpc.agentrpc.agentLineList:input_type -> agentrpc.AgentLineListReq
	29,  // 70: agentrpc.agentrpc.agentReportMember:input_type -> agentrpc.AgentReportReq
	29,  // 71: agentrpc.agentrpc.agentReport:input_type -> agentrpc.AgentReportReq
	29,  // 72: agentrpc.agentrpc.agentReportDaily:input_type -> agentrpc.AgentReportReq
	29,  // 73: agentrpc.agentrpc.agentReportProfit:input_type -> agentrpc.AgentReportReq
	12,  // 74: agentrpc.agentrpc.CoinTransfer:input_type -> agentrpc.TransferReq
	18,  // 75: agentrpc.agentrpc.DepositStatistics:input_type -> agentrpc.DepositStatisticsReq
	7,   // 76: agentrpc.agentrpc.WithdrawalStatistics:input_type -> agentrpc.WithdrawalStatisticsReq
	32,  // 77: agentrpc.agentrpc.commissionRateList:input_type -> agentrpc.CommissionRateListReq
	35,  // 78: agentrpc.agentrpc.teamBenefits:input_type -> agentrpc.TeamBenefitsReq
	38,  // 79: agentrpc.agentrpc.commissionRecords:input_type -> agentrpc.CommissionRecordsReq
	43,  // 80: agentrpc.agentrpc.subordinateDetails:input_type -> agentrpc.SubordinateDetailsReq
	49,  // 81: agentrpc.agentrpc.agentCommissionRecord:input_type -> agentrpc.AgentCommissionRecordReq
	54,  // 82: agentrpc.agentrpc.agentCommissionUpdate:input_type -> agentrpc.AgentCommissionUpdateReq
	56,  // 83: agentrpc.agentrpc.agentCommissionWithdrawRecored:input_type -> agentrpc.AgentCommissionWithdrawRecoredReq
	61,  // 84: agentrpc.agentrpc.agentCommissionLog:input_type -> agentrpc.AgentCommissionLogReq
	66,  // 85: agentrpc.agentrpc.AgentResetPassword:input_type -> agentrpc.AgentResetPasswordReq
	70,  // 86: agentrpc.agentrpc.AgentGenerateGoogleSecret:input_type -> agentrpc.AgentGenerateGoogleSecretReq
	68,  // 87: agentrpc.agentrpc.login:input_type -> agentrpc.AgentLoginReq
	74,  // 88: agentrpc.agentrpc.agentInfo:input_type -> agentrpc.AgentInfoReq
	76,  // 89: agentrpc.agentrpc.getStatistics:input_type -> agentrpc.AgentStatisticsReq
	79,  // 90: agentrpc.agentrpc.logout:input_type -> agentrpc.LogoutRequest
	81,  // 91: agentrpc.agentrpc.onlineUserCountList:input_type -> agentrpc.OnlineUserCountListReq
	86,  // 92: agentrpc.agentrpc.withdrawRecordList:input_type -> agentrpc.WithdrawRecordListReq
	91,  // 93: agentrpc.agentrpc.depositList:input_type -> agentrpc.DepositListReq
	96,  // 94: agentrpc.agentrpc.taskAgentDepositCommssion:input_type -> agentrpc.TaskAgentDepositCommssionReq
	98,  // 95: agentrpc.agentrpc.taskAgentBetCommssion:input_type -> agentrpc.TaskAgentBetCommssionReq
	100, // 96: agentrpc.agentrpc.agentCommissionProfit:input_type -> agentrpc.AgentCommissionProfitReq
	105, // 97: agentrpc.agentrpc.taskAgentDayCommssions:input_type -> agentrpc.TaskAgentCommssionScheduleReq
	105, // 98: agentrpc.agentrpc.taskAgentMonthCommssions:input_type -> agentrpc.TaskAgentCommssionScheduleReq
	105, // 99: agentrpc.agentrpc.taskAgentYearCommssions:input_type -> agentrpc.TaskAgentCommssionScheduleReq
	107, // 100: agentrpc.agentrpc.agentWithDrawalCommssion:input_type -> agentrpc.AgentWithDrawalCommssionReq
	109, // 101: agentrpc.agentrpc.agentBindAccount:input_type -> agentrpc.AgentBindAccountReq
	111, // 102: agentrpc.agentrpc.agentPayAccount:input_type -> agentrpc.AgentPayAccountReq
	114, // 103: agentrpc.agentrpc.agentWithDrawalAudit:input_type -> agentrpc.AgentWithDrawalAuditReq
	116, // 104: agentrpc.agentrpc.agentWithDrawalReject:input_type -> agentrpc.AgentWithDrawalRejectReq
	118, // 105: agentrpc.agentrpc.agentUserList:input_type -> agentrpc.AgentUserListReq
	123, // 106: agentrpc.agentrpc.taskAgentUserDailyReport:input_type -> agentrpc.TaskAgentUserDailyReportReq
	105, // 107: agentrpc.agentrpc.taskPromoterDayCommssions:input_type -> agentrpc.TaskAgentCommssionScheduleReq
	125, // 108: agentrpc.agentrpc.adminAgentUserList:input_type -> agentrpc.AdminAgentUserListReq
	105, // 109: agentrpc.agentrpc.taskAgentUserReport:input_type -> agentrpc.TaskAgentCommssionScheduleReq
	130, // 110: agentrpc.agentrpc.agentTeam:input_type -> agentrpc.AgentTeamReq
	105, // 111: agentrpc.agentrpc.taskAgentReliveUser:input_type -> agentrpc.TaskAgentCommssionScheduleReq
	135, // 112: agentrpc.agentrpc.agentBoardStatic:input_type -> agentrpc.AgentBoardStaticReq
	138, // 113: agentrpc.agentrpc.superAgentList:input_type -> agentrpc.SuperAgentListReq
	143, // 114: agentrpc.agentrpc.agentnextuserList:input_type -> agentrpc.AgentNextUserListReq
	13,  // 115: agentrpc.agentrpc.passwordUpdate:output_type -> agentrpc.EmptyResp
	9,   // 116: agentrpc.agentrpc.agentConfig:output_type -> agentrpc.ConfigRes
	5,   // 117: agentrpc.agentrpc.addAgent:output_type -> agentrpc.AddConfigRes
	23,  // 118: agentrpc.agentrpc.agentCommission:output_type -> agentrpc.agentCommissionRes
	10,  // 119: agentrpc.agentrpc.agentLineList:output_type -> agentrpc.AgentLineListRes
	15,  // 120: agentrpc.agentrpc.agentReportMember:output_type -> agentrpc.AgentReportMemberRes
	27,  // 121: agentrpc.agentrpc.agentReport:output_type -> agentrpc.AgentReportRes
	17,  // 122: agentrpc.agentrpc.agentReportDaily:output_type -> agentrpc.AgentReportDailyRes
	6,   // 123: agentrpc.agentrpc.agentReportProfit:output_type -> agentrpc.AgentReportProfitRes
	3,   // 124: agentrpc.agentrpc.CoinTransfer:output_type -> agentrpc.TransferResp
	8,   // 125: agentrpc.agentrpc.DepositStatistics:output_type -> agentrpc.DepositStatisticsResp
	28,  // 126: agentrpc.agentrpc.WithdrawalStatistics:output_type -> agentrpc.WithdrawalStatisticsResp
	33,  // 127: agentrpc.agentrpc.commissionRateList:output_type -> agentrpc.CommissionRateListResp
	36,  // 128: agentrpc.agentrpc.teamBenefits:output_type -> agentrpc.TeamBenefitsResp
	40,  // 129: agentrpc.agentrpc.commissionRecords:output_type -> agentrpc.CommissionRecordsResp
	44,  // 130: agentrpc.agentrpc.subordinateDetails:output_type -> agentrpc.SubordinateDetailsResp
	51,  // 131: agentrpc.agentrpc.agentCommissionRecord:output_type -> agentrpc.AgentCommissionRecordResp
	55,  // 132: agentrpc.agentrpc.agentCommissionUpdate:output_type -> agentrpc.AgentCommissionUpdateResp
	58,  // 133: agentrpc.agentrpc.agentCommissionWithdrawRecored:output_type -> agentrpc.AgentCommissionWithdrawRecoredResp
	63,  // 134: agentrpc.agentrpc.agentCommissionLog:output_type -> agentrpc.AgentCommissionLogResp
	67,  // 135: agentrpc.agentrpc.AgentResetPassword:output_type -> agentrpc.AgentResetPasswordResp
	71,  // 136: agentrpc.agentrpc.AgentGenerateGoogleSecret:output_type -> agentrpc.AgentGenerateGoogleSecretResp
	69,  // 137: agentrpc.agentrpc.login:output_type -> agentrpc.AgentLoginResp
	75,  // 138: agentrpc.agentrpc.agentInfo:output_type -> agentrpc.AgentInfoResp
	77,  // 139: agentrpc.agentrpc.getStatistics:output_type -> agentrpc.AgentStatisticsResp
	80,  // 140: agentrpc.agentrpc.logout:output_type -> agentrpc.LogoutResponse
	83,  // 141: agentrpc.agentrpc.onlineUserCountList:output_type -> agentrpc.OnlineUserCountListResp
	88,  // 142: agentrpc.agentrpc.withdrawRecordList:output_type -> agentrpc.WithdrawRecordListResp
	93,  // 143: agentrpc.agentrpc.depositList:output_type -> agentrpc.DepositListResp
	97,  // 144: agentrpc.agentrpc.taskAgentDepositCommssion:output_type -> agentrpc.TaskAgentDepositCommssionResp
	99,  // 145: agentrpc.agentrpc.taskAgentBetCommssion:output_type -> agentrpc.TaskAgentBetCommssionResp
	102, // 146: agentrpc.agentrpc.agentCommissionProfit:output_type -> agentrpc.AgentCommissionProfitResp
	106, // 147: agentrpc.agentrpc.taskAgentDayCommssions:output_type -> agentrpc.TaskAgentCommssionScheduleResp
	106, // 148: agentrpc.agentrpc.taskAgentMonthCommssions:output_type -> agentrpc.TaskAgentCommssionScheduleResp
	106, // 149: agentrpc.agentrpc.taskAgentYearCommssions:output_type -> agentrpc.TaskAgentCommssionScheduleResp
	108, // 150: agentrpc.agentrpc.agentWithDrawalCommssion:output_type -> agentrpc.AgentWithDrawalCommssionResp
	110, // 151: agentrpc.agentrpc.agentBindAccount:output_type -> agentrpc.AgentBindAccountResp
	112, // 152: agentrpc.agentrpc.agentPayAccount:output_type -> agentrpc.AgentPayAccountResp
	115, // 153: agentrpc.agentrpc.agentWithDrawalAudit:output_type -> agentrpc.AgentWithDrawalAuditResp
	117, // 154: agentrpc.agentrpc.agentWithDrawalReject:output_type -> agentrpc.AgentWithDrawalRejectResp
	120, // 155: agentrpc.agentrpc.agentUserList:output_type -> agentrpc.AgentUserListResp
	124, // 156: agentrpc.agentrpc.taskAgentUserDailyReport:output_type -> agentrpc.TaskAgentUserDailyReportResp
	106, // 157: agentrpc.agentrpc.taskPromoterDayCommssions:output_type -> agentrpc.TaskAgentCommssionScheduleResp
	127, // 158: agentrpc.agentrpc.adminAgentUserList:output_type -> agentrpc.AdminAgentUserListResp
	106, // 159: agentrpc.agentrpc.taskAgentUserReport:output_type -> agentrpc.TaskAgentCommssionScheduleResp
	132, // 160: agentrpc.agentrpc.agentTeam:output_type -> agentrpc.AgentTeamResp
	106, // 161: agentrpc.agentrpc.taskAgentReliveUser:output_type -> agentrpc.TaskAgentCommssionScheduleResp
	136, // 162: agentrpc.agentrpc.agentBoardStatic:output_type -> agentrpc.AgentBoardStaticResp
	140, // 163: agentrpc.agentrpc.superAgentList:output_type -> agentrpc.SuperAgentListResp
	145, // 164: agentrpc.agentrpc.agentnextuserList:output_type -> agentrpc.AgentNextUserListResp
	115, // [115:165] is the sub-list for method output_type
	65,  // [65:115] is the sub-list for method input_type
	65,  // [65:65] is the sub-list for extension type_name
	65,  // [65:65] is the sub-list for extension extendee
	0,   // [0:65] is the sub-list for field type_name
}

func init() { file_agentrpc_proto_init() }
func file_agentrpc_proto_init() {
	if File_agentrpc_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_agentrpc_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*AgentCommissionData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentrpc_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*AgentReportItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentrpc_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*AgentReportDailyItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentrpc_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*TransferResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentrpc_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*AddConfigReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentrpc_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*AddConfigRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentrpc_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*AgentReportProfitRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentrpc_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*WithdrawalStatisticsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentrpc_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*DepositStatisticsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentrpc_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*ConfigRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentrpc_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*AgentLineListRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentrpc_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*AgentReportProfitItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentrpc_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*TransferReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentrpc_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*EmptyResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentrpc_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*AgentReportMemberItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentrpc_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*AgentReportMemberRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentrpc_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*AgentReportData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentrpc_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*AgentReportDailyRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentrpc_proto_msgTypes[18].Exporter = func(v any, i int) any {
			switch v := v.(*DepositStatisticsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentrpc_proto_msgTypes[19].Exporter = func(v any, i int) any {
			switch v := v.(*PasswordUpdateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentrpc_proto_msgTypes[20].Exporter = func(v any, i int) any {
			switch v := v.(*AgentCommissionReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentrpc_proto_msgTypes[21].Exporter = func(v any, i int) any {
			switch v := v.(*AgentReportProfitData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentrpc_proto_msgTypes[22].Exporter = func(v any, i int) any {
			switch v := v.(*ConfigReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentrpc_proto_msgTypes[23].Exporter = func(v any, i int) any {
			switch v := v.(*AgentCommissionRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentrpc_proto_msgTypes[24].Exporter = func(v any, i int) any {
			switch v := v.(*AgentLineListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentrpc_proto_msgTypes[25].Exporter = func(v any, i int) any {
			switch v := v.(*AgentLineListItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentrpc_proto_msgTypes[26].Exporter = func(v any, i int) any {
			switch v := v.(*AgentLineListData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentrpc_proto_msgTypes[27].Exporter = func(v any, i int) any {
			switch v := v.(*AgentReportRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentrpc_proto_msgTypes[28].Exporter = func(v any, i int) any {
			switch v := v.(*WithdrawalStatisticsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentrpc_proto_msgTypes[29].Exporter = func(v any, i int) any {
			switch v := v.(*AgentReportReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentrpc_proto_msgTypes[30].Exporter = func(v any, i int) any {
			switch v := v.(*AgentReportMemberData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentrpc_proto_msgTypes[31].Exporter = func(v any, i int) any {
			switch v := v.(*AgentReportDailyData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentrpc_proto_msgTypes[32].Exporter = func(v any, i int) any {
			switch v := v.(*CommissionRateListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentrpc_proto_msgTypes[33].Exporter = func(v any, i int) any {
			switch v := v.(*CommissionRateListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentrpc_proto_msgTypes[34].Exporter = func(v any, i int) any {
			switch v := v.(*CommissionRateListData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentrpc_proto_msgTypes[35].Exporter = func(v any, i int) any {
			switch v := v.(*TeamBenefitsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentrpc_proto_msgTypes[36].Exporter = func(v any, i int) any {
			switch v := v.(*TeamBenefitsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentrpc_proto_msgTypes[37].Exporter = func(v any, i int) any {
			switch v := v.(*TeamBenefitsData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentrpc_proto_msgTypes[38].Exporter = func(v any, i int) any {
			switch v := v.(*CommissionRecordsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentrpc_proto_msgTypes[39].Exporter = func(v any, i int) any {
			switch v := v.(*CommissionRecordsDataReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentrpc_proto_msgTypes[40].Exporter = func(v any, i int) any {
			switch v := v.(*CommissionRecordsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentrpc_proto_msgTypes[41].Exporter = func(v any, i int) any {
			switch v := v.(*CommissionRecordsData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentrpc_proto_msgTypes[42].Exporter = func(v any, i int) any {
			switch v := v.(*CommissionRecordsDataItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentrpc_proto_msgTypes[43].Exporter = func(v any, i int) any {
			switch v := v.(*SubordinateDetailsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentrpc_proto_msgTypes[44].Exporter = func(v any, i int) any {
			switch v := v.(*SubordinateDetailsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentrpc_proto_msgTypes[45].Exporter = func(v any, i int) any {
			switch v := v.(*SubordinateDetailsData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentrpc_proto_msgTypes[46].Exporter = func(v any, i int) any {
			switch v := v.(*SubordinateDetailsResSubDto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentrpc_proto_msgTypes[47].Exporter = func(v any, i int) any {
			switch v := v.(*SuperAddConfigReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentrpc_proto_msgTypes[48].Exporter = func(v any, i int) any {
			switch v := v.(*SuperAddConfigResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentrpc_proto_msgTypes[49].Exporter = func(v any, i int) any {
			switch v := v.(*AgentCommissionRecordReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentrpc_proto_msgTypes[50].Exporter = func(v any, i int) any {
			switch v := v.(*AgentCommissionRecordDataReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentrpc_proto_msgTypes[51].Exporter = func(v any, i int) any {
			switch v := v.(*AgentCommissionRecordResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentrpc_proto_msgTypes[52].Exporter = func(v any, i int) any {
			switch v := v.(*AgentCommissionRecordDataResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentrpc_proto_msgTypes[53].Exporter = func(v any, i int) any {
			switch v := v.(*AgentCommissionRecordDataItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentrpc_proto_msgTypes[54].Exporter = func(v any, i int) any {
			switch v := v.(*AgentCommissionUpdateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentrpc_proto_msgTypes[55].Exporter = func(v any, i int) any {
			switch v := v.(*AgentCommissionUpdateResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentrpc_proto_msgTypes[56].Exporter = func(v any, i int) any {
			switch v := v.(*AgentCommissionWithdrawRecoredReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentrpc_proto_msgTypes[57].Exporter = func(v any, i int) any {
			switch v := v.(*AgentCommissionWithdrawRecoredDataReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentrpc_proto_msgTypes[58].Exporter = func(v any, i int) any {
			switch v := v.(*AgentCommissionWithdrawRecoredResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentrpc_proto_msgTypes[59].Exporter = func(v any, i int) any {
			switch v := v.(*AgentCommissionWithdrawRecoredData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentrpc_proto_msgTypes[60].Exporter = func(v any, i int) any {
			switch v := v.(*AgentCommissionWithdrawRecoredDataItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentrpc_proto_msgTypes[61].Exporter = func(v any, i int) any {
			switch v := v.(*AgentCommissionLogReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentrpc_proto_msgTypes[62].Exporter = func(v any, i int) any {
			switch v := v.(*AgentCommissionLogDataReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentrpc_proto_msgTypes[63].Exporter = func(v any, i int) any {
			switch v := v.(*AgentCommissionLogResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentrpc_proto_msgTypes[64].Exporter = func(v any, i int) any {
			switch v := v.(*AgentCommissionLogData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentrpc_proto_msgTypes[65].Exporter = func(v any, i int) any {
			switch v := v.(*AgentCommissionLogDataItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentrpc_proto_msgTypes[66].Exporter = func(v any, i int) any {
			switch v := v.(*AgentResetPasswordReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentrpc_proto_msgTypes[67].Exporter = func(v any, i int) any {
			switch v := v.(*AgentResetPasswordResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentrpc_proto_msgTypes[68].Exporter = func(v any, i int) any {
			switch v := v.(*AgentLoginReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentrpc_proto_msgTypes[69].Exporter = func(v any, i int) any {
			switch v := v.(*AgentLoginResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentrpc_proto_msgTypes[70].Exporter = func(v any, i int) any {
			switch v := v.(*AgentGenerateGoogleSecretReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentrpc_proto_msgTypes[71].Exporter = func(v any, i int) any {
			switch v := v.(*AgentGenerateGoogleSecretResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentrpc_proto_msgTypes[72].Exporter = func(v any, i int) any {
			switch v := v.(*AgentGenerateGoogleSecretData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentrpc_proto_msgTypes[73].Exporter = func(v any, i int) any {
			switch v := v.(*AgentLoginData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentrpc_proto_msgTypes[74].Exporter = func(v any, i int) any {
			switch v := v.(*AgentInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentrpc_proto_msgTypes[75].Exporter = func(v any, i int) any {
			switch v := v.(*AgentInfoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentrpc_proto_msgTypes[76].Exporter = func(v any, i int) any {
			switch v := v.(*AgentStatisticsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentrpc_proto_msgTypes[77].Exporter = func(v any, i int) any {
			switch v := v.(*AgentStatisticsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentrpc_proto_msgTypes[78].Exporter = func(v any, i int) any {
			switch v := v.(*AgentStatisticsData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentrpc_proto_msgTypes[79].Exporter = func(v any, i int) any {
			switch v := v.(*LogoutRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentrpc_proto_msgTypes[80].Exporter = func(v any, i int) any {
			switch v := v.(*LogoutResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentrpc_proto_msgTypes[81].Exporter = func(v any, i int) any {
			switch v := v.(*OnlineUserCountListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentrpc_proto_msgTypes[82].Exporter = func(v any, i int) any {
			switch v := v.(*OnlineUserCountListDataReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentrpc_proto_msgTypes[83].Exporter = func(v any, i int) any {
			switch v := v.(*OnlineUserCountListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentrpc_proto_msgTypes[84].Exporter = func(v any, i int) any {
			switch v := v.(*OnlineUserCountListData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentrpc_proto_msgTypes[85].Exporter = func(v any, i int) any {
			switch v := v.(*OnlineUserCountListDataItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentrpc_proto_msgTypes[86].Exporter = func(v any, i int) any {
			switch v := v.(*WithdrawRecordListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentrpc_proto_msgTypes[87].Exporter = func(v any, i int) any {
			switch v := v.(*WithdrawRecordListDataReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentrpc_proto_msgTypes[88].Exporter = func(v any, i int) any {
			switch v := v.(*WithdrawRecordListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentrpc_proto_msgTypes[89].Exporter = func(v any, i int) any {
			switch v := v.(*WithdrawRecordListData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentrpc_proto_msgTypes[90].Exporter = func(v any, i int) any {
			switch v := v.(*WinCoinWithdrawalRecordItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentrpc_proto_msgTypes[91].Exporter = func(v any, i int) any {
			switch v := v.(*DepositListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentrpc_proto_msgTypes[92].Exporter = func(v any, i int) any {
			switch v := v.(*DepositListDataReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentrpc_proto_msgTypes[93].Exporter = func(v any, i int) any {
			switch v := v.(*DepositListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentrpc_proto_msgTypes[94].Exporter = func(v any, i int) any {
			switch v := v.(*DepositListData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentrpc_proto_msgTypes[95].Exporter = func(v any, i int) any {
			switch v := v.(*DepositListDataItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentrpc_proto_msgTypes[96].Exporter = func(v any, i int) any {
			switch v := v.(*TaskAgentDepositCommssionReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentrpc_proto_msgTypes[97].Exporter = func(v any, i int) any {
			switch v := v.(*TaskAgentDepositCommssionResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentrpc_proto_msgTypes[98].Exporter = func(v any, i int) any {
			switch v := v.(*TaskAgentBetCommssionReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentrpc_proto_msgTypes[99].Exporter = func(v any, i int) any {
			switch v := v.(*TaskAgentBetCommssionResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentrpc_proto_msgTypes[100].Exporter = func(v any, i int) any {
			switch v := v.(*AgentCommissionProfitReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentrpc_proto_msgTypes[101].Exporter = func(v any, i int) any {
			switch v := v.(*AgentCommissionProfitDataReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentrpc_proto_msgTypes[102].Exporter = func(v any, i int) any {
			switch v := v.(*AgentCommissionProfitResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentrpc_proto_msgTypes[103].Exporter = func(v any, i int) any {
			switch v := v.(*AgentCommissionProfitDataResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentrpc_proto_msgTypes[104].Exporter = func(v any, i int) any {
			switch v := v.(*AgentCommissionProfitDataItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentrpc_proto_msgTypes[105].Exporter = func(v any, i int) any {
			switch v := v.(*TaskAgentCommssionScheduleReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentrpc_proto_msgTypes[106].Exporter = func(v any, i int) any {
			switch v := v.(*TaskAgentCommssionScheduleResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentrpc_proto_msgTypes[107].Exporter = func(v any, i int) any {
			switch v := v.(*AgentWithDrawalCommssionReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentrpc_proto_msgTypes[108].Exporter = func(v any, i int) any {
			switch v := v.(*AgentWithDrawalCommssionResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentrpc_proto_msgTypes[109].Exporter = func(v any, i int) any {
			switch v := v.(*AgentBindAccountReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentrpc_proto_msgTypes[110].Exporter = func(v any, i int) any {
			switch v := v.(*AgentBindAccountResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentrpc_proto_msgTypes[111].Exporter = func(v any, i int) any {
			switch v := v.(*AgentPayAccountReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentrpc_proto_msgTypes[112].Exporter = func(v any, i int) any {
			switch v := v.(*AgentPayAccountResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentrpc_proto_msgTypes[113].Exporter = func(v any, i int) any {
			switch v := v.(*PayAccountData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentrpc_proto_msgTypes[114].Exporter = func(v any, i int) any {
			switch v := v.(*AgentWithDrawalAuditReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentrpc_proto_msgTypes[115].Exporter = func(v any, i int) any {
			switch v := v.(*AgentWithDrawalAuditResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentrpc_proto_msgTypes[116].Exporter = func(v any, i int) any {
			switch v := v.(*AgentWithDrawalRejectReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentrpc_proto_msgTypes[117].Exporter = func(v any, i int) any {
			switch v := v.(*AgentWithDrawalRejectResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentrpc_proto_msgTypes[118].Exporter = func(v any, i int) any {
			switch v := v.(*AgentUserListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentrpc_proto_msgTypes[119].Exporter = func(v any, i int) any {
			switch v := v.(*AgentUserListDataReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentrpc_proto_msgTypes[120].Exporter = func(v any, i int) any {
			switch v := v.(*AgentUserListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentrpc_proto_msgTypes[121].Exporter = func(v any, i int) any {
			switch v := v.(*AgentUserListDataResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentrpc_proto_msgTypes[122].Exporter = func(v any, i int) any {
			switch v := v.(*AgentUserListDataItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentrpc_proto_msgTypes[123].Exporter = func(v any, i int) any {
			switch v := v.(*TaskAgentUserDailyReportReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentrpc_proto_msgTypes[124].Exporter = func(v any, i int) any {
			switch v := v.(*TaskAgentUserDailyReportResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentrpc_proto_msgTypes[125].Exporter = func(v any, i int) any {
			switch v := v.(*AdminAgentUserListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentrpc_proto_msgTypes[126].Exporter = func(v any, i int) any {
			switch v := v.(*AdminAgentUserListDataReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentrpc_proto_msgTypes[127].Exporter = func(v any, i int) any {
			switch v := v.(*AdminAgentUserListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentrpc_proto_msgTypes[128].Exporter = func(v any, i int) any {
			switch v := v.(*AdminAgentUserListDataResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentrpc_proto_msgTypes[129].Exporter = func(v any, i int) any {
			switch v := v.(*AdminAgentUserListDataItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentrpc_proto_msgTypes[130].Exporter = func(v any, i int) any {
			switch v := v.(*AgentTeamReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentrpc_proto_msgTypes[131].Exporter = func(v any, i int) any {
			switch v := v.(*AgentTeamDataReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentrpc_proto_msgTypes[132].Exporter = func(v any, i int) any {
			switch v := v.(*AgentTeamResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentrpc_proto_msgTypes[133].Exporter = func(v any, i int) any {
			switch v := v.(*AgentTeamDataResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentrpc_proto_msgTypes[134].Exporter = func(v any, i int) any {
			switch v := v.(*AgentTeamDataItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentrpc_proto_msgTypes[135].Exporter = func(v any, i int) any {
			switch v := v.(*AgentBoardStaticReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentrpc_proto_msgTypes[136].Exporter = func(v any, i int) any {
			switch v := v.(*AgentBoardStaticResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentrpc_proto_msgTypes[137].Exporter = func(v any, i int) any {
			switch v := v.(*AgentBoardStaticData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentrpc_proto_msgTypes[138].Exporter = func(v any, i int) any {
			switch v := v.(*SuperAgentListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentrpc_proto_msgTypes[139].Exporter = func(v any, i int) any {
			switch v := v.(*SuperAgentListDataReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentrpc_proto_msgTypes[140].Exporter = func(v any, i int) any {
			switch v := v.(*SuperAgentListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentrpc_proto_msgTypes[141].Exporter = func(v any, i int) any {
			switch v := v.(*SuperAgentListDataResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentrpc_proto_msgTypes[142].Exporter = func(v any, i int) any {
			switch v := v.(*SuperAgentListDataItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentrpc_proto_msgTypes[143].Exporter = func(v any, i int) any {
			switch v := v.(*AgentNextUserListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentrpc_proto_msgTypes[144].Exporter = func(v any, i int) any {
			switch v := v.(*AgentNextUserListDataReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentrpc_proto_msgTypes[145].Exporter = func(v any, i int) any {
			switch v := v.(*AgentNextUserListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentrpc_proto_msgTypes[146].Exporter = func(v any, i int) any {
			switch v := v.(*AgentNextUserListDataResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentrpc_proto_msgTypes[147].Exporter = func(v any, i int) any {
			switch v := v.(*AgentNextUserListDataItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_agentrpc_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   151,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_agentrpc_proto_goTypes,
		DependencyIndexes: file_agentrpc_proto_depIdxs,
		MessageInfos:      file_agentrpc_proto_msgTypes,
	}.Build()
	File_agentrpc_proto = out.File
	file_agentrpc_proto_rawDesc = nil
	file_agentrpc_proto_goTypes = nil
	file_agentrpc_proto_depIdxs = nil
}
