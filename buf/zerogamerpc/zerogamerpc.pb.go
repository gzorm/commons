// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.1
// 	protoc        v3.19.4
// source: zerogamerpc.proto

package zerogamerpc

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type BonusesReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hash        string `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	SecureLogin string `protobuf:"bytes,2,opt,name=secureLogin,proto3" json:"secureLogin,omitempty"`
	PlayerId    string `protobuf:"bytes,3,opt,name=playerId,proto3" json:"playerId,omitempty"`
	Uri         string `protobuf:"bytes,4,opt,name=uri,proto3" json:"uri,omitempty"`
}

func (x *BonusesReq) Reset() {
	*x = BonusesReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BonusesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BonusesReq) ProtoMessage() {}

func (x *BonusesReq) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BonusesReq.ProtoReflect.Descriptor instead.
func (*BonusesReq) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{0}
}

func (x *BonusesReq) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

func (x *BonusesReq) GetSecureLogin() string {
	if x != nil {
		return x.SecureLogin
	}
	return ""
}

func (x *BonusesReq) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *BonusesReq) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

type BonusesData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BonusCode      string  `protobuf:"bytes,1,opt,name=bonusCode,proto3" json:"bonusCode,omitempty"`
	BonusId        float32 `protobuf:"fixed32,2,opt,name=bonusId,proto3" json:"bonusId,omitempty"`
	CreateDate     string  `protobuf:"bytes,3,opt,name=createDate,proto3" json:"createDate,omitempty"`
	Currency       string  `protobuf:"bytes,4,opt,name=currency,proto3" json:"currency,omitempty"`
	ExpirationDate string  `protobuf:"bytes,5,opt,name=expirationDate,proto3" json:"expirationDate,omitempty"`
	GameIDList     string  `protobuf:"bytes,6,opt,name=gameIDList,proto3" json:"gameIDList,omitempty"`
	PackageId      float32 `protobuf:"fixed32,7,opt,name=packageId,proto3" json:"packageId,omitempty"`
	Rounds         int64   `protobuf:"varint,8,opt,name=rounds,proto3" json:"rounds,omitempty"`
	RoundsPlayed   int64   `protobuf:"varint,9,opt,name=roundsPlayed,proto3" json:"roundsPlayed,omitempty"`
}

func (x *BonusesData) Reset() {
	*x = BonusesData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BonusesData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BonusesData) ProtoMessage() {}

func (x *BonusesData) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BonusesData.ProtoReflect.Descriptor instead.
func (*BonusesData) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{1}
}

func (x *BonusesData) GetBonusCode() string {
	if x != nil {
		return x.BonusCode
	}
	return ""
}

func (x *BonusesData) GetBonusId() float32 {
	if x != nil {
		return x.BonusId
	}
	return 0
}

func (x *BonusesData) GetCreateDate() string {
	if x != nil {
		return x.CreateDate
	}
	return ""
}

func (x *BonusesData) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *BonusesData) GetExpirationDate() string {
	if x != nil {
		return x.ExpirationDate
	}
	return ""
}

func (x *BonusesData) GetGameIDList() string {
	if x != nil {
		return x.GameIDList
	}
	return ""
}

func (x *BonusesData) GetPackageId() float32 {
	if x != nil {
		return x.PackageId
	}
	return 0
}

func (x *BonusesData) GetRounds() int64 {
	if x != nil {
		return x.Rounds
	}
	return 0
}

func (x *BonusesData) GetRoundsPlayed() int64 {
	if x != nil {
		return x.RoundsPlayed
	}
	return 0
}

type BonusesRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bonuses []*BonusesData `protobuf:"bytes,1,rep,name=Bonuses,proto3" json:"Bonuses,omitempty"`
}

func (x *BonusesRes) Reset() {
	*x = BonusesRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BonusesRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BonusesRes) ProtoMessage() {}

func (x *BonusesRes) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BonusesRes.ProtoReflect.Descriptor instead.
func (*BonusesRes) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{2}
}

func (x *BonusesRes) GetBonuses() []*BonusesData {
	if x != nil {
		return x.Bonuses
	}
	return nil
}

type StartGameReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameId                string `protobuf:"bytes,1,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`
	Uid                   int32  `protobuf:"varint,2,opt,name=uid,proto3" json:"uid,omitempty"`
	Username              string `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`
	Ip                    string `protobuf:"bytes,4,opt,name=ip,proto3" json:"ip,omitempty"`
	PlayMode              int32  `protobuf:"varint,5,opt,name=play_mode,json=playMode,proto3" json:"play_mode,omitempty"`
	Authorization         string `protobuf:"bytes,6,opt,name=authorization,proto3" json:"authorization,omitempty"`
	Device                string `protobuf:"bytes,7,opt,name=device,proto3" json:"device,omitempty"`
	Lang                  string `protobuf:"bytes,8,opt,name=lang,proto3" json:"lang,omitempty"`
	Theme                 string `protobuf:"bytes,9,opt,name=theme,proto3" json:"theme,omitempty"`
	WebType               string `protobuf:"bytes,10,opt,name=web_type,json=webType,proto3" json:"web_type,omitempty"`
	Origin                string `protobuf:"bytes,11,opt,name=origin,proto3" json:"origin,omitempty"`
	GameProviderSubtypeId int64  `protobuf:"varint,12,opt,name=gameProviderSubtypeId,proto3" json:"gameProviderSubtypeId,omitempty"`
}

func (x *StartGameReq) Reset() {
	*x = StartGameReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartGameReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartGameReq) ProtoMessage() {}

func (x *StartGameReq) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartGameReq.ProtoReflect.Descriptor instead.
func (*StartGameReq) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{3}
}

func (x *StartGameReq) GetGameId() string {
	if x != nil {
		return x.GameId
	}
	return ""
}

func (x *StartGameReq) GetUid() int32 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *StartGameReq) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *StartGameReq) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *StartGameReq) GetPlayMode() int32 {
	if x != nil {
		return x.PlayMode
	}
	return 0
}

func (x *StartGameReq) GetAuthorization() string {
	if x != nil {
		return x.Authorization
	}
	return ""
}

func (x *StartGameReq) GetDevice() string {
	if x != nil {
		return x.Device
	}
	return ""
}

func (x *StartGameReq) GetLang() string {
	if x != nil {
		return x.Lang
	}
	return ""
}

func (x *StartGameReq) GetTheme() string {
	if x != nil {
		return x.Theme
	}
	return ""
}

func (x *StartGameReq) GetWebType() string {
	if x != nil {
		return x.WebType
	}
	return ""
}

func (x *StartGameReq) GetOrigin() string {
	if x != nil {
		return x.Origin
	}
	return ""
}

func (x *StartGameReq) GetGameProviderSubtypeId() int64 {
	if x != nil {
		return x.GameProviderSubtypeId
	}
	return 0
}

type StartGameResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int64  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg     string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	GameUrl string `protobuf:"bytes,3,opt,name=game_url,json=gameUrl,proto3" json:"game_url,omitempty"`
}

func (x *StartGameResp) Reset() {
	*x = StartGameResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartGameResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartGameResp) ProtoMessage() {}

func (x *StartGameResp) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartGameResp.ProtoReflect.Descriptor instead.
func (*StartGameResp) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{4}
}

func (x *StartGameResp) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *StartGameResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *StartGameResp) GetGameUrl() string {
	if x != nil {
		return x.GameUrl
	}
	return ""
}

type OutGameForTransferWalletResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int64  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *OutGameForTransferWalletResp) Reset() {
	*x = OutGameForTransferWalletResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OutGameForTransferWalletResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OutGameForTransferWalletResp) ProtoMessage() {}

func (x *OutGameForTransferWalletResp) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OutGameForTransferWalletResp.ProtoReflect.Descriptor instead.
func (*OutGameForTransferWalletResp) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{5}
}

func (x *OutGameForTransferWalletResp) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *OutGameForTransferWalletResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

// 退出游戏  只需要传递 uid Only 转账钱包并且有记录last game code
type OutGameForTransferWalletReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid int32 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
}

func (x *OutGameForTransferWalletReq) Reset() {
	*x = OutGameForTransferWalletReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OutGameForTransferWalletReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OutGameForTransferWalletReq) ProtoMessage() {}

func (x *OutGameForTransferWalletReq) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OutGameForTransferWalletReq.ProtoReflect.Descriptor instead.
func (*OutGameForTransferWalletReq) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{6}
}

func (x *OutGameForTransferWalletReq) GetUid() int32 {
	if x != nil {
		return x.Uid
	}
	return 0
}

type SlotGameListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current int32                `protobuf:"varint,1,opt,name=current,proto3" json:"current,omitempty"`
	Data    *SlotGameListDataReq `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	Size    int32                `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
}

func (x *SlotGameListReq) Reset() {
	*x = SlotGameListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SlotGameListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SlotGameListReq) ProtoMessage() {}

func (x *SlotGameListReq) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SlotGameListReq.ProtoReflect.Descriptor instead.
func (*SlotGameListReq) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{7}
}

func (x *SlotGameListReq) GetCurrent() int32 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *SlotGameListReq) GetData() *SlotGameListDataReq {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *SlotGameListReq) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

type SlotGameListDataReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Category int32   `protobuf:"varint,1,opt,name=category,proto3" json:"category,omitempty"`
	Ids      []int64 `protobuf:"varint,2,rep,packed,name=ids,proto3" json:"ids,omitempty"`
}

func (x *SlotGameListDataReq) Reset() {
	*x = SlotGameListDataReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SlotGameListDataReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SlotGameListDataReq) ProtoMessage() {}

func (x *SlotGameListDataReq) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SlotGameListDataReq.ProtoReflect.Descriptor instead.
func (*SlotGameListDataReq) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{8}
}

func (x *SlotGameListDataReq) GetCategory() int32 {
	if x != nil {
		return x.Category
	}
	return 0
}

func (x *SlotGameListDataReq) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type SlotGameListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int64         `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string        `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *SlotGameData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *SlotGameListResp) Reset() {
	*x = SlotGameListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SlotGameListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SlotGameListResp) ProtoMessage() {}

func (x *SlotGameListResp) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SlotGameListResp.ProtoReflect.Descriptor instead.
func (*SlotGameListResp) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{9}
}

func (x *SlotGameListResp) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *SlotGameListResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *SlotGameListResp) GetData() *SlotGameData {
	if x != nil {
		return x.Data
	}
	return nil
}

type SlotGameData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current int32                   `protobuf:"varint,1,opt,name=current,proto3" json:"current,omitempty"`
	Size    int32                   `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	Total   int64                   `protobuf:"varint,3,opt,name=total,proto3" json:"total,omitempty"`
	Pages   int64                   `protobuf:"varint,4,opt,name=pages,proto3" json:"pages,omitempty"`
	List    []*SlotGameListDataResp `protobuf:"bytes,5,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *SlotGameData) Reset() {
	*x = SlotGameData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SlotGameData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SlotGameData) ProtoMessage() {}

func (x *SlotGameData) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SlotGameData.ProtoReflect.Descriptor instead.
func (*SlotGameData) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{10}
}

func (x *SlotGameData) GetCurrent() int32 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *SlotGameData) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *SlotGameData) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *SlotGameData) GetPages() int64 {
	if x != nil {
		return x.Pages
	}
	return 0
}

func (x *SlotGameData) GetList() []*SlotGameListDataResp {
	if x != nil {
		return x.List
	}
	return nil
}

type SlotGameListDataResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                    int64           `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                  string          `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	OriginalIcon          string          `protobuf:"bytes,3,opt,name=originalIcon,proto3" json:"originalIcon,omitempty"`
	LatestIcon            string          `protobuf:"bytes,4,opt,name=latestIcon,proto3" json:"latestIcon,omitempty"`
	GameTypeId            int64           `protobuf:"varint,5,opt,name=gameTypeId,proto3" json:"gameTypeId,omitempty"`
	IsNew                 int32           `protobuf:"varint,6,opt,name=isNew,proto3" json:"isNew,omitempty"`
	IsFavorite            int32           `protobuf:"varint,7,opt,name=isFavorite,proto3" json:"isFavorite,omitempty"`
	Status                int32           `protobuf:"varint,8,opt,name=status,proto3" json:"status,omitempty"`
	Maintenance           string          `protobuf:"bytes,9,opt,name=maintenance,proto3" json:"maintenance,omitempty"`
	HotStar               int32           `protobuf:"varint,10,opt,name=hotStar,proto3" json:"hotStar,omitempty"`
	GameProviderSubtypeId int32           `protobuf:"varint,11,opt,name=gameProviderSubtypeId,proto3" json:"gameProviderSubtypeId,omitempty"`
	GameProviderName      string          `protobuf:"bytes,12,opt,name=gameProviderName,proto3" json:"gameProviderName,omitempty"`
	GameProviderId        int32           `protobuf:"varint,13,opt,name=gameProviderId,proto3" json:"gameProviderId,omitempty"`
	FavoriteStar          int32           `protobuf:"varint,14,opt,name=favoriteStar,proto3" json:"favoriteStar,omitempty"`
	IsRotated             int32           `protobuf:"varint,15,opt,name=isRotated,proto3" json:"isRotated,omitempty"`
	GameStartParam        *GameStartParam `protobuf:"bytes,16,opt,name=gameStartParam,proto3" json:"gameStartParam,omitempty"`
}

func (x *SlotGameListDataResp) Reset() {
	*x = SlotGameListDataResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SlotGameListDataResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SlotGameListDataResp) ProtoMessage() {}

func (x *SlotGameListDataResp) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SlotGameListDataResp.ProtoReflect.Descriptor instead.
func (*SlotGameListDataResp) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{11}
}

func (x *SlotGameListDataResp) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SlotGameListDataResp) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SlotGameListDataResp) GetOriginalIcon() string {
	if x != nil {
		return x.OriginalIcon
	}
	return ""
}

func (x *SlotGameListDataResp) GetLatestIcon() string {
	if x != nil {
		return x.LatestIcon
	}
	return ""
}

func (x *SlotGameListDataResp) GetGameTypeId() int64 {
	if x != nil {
		return x.GameTypeId
	}
	return 0
}

func (x *SlotGameListDataResp) GetIsNew() int32 {
	if x != nil {
		return x.IsNew
	}
	return 0
}

func (x *SlotGameListDataResp) GetIsFavorite() int32 {
	if x != nil {
		return x.IsFavorite
	}
	return 0
}

func (x *SlotGameListDataResp) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *SlotGameListDataResp) GetMaintenance() string {
	if x != nil {
		return x.Maintenance
	}
	return ""
}

func (x *SlotGameListDataResp) GetHotStar() int32 {
	if x != nil {
		return x.HotStar
	}
	return 0
}

func (x *SlotGameListDataResp) GetGameProviderSubtypeId() int32 {
	if x != nil {
		return x.GameProviderSubtypeId
	}
	return 0
}

func (x *SlotGameListDataResp) GetGameProviderName() string {
	if x != nil {
		return x.GameProviderName
	}
	return ""
}

func (x *SlotGameListDataResp) GetGameProviderId() int32 {
	if x != nil {
		return x.GameProviderId
	}
	return 0
}

func (x *SlotGameListDataResp) GetFavoriteStar() int32 {
	if x != nil {
		return x.FavoriteStar
	}
	return 0
}

func (x *SlotGameListDataResp) GetIsRotated() int32 {
	if x != nil {
		return x.IsRotated
	}
	return 0
}

func (x *SlotGameListDataResp) GetGameStartParam() *GameStartParam {
	if x != nil {
		return x.GameStartParam
	}
	return nil
}

type GameStartParam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FieldName            string `protobuf:"bytes,1,opt,name=fieldName,proto3" json:"fieldName,omitempty"`
	BottomScore          int32  `protobuf:"varint,2,opt,name=bottomScore,proto3" json:"bottomScore,omitempty"`
	MinimumCarryingScore int32  `protobuf:"varint,3,opt,name=minimumCarryingScore,proto3" json:"minimumCarryingScore,omitempty"`
	DefaultNumber        int32  `protobuf:"varint,4,opt,name=defaultNumber,proto3" json:"defaultNumber,omitempty"`
	Match                bool   `protobuf:"varint,5,opt,name=match,proto3" json:"match,omitempty"`
}

func (x *GameStartParam) Reset() {
	*x = GameStartParam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameStartParam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameStartParam) ProtoMessage() {}

func (x *GameStartParam) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameStartParam.ProtoReflect.Descriptor instead.
func (*GameStartParam) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{12}
}

func (x *GameStartParam) GetFieldName() string {
	if x != nil {
		return x.FieldName
	}
	return ""
}

func (x *GameStartParam) GetBottomScore() int32 {
	if x != nil {
		return x.BottomScore
	}
	return 0
}

func (x *GameStartParam) GetMinimumCarryingScore() int32 {
	if x != nil {
		return x.MinimumCarryingScore
	}
	return 0
}

func (x *GameStartParam) GetDefaultNumber() int32 {
	if x != nil {
		return x.DefaultNumber
	}
	return 0
}

func (x *GameStartParam) GetMatch() bool {
	if x != nil {
		return x.Match
	}
	return false
}

type GameListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sign      bool    `protobuf:"varint,1,opt,name=sign,proto3" json:"sign,omitempty"`
	GameTypes []int64 `protobuf:"varint,2,rep,packed,name=gameTypes,proto3" json:"gameTypes,omitempty"`
}

func (x *GameListReq) Reset() {
	*x = GameListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameListReq) ProtoMessage() {}

func (x *GameListReq) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameListReq.ProtoReflect.Descriptor instead.
func (*GameListReq) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{13}
}

func (x *GameListReq) GetSign() bool {
	if x != nil {
		return x.Sign
	}
	return false
}

func (x *GameListReq) GetGameTypes() []int64 {
	if x != nil {
		return x.GameTypes
	}
	return nil
}

type GameListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int64               `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string              `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	List []*GameListDataResp `protobuf:"bytes,3,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *GameListResp) Reset() {
	*x = GameListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameListResp) ProtoMessage() {}

func (x *GameListResp) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameListResp.ProtoReflect.Descriptor instead.
func (*GameListResp) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{14}
}

func (x *GameListResp) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GameListResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GameListResp) GetList() []*GameListDataResp {
	if x != nil {
		return x.List
	}
	return nil
}

type GameListDataResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name           string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Icon           string `protobuf:"bytes,3,opt,name=icon,proto3" json:"icon,omitempty"`
	GameCount      int64  `protobuf:"varint,4,opt,name=gameCount,proto3" json:"gameCount,omitempty"`
	Status         int64  `protobuf:"varint,5,opt,name=status,proto3" json:"status,omitempty"`
	Sort           int64  `protobuf:"varint,6,opt,name=sort,proto3" json:"sort,omitempty"`
	Maintenance    string `protobuf:"bytes,7,opt,name=maintenance,proto3" json:"maintenance,omitempty"`
	GamePagcorId   int64  `protobuf:"varint,8,opt,name=gamePagcorId,proto3" json:"gamePagcorId,omitempty"`
	GameTypeId     int64  `protobuf:"varint,9,opt,name=gameTypeId,proto3" json:"gameTypeId,omitempty"`
	GameProviderId int64  `protobuf:"varint,10,opt,name=gameProviderId,proto3" json:"gameProviderId,omitempty"`
	ProviderIcon   string `protobuf:"bytes,11,opt,name=providerIcon,proto3" json:"providerIcon,omitempty"`
}

func (x *GameListDataResp) Reset() {
	*x = GameListDataResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameListDataResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameListDataResp) ProtoMessage() {}

func (x *GameListDataResp) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameListDataResp.ProtoReflect.Descriptor instead.
func (*GameListDataResp) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{15}
}

func (x *GameListDataResp) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GameListDataResp) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GameListDataResp) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *GameListDataResp) GetGameCount() int64 {
	if x != nil {
		return x.GameCount
	}
	return 0
}

func (x *GameListDataResp) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *GameListDataResp) GetSort() int64 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *GameListDataResp) GetMaintenance() string {
	if x != nil {
		return x.Maintenance
	}
	return ""
}

func (x *GameListDataResp) GetGamePagcorId() int64 {
	if x != nil {
		return x.GamePagcorId
	}
	return 0
}

func (x *GameListDataResp) GetGameTypeId() int64 {
	if x != nil {
		return x.GameTypeId
	}
	return 0
}

func (x *GameListDataResp) GetGameProviderId() int64 {
	if x != nil {
		return x.GameProviderId
	}
	return 0
}

func (x *GameListDataResp) GetProviderIcon() string {
	if x != nil {
		return x.ProviderIcon
	}
	return ""
}

type AgentGameListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sign      bool    `protobuf:"varint,1,opt,name=sign,proto3" json:"sign,omitempty"`
	GameTypes []int64 `protobuf:"varint,2,rep,packed,name=gameTypes,proto3" json:"gameTypes,omitempty"`
}

func (x *AgentGameListReq) Reset() {
	*x = AgentGameListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentGameListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentGameListReq) ProtoMessage() {}

func (x *AgentGameListReq) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentGameListReq.ProtoReflect.Descriptor instead.
func (*AgentGameListReq) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{16}
}

func (x *AgentGameListReq) GetSign() bool {
	if x != nil {
		return x.Sign
	}
	return false
}

func (x *AgentGameListReq) GetGameTypes() []int64 {
	if x != nil {
		return x.GameTypes
	}
	return nil
}

type AgentGameListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int64                    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string                   `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	List []*AgentGameListDataResp `protobuf:"bytes,3,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *AgentGameListResp) Reset() {
	*x = AgentGameListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentGameListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentGameListResp) ProtoMessage() {}

func (x *AgentGameListResp) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentGameListResp.ProtoReflect.Descriptor instead.
func (*AgentGameListResp) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{17}
}

func (x *AgentGameListResp) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *AgentGameListResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *AgentGameListResp) GetList() []*AgentGameListDataResp {
	if x != nil {
		return x.List
	}
	return nil
}

type AgentGameListDataResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name           string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Icon           string `protobuf:"bytes,3,opt,name=icon,proto3" json:"icon,omitempty"`
	GameCount      int64  `protobuf:"varint,4,opt,name=gameCount,proto3" json:"gameCount,omitempty"`
	Status         int64  `protobuf:"varint,5,opt,name=status,proto3" json:"status,omitempty"`
	Sort           int64  `protobuf:"varint,6,opt,name=sort,proto3" json:"sort,omitempty"`
	Maintenance    string `protobuf:"bytes,7,opt,name=maintenance,proto3" json:"maintenance,omitempty"`
	GamePagcorId   int64  `protobuf:"varint,8,opt,name=gamePagcorId,proto3" json:"gamePagcorId,omitempty"`
	GameTypeId     int64  `protobuf:"varint,9,opt,name=gameTypeId,proto3" json:"gameTypeId,omitempty"`
	GameProviderId int64  `protobuf:"varint,10,opt,name=gameProviderId,proto3" json:"gameProviderId,omitempty"`
	ProviderIcon   string `protobuf:"bytes,11,opt,name=providerIcon,proto3" json:"providerIcon,omitempty"`
}

func (x *AgentGameListDataResp) Reset() {
	*x = AgentGameListDataResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentGameListDataResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentGameListDataResp) ProtoMessage() {}

func (x *AgentGameListDataResp) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentGameListDataResp.ProtoReflect.Descriptor instead.
func (*AgentGameListDataResp) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{18}
}

func (x *AgentGameListDataResp) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AgentGameListDataResp) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AgentGameListDataResp) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *AgentGameListDataResp) GetGameCount() int64 {
	if x != nil {
		return x.GameCount
	}
	return 0
}

func (x *AgentGameListDataResp) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *AgentGameListDataResp) GetSort() int64 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *AgentGameListDataResp) GetMaintenance() string {
	if x != nil {
		return x.Maintenance
	}
	return ""
}

func (x *AgentGameListDataResp) GetGamePagcorId() int64 {
	if x != nil {
		return x.GamePagcorId
	}
	return 0
}

func (x *AgentGameListDataResp) GetGameTypeId() int64 {
	if x != nil {
		return x.GameTypeId
	}
	return 0
}

func (x *AgentGameListDataResp) GetGameProviderId() int64 {
	if x != nil {
		return x.GameProviderId
	}
	return 0
}

func (x *AgentGameListDataResp) GetProviderIcon() string {
	if x != nil {
		return x.ProviderIcon
	}
	return ""
}

type AgentGetGamesByCategoryReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AgentGetGamesByCategoryReq) Reset() {
	*x = AgentGetGamesByCategoryReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentGetGamesByCategoryReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentGetGamesByCategoryReq) ProtoMessage() {}

func (x *AgentGetGamesByCategoryReq) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentGetGamesByCategoryReq.ProtoReflect.Descriptor instead.
func (*AgentGetGamesByCategoryReq) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{19}
}

type AgentGetGamesByCategoryResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int64                          `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string                         `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data []*AgentGetGamesByCategoryData `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *AgentGetGamesByCategoryResp) Reset() {
	*x = AgentGetGamesByCategoryResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentGetGamesByCategoryResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentGetGamesByCategoryResp) ProtoMessage() {}

func (x *AgentGetGamesByCategoryResp) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentGetGamesByCategoryResp.ProtoReflect.Descriptor instead.
func (*AgentGetGamesByCategoryResp) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{20}
}

func (x *AgentGetGamesByCategoryResp) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *AgentGetGamesByCategoryResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *AgentGetGamesByCategoryResp) GetData() []*AgentGetGamesByCategoryData {
	if x != nil {
		return x.Data
	}
	return nil
}

type AgentGetGamesByCategoryData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name           string  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Icon           string  `protobuf:"bytes,3,opt,name=icon,proto3" json:"icon,omitempty"`
	GameTypeId     string  `protobuf:"bytes,4,opt,name=GameTypeId,proto3" json:"GameTypeId,omitempty"`
	Model          int64   `protobuf:"varint,5,opt,name=Model,proto3" json:"Model,omitempty"`
	GamePagcorId   int64   `protobuf:"varint,6,opt,name=GamePagcorId,proto3" json:"GamePagcorId,omitempty"`
	GameProviderId int64   `protobuf:"varint,7,opt,name=GameProviderId,proto3" json:"GameProviderId,omitempty"`
	ProviderRate   float32 `protobuf:"fixed32,8,opt,name=ProviderRate,proto3" json:"ProviderRate,omitempty"`
	PagcorRate     float32 `protobuf:"fixed32,9,opt,name=PagcorRate,proto3" json:"PagcorRate,omitempty"`
}

func (x *AgentGetGamesByCategoryData) Reset() {
	*x = AgentGetGamesByCategoryData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentGetGamesByCategoryData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentGetGamesByCategoryData) ProtoMessage() {}

func (x *AgentGetGamesByCategoryData) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentGetGamesByCategoryData.ProtoReflect.Descriptor instead.
func (*AgentGetGamesByCategoryData) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{21}
}

func (x *AgentGetGamesByCategoryData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AgentGetGamesByCategoryData) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AgentGetGamesByCategoryData) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *AgentGetGamesByCategoryData) GetGameTypeId() string {
	if x != nil {
		return x.GameTypeId
	}
	return ""
}

func (x *AgentGetGamesByCategoryData) GetModel() int64 {
	if x != nil {
		return x.Model
	}
	return 0
}

func (x *AgentGetGamesByCategoryData) GetGamePagcorId() int64 {
	if x != nil {
		return x.GamePagcorId
	}
	return 0
}

func (x *AgentGetGamesByCategoryData) GetGameProviderId() int64 {
	if x != nil {
		return x.GameProviderId
	}
	return 0
}

func (x *AgentGetGamesByCategoryData) GetProviderRate() float32 {
	if x != nil {
		return x.ProviderRate
	}
	return 0
}

func (x *AgentGetGamesByCategoryData) GetPagcorRate() float32 {
	if x != nil {
		return x.PagcorRate
	}
	return 0
}

type AgentGamePagcorListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AgentGamePagcorListReq) Reset() {
	*x = AgentGamePagcorListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentGamePagcorListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentGamePagcorListReq) ProtoMessage() {}

func (x *AgentGamePagcorListReq) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentGamePagcorListReq.ProtoReflect.Descriptor instead.
func (*AgentGamePagcorListReq) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{22}
}

// 响应消息
type AgentGamePagcorListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int64                      `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"` // 响应码
	Msg  string                     `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`    // 响应消息
	List []*AgentGamePagcorListData `protobuf:"bytes,3,rep,name=list,proto3" json:"list,omitempty"`  // 游戏列表
}

func (x *AgentGamePagcorListResp) Reset() {
	*x = AgentGamePagcorListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentGamePagcorListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentGamePagcorListResp) ProtoMessage() {}

func (x *AgentGamePagcorListResp) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentGamePagcorListResp.ProtoReflect.Descriptor instead.
func (*AgentGamePagcorListResp) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{23}
}

func (x *AgentGamePagcorListResp) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *AgentGamePagcorListResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *AgentGamePagcorListResp) GetList() []*AgentGamePagcorListData {
	if x != nil {
		return x.List
	}
	return nil
}

// 游戏数据
type AgentGamePagcorListData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`         // 游戏ID
	Name   string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`      // 游戏名称
	Status int64  `protobuf:"varint,3,opt,name=status,proto3" json:"status,omitempty"` // 游戏状态
}

func (x *AgentGamePagcorListData) Reset() {
	*x = AgentGamePagcorListData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentGamePagcorListData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentGamePagcorListData) ProtoMessage() {}

func (x *AgentGamePagcorListData) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentGamePagcorListData.ProtoReflect.Descriptor instead.
func (*AgentGamePagcorListData) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{24}
}

func (x *AgentGamePagcorListData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AgentGamePagcorListData) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AgentGamePagcorListData) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

// 游戏详情
type GameDetailsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                    int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	GameProviderSubtypeId int64 `protobuf:"varint,2,opt,name=gameProviderSubtypeId,proto3" json:"gameProviderSubtypeId,omitempty"`
	PlayMode              int64 `protobuf:"varint,3,opt,name=playMode,proto3" json:"playMode,omitempty"`
	Sign                  bool  `protobuf:"varint,4,opt,name=sign,proto3" json:"sign,omitempty"`
}

func (x *GameDetailsReq) Reset() {
	*x = GameDetailsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameDetailsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameDetailsReq) ProtoMessage() {}

func (x *GameDetailsReq) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameDetailsReq.ProtoReflect.Descriptor instead.
func (*GameDetailsReq) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{25}
}

func (x *GameDetailsReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GameDetailsReq) GetGameProviderSubtypeId() int64 {
	if x != nil {
		return x.GameProviderSubtypeId
	}
	return 0
}

func (x *GameDetailsReq) GetPlayMode() int64 {
	if x != nil {
		return x.PlayMode
	}
	return 0
}

func (x *GameDetailsReq) GetSign() bool {
	if x != nil {
		return x.Sign
	}
	return false
}

type GameDetailsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int64                `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string               `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *GameDetailsDataResp `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GameDetailsResp) Reset() {
	*x = GameDetailsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameDetailsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameDetailsResp) ProtoMessage() {}

func (x *GameDetailsResp) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameDetailsResp.ProtoReflect.Descriptor instead.
func (*GameDetailsResp) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{26}
}

func (x *GameDetailsResp) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GameDetailsResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GameDetailsResp) GetData() *GameDetailsDataResp {
	if x != nil {
		return x.Data
	}
	return nil
}

type GameDetailsDataResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                    int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	GameProviderSubtypeId int64  `protobuf:"varint,2,opt,name=gameProviderSubtypeId,proto3" json:"gameProviderSubtypeId,omitempty"`
	GameProviderId        int64  `protobuf:"varint,3,opt,name=gameProviderId,proto3" json:"gameProviderId,omitempty"`
	GameProviderName      string `protobuf:"bytes,4,opt,name=gameProviderName,proto3" json:"gameProviderName,omitempty"`
	Name                  string `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
	OriginalIcon          string `protobuf:"bytes,6,opt,name=originalIcon,proto3" json:"originalIcon,omitempty"`
	LatestIcon            string `protobuf:"bytes,7,opt,name=latestIcon,proto3" json:"latestIcon,omitempty"`
	IsNew                 int64  `protobuf:"varint,8,opt,name=isNew,proto3" json:"isNew,omitempty"`
	FavoriteStar          int64  `protobuf:"varint,9,opt,name=favoriteStar,proto3" json:"favoriteStar,omitempty"`
	HotStar               int64  `protobuf:"varint,10,opt,name=hotStar,proto3" json:"hotStar,omitempty"`
	IsFavorite            int64  `protobuf:"varint,11,opt,name=isFavorite,proto3" json:"isFavorite,omitempty"`
	Status                int64  `protobuf:"varint,12,opt,name=status,proto3" json:"status,omitempty"`
	Maintenance           string `protobuf:"bytes,13,opt,name=maintenance,proto3" json:"maintenance,omitempty"`
	GameTypeId            int64  `protobuf:"varint,14,opt,name=gameTypeId,proto3" json:"gameTypeId,omitempty"`
	IsRotated             int64  `protobuf:"varint,15,opt,name=is_rotated,json=isRotated,proto3" json:"is_rotated,omitempty"`
}

func (x *GameDetailsDataResp) Reset() {
	*x = GameDetailsDataResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameDetailsDataResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameDetailsDataResp) ProtoMessage() {}

func (x *GameDetailsDataResp) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameDetailsDataResp.ProtoReflect.Descriptor instead.
func (*GameDetailsDataResp) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{27}
}

func (x *GameDetailsDataResp) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GameDetailsDataResp) GetGameProviderSubtypeId() int64 {
	if x != nil {
		return x.GameProviderSubtypeId
	}
	return 0
}

func (x *GameDetailsDataResp) GetGameProviderId() int64 {
	if x != nil {
		return x.GameProviderId
	}
	return 0
}

func (x *GameDetailsDataResp) GetGameProviderName() string {
	if x != nil {
		return x.GameProviderName
	}
	return ""
}

func (x *GameDetailsDataResp) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GameDetailsDataResp) GetOriginalIcon() string {
	if x != nil {
		return x.OriginalIcon
	}
	return ""
}

func (x *GameDetailsDataResp) GetLatestIcon() string {
	if x != nil {
		return x.LatestIcon
	}
	return ""
}

func (x *GameDetailsDataResp) GetIsNew() int64 {
	if x != nil {
		return x.IsNew
	}
	return 0
}

func (x *GameDetailsDataResp) GetFavoriteStar() int64 {
	if x != nil {
		return x.FavoriteStar
	}
	return 0
}

func (x *GameDetailsDataResp) GetHotStar() int64 {
	if x != nil {
		return x.HotStar
	}
	return 0
}

func (x *GameDetailsDataResp) GetIsFavorite() int64 {
	if x != nil {
		return x.IsFavorite
	}
	return 0
}

func (x *GameDetailsDataResp) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *GameDetailsDataResp) GetMaintenance() string {
	if x != nil {
		return x.Maintenance
	}
	return ""
}

func (x *GameDetailsDataResp) GetGameTypeId() int64 {
	if x != nil {
		return x.GameTypeId
	}
	return 0
}

func (x *GameDetailsDataResp) GetIsRotated() int64 {
	if x != nil {
		return x.IsRotated
	}
	return 0
}

type BetListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current   int64           `protobuf:"varint,1,opt,name=current,proto3" json:"current,omitempty"`
	Size      int64           `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	Sign      bool            `protobuf:"varint,3,opt,name=sign,proto3" json:"sign,omitempty"`
	SortKey   string          `protobuf:"bytes,4,opt,name=sortKey,proto3" json:"sortKey,omitempty"`
	Data      *BetListDataReq `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
	SortField []string        `protobuf:"bytes,6,rep,name=sortField,proto3" json:"sortField,omitempty"`
}

func (x *BetListReq) Reset() {
	*x = BetListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BetListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BetListReq) ProtoMessage() {}

func (x *BetListReq) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BetListReq.ProtoReflect.Descriptor instead.
func (*BetListReq) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{28}
}

func (x *BetListReq) GetCurrent() int64 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *BetListReq) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *BetListReq) GetSign() bool {
	if x != nil {
		return x.Sign
	}
	return false
}

func (x *BetListReq) GetSortKey() string {
	if x != nil {
		return x.SortKey
	}
	return ""
}

func (x *BetListReq) GetData() *BetListDataReq {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *BetListReq) GetSortField() []string {
	if x != nil {
		return x.SortField
	}
	return nil
}

type BetListDataReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status string `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *BetListDataReq) Reset() {
	*x = BetListDataReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BetListDataReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BetListDataReq) ProtoMessage() {}

func (x *BetListDataReq) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BetListDataReq.ProtoReflect.Descriptor instead.
func (*BetListDataReq) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{29}
}

func (x *BetListDataReq) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type BetListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int64        `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string       `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *BetListData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *BetListResp) Reset() {
	*x = BetListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BetListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BetListResp) ProtoMessage() {}

func (x *BetListResp) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BetListResp.ProtoReflect.Descriptor instead.
func (*BetListResp) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{30}
}

func (x *BetListResp) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *BetListResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *BetListResp) GetData() *BetListData {
	if x != nil {
		return x.Data
	}
	return nil
}

type BetListData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current string             `protobuf:"bytes,1,opt,name=current,proto3" json:"current,omitempty"`
	Size    string             `protobuf:"bytes,2,opt,name=size,proto3" json:"size,omitempty"`
	Pages   string             `protobuf:"bytes,3,opt,name=pages,proto3" json:"pages,omitempty"`
	Total   string             `protobuf:"bytes,4,opt,name=total,proto3" json:"total,omitempty"`
	List    []*BetListDataItem `protobuf:"bytes,5,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *BetListData) Reset() {
	*x = BetListData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BetListData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BetListData) ProtoMessage() {}

func (x *BetListData) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BetListData.ProtoReflect.Descriptor instead.
func (*BetListData) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{31}
}

func (x *BetListData) GetCurrent() string {
	if x != nil {
		return x.Current
	}
	return ""
}

func (x *BetListData) GetSize() string {
	if x != nil {
		return x.Size
	}
	return ""
}

func (x *BetListData) GetPages() string {
	if x != nil {
		return x.Pages
	}
	return ""
}

func (x *BetListData) GetTotal() string {
	if x != nil {
		return x.Total
	}
	return ""
}

func (x *BetListData) GetList() []*BetListDataItem {
	if x != nil {
		return x.List
	}
	return nil
}

type BetListDataItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                    int64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XbUsername            string  `protobuf:"bytes,2,opt,name=xbUsername,proto3" json:"xbUsername,omitempty"`
	GameProviderSubtypeId int64   `protobuf:"varint,3,opt,name=gameProviderSubtypeId,proto3" json:"gameProviderSubtypeId,omitempty"`
	CoinBefore            float32 `protobuf:"fixed32,4,opt,name=coinBefore,proto3" json:"coinBefore,omitempty"`
	Stake                 float32 `protobuf:"fixed32,5,opt,name=stake,proto3" json:"stake,omitempty"`
	Payout                float32 `protobuf:"fixed32,6,opt,name=payout,proto3" json:"payout,omitempty"`
	XbStatus              int64   `protobuf:"varint,7,opt,name=xbStatus,proto3" json:"xbStatus,omitempty"`
	CreatedAt             int64   `protobuf:"varint,8,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt             int64   `protobuf:"varint,9,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	GameName              string  `protobuf:"bytes,10,opt,name=gameName,proto3" json:"gameName,omitempty"`
	XbProfit              float32 `protobuf:"fixed32,11,opt,name=xbProfit,proto3" json:"xbProfit,omitempty"`
}

func (x *BetListDataItem) Reset() {
	*x = BetListDataItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BetListDataItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BetListDataItem) ProtoMessage() {}

func (x *BetListDataItem) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BetListDataItem.ProtoReflect.Descriptor instead.
func (*BetListDataItem) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{32}
}

func (x *BetListDataItem) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *BetListDataItem) GetXbUsername() string {
	if x != nil {
		return x.XbUsername
	}
	return ""
}

func (x *BetListDataItem) GetGameProviderSubtypeId() int64 {
	if x != nil {
		return x.GameProviderSubtypeId
	}
	return 0
}

func (x *BetListDataItem) GetCoinBefore() float32 {
	if x != nil {
		return x.CoinBefore
	}
	return 0
}

func (x *BetListDataItem) GetStake() float32 {
	if x != nil {
		return x.Stake
	}
	return 0
}

func (x *BetListDataItem) GetPayout() float32 {
	if x != nil {
		return x.Payout
	}
	return 0
}

func (x *BetListDataItem) GetXbStatus() int64 {
	if x != nil {
		return x.XbStatus
	}
	return 0
}

func (x *BetListDataItem) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *BetListDataItem) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *BetListDataItem) GetGameName() string {
	if x != nil {
		return x.GameName
	}
	return ""
}

func (x *BetListDataItem) GetXbProfit() float32 {
	if x != nil {
		return x.XbProfit
	}
	return 0
}

type BetStatisticsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sign bool `protobuf:"varint,1,opt,name=sign,proto3" json:"sign,omitempty"`
}

func (x *BetStatisticsReq) Reset() {
	*x = BetStatisticsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BetStatisticsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BetStatisticsReq) ProtoMessage() {}

func (x *BetStatisticsReq) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BetStatisticsReq.ProtoReflect.Descriptor instead.
func (*BetStatisticsReq) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{33}
}

func (x *BetStatisticsReq) GetSign() bool {
	if x != nil {
		return x.Sign
	}
	return false
}

type BetStatisticsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int64              `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string             `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *BetStatisticsData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *BetStatisticsResp) Reset() {
	*x = BetStatisticsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BetStatisticsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BetStatisticsResp) ProtoMessage() {}

func (x *BetStatisticsResp) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BetStatisticsResp.ProtoReflect.Descriptor instead.
func (*BetStatisticsResp) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{34}
}

func (x *BetStatisticsResp) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *BetStatisticsResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *BetStatisticsResp) GetData() *BetStatisticsData {
	if x != nil {
		return x.Data
	}
	return nil
}

type BetStatisticsData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PayOutSum string `protobuf:"bytes,1,opt,name=payOutSum,proto3" json:"payOutSum,omitempty"`
	StakeSum  string `protobuf:"bytes,2,opt,name=stakeSum,proto3" json:"stakeSum,omitempty"`
}

func (x *BetStatisticsData) Reset() {
	*x = BetStatisticsData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BetStatisticsData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BetStatisticsData) ProtoMessage() {}

func (x *BetStatisticsData) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BetStatisticsData.ProtoReflect.Descriptor instead.
func (*BetStatisticsData) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{35}
}

func (x *BetStatisticsData) GetPayOutSum() string {
	if x != nil {
		return x.PayOutSum
	}
	return ""
}

func (x *BetStatisticsData) GetStakeSum() string {
	if x != nil {
		return x.StakeSum
	}
	return ""
}

type GameFavoriteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Direction             int32 `protobuf:"varint,1,opt,name=direction,proto3" json:"direction,omitempty"`
	GameProviderSubtypeId int32 `protobuf:"varint,2,opt,name=gameProviderSubtypeId,proto3" json:"gameProviderSubtypeId,omitempty"`
	GameSlotId            int64 `protobuf:"varint,3,opt,name=gameSlotId,proto3" json:"gameSlotId,omitempty"`
	Sign                  bool  `protobuf:"varint,4,opt,name=sign,proto3" json:"sign,omitempty"`
}

func (x *GameFavoriteReq) Reset() {
	*x = GameFavoriteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameFavoriteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameFavoriteReq) ProtoMessage() {}

func (x *GameFavoriteReq) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameFavoriteReq.ProtoReflect.Descriptor instead.
func (*GameFavoriteReq) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{36}
}

func (x *GameFavoriteReq) GetDirection() int32 {
	if x != nil {
		return x.Direction
	}
	return 0
}

func (x *GameFavoriteReq) GetGameProviderSubtypeId() int32 {
	if x != nil {
		return x.GameProviderSubtypeId
	}
	return 0
}

func (x *GameFavoriteReq) GetGameSlotId() int64 {
	if x != nil {
		return x.GameSlotId
	}
	return 0
}

func (x *GameFavoriteReq) GetSign() bool {
	if x != nil {
		return x.Sign
	}
	return false
}

type GameFavoriteResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int64  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data bool   `protobuf:"varint,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GameFavoriteResp) Reset() {
	*x = GameFavoriteResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameFavoriteResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameFavoriteResp) ProtoMessage() {}

func (x *GameFavoriteResp) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameFavoriteResp.ProtoReflect.Descriptor instead.
func (*GameFavoriteResp) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{37}
}

func (x *GameFavoriteResp) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GameFavoriteResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GameFavoriteResp) GetData() bool {
	if x != nil {
		return x.Data
	}
	return false
}

type GetRankListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Category   int64  `protobuf:"varint,1,opt,name=category,proto3" json:"category,omitempty"` // 0:总盈亏；1：当日盈亏
	ProviderId string `protobuf:"bytes,2,opt,name=providerId,proto3" json:"providerId,omitempty"`
}

func (x *GetRankListReq) Reset() {
	*x = GetRankListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRankListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRankListReq) ProtoMessage() {}

func (x *GetRankListReq) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRankListReq.ProtoReflect.Descriptor instead.
func (*GetRankListReq) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{38}
}

func (x *GetRankListReq) GetCategory() int64 {
	if x != nil {
		return x.Category
	}
	return 0
}

func (x *GetRankListReq) GetProviderId() string {
	if x != nil {
		return x.ProviderId
	}
	return ""
}

type GetRankListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int64           `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string          `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data []*RankListData `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *GetRankListResp) Reset() {
	*x = GetRankListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRankListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRankListResp) ProtoMessage() {}

func (x *GetRankListResp) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRankListResp.ProtoReflect.Descriptor instead.
func (*GetRankListResp) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{39}
}

func (x *GetRankListResp) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetRankListResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GetRankListResp) GetData() []*RankListData {
	if x != nil {
		return x.Data
	}
	return nil
}

type RankListData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameName     string `protobuf:"bytes,1,opt,name=gameName,proto3" json:"gameName,omitempty"`
	GameIcon     string `protobuf:"bytes,2,opt,name=gameIcon,proto3" json:"gameIcon,omitempty"`
	Player       string `protobuf:"bytes,3,opt,name=player,proto3" json:"player,omitempty"`
	CurrTime     string `protobuf:"bytes,4,opt,name=currTime,proto3" json:"currTime,omitempty"`
	BetAmount    string `protobuf:"bytes,5,opt,name=betAmount,proto3" json:"betAmount,omitempty"`
	Multiplier   string `protobuf:"bytes,6,opt,name=multiplier,proto3" json:"multiplier,omitempty"`
	ProfitAmount string `protobuf:"bytes,7,opt,name=profitAmount,proto3" json:"profitAmount,omitempty"`
}

func (x *RankListData) Reset() {
	*x = RankListData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RankListData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RankListData) ProtoMessage() {}

func (x *RankListData) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RankListData.ProtoReflect.Descriptor instead.
func (*RankListData) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{40}
}

func (x *RankListData) GetGameName() string {
	if x != nil {
		return x.GameName
	}
	return ""
}

func (x *RankListData) GetGameIcon() string {
	if x != nil {
		return x.GameIcon
	}
	return ""
}

func (x *RankListData) GetPlayer() string {
	if x != nil {
		return x.Player
	}
	return ""
}

func (x *RankListData) GetCurrTime() string {
	if x != nil {
		return x.CurrTime
	}
	return ""
}

func (x *RankListData) GetBetAmount() string {
	if x != nil {
		return x.BetAmount
	}
	return ""
}

func (x *RankListData) GetMultiplier() string {
	if x != nil {
		return x.Multiplier
	}
	return ""
}

func (x *RankListData) GetProfitAmount() string {
	if x != nil {
		return x.ProfitAmount
	}
	return ""
}

type GetPlatformProfitReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameTypeId            int64  `protobuf:"varint,1,opt,name=gameTypeId,proto3" json:"gameTypeId,omitempty"`                       //游戏分类ID
	GameProviderSubtypeId int64  `protobuf:"varint,2,opt,name=gameProviderSubtypeId,proto3" json:"gameProviderSubtypeId,omitempty"` //
	GameListId            int64  `protobuf:"varint,3,opt,name=gameListId,proto3" json:"gameListId,omitempty"`
	LevelId               int64  `protobuf:"varint,4,opt,name=levelId,proto3" json:"levelId,omitempty"`
	Username              string `protobuf:"bytes,5,opt,name=username,proto3" json:"username,omitempty"`
	Type                  int64  `protobuf:"varint,6,opt,name=type,proto3" json:"type,omitempty"` //型:1-搜索代理线 2-搜索指定用户
	StartTime             int64  `protobuf:"varint,7,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime               int64  `protobuf:"varint,8,opt,name=endTime,proto3" json:"endTime,omitempty"`
	ExportFlag            int64  `protobuf:"varint,9,opt,name=exportFlag,proto3" json:"exportFlag,omitempty"` //导出flag 0:默认查询 1:导出
}

func (x *GetPlatformProfitReq) Reset() {
	*x = GetPlatformProfitReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPlatformProfitReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlatformProfitReq) ProtoMessage() {}

func (x *GetPlatformProfitReq) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlatformProfitReq.ProtoReflect.Descriptor instead.
func (*GetPlatformProfitReq) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{41}
}

func (x *GetPlatformProfitReq) GetGameTypeId() int64 {
	if x != nil {
		return x.GameTypeId
	}
	return 0
}

func (x *GetPlatformProfitReq) GetGameProviderSubtypeId() int64 {
	if x != nil {
		return x.GameProviderSubtypeId
	}
	return 0
}

func (x *GetPlatformProfitReq) GetGameListId() int64 {
	if x != nil {
		return x.GameListId
	}
	return 0
}

func (x *GetPlatformProfitReq) GetLevelId() int64 {
	if x != nil {
		return x.LevelId
	}
	return 0
}

func (x *GetPlatformProfitReq) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *GetPlatformProfitReq) GetType() int64 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *GetPlatformProfitReq) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *GetPlatformProfitReq) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *GetPlatformProfitReq) GetExportFlag() int64 {
	if x != nil {
		return x.ExportFlag
	}
	return 0
}

type GetPlatformProfitResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int64                  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string                 `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *GetPlatformProfitData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetPlatformProfitResp) Reset() {
	*x = GetPlatformProfitResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPlatformProfitResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlatformProfitResp) ProtoMessage() {}

func (x *GetPlatformProfitResp) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlatformProfitResp.ProtoReflect.Descriptor instead.
func (*GetPlatformProfitResp) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{42}
}

func (x *GetPlatformProfitResp) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetPlatformProfitResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GetPlatformProfitResp) GetData() *GetPlatformProfitData {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetPlatformProfitData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalProfit float64 `protobuf:"fixed64,1,opt,name=totalProfit,proto3" json:"totalProfit,omitempty"` //总盈亏
}

func (x *GetPlatformProfitData) Reset() {
	*x = GetPlatformProfitData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPlatformProfitData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlatformProfitData) ProtoMessage() {}

func (x *GetPlatformProfitData) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlatformProfitData.ProtoReflect.Descriptor instead.
func (*GetPlatformProfitData) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{43}
}

func (x *GetPlatformProfitData) GetTotalProfit() float64 {
	if x != nil {
		return x.TotalProfit
	}
	return 0
}

type GetPlatformProfitListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current   int64                         `protobuf:"varint,1,opt,name=current,proto3" json:"current,omitempty"`
	Size      int64                         `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	SortKey   string                        `protobuf:"bytes,3,opt,name=sortKey,proto3" json:"sortKey,omitempty"`
	SortField []string                      `protobuf:"bytes,4,rep,name=sortField,proto3" json:"sortField,omitempty"`
	Data      *GetPlatformProfitListDataReq `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetPlatformProfitListReq) Reset() {
	*x = GetPlatformProfitListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPlatformProfitListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlatformProfitListReq) ProtoMessage() {}

func (x *GetPlatformProfitListReq) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlatformProfitListReq.ProtoReflect.Descriptor instead.
func (*GetPlatformProfitListReq) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{44}
}

func (x *GetPlatformProfitListReq) GetCurrent() int64 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *GetPlatformProfitListReq) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *GetPlatformProfitListReq) GetSortKey() string {
	if x != nil {
		return x.SortKey
	}
	return ""
}

func (x *GetPlatformProfitListReq) GetSortField() []string {
	if x != nil {
		return x.SortField
	}
	return nil
}

func (x *GetPlatformProfitListReq) GetData() *GetPlatformProfitListDataReq {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetPlatformProfitListDataReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EndTime               int64  `protobuf:"varint,1,opt,name=endTime,proto3" json:"endTime,omitempty"`
	GameListId            int64  `protobuf:"varint,2,opt,name=gameListId,proto3" json:"gameListId,omitempty"`
	GameProviderSubtypeId int64  `protobuf:"varint,3,opt,name=gameProviderSubtypeId,proto3" json:"gameProviderSubtypeId,omitempty"`
	GameTypeId            int64  `protobuf:"varint,4,opt,name=gameTypeId,proto3" json:"gameTypeId,omitempty"`
	LevelId               int64  `protobuf:"varint,5,opt,name=levelId,proto3" json:"levelId,omitempty"`
	StartTime             int64  `protobuf:"varint,6,opt,name=startTime,proto3" json:"startTime,omitempty"`
	Type                  string `protobuf:"bytes,7,opt,name=type,proto3" json:"type,omitempty"`
	Username              string `protobuf:"bytes,8,opt,name=username,proto3" json:"username,omitempty"`
}

func (x *GetPlatformProfitListDataReq) Reset() {
	*x = GetPlatformProfitListDataReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPlatformProfitListDataReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlatformProfitListDataReq) ProtoMessage() {}

func (x *GetPlatformProfitListDataReq) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlatformProfitListDataReq.ProtoReflect.Descriptor instead.
func (*GetPlatformProfitListDataReq) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{45}
}

func (x *GetPlatformProfitListDataReq) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *GetPlatformProfitListDataReq) GetGameListId() int64 {
	if x != nil {
		return x.GameListId
	}
	return 0
}

func (x *GetPlatformProfitListDataReq) GetGameProviderSubtypeId() int64 {
	if x != nil {
		return x.GameProviderSubtypeId
	}
	return 0
}

func (x *GetPlatformProfitListDataReq) GetGameTypeId() int64 {
	if x != nil {
		return x.GameTypeId
	}
	return 0
}

func (x *GetPlatformProfitListDataReq) GetLevelId() int64 {
	if x != nil {
		return x.LevelId
	}
	return 0
}

func (x *GetPlatformProfitListDataReq) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *GetPlatformProfitListDataReq) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *GetPlatformProfitListDataReq) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

type GetPlatformProfitListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current int64                      `protobuf:"varint,1,opt,name=current,proto3" json:"current,omitempty"`
	Size    int64                      `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	Pages   int64                      `protobuf:"varint,3,opt,name=pages,proto3" json:"pages,omitempty"`
	Total   int64                      `protobuf:"varint,4,opt,name=total,proto3" json:"total,omitempty"`
	Data    *GetPlatformProfitListData `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetPlatformProfitListResp) Reset() {
	*x = GetPlatformProfitListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPlatformProfitListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlatformProfitListResp) ProtoMessage() {}

func (x *GetPlatformProfitListResp) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlatformProfitListResp.ProtoReflect.Descriptor instead.
func (*GetPlatformProfitListResp) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{46}
}

func (x *GetPlatformProfitListResp) GetCurrent() int64 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *GetPlatformProfitListResp) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *GetPlatformProfitListResp) GetPages() int64 {
	if x != nil {
		return x.Pages
	}
	return 0
}

func (x *GetPlatformProfitListResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *GetPlatformProfitListResp) GetData() *GetPlatformProfitListData {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetPlatformProfitListData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*GetPlatformProfitListItem `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *GetPlatformProfitListData) Reset() {
	*x = GetPlatformProfitListData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPlatformProfitListData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlatformProfitListData) ProtoMessage() {}

func (x *GetPlatformProfitListData) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlatformProfitListData.ProtoReflect.Descriptor instead.
func (*GetPlatformProfitListData) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{47}
}

func (x *GetPlatformProfitListData) GetList() []*GetPlatformProfitListItem {
	if x != nil {
		return x.List
	}
	return nil
}

type GetPlatformProfitListItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username                string  `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Uid                     int64   `protobuf:"varint,2,opt,name=uid,proto3" json:"uid,omitempty"`
	GameTypeName            string  `protobuf:"bytes,3,opt,name=gameTypeName,proto3" json:"gameTypeName,omitempty"` // 游戏大类名称
	GameName                string  `protobuf:"bytes,4,opt,name=gameName,proto3" json:"gameName,omitempty"`         //游戏名称
	GameProviderSubtypeName string  `protobuf:"bytes,5,opt,name=gameProviderSubtypeName,proto3" json:"gameProviderSubtypeName,omitempty"`
	Profit                  float64 `protobuf:"fixed64,6,opt,name=profit,proto3" json:"profit,omitempty"` // 盈亏金额
	CreatedAt               int64   `protobuf:"varint,7,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	LevelText               string  `protobuf:"bytes,8,opt,name=levelText,proto3" json:"levelText,omitempty"`
	Role                    int64   `protobuf:"varint,9,opt,name=role,proto3" json:"role,omitempty"`
	ProfitExport            float64 `protobuf:"fixed64,10,opt,name=profitExport,proto3" json:"profitExport,omitempty"` // 盈亏金额-导出专用
}

func (x *GetPlatformProfitListItem) Reset() {
	*x = GetPlatformProfitListItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPlatformProfitListItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlatformProfitListItem) ProtoMessage() {}

func (x *GetPlatformProfitListItem) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlatformProfitListItem.ProtoReflect.Descriptor instead.
func (*GetPlatformProfitListItem) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{48}
}

func (x *GetPlatformProfitListItem) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *GetPlatformProfitListItem) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *GetPlatformProfitListItem) GetGameTypeName() string {
	if x != nil {
		return x.GameTypeName
	}
	return ""
}

func (x *GetPlatformProfitListItem) GetGameName() string {
	if x != nil {
		return x.GameName
	}
	return ""
}

func (x *GetPlatformProfitListItem) GetGameProviderSubtypeName() string {
	if x != nil {
		return x.GameProviderSubtypeName
	}
	return ""
}

func (x *GetPlatformProfitListItem) GetProfit() float64 {
	if x != nil {
		return x.Profit
	}
	return 0
}

func (x *GetPlatformProfitListItem) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *GetPlatformProfitListItem) GetLevelText() string {
	if x != nil {
		return x.LevelText
	}
	return ""
}

func (x *GetPlatformProfitListItem) GetRole() int64 {
	if x != nil {
		return x.Role
	}
	return 0
}

func (x *GetPlatformProfitListItem) GetProfitExport() float64 {
	if x != nil {
		return x.ProfitExport
	}
	return 0
}

type PlatProfitAndBetCountChartReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type       string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Username   string `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	StartTime  int64  `protobuf:"varint,3,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime    int64  `protobuf:"varint,4,opt,name=endTime,proto3" json:"endTime,omitempty"`
	GameListId int64  `protobuf:"varint,5,opt,name=gameListId,proto3" json:"gameListId,omitempty"`
}

func (x *PlatProfitAndBetCountChartReq) Reset() {
	*x = PlatProfitAndBetCountChartReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlatProfitAndBetCountChartReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlatProfitAndBetCountChartReq) ProtoMessage() {}

func (x *PlatProfitAndBetCountChartReq) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlatProfitAndBetCountChartReq.ProtoReflect.Descriptor instead.
func (*PlatProfitAndBetCountChartReq) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{49}
}

func (x *PlatProfitAndBetCountChartReq) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *PlatProfitAndBetCountChartReq) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *PlatProfitAndBetCountChartReq) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *PlatProfitAndBetCountChartReq) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *PlatProfitAndBetCountChartReq) GetGameListId() int64 {
	if x != nil {
		return x.GameListId
	}
	return 0
}

type PlatProfitAndBetCountChartResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int64                           `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string                          `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *PlatProfitAndBetCountChartData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *PlatProfitAndBetCountChartResp) Reset() {
	*x = PlatProfitAndBetCountChartResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlatProfitAndBetCountChartResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlatProfitAndBetCountChartResp) ProtoMessage() {}

func (x *PlatProfitAndBetCountChartResp) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlatProfitAndBetCountChartResp.ProtoReflect.Descriptor instead.
func (*PlatProfitAndBetCountChartResp) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{50}
}

func (x *PlatProfitAndBetCountChartResp) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *PlatProfitAndBetCountChartResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *PlatProfitAndBetCountChartResp) GetData() *PlatProfitAndBetCountChartData {
	if x != nil {
		return x.Data
	}
	return nil
}

type PlatProfitAndBetCountChartData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BetCountList     []*ListChart     `protobuf:"bytes,1,rep,name=betCountList,proto3" json:"betCountList,omitempty"`
	BetUserCountList []*ListChart     `protobuf:"bytes,2,rep,name=betUserCountList,proto3" json:"betUserCountList,omitempty"`
	ProfitList       []*ListCoinChart `protobuf:"bytes,3,rep,name=profitList,proto3" json:"profitList,omitempty"`
}

func (x *PlatProfitAndBetCountChartData) Reset() {
	*x = PlatProfitAndBetCountChartData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlatProfitAndBetCountChartData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlatProfitAndBetCountChartData) ProtoMessage() {}

func (x *PlatProfitAndBetCountChartData) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlatProfitAndBetCountChartData.ProtoReflect.Descriptor instead.
func (*PlatProfitAndBetCountChartData) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{51}
}

func (x *PlatProfitAndBetCountChartData) GetBetCountList() []*ListChart {
	if x != nil {
		return x.BetCountList
	}
	return nil
}

func (x *PlatProfitAndBetCountChartData) GetBetUserCountList() []*ListChart {
	if x != nil {
		return x.BetUserCountList
	}
	return nil
}

func (x *PlatProfitAndBetCountChartData) GetProfitList() []*ListCoinChart {
	if x != nil {
		return x.ProfitList
	}
	return nil
}

type ListChart struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Count int64  `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *ListChart) Reset() {
	*x = ListChart{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListChart) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListChart) ProtoMessage() {}

func (x *ListChart) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListChart.ProtoReflect.Descriptor instead.
func (*ListChart) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{52}
}

func (x *ListChart) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ListChart) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

type ListCoinChart struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string  `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Coin float64 `protobuf:"fixed64,2,opt,name=coin,proto3" json:"coin,omitempty"` //金额
}

func (x *ListCoinChart) Reset() {
	*x = ListCoinChart{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCoinChart) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCoinChart) ProtoMessage() {}

func (x *ListCoinChart) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCoinChart.ProtoReflect.Descriptor instead.
func (*ListCoinChart) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{53}
}

func (x *ListCoinChart) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ListCoinChart) GetCoin() float64 {
	if x != nil {
		return x.Coin
	}
	return 0
}

type UserSummaryReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type      string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Username  string `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	StartTime int64  `protobuf:"varint,3,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime   int64  `protobuf:"varint,4,opt,name=endTime,proto3" json:"endTime,omitempty"`
}

func (x *UserSummaryReq) Reset() {
	*x = UserSummaryReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserSummaryReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserSummaryReq) ProtoMessage() {}

func (x *UserSummaryReq) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserSummaryReq.ProtoReflect.Descriptor instead.
func (*UserSummaryReq) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{54}
}

func (x *UserSummaryReq) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *UserSummaryReq) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *UserSummaryReq) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *UserSummaryReq) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

type UserSummaryResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int64            `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string           `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *UserSummaryData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *UserSummaryResp) Reset() {
	*x = UserSummaryResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserSummaryResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserSummaryResp) ProtoMessage() {}

func (x *UserSummaryResp) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserSummaryResp.ProtoReflect.Descriptor instead.
func (*UserSummaryResp) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{55}
}

func (x *UserSummaryResp) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *UserSummaryResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *UserSummaryResp) GetData() *UserSummaryData {
	if x != nil {
		return x.Data
	}
	return nil
}

type UserSummaryData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CoinAdjust           string `protobuf:"bytes,1,opt,name=coinAdjust,proto3" json:"coinAdjust,omitempty"`
	CoinBet              string `protobuf:"bytes,2,opt,name=coinBet,proto3" json:"coinBet,omitempty"`
	CoinBetProfit        string `protobuf:"bytes,3,opt,name=coinBetProfit,proto3" json:"coinBetProfit,omitempty"`
	CoinCommission       string `protobuf:"bytes,4,opt,name=coinCommission,proto3" json:"coinCommission,omitempty"`
	CoinDeposit          string `protobuf:"bytes,5,opt,name=coinDeposit,proto3" json:"coinDeposit,omitempty"`
	CoinRewards          string `protobuf:"bytes,6,opt,name=coinRewards,proto3" json:"coinRewards,omitempty"`
	CoinWithdrawal       string `protobuf:"bytes,7,opt,name=coinWithdrawal,proto3" json:"coinWithdrawal,omitempty"`
	CoinWithdrawalReally string `protobuf:"bytes,8,opt,name=coinWithdrawalReally,proto3" json:"coinWithdrawalReally,omitempty"`
	Ggr                  string `protobuf:"bytes,9,opt,name=ggr,proto3" json:"ggr,omitempty"`
	Profit               string `protobuf:"bytes,10,opt,name=profit,proto3" json:"profit,omitempty"`
}

func (x *UserSummaryData) Reset() {
	*x = UserSummaryData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserSummaryData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserSummaryData) ProtoMessage() {}

func (x *UserSummaryData) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserSummaryData.ProtoReflect.Descriptor instead.
func (*UserSummaryData) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{56}
}

func (x *UserSummaryData) GetCoinAdjust() string {
	if x != nil {
		return x.CoinAdjust
	}
	return ""
}

func (x *UserSummaryData) GetCoinBet() string {
	if x != nil {
		return x.CoinBet
	}
	return ""
}

func (x *UserSummaryData) GetCoinBetProfit() string {
	if x != nil {
		return x.CoinBetProfit
	}
	return ""
}

func (x *UserSummaryData) GetCoinCommission() string {
	if x != nil {
		return x.CoinCommission
	}
	return ""
}

func (x *UserSummaryData) GetCoinDeposit() string {
	if x != nil {
		return x.CoinDeposit
	}
	return ""
}

func (x *UserSummaryData) GetCoinRewards() string {
	if x != nil {
		return x.CoinRewards
	}
	return ""
}

func (x *UserSummaryData) GetCoinWithdrawal() string {
	if x != nil {
		return x.CoinWithdrawal
	}
	return ""
}

func (x *UserSummaryData) GetCoinWithdrawalReally() string {
	if x != nil {
		return x.CoinWithdrawalReally
	}
	return ""
}

func (x *UserSummaryData) GetGgr() string {
	if x != nil {
		return x.Ggr
	}
	return ""
}

func (x *UserSummaryData) GetProfit() string {
	if x != nil {
		return x.Profit
	}
	return ""
}

type FreeGameRecordListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current   int64                      `protobuf:"varint,1,opt,name=current,proto3" json:"current,omitempty"`
	Size      int64                      `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	SortKey   string                     `protobuf:"bytes,3,opt,name=sortKey,proto3" json:"sortKey,omitempty"`
	SortField []string                   `protobuf:"bytes,4,rep,name=sortField,proto3" json:"sortField,omitempty"`
	Data      *FreeGameRecordListDataReq `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *FreeGameRecordListReq) Reset() {
	*x = FreeGameRecordListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FreeGameRecordListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FreeGameRecordListReq) ProtoMessage() {}

func (x *FreeGameRecordListReq) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FreeGameRecordListReq.ProtoReflect.Descriptor instead.
func (*FreeGameRecordListReq) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{57}
}

func (x *FreeGameRecordListReq) GetCurrent() int64 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *FreeGameRecordListReq) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *FreeGameRecordListReq) GetSortKey() string {
	if x != nil {
		return x.SortKey
	}
	return ""
}

func (x *FreeGameRecordListReq) GetSortField() []string {
	if x != nil {
		return x.SortField
	}
	return nil
}

func (x *FreeGameRecordListReq) GetData() *FreeGameRecordListDataReq {
	if x != nil {
		return x.Data
	}
	return nil
}

type FreeGameRecordListDataReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vip          string `protobuf:"bytes,1,opt,name=vip,proto3" json:"vip,omitempty"`
	Uid          string `protobuf:"bytes,2,opt,name=uid,proto3" json:"uid,omitempty"`
	Username     string `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`
	TimeType     string `protobuf:"bytes,4,opt,name=timeType,proto3" json:"timeType,omitempty"`
	SpinType     string `protobuf:"bytes,5,opt,name=spinType,proto3" json:"spinType,omitempty"`
	GameProvider string `protobuf:"bytes,6,opt,name=gameProvider,proto3" json:"gameProvider,omitempty"`
	GameName     string `protobuf:"bytes,7,opt,name=gameName,proto3" json:"gameName,omitempty"`
	StartTime    int64  `protobuf:"varint,8,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime      int64  `protobuf:"varint,9,opt,name=endTime,proto3" json:"endTime,omitempty"`
}

func (x *FreeGameRecordListDataReq) Reset() {
	*x = FreeGameRecordListDataReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FreeGameRecordListDataReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FreeGameRecordListDataReq) ProtoMessage() {}

func (x *FreeGameRecordListDataReq) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FreeGameRecordListDataReq.ProtoReflect.Descriptor instead.
func (*FreeGameRecordListDataReq) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{58}
}

func (x *FreeGameRecordListDataReq) GetVip() string {
	if x != nil {
		return x.Vip
	}
	return ""
}

func (x *FreeGameRecordListDataReq) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *FreeGameRecordListDataReq) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *FreeGameRecordListDataReq) GetTimeType() string {
	if x != nil {
		return x.TimeType
	}
	return ""
}

func (x *FreeGameRecordListDataReq) GetSpinType() string {
	if x != nil {
		return x.SpinType
	}
	return ""
}

func (x *FreeGameRecordListDataReq) GetGameProvider() string {
	if x != nil {
		return x.GameProvider
	}
	return ""
}

func (x *FreeGameRecordListDataReq) GetGameName() string {
	if x != nil {
		return x.GameName
	}
	return ""
}

func (x *FreeGameRecordListDataReq) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *FreeGameRecordListDataReq) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

type FreeGameRecordListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int64                   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string                  `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *FreeGameRecordListData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *FreeGameRecordListResp) Reset() {
	*x = FreeGameRecordListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FreeGameRecordListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FreeGameRecordListResp) ProtoMessage() {}

func (x *FreeGameRecordListResp) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FreeGameRecordListResp.ProtoReflect.Descriptor instead.
func (*FreeGameRecordListResp) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{59}
}

func (x *FreeGameRecordListResp) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *FreeGameRecordListResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *FreeGameRecordListResp) GetData() *FreeGameRecordListData {
	if x != nil {
		return x.Data
	}
	return nil
}

type FreeGameRecordListData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current int64                         `protobuf:"varint,1,opt,name=current,proto3" json:"current,omitempty"`
	Size    int64                         `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	Total   int64                         `protobuf:"varint,3,opt,name=total,proto3" json:"total,omitempty"`
	Pages   int64                         `protobuf:"varint,4,opt,name=pages,proto3" json:"pages,omitempty"`
	List    []*FreeGameRecordListDataItem `protobuf:"bytes,5,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *FreeGameRecordListData) Reset() {
	*x = FreeGameRecordListData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FreeGameRecordListData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FreeGameRecordListData) ProtoMessage() {}

func (x *FreeGameRecordListData) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FreeGameRecordListData.ProtoReflect.Descriptor instead.
func (*FreeGameRecordListData) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{60}
}

func (x *FreeGameRecordListData) GetCurrent() int64 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *FreeGameRecordListData) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *FreeGameRecordListData) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *FreeGameRecordListData) GetPages() int64 {
	if x != nil {
		return x.Pages
	}
	return 0
}

func (x *FreeGameRecordListData) GetList() []*FreeGameRecordListDataItem {
	if x != nil {
		return x.List
	}
	return nil
}

type FreeGameRecordListDataItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BonusId    string  `protobuf:"bytes,1,opt,name=bonusId,proto3" json:"bonusId,omitempty"`
	StartTime  int64   `protobuf:"varint,2,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime    int64   `protobuf:"varint,3,opt,name=endTime,proto3" json:"endTime,omitempty"`
	GameName   string  `protobuf:"bytes,4,opt,name=gameName,proto3" json:"gameName,omitempty"`
	Provider   string  `protobuf:"bytes,5,opt,name=provider,proto3" json:"provider,omitempty"`
	Remaining  int64   `protobuf:"varint,6,opt,name=remaining,proto3" json:"remaining,omitempty"`    //剩余次数
	SpinAmount float64 `protobuf:"fixed64,7,opt,name=spinAmount,proto3" json:"spinAmount,omitempty"` //单次金额
	SpinNum    int64   `protobuf:"varint,8,opt,name=spinNum,proto3" json:"spinNum,omitempty"`        //旋转次数
	SpinType   int64   `protobuf:"varint,9,opt,name=spinType,proto3" json:"spinType,omitempty"`      // 旋转类型
	Uid        int64   `protobuf:"varint,10,opt,name=uid,proto3" json:"uid,omitempty"`
	UserName   string  `protobuf:"bytes,11,opt,name=userName,proto3" json:"userName,omitempty"`
	VipLevel   string  `protobuf:"bytes,12,opt,name=vipLevel,proto3" json:"vipLevel,omitempty"`
}

func (x *FreeGameRecordListDataItem) Reset() {
	*x = FreeGameRecordListDataItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FreeGameRecordListDataItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FreeGameRecordListDataItem) ProtoMessage() {}

func (x *FreeGameRecordListDataItem) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FreeGameRecordListDataItem.ProtoReflect.Descriptor instead.
func (*FreeGameRecordListDataItem) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{61}
}

func (x *FreeGameRecordListDataItem) GetBonusId() string {
	if x != nil {
		return x.BonusId
	}
	return ""
}

func (x *FreeGameRecordListDataItem) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *FreeGameRecordListDataItem) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *FreeGameRecordListDataItem) GetGameName() string {
	if x != nil {
		return x.GameName
	}
	return ""
}

func (x *FreeGameRecordListDataItem) GetProvider() string {
	if x != nil {
		return x.Provider
	}
	return ""
}

func (x *FreeGameRecordListDataItem) GetRemaining() int64 {
	if x != nil {
		return x.Remaining
	}
	return 0
}

func (x *FreeGameRecordListDataItem) GetSpinAmount() float64 {
	if x != nil {
		return x.SpinAmount
	}
	return 0
}

func (x *FreeGameRecordListDataItem) GetSpinNum() int64 {
	if x != nil {
		return x.SpinNum
	}
	return 0
}

func (x *FreeGameRecordListDataItem) GetSpinType() int64 {
	if x != nil {
		return x.SpinType
	}
	return 0
}

func (x *FreeGameRecordListDataItem) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *FreeGameRecordListDataItem) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *FreeGameRecordListDataItem) GetVipLevel() string {
	if x != nil {
		return x.VipLevel
	}
	return ""
}

type CreateFreeGameReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserData []*CreateFreeGameUserReq `protobuf:"bytes,1,rep,name=userData,proto3" json:"userData,omitempty"`
	GameData []*CreateFreeGameDataReq `protobuf:"bytes,2,rep,name=gameData,proto3" json:"gameData,omitempty"`
}

func (x *CreateFreeGameReq) Reset() {
	*x = CreateFreeGameReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateFreeGameReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateFreeGameReq) ProtoMessage() {}

func (x *CreateFreeGameReq) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateFreeGameReq.ProtoReflect.Descriptor instead.
func (*CreateFreeGameReq) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{62}
}

func (x *CreateFreeGameReq) GetUserData() []*CreateFreeGameUserReq {
	if x != nil {
		return x.UserData
	}
	return nil
}

func (x *CreateFreeGameReq) GetGameData() []*CreateFreeGameDataReq {
	if x != nil {
		return x.GameData
	}
	return nil
}

type CreateFreeGameUserReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid      int64  `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Username string `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	VipLevel string `protobuf:"bytes,3,opt,name=vipLevel,proto3" json:"vipLevel,omitempty"`
}

func (x *CreateFreeGameUserReq) Reset() {
	*x = CreateFreeGameUserReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateFreeGameUserReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateFreeGameUserReq) ProtoMessage() {}

func (x *CreateFreeGameUserReq) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateFreeGameUserReq.ProtoReflect.Descriptor instead.
func (*CreateFreeGameUserReq) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{63}
}

func (x *CreateFreeGameUserReq) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *CreateFreeGameUserReq) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *CreateFreeGameUserReq) GetVipLevel() string {
	if x != nil {
		return x.VipLevel
	}
	return ""
}

type CreateFreeGameDataReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BetAmount  int64  `protobuf:"varint,1,opt,name=betAmount,proto3" json:"betAmount,omitempty"`
	GameName   string `protobuf:"bytes,2,opt,name=gameName,proto3" json:"gameName,omitempty"`
	Provider   string `protobuf:"bytes,3,opt,name=provider,proto3" json:"provider,omitempty"`
	SpinNumber int64  `protobuf:"varint,4,opt,name=spinNumber,proto3" json:"spinNumber,omitempty"`
	ValidTime  int64  `protobuf:"varint,5,opt,name=validTime,proto3" json:"validTime,omitempty"`
}

func (x *CreateFreeGameDataReq) Reset() {
	*x = CreateFreeGameDataReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateFreeGameDataReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateFreeGameDataReq) ProtoMessage() {}

func (x *CreateFreeGameDataReq) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateFreeGameDataReq.ProtoReflect.Descriptor instead.
func (*CreateFreeGameDataReq) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{64}
}

func (x *CreateFreeGameDataReq) GetBetAmount() int64 {
	if x != nil {
		return x.BetAmount
	}
	return 0
}

func (x *CreateFreeGameDataReq) GetGameName() string {
	if x != nil {
		return x.GameName
	}
	return ""
}

func (x *CreateFreeGameDataReq) GetProvider() string {
	if x != nil {
		return x.Provider
	}
	return ""
}

func (x *CreateFreeGameDataReq) GetSpinNumber() int64 {
	if x != nil {
		return x.SpinNumber
	}
	return 0
}

func (x *CreateFreeGameDataReq) GetValidTime() int64 {
	if x != nil {
		return x.ValidTime
	}
	return 0
}

type CreateFreeGameResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int64  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Data string `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	Msg  string `protobuf:"bytes,3,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *CreateFreeGameResp) Reset() {
	*x = CreateFreeGameResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateFreeGameResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateFreeGameResp) ProtoMessage() {}

func (x *CreateFreeGameResp) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateFreeGameResp.ProtoReflect.Descriptor instead.
func (*CreateFreeGameResp) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{65}
}

func (x *CreateFreeGameResp) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *CreateFreeGameResp) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

func (x *CreateFreeGameResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type DeleteFreeGameReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BonusId string `protobuf:"bytes,1,opt,name=bonusId,proto3" json:"bonusId,omitempty"`
}

func (x *DeleteFreeGameReq) Reset() {
	*x = DeleteFreeGameReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteFreeGameReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteFreeGameReq) ProtoMessage() {}

func (x *DeleteFreeGameReq) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteFreeGameReq.ProtoReflect.Descriptor instead.
func (*DeleteFreeGameReq) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{66}
}

func (x *DeleteFreeGameReq) GetBonusId() string {
	if x != nil {
		return x.BonusId
	}
	return ""
}

type DeleteFreeGameResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int64  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Data string `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	Msg  string `protobuf:"bytes,3,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *DeleteFreeGameResp) Reset() {
	*x = DeleteFreeGameResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteFreeGameResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteFreeGameResp) ProtoMessage() {}

func (x *DeleteFreeGameResp) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteFreeGameResp.ProtoReflect.Descriptor instead.
func (*DeleteFreeGameResp) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{67}
}

func (x *DeleteFreeGameResp) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *DeleteFreeGameResp) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

func (x *DeleteFreeGameResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type TradingManageListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current   int64                     `protobuf:"varint,1,opt,name=current,proto3" json:"current,omitempty"`
	Size      int64                     `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	SortKey   string                    `protobuf:"bytes,3,opt,name=sortKey,proto3" json:"sortKey,omitempty"`
	SortField []string                  `protobuf:"bytes,4,rep,name=sortField,proto3" json:"sortField,omitempty"`
	Data      *TradingManageListDataReq `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *TradingManageListReq) Reset() {
	*x = TradingManageListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TradingManageListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TradingManageListReq) ProtoMessage() {}

func (x *TradingManageListReq) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TradingManageListReq.ProtoReflect.Descriptor instead.
func (*TradingManageListReq) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{68}
}

func (x *TradingManageListReq) GetCurrent() int64 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *TradingManageListReq) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *TradingManageListReq) GetSortKey() string {
	if x != nil {
		return x.SortKey
	}
	return ""
}

func (x *TradingManageListReq) GetSortField() []string {
	if x != nil {
		return x.SortField
	}
	return nil
}

func (x *TradingManageListReq) GetData() *TradingManageListDataReq {
	if x != nil {
		return x.Data
	}
	return nil
}

type TradingManageListDataReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartTime int64    `protobuf:"varint,1,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime   int64    `protobuf:"varint,2,opt,name=endTime,proto3" json:"endTime,omitempty"`
	Username  string   `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`
	Id        string   `protobuf:"bytes,4,opt,name=id,proto3" json:"id,omitempty"`
	Category  []string `protobuf:"bytes,5,rep,name=category,proto3" json:"category,omitempty"`
	Code      string   `protobuf:"bytes,6,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *TradingManageListDataReq) Reset() {
	*x = TradingManageListDataReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TradingManageListDataReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TradingManageListDataReq) ProtoMessage() {}

func (x *TradingManageListDataReq) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TradingManageListDataReq.ProtoReflect.Descriptor instead.
func (*TradingManageListDataReq) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{69}
}

func (x *TradingManageListDataReq) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *TradingManageListDataReq) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *TradingManageListDataReq) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *TradingManageListDataReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *TradingManageListDataReq) GetCategory() []string {
	if x != nil {
		return x.Category
	}
	return nil
}

func (x *TradingManageListDataReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type TradingManageListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int64                      `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string                     `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *TradingManageListDataResp `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *TradingManageListResp) Reset() {
	*x = TradingManageListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TradingManageListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TradingManageListResp) ProtoMessage() {}

func (x *TradingManageListResp) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TradingManageListResp.ProtoReflect.Descriptor instead.
func (*TradingManageListResp) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{70}
}

func (x *TradingManageListResp) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *TradingManageListResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *TradingManageListResp) GetData() *TradingManageListDataResp {
	if x != nil {
		return x.Data
	}
	return nil
}

type TradingManageListDataResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current string                       `protobuf:"bytes,1,opt,name=current,proto3" json:"current,omitempty"`
	Pages   string                       `protobuf:"bytes,2,opt,name=pages,proto3" json:"pages,omitempty"`
	Size    string                       `protobuf:"bytes,3,opt,name=size,proto3" json:"size,omitempty"`
	Total   string                       `protobuf:"bytes,4,opt,name=total,proto3" json:"total,omitempty"`
	List    []*TradingManageListDataItem `protobuf:"bytes,5,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *TradingManageListDataResp) Reset() {
	*x = TradingManageListDataResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TradingManageListDataResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TradingManageListDataResp) ProtoMessage() {}

func (x *TradingManageListDataResp) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TradingManageListDataResp.ProtoReflect.Descriptor instead.
func (*TradingManageListDataResp) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{71}
}

func (x *TradingManageListDataResp) GetCurrent() string {
	if x != nil {
		return x.Current
	}
	return ""
}

func (x *TradingManageListDataResp) GetPages() string {
	if x != nil {
		return x.Pages
	}
	return ""
}

func (x *TradingManageListDataResp) GetSize() string {
	if x != nil {
		return x.Size
	}
	return ""
}

func (x *TradingManageListDataResp) GetTotal() string {
	if x != nil {
		return x.Total
	}
	return ""
}

func (x *TradingManageListDataResp) GetList() []*TradingManageListDataItem {
	if x != nil {
		return x.List
	}
	return nil
}

type TradingManageListDataItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Uid              int64  `protobuf:"varint,2,opt,name=uid,proto3" json:"uid,omitempty"`
	Username         string `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`
	ReferId          string `protobuf:"bytes,4,opt,name=referId,proto3" json:"referId,omitempty"`
	OutIn            int64  `protobuf:"varint,5,opt,name=outIn,proto3" json:"outIn,omitempty"` //收支类型:0-支出 1-收入;字典:dic_coin_log_out_in
	MerchantId       int64  `protobuf:"varint,6,opt,name=merchantId,proto3" json:"merchantId,omitempty"`
	MerchantName     string `protobuf:"bytes,7,opt,name=merchantName,proto3" json:"merchantName,omitempty"`
	MerchantCategory string `protobuf:"bytes,8,opt,name=merchantCategory,proto3" json:"merchantCategory,omitempty"`
	LevelText        string `protobuf:"bytes,9,opt,name=levelText,proto3" json:"levelText,omitempty"`
	CreatedAt        int64  `protobuf:"varint,10,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	CoinBefore       string `protobuf:"bytes,11,opt,name=coinBefore,proto3" json:"coinBefore,omitempty"`
	CoinAfter        string `protobuf:"bytes,12,opt,name=coinAfter,proto3" json:"coinAfter,omitempty"`
	Coin             string `protobuf:"bytes,13,opt,name=coin,proto3" json:"coin,omitempty"`
	Category         int64  `protobuf:"varint,14,opt,name=category,proto3" json:"category,omitempty"`
	Code             string `protobuf:"bytes,15,opt,name=code,proto3" json:"code,omitempty"`
	PlatName         string `protobuf:"bytes,16,opt,name=platName,proto3" json:"platName,omitempty"`
	PlatNickName     string `protobuf:"bytes,17,opt,name=platNickName,proto3" json:"platNickName,omitempty"`
}

func (x *TradingManageListDataItem) Reset() {
	*x = TradingManageListDataItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TradingManageListDataItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TradingManageListDataItem) ProtoMessage() {}

func (x *TradingManageListDataItem) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TradingManageListDataItem.ProtoReflect.Descriptor instead.
func (*TradingManageListDataItem) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{72}
}

func (x *TradingManageListDataItem) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *TradingManageListDataItem) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *TradingManageListDataItem) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *TradingManageListDataItem) GetReferId() string {
	if x != nil {
		return x.ReferId
	}
	return ""
}

func (x *TradingManageListDataItem) GetOutIn() int64 {
	if x != nil {
		return x.OutIn
	}
	return 0
}

func (x *TradingManageListDataItem) GetMerchantId() int64 {
	if x != nil {
		return x.MerchantId
	}
	return 0
}

func (x *TradingManageListDataItem) GetMerchantName() string {
	if x != nil {
		return x.MerchantName
	}
	return ""
}

func (x *TradingManageListDataItem) GetMerchantCategory() string {
	if x != nil {
		return x.MerchantCategory
	}
	return ""
}

func (x *TradingManageListDataItem) GetLevelText() string {
	if x != nil {
		return x.LevelText
	}
	return ""
}

func (x *TradingManageListDataItem) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *TradingManageListDataItem) GetCoinBefore() string {
	if x != nil {
		return x.CoinBefore
	}
	return ""
}

func (x *TradingManageListDataItem) GetCoinAfter() string {
	if x != nil {
		return x.CoinAfter
	}
	return ""
}

func (x *TradingManageListDataItem) GetCoin() string {
	if x != nil {
		return x.Coin
	}
	return ""
}

func (x *TradingManageListDataItem) GetCategory() int64 {
	if x != nil {
		return x.Category
	}
	return 0
}

func (x *TradingManageListDataItem) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *TradingManageListDataItem) GetPlatName() string {
	if x != nil {
		return x.PlatName
	}
	return ""
}

func (x *TradingManageListDataItem) GetPlatNickName() string {
	if x != nil {
		return x.PlatNickName
	}
	return ""
}

type StatisticsTradingReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartTime int64    `protobuf:"varint,1,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime   int64    `protobuf:"varint,2,opt,name=endTime,proto3" json:"endTime,omitempty"`
	Username  string   `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`
	Id        string   `protobuf:"bytes,4,opt,name=id,proto3" json:"id,omitempty"`
	Category  []string `protobuf:"bytes,5,rep,name=category,proto3" json:"category,omitempty"`
	Code      string   `protobuf:"bytes,6,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *StatisticsTradingReq) Reset() {
	*x = StatisticsTradingReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatisticsTradingReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatisticsTradingReq) ProtoMessage() {}

func (x *StatisticsTradingReq) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatisticsTradingReq.ProtoReflect.Descriptor instead.
func (*StatisticsTradingReq) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{73}
}

func (x *StatisticsTradingReq) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *StatisticsTradingReq) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *StatisticsTradingReq) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *StatisticsTradingReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *StatisticsTradingReq) GetCategory() []string {
	if x != nil {
		return x.Category
	}
	return nil
}

func (x *StatisticsTradingReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type StatisticsTradingResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int64                  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string                 `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *StatisticsTradingData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *StatisticsTradingResp) Reset() {
	*x = StatisticsTradingResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatisticsTradingResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatisticsTradingResp) ProtoMessage() {}

func (x *StatisticsTradingResp) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatisticsTradingResp.ProtoReflect.Descriptor instead.
func (*StatisticsTradingResp) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{74}
}

func (x *StatisticsTradingResp) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *StatisticsTradingResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *StatisticsTradingResp) GetData() *StatisticsTradingData {
	if x != nil {
		return x.Data
	}
	return nil
}

type StatisticsTradingData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CoinDeposit        string `protobuf:"bytes,1,opt,name=coinDeposit,proto3" json:"coinDeposit,omitempty"`               // 总存款
	CoinWithdrawal     string `protobuf:"bytes,2,opt,name=coinWithdrawal,proto3" json:"coinWithdrawal,omitempty"`         //总提款
	CoinBet            string `protobuf:"bytes,3,opt,name=coinBet,proto3" json:"coinBet,omitempty"`                       // 总投资
	CoinPayOut         string `protobuf:"bytes,4,opt,name=coinPayOut,proto3" json:"coinPayOut,omitempty"`                 //总派
	CoinRebate         string `protobuf:"bytes,5,opt,name=coinRebate,proto3" json:"coinRebate,omitempty"`                 //总返水
	CoinCommission     string `protobuf:"bytes,6,opt,name=coinCommission,proto3" json:"coinCommission,omitempty"`         //总佣金
	CoinRewards        string `protobuf:"bytes,7,opt,name=coinRewards,proto3" json:"coinRewards,omitempty"`               //总活动金额
	CoinReconciliation string `protobuf:"bytes,8,opt,name=coinReconciliation,proto3" json:"coinReconciliation,omitempty"` //总调账金额
	CoinRefund         string `protobuf:"bytes,9,opt,name=coinRefund,proto3" json:"coinRefund,omitempty"`                 //总退款
	CoinOut            string `protobuf:"bytes,10,opt,name=coinOut,proto3" json:"coinOut,omitempty"`                      //总转出
	CoinIn             string `protobuf:"bytes,11,opt,name=coinIn,proto3" json:"coinIn,omitempty"`                        //总转入
}

func (x *StatisticsTradingData) Reset() {
	*x = StatisticsTradingData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatisticsTradingData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatisticsTradingData) ProtoMessage() {}

func (x *StatisticsTradingData) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatisticsTradingData.ProtoReflect.Descriptor instead.
func (*StatisticsTradingData) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{75}
}

func (x *StatisticsTradingData) GetCoinDeposit() string {
	if x != nil {
		return x.CoinDeposit
	}
	return ""
}

func (x *StatisticsTradingData) GetCoinWithdrawal() string {
	if x != nil {
		return x.CoinWithdrawal
	}
	return ""
}

func (x *StatisticsTradingData) GetCoinBet() string {
	if x != nil {
		return x.CoinBet
	}
	return ""
}

func (x *StatisticsTradingData) GetCoinPayOut() string {
	if x != nil {
		return x.CoinPayOut
	}
	return ""
}

func (x *StatisticsTradingData) GetCoinRebate() string {
	if x != nil {
		return x.CoinRebate
	}
	return ""
}

func (x *StatisticsTradingData) GetCoinCommission() string {
	if x != nil {
		return x.CoinCommission
	}
	return ""
}

func (x *StatisticsTradingData) GetCoinRewards() string {
	if x != nil {
		return x.CoinRewards
	}
	return ""
}

func (x *StatisticsTradingData) GetCoinReconciliation() string {
	if x != nil {
		return x.CoinReconciliation
	}
	return ""
}

func (x *StatisticsTradingData) GetCoinRefund() string {
	if x != nil {
		return x.CoinRefund
	}
	return ""
}

func (x *StatisticsTradingData) GetCoinOut() string {
	if x != nil {
		return x.CoinOut
	}
	return ""
}

func (x *StatisticsTradingData) GetCoinIn() string {
	if x != nil {
		return x.CoinIn
	}
	return ""
}

type UpdateSubGameReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code                    string  `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`                                                                     //启动游戏编码
	GameProviderSubtypeId   int64   `protobuf:"varint,2,opt,name=game_provider_subtype_id,json=gameProviderSubtypeId,proto3" json:"game_provider_subtype_id,omitempty"` //game_provider_subtype表ID
	GamePagcorId            int64   `protobuf:"varint,3,opt,name=game_pagcor_id,json=gamePagcorId,proto3" json:"game_pagcor_id,omitempty"`                              //pagcor类型id
	GameTypeId              int64   `protobuf:"varint,4,opt,name=game_type_id,json=gameTypeId,proto3" json:"game_type_id,omitempty"`                                    //游戏类型id
	GameProviderId          int64   `protobuf:"varint,5,opt,name=game_provider_id,json=gameProviderId,proto3" json:"game_provider_id,omitempty"`                        //游戏供应商id
	GameStartParam          string  `protobuf:"bytes,6,opt,name=game_start_param,json=gameStartParam,proto3" json:"game_start_param,omitempty"`                         //特殊游戏三方启动参数，如:elbet
	GameUrl                 string  `protobuf:"bytes,7,opt,name=game_url,json=gameUrl,proto3" json:"game_url,omitempty"`                                                //三方平台游戏url
	Sort                    int64   `protobuf:"varint,8,opt,name=sort,proto3" json:"sort,omitempty"`                                                                    //排序: 从低到高
	Status                  int64   `protobuf:"varint,9,opt,name=status,proto3" json:"status,omitempty"`                                                                //状态: 1-启用 0-停用
	Name                    string  `protobuf:"bytes,10,opt,name=name,proto3" json:"name,omitempty"`                                                                    //简体名称
	OriginalIcon            string  `protobuf:"bytes,11,opt,name=originalIcon,proto3" json:"originalIcon,omitempty"`                                                    //英文图片
	LatestIcon              string  `protobuf:"bytes,12,opt,name=latestIcon,proto3" json:"latestIcon,omitempty"`                                                        //新版游戏图片
	IsNew                   int64   `protobuf:"varint,13,opt,name=is_new,json=isNew,proto3" json:"is_new,omitempty"`                                                    //是否新游戏:1-是 0-否
	FavoriteStar            int64   `protobuf:"varint,14,opt,name=favorite_star,json=favoriteStar,proto3" json:"favorite_star,omitempty"`                               //收藏值
	HotStar                 int64   `protobuf:"varint,15,opt,name=hot_star,json=hotStar,proto3" json:"hot_star,omitempty"`                                              //热度
	Device                  int64   `protobuf:"varint,16,opt,name=device,proto3" json:"device,omitempty"`                                                               //设备:0-all 1-pc 2-h5
	CreatedAt               int64   `protobuf:"varint,17,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt               int64   `protobuf:"varint,18,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	CreatedBy               string  `protobuf:"bytes,19,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"` //操作人姓名
	UpdatedBy               string  `protobuf:"bytes,20,opt,name=updated_by,json=updatedBy,proto3" json:"updated_by,omitempty"` //最后更新人
	Maintenance             string  `protobuf:"bytes,21,opt,name=maintenance,proto3" json:"maintenance,omitempty"`              //维护时间
	IsCasino                int64   `protobuf:"varint,22,opt,name=is_casino,json=isCasino,proto3" json:"is_casino,omitempty"`   //是否isCasino 1是 0否
	Id                      string  `protobuf:"bytes,23,opt,name=id,proto3" json:"id,omitempty"`
	IsRotated               int64   `protobuf:"varint,24,opt,name=is_rotated,json=isRotated,proto3" json:"is_rotated,omitempty"`
	BetTotalLimit           float32 `protobuf:"fixed32,25,opt,name=bet_total_limit,json=betTotalLimit,proto3" json:"bet_total_limit,omitempty"`                                 //比赛下注总金额限制
	SingleUserBetPercentage float32 `protobuf:"fixed32,26,opt,name=single_user_bet_percentage,json=singleUserBetPercentage,proto3" json:"single_user_bet_percentage,omitempty"` //单用户下注金额不超过总金额的百分比比例(数值范围0-100，如50表示50%)
	BetTotal                float32 `protobuf:"fixed32,27,opt,name=bet_total,json=betTotal,proto3" json:"bet_total,omitempty"`                                                  //比赛当前下注总金额
}

func (x *UpdateSubGameReq) Reset() {
	*x = UpdateSubGameReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSubGameReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSubGameReq) ProtoMessage() {}

func (x *UpdateSubGameReq) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSubGameReq.ProtoReflect.Descriptor instead.
func (*UpdateSubGameReq) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{76}
}

func (x *UpdateSubGameReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *UpdateSubGameReq) GetGameProviderSubtypeId() int64 {
	if x != nil {
		return x.GameProviderSubtypeId
	}
	return 0
}

func (x *UpdateSubGameReq) GetGamePagcorId() int64 {
	if x != nil {
		return x.GamePagcorId
	}
	return 0
}

func (x *UpdateSubGameReq) GetGameTypeId() int64 {
	if x != nil {
		return x.GameTypeId
	}
	return 0
}

func (x *UpdateSubGameReq) GetGameProviderId() int64 {
	if x != nil {
		return x.GameProviderId
	}
	return 0
}

func (x *UpdateSubGameReq) GetGameStartParam() string {
	if x != nil {
		return x.GameStartParam
	}
	return ""
}

func (x *UpdateSubGameReq) GetGameUrl() string {
	if x != nil {
		return x.GameUrl
	}
	return ""
}

func (x *UpdateSubGameReq) GetSort() int64 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *UpdateSubGameReq) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *UpdateSubGameReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateSubGameReq) GetOriginalIcon() string {
	if x != nil {
		return x.OriginalIcon
	}
	return ""
}

func (x *UpdateSubGameReq) GetLatestIcon() string {
	if x != nil {
		return x.LatestIcon
	}
	return ""
}

func (x *UpdateSubGameReq) GetIsNew() int64 {
	if x != nil {
		return x.IsNew
	}
	return 0
}

func (x *UpdateSubGameReq) GetFavoriteStar() int64 {
	if x != nil {
		return x.FavoriteStar
	}
	return 0
}

func (x *UpdateSubGameReq) GetHotStar() int64 {
	if x != nil {
		return x.HotStar
	}
	return 0
}

func (x *UpdateSubGameReq) GetDevice() int64 {
	if x != nil {
		return x.Device
	}
	return 0
}

func (x *UpdateSubGameReq) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *UpdateSubGameReq) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *UpdateSubGameReq) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

func (x *UpdateSubGameReq) GetUpdatedBy() string {
	if x != nil {
		return x.UpdatedBy
	}
	return ""
}

func (x *UpdateSubGameReq) GetMaintenance() string {
	if x != nil {
		return x.Maintenance
	}
	return ""
}

func (x *UpdateSubGameReq) GetIsCasino() int64 {
	if x != nil {
		return x.IsCasino
	}
	return 0
}

func (x *UpdateSubGameReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateSubGameReq) GetIsRotated() int64 {
	if x != nil {
		return x.IsRotated
	}
	return 0
}

func (x *UpdateSubGameReq) GetBetTotalLimit() float32 {
	if x != nil {
		return x.BetTotalLimit
	}
	return 0
}

func (x *UpdateSubGameReq) GetSingleUserBetPercentage() float32 {
	if x != nil {
		return x.SingleUserBetPercentage
	}
	return 0
}

func (x *UpdateSubGameReq) GetBetTotal() float32 {
	if x != nil {
		return x.BetTotal
	}
	return 0
}

type UpdateSubGameResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int64  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data bool   `protobuf:"varint,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *UpdateSubGameResp) Reset() {
	*x = UpdateSubGameResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSubGameResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSubGameResp) ProtoMessage() {}

func (x *UpdateSubGameResp) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSubGameResp.ProtoReflect.Descriptor instead.
func (*UpdateSubGameResp) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{77}
}

func (x *UpdateSubGameResp) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *UpdateSubGameResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *UpdateSubGameResp) GetData() bool {
	if x != nil {
		return x.Data
	}
	return false
}

type AddSubGameReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code                    string  `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`                                                                     //启动游戏编码
	GameProviderSubtypeId   int64   `protobuf:"varint,2,opt,name=game_provider_subtype_id,json=gameProviderSubtypeId,proto3" json:"game_provider_subtype_id,omitempty"` //game_provider_subtype表ID
	GamePagcorId            int64   `protobuf:"varint,3,opt,name=game_pagcor_id,json=gamePagcorId,proto3" json:"game_pagcor_id,omitempty"`                              //pagcor类型id
	GameTypeId              int64   `protobuf:"varint,4,opt,name=game_type_id,json=gameTypeId,proto3" json:"game_type_id,omitempty"`                                    //游戏类型id
	GameProviderId          int64   `protobuf:"varint,5,opt,name=game_provider_id,json=gameProviderId,proto3" json:"game_provider_id,omitempty"`                        //游戏供应商id
	GameStartParam          string  `protobuf:"bytes,6,opt,name=game_start_param,json=gameStartParam,proto3" json:"game_start_param,omitempty"`                         //特殊游戏三方启动参数，如:elbet
	GameUrl                 string  `protobuf:"bytes,7,opt,name=game_url,json=gameUrl,proto3" json:"game_url,omitempty"`                                                //三方平台游戏url
	Sort                    int64   `protobuf:"varint,8,opt,name=sort,proto3" json:"sort,omitempty"`                                                                    //排序: 从低到高
	Status                  int64   `protobuf:"varint,9,opt,name=status,proto3" json:"status,omitempty"`                                                                //状态: 1-启用 0-停用
	Name                    string  `protobuf:"bytes,10,opt,name=name,proto3" json:"name,omitempty"`                                                                    //简体名称
	OriginalIcon            string  `protobuf:"bytes,11,opt,name=originalIcon,proto3" json:"originalIcon,omitempty"`                                                    //英文图片
	LatestIcon              string  `protobuf:"bytes,12,opt,name=latestIcon,proto3" json:"latestIcon,omitempty"`                                                        //新版游戏图片
	IsNew                   int64   `protobuf:"varint,13,opt,name=is_new,json=isNew,proto3" json:"is_new,omitempty"`                                                    //是否新游戏:1-是 0-否
	FavoriteStar            int64   `protobuf:"varint,14,opt,name=favorite_star,json=favoriteStar,proto3" json:"favorite_star,omitempty"`                               //收藏值
	HotStar                 int64   `protobuf:"varint,15,opt,name=hot_star,json=hotStar,proto3" json:"hot_star,omitempty"`                                              //热度
	Device                  int64   `protobuf:"varint,16,opt,name=device,proto3" json:"device,omitempty"`                                                               //设备:0-all 1-pc 2-h5
	CreatedAt               int64   `protobuf:"varint,17,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt               int64   `protobuf:"varint,18,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	CreatedBy               string  `protobuf:"bytes,19,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"` //操作人姓名
	UpdatedBy               string  `protobuf:"bytes,20,opt,name=updated_by,json=updatedBy,proto3" json:"updated_by,omitempty"` //最后更新人
	Maintenance             string  `protobuf:"bytes,21,opt,name=maintenance,proto3" json:"maintenance,omitempty"`              //维护时间
	IsCasino                int64   `protobuf:"varint,22,opt,name=is_casino,json=isCasino,proto3" json:"is_casino,omitempty"`   //是否isCasino 1是 0否
	IsRotated               int64   `protobuf:"varint,23,opt,name=is_rotated,json=isRotated,proto3" json:"is_rotated,omitempty"`
	BetTotalLimit           float32 `protobuf:"fixed32,24,opt,name=bet_total_limit,json=betTotalLimit,proto3" json:"bet_total_limit,omitempty"`                                 //比赛下注总金额限制
	SingleUserBetPercentage float32 `protobuf:"fixed32,25,opt,name=single_user_bet_percentage,json=singleUserBetPercentage,proto3" json:"single_user_bet_percentage,omitempty"` //单用户下注金额不超过总金额的百分比比例(数值范围0-100，如50表示50%)
	BetTotal                float32 `protobuf:"fixed32,36,opt,name=bet_total,json=betTotal,proto3" json:"bet_total,omitempty"`                                                  //比赛当前下注总金额
}

func (x *AddSubGameReq) Reset() {
	*x = AddSubGameReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddSubGameReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddSubGameReq) ProtoMessage() {}

func (x *AddSubGameReq) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddSubGameReq.ProtoReflect.Descriptor instead.
func (*AddSubGameReq) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{78}
}

func (x *AddSubGameReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *AddSubGameReq) GetGameProviderSubtypeId() int64 {
	if x != nil {
		return x.GameProviderSubtypeId
	}
	return 0
}

func (x *AddSubGameReq) GetGamePagcorId() int64 {
	if x != nil {
		return x.GamePagcorId
	}
	return 0
}

func (x *AddSubGameReq) GetGameTypeId() int64 {
	if x != nil {
		return x.GameTypeId
	}
	return 0
}

func (x *AddSubGameReq) GetGameProviderId() int64 {
	if x != nil {
		return x.GameProviderId
	}
	return 0
}

func (x *AddSubGameReq) GetGameStartParam() string {
	if x != nil {
		return x.GameStartParam
	}
	return ""
}

func (x *AddSubGameReq) GetGameUrl() string {
	if x != nil {
		return x.GameUrl
	}
	return ""
}

func (x *AddSubGameReq) GetSort() int64 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *AddSubGameReq) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *AddSubGameReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AddSubGameReq) GetOriginalIcon() string {
	if x != nil {
		return x.OriginalIcon
	}
	return ""
}

func (x *AddSubGameReq) GetLatestIcon() string {
	if x != nil {
		return x.LatestIcon
	}
	return ""
}

func (x *AddSubGameReq) GetIsNew() int64 {
	if x != nil {
		return x.IsNew
	}
	return 0
}

func (x *AddSubGameReq) GetFavoriteStar() int64 {
	if x != nil {
		return x.FavoriteStar
	}
	return 0
}

func (x *AddSubGameReq) GetHotStar() int64 {
	if x != nil {
		return x.HotStar
	}
	return 0
}

func (x *AddSubGameReq) GetDevice() int64 {
	if x != nil {
		return x.Device
	}
	return 0
}

func (x *AddSubGameReq) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *AddSubGameReq) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *AddSubGameReq) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

func (x *AddSubGameReq) GetUpdatedBy() string {
	if x != nil {
		return x.UpdatedBy
	}
	return ""
}

func (x *AddSubGameReq) GetMaintenance() string {
	if x != nil {
		return x.Maintenance
	}
	return ""
}

func (x *AddSubGameReq) GetIsCasino() int64 {
	if x != nil {
		return x.IsCasino
	}
	return 0
}

func (x *AddSubGameReq) GetIsRotated() int64 {
	if x != nil {
		return x.IsRotated
	}
	return 0
}

func (x *AddSubGameReq) GetBetTotalLimit() float32 {
	if x != nil {
		return x.BetTotalLimit
	}
	return 0
}

func (x *AddSubGameReq) GetSingleUserBetPercentage() float32 {
	if x != nil {
		return x.SingleUserBetPercentage
	}
	return 0
}

func (x *AddSubGameReq) GetBetTotal() float32 {
	if x != nil {
		return x.BetTotal
	}
	return 0
}

type AddSubGameResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int64  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *AddSubGameResp) Reset() {
	*x = AddSubGameResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddSubGameResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddSubGameResp) ProtoMessage() {}

func (x *AddSubGameResp) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddSubGameResp.ProtoReflect.Descriptor instead.
func (*AddSubGameResp) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{79}
}

func (x *AddSubGameResp) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *AddSubGameResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type ListSubGameReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current   int64               `protobuf:"varint,1,opt,name=current,proto3" json:"current,omitempty"`
	Size      int64               `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	SortKey   string              `protobuf:"bytes,3,opt,name=sortKey,proto3" json:"sortKey,omitempty"`
	SortField []string            `protobuf:"bytes,4,rep,name=sortField,proto3" json:"sortField,omitempty"`
	Data      *ListSubGameDataReq `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *ListSubGameReq) Reset() {
	*x = ListSubGameReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSubGameReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSubGameReq) ProtoMessage() {}

func (x *ListSubGameReq) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSubGameReq.ProtoReflect.Descriptor instead.
func (*ListSubGameReq) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{80}
}

func (x *ListSubGameReq) GetCurrent() int64 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *ListSubGameReq) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *ListSubGameReq) GetSortKey() string {
	if x != nil {
		return x.SortKey
	}
	return ""
}

func (x *ListSubGameReq) GetSortField() []string {
	if x != nil {
		return x.SortField
	}
	return nil
}

func (x *ListSubGameReq) GetData() *ListSubGameDataReq {
	if x != nil {
		return x.Data
	}
	return nil
}

type ListSubGameDataReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameProviderSubtypeId int64  `protobuf:"varint,1,opt,name=gameProviderSubtypeId,proto3" json:"gameProviderSubtypeId,omitempty"`
	Name                  string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Device                string `protobuf:"bytes,3,opt,name=device,proto3" json:"device,omitempty"`
	Status                string `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`
	IsRotated             int64  `protobuf:"varint,5,opt,name=is_rotated,json=isRotated,proto3" json:"is_rotated,omitempty"`
	Code                  string `protobuf:"bytes,6,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *ListSubGameDataReq) Reset() {
	*x = ListSubGameDataReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSubGameDataReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSubGameDataReq) ProtoMessage() {}

func (x *ListSubGameDataReq) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSubGameDataReq.ProtoReflect.Descriptor instead.
func (*ListSubGameDataReq) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{81}
}

func (x *ListSubGameDataReq) GetGameProviderSubtypeId() int64 {
	if x != nil {
		return x.GameProviderSubtypeId
	}
	return 0
}

func (x *ListSubGameDataReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ListSubGameDataReq) GetDevice() string {
	if x != nil {
		return x.Device
	}
	return ""
}

func (x *ListSubGameDataReq) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ListSubGameDataReq) GetIsRotated() int64 {
	if x != nil {
		return x.IsRotated
	}
	return 0
}

func (x *ListSubGameDataReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type ListSubGameResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int64                `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string               `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *ListSubGameDataResp `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *ListSubGameResp) Reset() {
	*x = ListSubGameResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[82]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSubGameResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSubGameResp) ProtoMessage() {}

func (x *ListSubGameResp) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[82]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSubGameResp.ProtoReflect.Descriptor instead.
func (*ListSubGameResp) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{82}
}

func (x *ListSubGameResp) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ListSubGameResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *ListSubGameResp) GetData() *ListSubGameDataResp {
	if x != nil {
		return x.Data
	}
	return nil
}

type ListSubGameDataResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current string                 `protobuf:"bytes,1,opt,name=current,proto3" json:"current,omitempty"`
	Pages   string                 `protobuf:"bytes,2,opt,name=pages,proto3" json:"pages,omitempty"`
	Size    string                 `protobuf:"bytes,3,opt,name=size,proto3" json:"size,omitempty"`
	Total   string                 `protobuf:"bytes,4,opt,name=total,proto3" json:"total,omitempty"`
	List    []*ListSubGameDataItem `protobuf:"bytes,5,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *ListSubGameDataResp) Reset() {
	*x = ListSubGameDataResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[83]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSubGameDataResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSubGameDataResp) ProtoMessage() {}

func (x *ListSubGameDataResp) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[83]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSubGameDataResp.ProtoReflect.Descriptor instead.
func (*ListSubGameDataResp) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{83}
}

func (x *ListSubGameDataResp) GetCurrent() string {
	if x != nil {
		return x.Current
	}
	return ""
}

func (x *ListSubGameDataResp) GetPages() string {
	if x != nil {
		return x.Pages
	}
	return ""
}

func (x *ListSubGameDataResp) GetSize() string {
	if x != nil {
		return x.Size
	}
	return ""
}

func (x *ListSubGameDataResp) GetTotal() string {
	if x != nil {
		return x.Total
	}
	return ""
}

func (x *ListSubGameDataResp) GetList() []*ListSubGameDataItem {
	if x != nil {
		return x.List
	}
	return nil
}

type ListSubGameDataItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                      string                          `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Device                  int64                           `protobuf:"varint,2,opt,name=device,proto3" json:"device,omitempty"`
	FavoriteStar            int64                           `protobuf:"varint,3,opt,name=favoriteStar,proto3" json:"favoriteStar,omitempty"`
	GameListStatus          int64                           `protobuf:"varint,4,opt,name=gameListStatus,proto3" json:"gameListStatus,omitempty"`
	GameProviderId          int64                           `protobuf:"varint,5,opt,name=gameProviderId,proto3" json:"gameProviderId,omitempty"`
	GameProviderName        string                          `protobuf:"bytes,6,opt,name=gameProviderName,proto3" json:"gameProviderName,omitempty"`
	GameProviderSubtypeId   int64                           `protobuf:"varint,7,opt,name=gameProviderSubtypeId,proto3" json:"gameProviderSubtypeId,omitempty"`
	GameProviderSubtypeName string                          `protobuf:"bytes,8,opt,name=gameProviderSubtypeName,proto3" json:"gameProviderSubtypeName,omitempty"`
	GameTypeId              int64                           `protobuf:"varint,9,opt,name=gameTypeId,proto3" json:"gameTypeId,omitempty"`
	GameTypeName            string                          `protobuf:"bytes,10,opt,name=gameTypeName,proto3" json:"gameTypeName,omitempty"`
	HotStar                 int64                           `protobuf:"varint,11,opt,name=hotStar,proto3" json:"hotStar,omitempty"`
	IsCasino                int64                           `protobuf:"varint,12,opt,name=isCasino,proto3" json:"isCasino,omitempty"`
	IsNew                   int64                           `protobuf:"varint,13,opt,name=isNew,proto3" json:"isNew,omitempty"`
	LatestIcon              string                          `protobuf:"bytes,14,opt,name=latestIcon,proto3" json:"latestIcon,omitempty"`
	Maintenance             *ListSubGameDataItemMainTenance `protobuf:"bytes,15,opt,name=maintenance,proto3" json:"maintenance,omitempty"`
	Name                    string                          `protobuf:"bytes,16,opt,name=name,proto3" json:"name,omitempty"`
	OperatorName            string                          `protobuf:"bytes,17,opt,name=operatorName,proto3" json:"operatorName,omitempty"`
	OriginalIcon            string                          `protobuf:"bytes,18,opt,name=originalIcon,proto3" json:"originalIcon,omitempty"`
	Sort                    int64                           `protobuf:"varint,19,opt,name=sort,proto3" json:"sort,omitempty"`
	Status                  int64                           `protobuf:"varint,20,opt,name=status,proto3" json:"status,omitempty"`
	UpdatedAt               int64                           `protobuf:"varint,21,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	UpdatedUser             string                          `protobuf:"bytes,22,opt,name=updatedUser,proto3" json:"updatedUser,omitempty"`
	IsRotated               int64                           `protobuf:"varint,23,opt,name=is_rotated,json=isRotated,proto3" json:"is_rotated,omitempty"`
	Code                    string                          `protobuf:"bytes,24,opt,name=Code,proto3" json:"Code,omitempty"`
	GamePagcorID            int64                           `protobuf:"varint,25,opt,name=GamePagcorID,proto3" json:"GamePagcorID,omitempty"`
	GameStartParam          string                          `protobuf:"bytes,26,opt,name=GameStartParam,proto3" json:"GameStartParam,omitempty"`
	GameURL                 string                          `protobuf:"bytes,27,opt,name=GameURL,proto3" json:"GameURL,omitempty"`
	BetTotalLimit           float32                         `protobuf:"fixed32,28,opt,name=bet_total_limit,json=betTotalLimit,proto3" json:"bet_total_limit,omitempty"`                                 //比赛下注总金额限制
	SingleUserBetPercentage float32                         `protobuf:"fixed32,29,opt,name=single_user_bet_percentage,json=singleUserBetPercentage,proto3" json:"single_user_bet_percentage,omitempty"` //单用户下注金额不超过总金额的百分比比例(数值范围0-100，如50表示50%)
	BetTotal                float32                         `protobuf:"fixed32,30,opt,name=bet_total,json=betTotal,proto3" json:"bet_total,omitempty"`                                                  //比赛当前下注总金额
}

func (x *ListSubGameDataItem) Reset() {
	*x = ListSubGameDataItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[84]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSubGameDataItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSubGameDataItem) ProtoMessage() {}

func (x *ListSubGameDataItem) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[84]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSubGameDataItem.ProtoReflect.Descriptor instead.
func (*ListSubGameDataItem) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{84}
}

func (x *ListSubGameDataItem) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ListSubGameDataItem) GetDevice() int64 {
	if x != nil {
		return x.Device
	}
	return 0
}

func (x *ListSubGameDataItem) GetFavoriteStar() int64 {
	if x != nil {
		return x.FavoriteStar
	}
	return 0
}

func (x *ListSubGameDataItem) GetGameListStatus() int64 {
	if x != nil {
		return x.GameListStatus
	}
	return 0
}

func (x *ListSubGameDataItem) GetGameProviderId() int64 {
	if x != nil {
		return x.GameProviderId
	}
	return 0
}

func (x *ListSubGameDataItem) GetGameProviderName() string {
	if x != nil {
		return x.GameProviderName
	}
	return ""
}

func (x *ListSubGameDataItem) GetGameProviderSubtypeId() int64 {
	if x != nil {
		return x.GameProviderSubtypeId
	}
	return 0
}

func (x *ListSubGameDataItem) GetGameProviderSubtypeName() string {
	if x != nil {
		return x.GameProviderSubtypeName
	}
	return ""
}

func (x *ListSubGameDataItem) GetGameTypeId() int64 {
	if x != nil {
		return x.GameTypeId
	}
	return 0
}

func (x *ListSubGameDataItem) GetGameTypeName() string {
	if x != nil {
		return x.GameTypeName
	}
	return ""
}

func (x *ListSubGameDataItem) GetHotStar() int64 {
	if x != nil {
		return x.HotStar
	}
	return 0
}

func (x *ListSubGameDataItem) GetIsCasino() int64 {
	if x != nil {
		return x.IsCasino
	}
	return 0
}

func (x *ListSubGameDataItem) GetIsNew() int64 {
	if x != nil {
		return x.IsNew
	}
	return 0
}

func (x *ListSubGameDataItem) GetLatestIcon() string {
	if x != nil {
		return x.LatestIcon
	}
	return ""
}

func (x *ListSubGameDataItem) GetMaintenance() *ListSubGameDataItemMainTenance {
	if x != nil {
		return x.Maintenance
	}
	return nil
}

func (x *ListSubGameDataItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ListSubGameDataItem) GetOperatorName() string {
	if x != nil {
		return x.OperatorName
	}
	return ""
}

func (x *ListSubGameDataItem) GetOriginalIcon() string {
	if x != nil {
		return x.OriginalIcon
	}
	return ""
}

func (x *ListSubGameDataItem) GetSort() int64 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *ListSubGameDataItem) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *ListSubGameDataItem) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *ListSubGameDataItem) GetUpdatedUser() string {
	if x != nil {
		return x.UpdatedUser
	}
	return ""
}

func (x *ListSubGameDataItem) GetIsRotated() int64 {
	if x != nil {
		return x.IsRotated
	}
	return 0
}

func (x *ListSubGameDataItem) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *ListSubGameDataItem) GetGamePagcorID() int64 {
	if x != nil {
		return x.GamePagcorID
	}
	return 0
}

func (x *ListSubGameDataItem) GetGameStartParam() string {
	if x != nil {
		return x.GameStartParam
	}
	return ""
}

func (x *ListSubGameDataItem) GetGameURL() string {
	if x != nil {
		return x.GameURL
	}
	return ""
}

func (x *ListSubGameDataItem) GetBetTotalLimit() float32 {
	if x != nil {
		return x.BetTotalLimit
	}
	return 0
}

func (x *ListSubGameDataItem) GetSingleUserBetPercentage() float32 {
	if x != nil {
		return x.SingleUserBetPercentage
	}
	return 0
}

func (x *ListSubGameDataItem) GetBetTotal() float32 {
	if x != nil {
		return x.BetTotal
	}
	return 0
}

type ListSubGameDataItemMainTenance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Start string `protobuf:"bytes,1,opt,name=start,proto3" json:"start,omitempty"`
	End   string `protobuf:"bytes,2,opt,name=end,proto3" json:"end,omitempty"`
	Info  string `protobuf:"bytes,3,opt,name=info,proto3" json:"info,omitempty"`
}

func (x *ListSubGameDataItemMainTenance) Reset() {
	*x = ListSubGameDataItemMainTenance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[85]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSubGameDataItemMainTenance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSubGameDataItemMainTenance) ProtoMessage() {}

func (x *ListSubGameDataItemMainTenance) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[85]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSubGameDataItemMainTenance.ProtoReflect.Descriptor instead.
func (*ListSubGameDataItemMainTenance) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{85}
}

func (x *ListSubGameDataItemMainTenance) GetStart() string {
	if x != nil {
		return x.Start
	}
	return ""
}

func (x *ListSubGameDataItemMainTenance) GetEnd() string {
	if x != nil {
		return x.End
	}
	return ""
}

func (x *ListSubGameDataItemMainTenance) GetInfo() string {
	if x != nil {
		return x.Info
	}
	return ""
}

type SearchGameListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current int64                  `protobuf:"varint,1,opt,name=current,proto3" json:"current,omitempty"`
	Size    int64                  `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	Data    *SearchGameListDataReq `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *SearchGameListReq) Reset() {
	*x = SearchGameListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[86]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchGameListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchGameListReq) ProtoMessage() {}

func (x *SearchGameListReq) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[86]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchGameListReq.ProtoReflect.Descriptor instead.
func (*SearchGameListReq) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{86}
}

func (x *SearchGameListReq) GetCurrent() int64 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *SearchGameListReq) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *SearchGameListReq) GetData() *SearchGameListDataReq {
	if x != nil {
		return x.Data
	}
	return nil
}

type SearchGameListDataReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids      []string `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids,omitempty"`
	Name     string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Category int64    `protobuf:"varint,3,opt,name=category,proto3" json:"category,omitempty"`
}

func (x *SearchGameListDataReq) Reset() {
	*x = SearchGameListDataReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[87]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchGameListDataReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchGameListDataReq) ProtoMessage() {}

func (x *SearchGameListDataReq) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[87]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchGameListDataReq.ProtoReflect.Descriptor instead.
func (*SearchGameListDataReq) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{87}
}

func (x *SearchGameListDataReq) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *SearchGameListDataReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SearchGameListDataReq) GetCategory() int64 {
	if x != nil {
		return x.Category
	}
	return 0
}

type SearchGameListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int64               `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string              `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *SearchGameListData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *SearchGameListResp) Reset() {
	*x = SearchGameListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[88]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchGameListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchGameListResp) ProtoMessage() {}

func (x *SearchGameListResp) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[88]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchGameListResp.ProtoReflect.Descriptor instead.
func (*SearchGameListResp) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{88}
}

func (x *SearchGameListResp) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *SearchGameListResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *SearchGameListResp) GetData() *SearchGameListData {
	if x != nil {
		return x.Data
	}
	return nil
}

type SearchGameListData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current string                    `protobuf:"bytes,1,opt,name=current,proto3" json:"current,omitempty"`
	Pages   string                    `protobuf:"bytes,2,opt,name=pages,proto3" json:"pages,omitempty"`
	Total   string                    `protobuf:"bytes,3,opt,name=total,proto3" json:"total,omitempty"`
	Size    string                    `protobuf:"bytes,4,opt,name=size,proto3" json:"size,omitempty"`
	List    []*SearchGameListDataItem `protobuf:"bytes,5,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *SearchGameListData) Reset() {
	*x = SearchGameListData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[89]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchGameListData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchGameListData) ProtoMessage() {}

func (x *SearchGameListData) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[89]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchGameListData.ProtoReflect.Descriptor instead.
func (*SearchGameListData) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{89}
}

func (x *SearchGameListData) GetCurrent() string {
	if x != nil {
		return x.Current
	}
	return ""
}

func (x *SearchGameListData) GetPages() string {
	if x != nil {
		return x.Pages
	}
	return ""
}

func (x *SearchGameListData) GetTotal() string {
	if x != nil {
		return x.Total
	}
	return ""
}

func (x *SearchGameListData) GetSize() string {
	if x != nil {
		return x.Size
	}
	return ""
}

func (x *SearchGameListData) GetList() []*SearchGameListDataItem {
	if x != nil {
		return x.List
	}
	return nil
}

type SearchGameListDataItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                    string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	FavoriteStar          int64  `protobuf:"varint,2,opt,name=favoriteStar,proto3" json:"favoriteStar,omitempty"`
	GameProviderId        int64  `protobuf:"varint,3,opt,name=gameProviderId,proto3" json:"gameProviderId,omitempty"`
	GameProviderName      string `protobuf:"bytes,4,opt,name=gameProviderName,proto3" json:"gameProviderName,omitempty"`
	GameProviderSubtypeId int64  `protobuf:"varint,5,opt,name=gameProviderSubtypeId,proto3" json:"gameProviderSubtypeId,omitempty"`
	GameTypeId            int64  `protobuf:"varint,6,opt,name=gameTypeId,proto3" json:"gameTypeId,omitempty"`
	HotStar               int64  `protobuf:"varint,7,opt,name=hotStar,proto3" json:"hotStar,omitempty"`
	IsFavorite            int64  `protobuf:"varint,8,opt,name=isFavorite,proto3" json:"isFavorite,omitempty"`
	IsNew                 int64  `protobuf:"varint,9,opt,name=isNew,proto3" json:"isNew,omitempty"`
	LatestIcon            string `protobuf:"bytes,10,opt,name=latestIcon,proto3" json:"latestIcon,omitempty"`
	Name                  string `protobuf:"bytes,11,opt,name=name,proto3" json:"name,omitempty"`
	OriginalIcon          string `protobuf:"bytes,12,opt,name=originalIcon,proto3" json:"originalIcon,omitempty"`
	Status                int64  `protobuf:"varint,13,opt,name=status,proto3" json:"status,omitempty"`
	Maintenance           string `protobuf:"bytes,14,opt,name=maintenance,proto3" json:"maintenance,omitempty"`
}

func (x *SearchGameListDataItem) Reset() {
	*x = SearchGameListDataItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[90]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchGameListDataItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchGameListDataItem) ProtoMessage() {}

func (x *SearchGameListDataItem) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[90]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchGameListDataItem.ProtoReflect.Descriptor instead.
func (*SearchGameListDataItem) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{90}
}

func (x *SearchGameListDataItem) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SearchGameListDataItem) GetFavoriteStar() int64 {
	if x != nil {
		return x.FavoriteStar
	}
	return 0
}

func (x *SearchGameListDataItem) GetGameProviderId() int64 {
	if x != nil {
		return x.GameProviderId
	}
	return 0
}

func (x *SearchGameListDataItem) GetGameProviderName() string {
	if x != nil {
		return x.GameProviderName
	}
	return ""
}

func (x *SearchGameListDataItem) GetGameProviderSubtypeId() int64 {
	if x != nil {
		return x.GameProviderSubtypeId
	}
	return 0
}

func (x *SearchGameListDataItem) GetGameTypeId() int64 {
	if x != nil {
		return x.GameTypeId
	}
	return 0
}

func (x *SearchGameListDataItem) GetHotStar() int64 {
	if x != nil {
		return x.HotStar
	}
	return 0
}

func (x *SearchGameListDataItem) GetIsFavorite() int64 {
	if x != nil {
		return x.IsFavorite
	}
	return 0
}

func (x *SearchGameListDataItem) GetIsNew() int64 {
	if x != nil {
		return x.IsNew
	}
	return 0
}

func (x *SearchGameListDataItem) GetLatestIcon() string {
	if x != nil {
		return x.LatestIcon
	}
	return ""
}

func (x *SearchGameListDataItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SearchGameListDataItem) GetOriginalIcon() string {
	if x != nil {
		return x.OriginalIcon
	}
	return ""
}

func (x *SearchGameListDataItem) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *SearchGameListDataItem) GetMaintenance() string {
	if x != nil {
		return x.Maintenance
	}
	return ""
}

type AdminBetStatisticsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartTime              int32   `protobuf:"varint,1,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime                int32   `protobuf:"varint,2,opt,name=endTime,proto3" json:"endTime,omitempty"`
	TimeType               int32   `protobuf:"varint,3,opt,name=timeType,proto3" json:"timeType,omitempty"`
	GameProviderSubtypeIds []int64 `protobuf:"varint,4,rep,packed,name=GameProviderSubtypeIds,proto3" json:"GameProviderSubtypeIds,omitempty"`
	Timezone               int32   `protobuf:"varint,5,opt,name=timezone,proto3" json:"timezone,omitempty"`
	Uid                    int64   `protobuf:"varint,6,opt,name=uid,proto3" json:"uid,omitempty"`
	Username               string  `protobuf:"bytes,7,opt,name=Username,proto3" json:"Username,omitempty"`
	GameTypes              []int64 `protobuf:"varint,8,rep,packed,name=gameTypes,proto3" json:"gameTypes,omitempty"`
	Id                     int64   `protobuf:"varint,9,opt,name=id,proto3" json:"id,omitempty"`
	Status                 int64   `protobuf:"varint,10,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *AdminBetStatisticsRequest) Reset() {
	*x = AdminBetStatisticsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[91]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminBetStatisticsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminBetStatisticsRequest) ProtoMessage() {}

func (x *AdminBetStatisticsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[91]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminBetStatisticsRequest.ProtoReflect.Descriptor instead.
func (*AdminBetStatisticsRequest) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{91}
}

func (x *AdminBetStatisticsRequest) GetStartTime() int32 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *AdminBetStatisticsRequest) GetEndTime() int32 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *AdminBetStatisticsRequest) GetTimeType() int32 {
	if x != nil {
		return x.TimeType
	}
	return 0
}

func (x *AdminBetStatisticsRequest) GetGameProviderSubtypeIds() []int64 {
	if x != nil {
		return x.GameProviderSubtypeIds
	}
	return nil
}

func (x *AdminBetStatisticsRequest) GetTimezone() int32 {
	if x != nil {
		return x.Timezone
	}
	return 0
}

func (x *AdminBetStatisticsRequest) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *AdminBetStatisticsRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *AdminBetStatisticsRequest) GetGameTypes() []int64 {
	if x != nil {
		return x.GameTypes
	}
	return nil
}

func (x *AdminBetStatisticsRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AdminBetStatisticsRequest) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

type AdminBetStatisticsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int64                   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string                  `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *AdminBetStatisticsItem `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *AdminBetStatisticsResponse) Reset() {
	*x = AdminBetStatisticsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[92]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminBetStatisticsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminBetStatisticsResponse) ProtoMessage() {}

func (x *AdminBetStatisticsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[92]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminBetStatisticsResponse.ProtoReflect.Descriptor instead.
func (*AdminBetStatisticsResponse) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{92}
}

func (x *AdminBetStatisticsResponse) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *AdminBetStatisticsResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *AdminBetStatisticsResponse) GetData() *AdminBetStatisticsItem {
	if x != nil {
		return x.Data
	}
	return nil
}

type AdminBetStatisticsItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Currency        string  `protobuf:"bytes,1,opt,name=currency,proto3" json:"currency,omitempty"`
	TotalStake      float64 `protobuf:"fixed64,2,opt,name=totalStake,proto3" json:"totalStake,omitempty"`
	TotalValidStake float64 `protobuf:"fixed64,3,opt,name=totalValidStake,proto3" json:"totalValidStake,omitempty"`
	TotalProfit     float64 `protobuf:"fixed64,4,opt,name=totalProfit,proto3" json:"totalProfit,omitempty"`
}

func (x *AdminBetStatisticsItem) Reset() {
	*x = AdminBetStatisticsItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[93]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminBetStatisticsItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminBetStatisticsItem) ProtoMessage() {}

func (x *AdminBetStatisticsItem) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[93]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminBetStatisticsItem.ProtoReflect.Descriptor instead.
func (*AdminBetStatisticsItem) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{93}
}

func (x *AdminBetStatisticsItem) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *AdminBetStatisticsItem) GetTotalStake() float64 {
	if x != nil {
		return x.TotalStake
	}
	return 0
}

func (x *AdminBetStatisticsItem) GetTotalValidStake() float64 {
	if x != nil {
		return x.TotalValidStake
	}
	return 0
}

func (x *AdminBetStatisticsItem) GetTotalProfit() float64 {
	if x != nil {
		return x.TotalProfit
	}
	return 0
}

type BetPageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current   int32               `protobuf:"varint,1,opt,name=current,proto3" json:"current,omitempty"`
	Size      int32               `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	Data      *BetPageRequestData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	SortField []string            `protobuf:"bytes,4,rep,name=sortField,proto3" json:"sortField,omitempty"`
	SortKey   string              `protobuf:"bytes,5,opt,name=sortKey,proto3" json:"sortKey,omitempty"`
	SortId    string              `protobuf:"bytes,6,opt,name=sortId,proto3" json:"sortId,omitempty"`
	SortValue string              `protobuf:"bytes,7,opt,name=sortValue,proto3" json:"sortValue,omitempty"`
}

func (x *BetPageRequest) Reset() {
	*x = BetPageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[94]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BetPageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BetPageRequest) ProtoMessage() {}

func (x *BetPageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[94]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BetPageRequest.ProtoReflect.Descriptor instead.
func (*BetPageRequest) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{94}
}

func (x *BetPageRequest) GetCurrent() int32 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *BetPageRequest) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *BetPageRequest) GetData() *BetPageRequestData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *BetPageRequest) GetSortField() []string {
	if x != nil {
		return x.SortField
	}
	return nil
}

func (x *BetPageRequest) GetSortKey() string {
	if x != nil {
		return x.SortKey
	}
	return ""
}

func (x *BetPageRequest) GetSortId() string {
	if x != nil {
		return x.SortId
	}
	return ""
}

func (x *BetPageRequest) GetSortValue() string {
	if x != nil {
		return x.SortValue
	}
	return ""
}

type AgentBetStatisticsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartTime              int32   `protobuf:"varint,1,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime                int32   `protobuf:"varint,2,opt,name=endTime,proto3" json:"endTime,omitempty"`
	TimeType               int32   `protobuf:"varint,3,opt,name=timeType,proto3" json:"timeType,omitempty"`
	GameProviderSubtypeIds []int64 `protobuf:"varint,4,rep,packed,name=GameProviderSubtypeIds,proto3" json:"GameProviderSubtypeIds,omitempty"`
	Timezone               int32   `protobuf:"varint,5,opt,name=timezone,proto3" json:"timezone,omitempty"`
	Uid                    int64   `protobuf:"varint,6,opt,name=uid,proto3" json:"uid,omitempty"`
	Username               string  `protobuf:"bytes,7,opt,name=Username,proto3" json:"Username,omitempty"`
	GameTypes              []int64 `protobuf:"varint,8,rep,packed,name=gameTypes,proto3" json:"gameTypes,omitempty"`
	Id                     int64   `protobuf:"varint,9,opt,name=id,proto3" json:"id,omitempty"`
	Status                 int64   `protobuf:"varint,10,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *AgentBetStatisticsRequest) Reset() {
	*x = AgentBetStatisticsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[95]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentBetStatisticsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentBetStatisticsRequest) ProtoMessage() {}

func (x *AgentBetStatisticsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[95]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentBetStatisticsRequest.ProtoReflect.Descriptor instead.
func (*AgentBetStatisticsRequest) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{95}
}

func (x *AgentBetStatisticsRequest) GetStartTime() int32 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *AgentBetStatisticsRequest) GetEndTime() int32 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *AgentBetStatisticsRequest) GetTimeType() int32 {
	if x != nil {
		return x.TimeType
	}
	return 0
}

func (x *AgentBetStatisticsRequest) GetGameProviderSubtypeIds() []int64 {
	if x != nil {
		return x.GameProviderSubtypeIds
	}
	return nil
}

func (x *AgentBetStatisticsRequest) GetTimezone() int32 {
	if x != nil {
		return x.Timezone
	}
	return 0
}

func (x *AgentBetStatisticsRequest) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *AgentBetStatisticsRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *AgentBetStatisticsRequest) GetGameTypes() []int64 {
	if x != nil {
		return x.GameTypes
	}
	return nil
}

func (x *AgentBetStatisticsRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AgentBetStatisticsRequest) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

type AgentBetStatisticsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int64                   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string                  `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *AgentBetStatisticsItem `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *AgentBetStatisticsResponse) Reset() {
	*x = AgentBetStatisticsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[96]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentBetStatisticsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentBetStatisticsResponse) ProtoMessage() {}

func (x *AgentBetStatisticsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[96]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentBetStatisticsResponse.ProtoReflect.Descriptor instead.
func (*AgentBetStatisticsResponse) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{96}
}

func (x *AgentBetStatisticsResponse) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *AgentBetStatisticsResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *AgentBetStatisticsResponse) GetData() *AgentBetStatisticsItem {
	if x != nil {
		return x.Data
	}
	return nil
}

type AgentBetStatisticsItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Currency        string  `protobuf:"bytes,1,opt,name=currency,proto3" json:"currency,omitempty"`
	TotalStake      float64 `protobuf:"fixed64,2,opt,name=totalStake,proto3" json:"totalStake,omitempty"`
	TotalValidStake float64 `protobuf:"fixed64,3,opt,name=totalValidStake,proto3" json:"totalValidStake,omitempty"`
	TotalProfit     float64 `protobuf:"fixed64,4,opt,name=totalProfit,proto3" json:"totalProfit,omitempty"`
}

func (x *AgentBetStatisticsItem) Reset() {
	*x = AgentBetStatisticsItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[97]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentBetStatisticsItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentBetStatisticsItem) ProtoMessage() {}

func (x *AgentBetStatisticsItem) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[97]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentBetStatisticsItem.ProtoReflect.Descriptor instead.
func (*AgentBetStatisticsItem) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{97}
}

func (x *AgentBetStatisticsItem) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *AgentBetStatisticsItem) GetTotalStake() float64 {
	if x != nil {
		return x.TotalStake
	}
	return 0
}

func (x *AgentBetStatisticsItem) GetTotalValidStake() float64 {
	if x != nil {
		return x.TotalValidStake
	}
	return 0
}

func (x *AgentBetStatisticsItem) GetTotalProfit() float64 {
	if x != nil {
		return x.TotalProfit
	}
	return 0
}

type BetPageRequestData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartTime              int32   `protobuf:"varint,1,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime                int32   `protobuf:"varint,2,opt,name=endTime,proto3" json:"endTime,omitempty"`
	TimeType               int32   `protobuf:"varint,3,opt,name=timeType,proto3" json:"timeType,omitempty"`
	GameProviderSubtypeIds []int64 `protobuf:"varint,4,rep,packed,name=GameProviderSubtypeIds,proto3" json:"GameProviderSubtypeIds,omitempty"`
	Timezone               int32   `protobuf:"varint,5,opt,name=timezone,proto3" json:"timezone,omitempty"`
	Uid                    int64   `protobuf:"varint,6,opt,name=uid,proto3" json:"uid,omitempty"`
	Username               string  `protobuf:"bytes,7,opt,name=Username,proto3" json:"Username,omitempty"`
	GameTypes              []int64 `protobuf:"varint,8,rep,packed,name=gameTypes,proto3" json:"gameTypes,omitempty"`
	Id                     string  `protobuf:"bytes,9,opt,name=id,proto3" json:"id,omitempty"`
	Status                 int64   `protobuf:"varint,10,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *BetPageRequestData) Reset() {
	*x = BetPageRequestData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[98]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BetPageRequestData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BetPageRequestData) ProtoMessage() {}

func (x *BetPageRequestData) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[98]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BetPageRequestData.ProtoReflect.Descriptor instead.
func (*BetPageRequestData) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{98}
}

func (x *BetPageRequestData) GetStartTime() int32 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *BetPageRequestData) GetEndTime() int32 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *BetPageRequestData) GetTimeType() int32 {
	if x != nil {
		return x.TimeType
	}
	return 0
}

func (x *BetPageRequestData) GetGameProviderSubtypeIds() []int64 {
	if x != nil {
		return x.GameProviderSubtypeIds
	}
	return nil
}

func (x *BetPageRequestData) GetTimezone() int32 {
	if x != nil {
		return x.Timezone
	}
	return 0
}

func (x *BetPageRequestData) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *BetPageRequestData) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *BetPageRequestData) GetGameTypes() []int64 {
	if x != nil {
		return x.GameTypes
	}
	return nil
}

func (x *BetPageRequestData) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *BetPageRequestData) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

type BetPageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int64                `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string               `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *BetPageResponseData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *BetPageResponse) Reset() {
	*x = BetPageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[99]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BetPageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BetPageResponse) ProtoMessage() {}

func (x *BetPageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[99]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BetPageResponse.ProtoReflect.Descriptor instead.
func (*BetPageResponse) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{99}
}

func (x *BetPageResponse) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *BetPageResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *BetPageResponse) GetData() *BetPageResponseData {
	if x != nil {
		return x.Data
	}
	return nil
}

type BetPageResponseData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current   string                     `protobuf:"bytes,1,opt,name=current,proto3" json:"current,omitempty"`
	Size      string                     `protobuf:"bytes,2,opt,name=size,proto3" json:"size,omitempty"`
	List      []*BetPageResponseDataItem `protobuf:"bytes,3,rep,name=list,proto3" json:"list,omitempty"`
	SortField []string                   `protobuf:"bytes,4,rep,name=sortField,proto3" json:"sortField,omitempty"`
	SortKey   string                     `protobuf:"bytes,5,opt,name=sortKey,proto3" json:"sortKey,omitempty"`
	SortId    string                     `protobuf:"bytes,6,opt,name=sortId,proto3" json:"sortId,omitempty"`
	SortValue string                     `protobuf:"bytes,7,opt,name=sortValue,proto3" json:"sortValue,omitempty"`
	Total     string                     `protobuf:"bytes,8,opt,name=total,proto3" json:"total,omitempty"`
	Pages     string                     `protobuf:"bytes,9,opt,name=pages,proto3" json:"pages,omitempty"`
}

func (x *BetPageResponseData) Reset() {
	*x = BetPageResponseData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[100]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BetPageResponseData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BetPageResponseData) ProtoMessage() {}

func (x *BetPageResponseData) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[100]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BetPageResponseData.ProtoReflect.Descriptor instead.
func (*BetPageResponseData) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{100}
}

func (x *BetPageResponseData) GetCurrent() string {
	if x != nil {
		return x.Current
	}
	return ""
}

func (x *BetPageResponseData) GetSize() string {
	if x != nil {
		return x.Size
	}
	return ""
}

func (x *BetPageResponseData) GetList() []*BetPageResponseDataItem {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *BetPageResponseData) GetSortField() []string {
	if x != nil {
		return x.SortField
	}
	return nil
}

func (x *BetPageResponseData) GetSortKey() string {
	if x != nil {
		return x.SortKey
	}
	return ""
}

func (x *BetPageResponseData) GetSortId() string {
	if x != nil {
		return x.SortId
	}
	return ""
}

func (x *BetPageResponseData) GetSortValue() string {
	if x != nil {
		return x.SortValue
	}
	return ""
}

func (x *BetPageResponseData) GetTotal() string {
	if x != nil {
		return x.Total
	}
	return ""
}

func (x *BetPageResponseData) GetPages() string {
	if x != nil {
		return x.Pages
	}
	return ""
}

type BetPageResponseDataItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                      string                   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	RoundId                 string                   `protobuf:"bytes,2,opt,name=roundId,proto3" json:"roundId,omitempty"`
	TransactionId           string                   `protobuf:"bytes,3,opt,name=transactionId,proto3" json:"transactionId,omitempty"`
	GamePagcorId            int32                    `protobuf:"varint,4,opt,name=gamePagcorId,proto3" json:"gamePagcorId,omitempty"`
	GameListId              int32                    `protobuf:"varint,5,opt,name=gameListId,proto3" json:"gameListId,omitempty"`
	GameProviderId          int32                    `protobuf:"varint,6,opt,name=gameProviderId,proto3" json:"gameProviderId,omitempty"`
	XbStatus                int32                    `protobuf:"varint,7,opt,name=xbStatus,proto3" json:"xbStatus,omitempty"`
	XbUid                   int32                    `protobuf:"varint,8,opt,name=xbUid,proto3" json:"xbUid,omitempty"`
	XbUsername              string                   `protobuf:"bytes,9,opt,name=xbUsername,proto3" json:"xbUsername,omitempty"`
	MerchantId              int32                    `protobuf:"varint,10,opt,name=merchantId,proto3" json:"merchantId,omitempty"`
	XbProfit                string                   `protobuf:"bytes,11,opt,name=xbProfit,proto3" json:"xbProfit,omitempty"`
	Stake                   string                   `protobuf:"bytes,12,opt,name=stake,proto3" json:"stake,omitempty"`
	ValidStake              string                   `protobuf:"bytes,13,opt,name=validStake,proto3" json:"validStake,omitempty"`
	Payout                  string                   `protobuf:"bytes,14,opt,name=payout,proto3" json:"payout,omitempty"`
	CoinRefund              string                   `protobuf:"bytes,15,opt,name=coinRefund,proto3" json:"coinRefund,omitempty"`
	CoinBefore              string                   `protobuf:"bytes,16,opt,name=coinBefore,proto3" json:"coinBefore,omitempty"`
	GameProviderSubtypeId   int32                    `protobuf:"varint,17,opt,name=gameProviderSubtypeId,proto3" json:"gameProviderSubtypeId,omitempty"`
	AmountType              int32                    `protobuf:"varint,18,opt,name=amountType,proto3" json:"amountType,omitempty"`
	GameTypeId              int32                    `protobuf:"varint,19,opt,name=gameTypeId,proto3" json:"gameTypeId,omitempty"`
	DtStarted               int32                    `protobuf:"varint,20,opt,name=dtStarted,proto3" json:"dtStarted,omitempty"`
	DtCompleted             int32                    `protobuf:"varint,21,opt,name=dtCompleted,proto3" json:"dtCompleted,omitempty"`
	WinTransactionId        string                   `protobuf:"bytes,22,opt,name=winTransactionId,proto3" json:"winTransactionId,omitempty"`
	CreateTimeStr           string                   `protobuf:"bytes,23,opt,name=createTimeStr,proto3" json:"createTimeStr,omitempty"`
	CreatedAt               int32                    `protobuf:"varint,24,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt               int32                    `protobuf:"varint,25,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	Result                  *BetPageResult           `protobuf:"bytes,26,opt,name=result,proto3" json:"result,omitempty"`
	TransferAmt             *BetPageTransferAmt      `protobuf:"bytes,27,opt,name=transferAmt,proto3" json:"transferAmt,omitempty"`
	Info                    *BetPageInfo             `protobuf:"bytes,28,opt,name=info,proto3" json:"info,omitempty"`
	BetInfo                 *BetPageBetInfo          `protobuf:"bytes,29,opt,name=betInfo,proto3" json:"betInfo,omitempty"`
	WinInfo                 *BetPageWinInfo          `protobuf:"bytes,30,opt,name=winInfo,proto3" json:"winInfo,omitempty"`
	ChangeBalance           bool                     `protobuf:"varint,31,opt,name=changeBalance,proto3" json:"changeBalance,omitempty"`
	LevelText               string                   `protobuf:"bytes,32,opt,name=levelText,proto3" json:"levelText,omitempty"`
	GamePagcorName          string                   `protobuf:"bytes,33,opt,name=gamePagcorName,proto3" json:"gamePagcorName,omitempty"`
	GameProviderName        string                   `protobuf:"bytes,34,opt,name=gameProviderName,proto3" json:"gameProviderName,omitempty"`
	GameProviderSubtypeName string                   `protobuf:"bytes,35,opt,name=gameProviderSubtypeName,proto3" json:"gameProviderSubtypeName,omitempty"`
	FlowCategoryType        *BetPageFlowCategoryType `protobuf:"bytes,36,opt,name=flowCategoryType,proto3" json:"flowCategoryType,omitempty"`
	GameName                string                   `protobuf:"bytes,37,opt,name=gameName,proto3" json:"gameName,omitempty"`
	GameTypeName            string                   `protobuf:"bytes,38,opt,name=gameTypeName,proto3" json:"gameTypeName,omitempty"`
	MerchantName            string                   `protobuf:"bytes,39,opt,name=merchantName,proto3" json:"merchantName,omitempty"`
	MerchantCategory        int32                    `protobuf:"varint,40,opt,name=merchantCategory,proto3" json:"merchantCategory,omitempty"`
	Bonus                   bool                     `protobuf:"varint,41,opt,name=bonus,proto3" json:"bonus,omitempty"`
	CheckBetRecord          bool                     `protobuf:"varint,42,opt,name=checkBetRecord,proto3" json:"checkBetRecord,omitempty"`
}

func (x *BetPageResponseDataItem) Reset() {
	*x = BetPageResponseDataItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[101]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BetPageResponseDataItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BetPageResponseDataItem) ProtoMessage() {}

func (x *BetPageResponseDataItem) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[101]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BetPageResponseDataItem.ProtoReflect.Descriptor instead.
func (*BetPageResponseDataItem) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{101}
}

func (x *BetPageResponseDataItem) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *BetPageResponseDataItem) GetRoundId() string {
	if x != nil {
		return x.RoundId
	}
	return ""
}

func (x *BetPageResponseDataItem) GetTransactionId() string {
	if x != nil {
		return x.TransactionId
	}
	return ""
}

func (x *BetPageResponseDataItem) GetGamePagcorId() int32 {
	if x != nil {
		return x.GamePagcorId
	}
	return 0
}

func (x *BetPageResponseDataItem) GetGameListId() int32 {
	if x != nil {
		return x.GameListId
	}
	return 0
}

func (x *BetPageResponseDataItem) GetGameProviderId() int32 {
	if x != nil {
		return x.GameProviderId
	}
	return 0
}

func (x *BetPageResponseDataItem) GetXbStatus() int32 {
	if x != nil {
		return x.XbStatus
	}
	return 0
}

func (x *BetPageResponseDataItem) GetXbUid() int32 {
	if x != nil {
		return x.XbUid
	}
	return 0
}

func (x *BetPageResponseDataItem) GetXbUsername() string {
	if x != nil {
		return x.XbUsername
	}
	return ""
}

func (x *BetPageResponseDataItem) GetMerchantId() int32 {
	if x != nil {
		return x.MerchantId
	}
	return 0
}

func (x *BetPageResponseDataItem) GetXbProfit() string {
	if x != nil {
		return x.XbProfit
	}
	return ""
}

func (x *BetPageResponseDataItem) GetStake() string {
	if x != nil {
		return x.Stake
	}
	return ""
}

func (x *BetPageResponseDataItem) GetValidStake() string {
	if x != nil {
		return x.ValidStake
	}
	return ""
}

func (x *BetPageResponseDataItem) GetPayout() string {
	if x != nil {
		return x.Payout
	}
	return ""
}

func (x *BetPageResponseDataItem) GetCoinRefund() string {
	if x != nil {
		return x.CoinRefund
	}
	return ""
}

func (x *BetPageResponseDataItem) GetCoinBefore() string {
	if x != nil {
		return x.CoinBefore
	}
	return ""
}

func (x *BetPageResponseDataItem) GetGameProviderSubtypeId() int32 {
	if x != nil {
		return x.GameProviderSubtypeId
	}
	return 0
}

func (x *BetPageResponseDataItem) GetAmountType() int32 {
	if x != nil {
		return x.AmountType
	}
	return 0
}

func (x *BetPageResponseDataItem) GetGameTypeId() int32 {
	if x != nil {
		return x.GameTypeId
	}
	return 0
}

func (x *BetPageResponseDataItem) GetDtStarted() int32 {
	if x != nil {
		return x.DtStarted
	}
	return 0
}

func (x *BetPageResponseDataItem) GetDtCompleted() int32 {
	if x != nil {
		return x.DtCompleted
	}
	return 0
}

func (x *BetPageResponseDataItem) GetWinTransactionId() string {
	if x != nil {
		return x.WinTransactionId
	}
	return ""
}

func (x *BetPageResponseDataItem) GetCreateTimeStr() string {
	if x != nil {
		return x.CreateTimeStr
	}
	return ""
}

func (x *BetPageResponseDataItem) GetCreatedAt() int32 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *BetPageResponseDataItem) GetUpdatedAt() int32 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *BetPageResponseDataItem) GetResult() *BetPageResult {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *BetPageResponseDataItem) GetTransferAmt() *BetPageTransferAmt {
	if x != nil {
		return x.TransferAmt
	}
	return nil
}

func (x *BetPageResponseDataItem) GetInfo() *BetPageInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *BetPageResponseDataItem) GetBetInfo() *BetPageBetInfo {
	if x != nil {
		return x.BetInfo
	}
	return nil
}

func (x *BetPageResponseDataItem) GetWinInfo() *BetPageWinInfo {
	if x != nil {
		return x.WinInfo
	}
	return nil
}

func (x *BetPageResponseDataItem) GetChangeBalance() bool {
	if x != nil {
		return x.ChangeBalance
	}
	return false
}

func (x *BetPageResponseDataItem) GetLevelText() string {
	if x != nil {
		return x.LevelText
	}
	return ""
}

func (x *BetPageResponseDataItem) GetGamePagcorName() string {
	if x != nil {
		return x.GamePagcorName
	}
	return ""
}

func (x *BetPageResponseDataItem) GetGameProviderName() string {
	if x != nil {
		return x.GameProviderName
	}
	return ""
}

func (x *BetPageResponseDataItem) GetGameProviderSubtypeName() string {
	if x != nil {
		return x.GameProviderSubtypeName
	}
	return ""
}

func (x *BetPageResponseDataItem) GetFlowCategoryType() *BetPageFlowCategoryType {
	if x != nil {
		return x.FlowCategoryType
	}
	return nil
}

func (x *BetPageResponseDataItem) GetGameName() string {
	if x != nil {
		return x.GameName
	}
	return ""
}

func (x *BetPageResponseDataItem) GetGameTypeName() string {
	if x != nil {
		return x.GameTypeName
	}
	return ""
}

func (x *BetPageResponseDataItem) GetMerchantName() string {
	if x != nil {
		return x.MerchantName
	}
	return ""
}

func (x *BetPageResponseDataItem) GetMerchantCategory() int32 {
	if x != nil {
		return x.MerchantCategory
	}
	return 0
}

func (x *BetPageResponseDataItem) GetBonus() bool {
	if x != nil {
		return x.Bonus
	}
	return false
}

func (x *BetPageResponseDataItem) GetCheckBetRecord() bool {
	if x != nil {
		return x.CheckBetRecord
	}
	return false
}

type AgentBetPageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current   int32                    `protobuf:"varint,1,opt,name=current,proto3" json:"current,omitempty"`
	Size      int32                    `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	Data      *AgentBetPageRequestData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	SortField []string                 `protobuf:"bytes,4,rep,name=sortField,proto3" json:"sortField,omitempty"`
	SortKey   string                   `protobuf:"bytes,5,opt,name=sortKey,proto3" json:"sortKey,omitempty"`
	SortId    string                   `protobuf:"bytes,6,opt,name=sortId,proto3" json:"sortId,omitempty"`
	SortValue string                   `protobuf:"bytes,7,opt,name=sortValue,proto3" json:"sortValue,omitempty"`
	Total     string                   `protobuf:"bytes,8,opt,name=total,proto3" json:"total,omitempty"`
	Pages     string                   `protobuf:"bytes,9,opt,name=pages,proto3" json:"pages,omitempty"`
}

func (x *AgentBetPageRequest) Reset() {
	*x = AgentBetPageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[102]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentBetPageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentBetPageRequest) ProtoMessage() {}

func (x *AgentBetPageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[102]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentBetPageRequest.ProtoReflect.Descriptor instead.
func (*AgentBetPageRequest) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{102}
}

func (x *AgentBetPageRequest) GetCurrent() int32 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *AgentBetPageRequest) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *AgentBetPageRequest) GetData() *AgentBetPageRequestData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *AgentBetPageRequest) GetSortField() []string {
	if x != nil {
		return x.SortField
	}
	return nil
}

func (x *AgentBetPageRequest) GetSortKey() string {
	if x != nil {
		return x.SortKey
	}
	return ""
}

func (x *AgentBetPageRequest) GetSortId() string {
	if x != nil {
		return x.SortId
	}
	return ""
}

func (x *AgentBetPageRequest) GetSortValue() string {
	if x != nil {
		return x.SortValue
	}
	return ""
}

func (x *AgentBetPageRequest) GetTotal() string {
	if x != nil {
		return x.Total
	}
	return ""
}

func (x *AgentBetPageRequest) GetPages() string {
	if x != nil {
		return x.Pages
	}
	return ""
}

type AgentBetPageRequestData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartTime              int32   `protobuf:"varint,1,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime                int32   `protobuf:"varint,2,opt,name=endTime,proto3" json:"endTime,omitempty"`
	TimeType               int32   `protobuf:"varint,3,opt,name=timeType,proto3" json:"timeType,omitempty"`
	GameProviderSubtypeIds []int64 `protobuf:"varint,4,rep,packed,name=GameProviderSubtypeIds,proto3" json:"GameProviderSubtypeIds,omitempty"`
	Timezone               int32   `protobuf:"varint,5,opt,name=timezone,proto3" json:"timezone,omitempty"`
	Uid                    int64   `protobuf:"varint,6,opt,name=uid,proto3" json:"uid,omitempty"`
	Username               string  `protobuf:"bytes,7,opt,name=Username,proto3" json:"Username,omitempty"`
	GameTypes              []int64 `protobuf:"varint,8,rep,packed,name=gameTypes,proto3" json:"gameTypes,omitempty"`
	Id                     int64   `protobuf:"varint,9,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *AgentBetPageRequestData) Reset() {
	*x = AgentBetPageRequestData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[103]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentBetPageRequestData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentBetPageRequestData) ProtoMessage() {}

func (x *AgentBetPageRequestData) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[103]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentBetPageRequestData.ProtoReflect.Descriptor instead.
func (*AgentBetPageRequestData) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{103}
}

func (x *AgentBetPageRequestData) GetStartTime() int32 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *AgentBetPageRequestData) GetEndTime() int32 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *AgentBetPageRequestData) GetTimeType() int32 {
	if x != nil {
		return x.TimeType
	}
	return 0
}

func (x *AgentBetPageRequestData) GetGameProviderSubtypeIds() []int64 {
	if x != nil {
		return x.GameProviderSubtypeIds
	}
	return nil
}

func (x *AgentBetPageRequestData) GetTimezone() int32 {
	if x != nil {
		return x.Timezone
	}
	return 0
}

func (x *AgentBetPageRequestData) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *AgentBetPageRequestData) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *AgentBetPageRequestData) GetGameTypes() []int64 {
	if x != nil {
		return x.GameTypes
	}
	return nil
}

func (x *AgentBetPageRequestData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type AgentBetPageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int64                     `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string                    `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *AgentBetPageResponseData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *AgentBetPageResponse) Reset() {
	*x = AgentBetPageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[104]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentBetPageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentBetPageResponse) ProtoMessage() {}

func (x *AgentBetPageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[104]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentBetPageResponse.ProtoReflect.Descriptor instead.
func (*AgentBetPageResponse) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{104}
}

func (x *AgentBetPageResponse) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *AgentBetPageResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *AgentBetPageResponse) GetData() *AgentBetPageResponseData {
	if x != nil {
		return x.Data
	}
	return nil
}

type AgentBetPageResponseData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current   string                          `protobuf:"bytes,1,opt,name=current,proto3" json:"current,omitempty"`
	Size      string                          `protobuf:"bytes,2,opt,name=size,proto3" json:"size,omitempty"`
	List      []*AgentBetPageResponseDataItem `protobuf:"bytes,3,rep,name=list,proto3" json:"list,omitempty"`
	Total     string                          `protobuf:"bytes,4,opt,name=total,proto3" json:"total,omitempty"`
	Pages     string                          `protobuf:"bytes,5,opt,name=pages,proto3" json:"pages,omitempty"`
	ScrollId  string                          `protobuf:"bytes,6,opt,name=scrollId,proto3" json:"scrollId,omitempty"`
	SortValue string                          `protobuf:"bytes,7,opt,name=sortValue,proto3" json:"sortValue,omitempty"`
	SortId    string                          `protobuf:"bytes,8,opt,name=sortId,proto3" json:"sortId,omitempty"`
}

func (x *AgentBetPageResponseData) Reset() {
	*x = AgentBetPageResponseData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[105]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentBetPageResponseData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentBetPageResponseData) ProtoMessage() {}

func (x *AgentBetPageResponseData) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[105]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentBetPageResponseData.ProtoReflect.Descriptor instead.
func (*AgentBetPageResponseData) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{105}
}

func (x *AgentBetPageResponseData) GetCurrent() string {
	if x != nil {
		return x.Current
	}
	return ""
}

func (x *AgentBetPageResponseData) GetSize() string {
	if x != nil {
		return x.Size
	}
	return ""
}

func (x *AgentBetPageResponseData) GetList() []*AgentBetPageResponseDataItem {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *AgentBetPageResponseData) GetTotal() string {
	if x != nil {
		return x.Total
	}
	return ""
}

func (x *AgentBetPageResponseData) GetPages() string {
	if x != nil {
		return x.Pages
	}
	return ""
}

func (x *AgentBetPageResponseData) GetScrollId() string {
	if x != nil {
		return x.ScrollId
	}
	return ""
}

func (x *AgentBetPageResponseData) GetSortValue() string {
	if x != nil {
		return x.SortValue
	}
	return ""
}

func (x *AgentBetPageResponseData) GetSortId() string {
	if x != nil {
		return x.SortId
	}
	return ""
}

type AgentBetPageResponseDataItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                      string                   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	RoundId                 string                   `protobuf:"bytes,2,opt,name=roundId,proto3" json:"roundId,omitempty"`
	TransactionId           string                   `protobuf:"bytes,3,opt,name=transactionId,proto3" json:"transactionId,omitempty"`
	GamePagcorId            int32                    `protobuf:"varint,4,opt,name=gamePagcorId,proto3" json:"gamePagcorId,omitempty"`
	GameListId              int32                    `protobuf:"varint,5,opt,name=gameListId,proto3" json:"gameListId,omitempty"`
	GameProviderId          int32                    `protobuf:"varint,6,opt,name=gameProviderId,proto3" json:"gameProviderId,omitempty"`
	XbStatus                int32                    `protobuf:"varint,7,opt,name=xbStatus,proto3" json:"xbStatus,omitempty"`
	XbUid                   int32                    `protobuf:"varint,8,opt,name=xbUid,proto3" json:"xbUid,omitempty"`
	XbUsername              string                   `protobuf:"bytes,9,opt,name=xbUsername,proto3" json:"xbUsername,omitempty"`
	MerchantId              int32                    `protobuf:"varint,10,opt,name=merchantId,proto3" json:"merchantId,omitempty"`
	XbProfit                string                   `protobuf:"bytes,11,opt,name=xbProfit,proto3" json:"xbProfit,omitempty"`
	Stake                   string                   `protobuf:"bytes,12,opt,name=stake,proto3" json:"stake,omitempty"`
	ValidStake              string                   `protobuf:"bytes,13,opt,name=validStake,proto3" json:"validStake,omitempty"`
	Payout                  string                   `protobuf:"bytes,14,opt,name=payout,proto3" json:"payout,omitempty"`
	CoinRefund              string                   `protobuf:"bytes,15,opt,name=coinRefund,proto3" json:"coinRefund,omitempty"`
	CoinBefore              string                   `protobuf:"bytes,16,opt,name=coinBefore,proto3" json:"coinBefore,omitempty"`
	GameProviderSubtypeId   int32                    `protobuf:"varint,17,opt,name=gameProviderSubtypeId,proto3" json:"gameProviderSubtypeId,omitempty"`
	AmountType              int32                    `protobuf:"varint,18,opt,name=amountType,proto3" json:"amountType,omitempty"`
	GameTypeId              int32                    `protobuf:"varint,19,opt,name=gameTypeId,proto3" json:"gameTypeId,omitempty"`
	DtStarted               int32                    `protobuf:"varint,20,opt,name=dtStarted,proto3" json:"dtStarted,omitempty"`
	DtCompleted             int32                    `protobuf:"varint,21,opt,name=dtCompleted,proto3" json:"dtCompleted,omitempty"`
	WinTransactionId        string                   `protobuf:"bytes,22,opt,name=winTransactionId,proto3" json:"winTransactionId,omitempty"`
	CreateTimeStr           string                   `protobuf:"bytes,23,opt,name=createTimeStr,proto3" json:"createTimeStr,omitempty"`
	CreatedAt               int32                    `protobuf:"varint,24,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt               int32                    `protobuf:"varint,25,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	Result                  *BetPageResult           `protobuf:"bytes,26,opt,name=result,proto3" json:"result,omitempty"`
	TransferAmt             *BetPageTransferAmt      `protobuf:"bytes,27,opt,name=transferAmt,proto3" json:"transferAmt,omitempty"`
	Info                    *BetPageInfo             `protobuf:"bytes,28,opt,name=info,proto3" json:"info,omitempty"`
	BetInfo                 *BetPageBetInfo          `protobuf:"bytes,29,opt,name=betInfo,proto3" json:"betInfo,omitempty"`
	WinInfo                 *BetPageWinInfo          `protobuf:"bytes,30,opt,name=winInfo,proto3" json:"winInfo,omitempty"`
	ChangeBalance           bool                     `protobuf:"varint,31,opt,name=changeBalance,proto3" json:"changeBalance,omitempty"`
	LevelText               string                   `protobuf:"bytes,32,opt,name=levelText,proto3" json:"levelText,omitempty"`
	GamePagcorName          string                   `protobuf:"bytes,33,opt,name=gamePagcorName,proto3" json:"gamePagcorName,omitempty"`
	GameProviderName        string                   `protobuf:"bytes,34,opt,name=gameProviderName,proto3" json:"gameProviderName,omitempty"`
	GameProviderSubtypeName string                   `protobuf:"bytes,35,opt,name=gameProviderSubtypeName,proto3" json:"gameProviderSubtypeName,omitempty"`
	FlowCategoryType        *BetPageFlowCategoryType `protobuf:"bytes,36,opt,name=flowCategoryType,proto3" json:"flowCategoryType,omitempty"`
	GameName                string                   `protobuf:"bytes,37,opt,name=gameName,proto3" json:"gameName,omitempty"`
	GameTypeName            string                   `protobuf:"bytes,38,opt,name=gameTypeName,proto3" json:"gameTypeName,omitempty"`
	MerchantName            string                   `protobuf:"bytes,39,opt,name=merchantName,proto3" json:"merchantName,omitempty"`
	MerchantCategory        int32                    `protobuf:"varint,40,opt,name=merchantCategory,proto3" json:"merchantCategory,omitempty"`
	Bonus                   bool                     `protobuf:"varint,41,opt,name=bonus,proto3" json:"bonus,omitempty"`
	CheckBetRecord          bool                     `protobuf:"varint,42,opt,name=checkBetRecord,proto3" json:"checkBetRecord,omitempty"`
}

func (x *AgentBetPageResponseDataItem) Reset() {
	*x = AgentBetPageResponseDataItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[106]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentBetPageResponseDataItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentBetPageResponseDataItem) ProtoMessage() {}

func (x *AgentBetPageResponseDataItem) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[106]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentBetPageResponseDataItem.ProtoReflect.Descriptor instead.
func (*AgentBetPageResponseDataItem) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{106}
}

func (x *AgentBetPageResponseDataItem) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AgentBetPageResponseDataItem) GetRoundId() string {
	if x != nil {
		return x.RoundId
	}
	return ""
}

func (x *AgentBetPageResponseDataItem) GetTransactionId() string {
	if x != nil {
		return x.TransactionId
	}
	return ""
}

func (x *AgentBetPageResponseDataItem) GetGamePagcorId() int32 {
	if x != nil {
		return x.GamePagcorId
	}
	return 0
}

func (x *AgentBetPageResponseDataItem) GetGameListId() int32 {
	if x != nil {
		return x.GameListId
	}
	return 0
}

func (x *AgentBetPageResponseDataItem) GetGameProviderId() int32 {
	if x != nil {
		return x.GameProviderId
	}
	return 0
}

func (x *AgentBetPageResponseDataItem) GetXbStatus() int32 {
	if x != nil {
		return x.XbStatus
	}
	return 0
}

func (x *AgentBetPageResponseDataItem) GetXbUid() int32 {
	if x != nil {
		return x.XbUid
	}
	return 0
}

func (x *AgentBetPageResponseDataItem) GetXbUsername() string {
	if x != nil {
		return x.XbUsername
	}
	return ""
}

func (x *AgentBetPageResponseDataItem) GetMerchantId() int32 {
	if x != nil {
		return x.MerchantId
	}
	return 0
}

func (x *AgentBetPageResponseDataItem) GetXbProfit() string {
	if x != nil {
		return x.XbProfit
	}
	return ""
}

func (x *AgentBetPageResponseDataItem) GetStake() string {
	if x != nil {
		return x.Stake
	}
	return ""
}

func (x *AgentBetPageResponseDataItem) GetValidStake() string {
	if x != nil {
		return x.ValidStake
	}
	return ""
}

func (x *AgentBetPageResponseDataItem) GetPayout() string {
	if x != nil {
		return x.Payout
	}
	return ""
}

func (x *AgentBetPageResponseDataItem) GetCoinRefund() string {
	if x != nil {
		return x.CoinRefund
	}
	return ""
}

func (x *AgentBetPageResponseDataItem) GetCoinBefore() string {
	if x != nil {
		return x.CoinBefore
	}
	return ""
}

func (x *AgentBetPageResponseDataItem) GetGameProviderSubtypeId() int32 {
	if x != nil {
		return x.GameProviderSubtypeId
	}
	return 0
}

func (x *AgentBetPageResponseDataItem) GetAmountType() int32 {
	if x != nil {
		return x.AmountType
	}
	return 0
}

func (x *AgentBetPageResponseDataItem) GetGameTypeId() int32 {
	if x != nil {
		return x.GameTypeId
	}
	return 0
}

func (x *AgentBetPageResponseDataItem) GetDtStarted() int32 {
	if x != nil {
		return x.DtStarted
	}
	return 0
}

func (x *AgentBetPageResponseDataItem) GetDtCompleted() int32 {
	if x != nil {
		return x.DtCompleted
	}
	return 0
}

func (x *AgentBetPageResponseDataItem) GetWinTransactionId() string {
	if x != nil {
		return x.WinTransactionId
	}
	return ""
}

func (x *AgentBetPageResponseDataItem) GetCreateTimeStr() string {
	if x != nil {
		return x.CreateTimeStr
	}
	return ""
}

func (x *AgentBetPageResponseDataItem) GetCreatedAt() int32 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *AgentBetPageResponseDataItem) GetUpdatedAt() int32 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *AgentBetPageResponseDataItem) GetResult() *BetPageResult {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *AgentBetPageResponseDataItem) GetTransferAmt() *BetPageTransferAmt {
	if x != nil {
		return x.TransferAmt
	}
	return nil
}

func (x *AgentBetPageResponseDataItem) GetInfo() *BetPageInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *AgentBetPageResponseDataItem) GetBetInfo() *BetPageBetInfo {
	if x != nil {
		return x.BetInfo
	}
	return nil
}

func (x *AgentBetPageResponseDataItem) GetWinInfo() *BetPageWinInfo {
	if x != nil {
		return x.WinInfo
	}
	return nil
}

func (x *AgentBetPageResponseDataItem) GetChangeBalance() bool {
	if x != nil {
		return x.ChangeBalance
	}
	return false
}

func (x *AgentBetPageResponseDataItem) GetLevelText() string {
	if x != nil {
		return x.LevelText
	}
	return ""
}

func (x *AgentBetPageResponseDataItem) GetGamePagcorName() string {
	if x != nil {
		return x.GamePagcorName
	}
	return ""
}

func (x *AgentBetPageResponseDataItem) GetGameProviderName() string {
	if x != nil {
		return x.GameProviderName
	}
	return ""
}

func (x *AgentBetPageResponseDataItem) GetGameProviderSubtypeName() string {
	if x != nil {
		return x.GameProviderSubtypeName
	}
	return ""
}

func (x *AgentBetPageResponseDataItem) GetFlowCategoryType() *BetPageFlowCategoryType {
	if x != nil {
		return x.FlowCategoryType
	}
	return nil
}

func (x *AgentBetPageResponseDataItem) GetGameName() string {
	if x != nil {
		return x.GameName
	}
	return ""
}

func (x *AgentBetPageResponseDataItem) GetGameTypeName() string {
	if x != nil {
		return x.GameTypeName
	}
	return ""
}

func (x *AgentBetPageResponseDataItem) GetMerchantName() string {
	if x != nil {
		return x.MerchantName
	}
	return ""
}

func (x *AgentBetPageResponseDataItem) GetMerchantCategory() int32 {
	if x != nil {
		return x.MerchantCategory
	}
	return 0
}

func (x *AgentBetPageResponseDataItem) GetBonus() bool {
	if x != nil {
		return x.Bonus
	}
	return false
}

func (x *AgentBetPageResponseDataItem) GetCheckBetRecord() bool {
	if x != nil {
		return x.CheckBetRecord
	}
	return false
}

// Define empty messages for structs
type BetPageResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *BetPageResult) Reset() {
	*x = BetPageResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[107]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BetPageResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BetPageResult) ProtoMessage() {}

func (x *BetPageResult) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[107]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BetPageResult.ProtoReflect.Descriptor instead.
func (*BetPageResult) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{107}
}

type BetPageTransferAmt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *BetPageTransferAmt) Reset() {
	*x = BetPageTransferAmt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[108]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BetPageTransferAmt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BetPageTransferAmt) ProtoMessage() {}

func (x *BetPageTransferAmt) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[108]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BetPageTransferAmt.ProtoReflect.Descriptor instead.
func (*BetPageTransferAmt) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{108}
}

type BetPageInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *BetPageInfo) Reset() {
	*x = BetPageInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[109]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BetPageInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BetPageInfo) ProtoMessage() {}

func (x *BetPageInfo) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[109]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BetPageInfo.ProtoReflect.Descriptor instead.
func (*BetPageInfo) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{109}
}

type BetPageBetInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *BetPageBetInfo) Reset() {
	*x = BetPageBetInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[110]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BetPageBetInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BetPageBetInfo) ProtoMessage() {}

func (x *BetPageBetInfo) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[110]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BetPageBetInfo.ProtoReflect.Descriptor instead.
func (*BetPageBetInfo) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{110}
}

type BetPageWinInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *BetPageWinInfo) Reset() {
	*x = BetPageWinInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[111]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BetPageWinInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BetPageWinInfo) ProtoMessage() {}

func (x *BetPageWinInfo) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[111]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BetPageWinInfo.ProtoReflect.Descriptor instead.
func (*BetPageWinInfo) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{111}
}

type BetPageFlowCategoryType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *BetPageFlowCategoryType) Reset() {
	*x = BetPageFlowCategoryType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[112]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BetPageFlowCategoryType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BetPageFlowCategoryType) ProtoMessage() {}

func (x *BetPageFlowCategoryType) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[112]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BetPageFlowCategoryType.ProtoReflect.Descriptor instead.
func (*BetPageFlowCategoryType) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{112}
}

type BetSummaryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameTypeId string `protobuf:"bytes,1,opt,name=gameTypeId,proto3" json:"gameTypeId,omitempty"`
	StartTime  int64  `protobuf:"varint,2,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime    int64  `protobuf:"varint,3,opt,name=endTime,proto3" json:"endTime,omitempty"`
}

func (x *BetSummaryRequest) Reset() {
	*x = BetSummaryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[113]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BetSummaryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BetSummaryRequest) ProtoMessage() {}

func (x *BetSummaryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[113]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BetSummaryRequest.ProtoReflect.Descriptor instead.
func (*BetSummaryRequest) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{113}
}

func (x *BetSummaryRequest) GetGameTypeId() string {
	if x != nil {
		return x.GameTypeId
	}
	return ""
}

func (x *BetSummaryRequest) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *BetSummaryRequest) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

type BetSummaryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32                 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string                `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data []*BetSummaryDataItem `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *BetSummaryResponse) Reset() {
	*x = BetSummaryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[114]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BetSummaryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BetSummaryResponse) ProtoMessage() {}

func (x *BetSummaryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[114]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BetSummaryResponse.ProtoReflect.Descriptor instead.
func (*BetSummaryResponse) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{114}
}

func (x *BetSummaryResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *BetSummaryResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *BetSummaryResponse) GetData() []*BetSummaryDataItem {
	if x != nil {
		return x.Data
	}
	return nil
}

type BetSummaryDataItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameProviderSubtypeName string  `protobuf:"bytes,1,opt,name=gameProviderSubtypeName,proto3" json:"gameProviderSubtypeName,omitempty"`
	BetCount                int64   `protobuf:"varint,2,opt,name=betCount,proto3" json:"betCount,omitempty"`
	BetUserCount            int64   `protobuf:"varint,3,opt,name=betUserCount,proto3" json:"betUserCount,omitempty"`
	TotalStake              float64 `protobuf:"fixed64,4,opt,name=totalStake,proto3" json:"totalStake,omitempty"`
	TotalValidStake         float64 `protobuf:"fixed64,5,opt,name=totalValidStake,proto3" json:"totalValidStake,omitempty"`
	TotalCoinRefund         float64 `protobuf:"fixed64,6,opt,name=totalCoinRefund,proto3" json:"totalCoinRefund,omitempty"`
	TotalPayout             float64 `protobuf:"fixed64,7,opt,name=totalPayout,proto3" json:"totalPayout,omitempty"`
	TotalProfit             float64 `protobuf:"fixed64,8,opt,name=totalProfit,proto3" json:"totalProfit,omitempty"`
	TotalStakeExport        float64 `protobuf:"fixed64,9,opt,name=totalStakeExport,proto3" json:"totalStakeExport,omitempty"`
	TotalValidStakeExport   float64 `protobuf:"fixed64,10,opt,name=totalValidStakeExport,proto3" json:"totalValidStakeExport,omitempty"`
	TotalCoinRefundExport   float64 `protobuf:"fixed64,11,opt,name=totalCoinRefundExport,proto3" json:"totalCoinRefundExport,omitempty"`
	TotalPayoutExport       float64 `protobuf:"fixed64,12,opt,name=totalPayoutExport,proto3" json:"totalPayoutExport,omitempty"`
	TotalProfitExport       float64 `protobuf:"fixed64,13,opt,name=totalProfitExport,proto3" json:"totalProfitExport,omitempty"`
}

func (x *BetSummaryDataItem) Reset() {
	*x = BetSummaryDataItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[115]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BetSummaryDataItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BetSummaryDataItem) ProtoMessage() {}

func (x *BetSummaryDataItem) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[115]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BetSummaryDataItem.ProtoReflect.Descriptor instead.
func (*BetSummaryDataItem) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{115}
}

func (x *BetSummaryDataItem) GetGameProviderSubtypeName() string {
	if x != nil {
		return x.GameProviderSubtypeName
	}
	return ""
}

func (x *BetSummaryDataItem) GetBetCount() int64 {
	if x != nil {
		return x.BetCount
	}
	return 0
}

func (x *BetSummaryDataItem) GetBetUserCount() int64 {
	if x != nil {
		return x.BetUserCount
	}
	return 0
}

func (x *BetSummaryDataItem) GetTotalStake() float64 {
	if x != nil {
		return x.TotalStake
	}
	return 0
}

func (x *BetSummaryDataItem) GetTotalValidStake() float64 {
	if x != nil {
		return x.TotalValidStake
	}
	return 0
}

func (x *BetSummaryDataItem) GetTotalCoinRefund() float64 {
	if x != nil {
		return x.TotalCoinRefund
	}
	return 0
}

func (x *BetSummaryDataItem) GetTotalPayout() float64 {
	if x != nil {
		return x.TotalPayout
	}
	return 0
}

func (x *BetSummaryDataItem) GetTotalProfit() float64 {
	if x != nil {
		return x.TotalProfit
	}
	return 0
}

func (x *BetSummaryDataItem) GetTotalStakeExport() float64 {
	if x != nil {
		return x.TotalStakeExport
	}
	return 0
}

func (x *BetSummaryDataItem) GetTotalValidStakeExport() float64 {
	if x != nil {
		return x.TotalValidStakeExport
	}
	return 0
}

func (x *BetSummaryDataItem) GetTotalCoinRefundExport() float64 {
	if x != nil {
		return x.TotalCoinRefundExport
	}
	return 0
}

func (x *BetSummaryDataItem) GetTotalPayoutExport() float64 {
	if x != nil {
		return x.TotalPayoutExport
	}
	return 0
}

func (x *BetSummaryDataItem) GetTotalProfitExport() float64 {
	if x != nil {
		return x.TotalProfitExport
	}
	return 0
}

type AgentBetSummaryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameTypeId string `protobuf:"bytes,1,opt,name=gameTypeId,proto3" json:"gameTypeId,omitempty"`
	StartTime  int64  `protobuf:"varint,2,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime    int64  `protobuf:"varint,3,opt,name=endTime,proto3" json:"endTime,omitempty"`
}

func (x *AgentBetSummaryRequest) Reset() {
	*x = AgentBetSummaryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[116]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentBetSummaryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentBetSummaryRequest) ProtoMessage() {}

func (x *AgentBetSummaryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[116]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentBetSummaryRequest.ProtoReflect.Descriptor instead.
func (*AgentBetSummaryRequest) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{116}
}

func (x *AgentBetSummaryRequest) GetGameTypeId() string {
	if x != nil {
		return x.GameTypeId
	}
	return ""
}

func (x *AgentBetSummaryRequest) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *AgentBetSummaryRequest) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

type AgentBetSummaryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32                      `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string                     `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data []*AgentBetSummaryDataItem `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *AgentBetSummaryResponse) Reset() {
	*x = AgentBetSummaryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[117]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentBetSummaryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentBetSummaryResponse) ProtoMessage() {}

func (x *AgentBetSummaryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[117]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentBetSummaryResponse.ProtoReflect.Descriptor instead.
func (*AgentBetSummaryResponse) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{117}
}

func (x *AgentBetSummaryResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *AgentBetSummaryResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *AgentBetSummaryResponse) GetData() []*AgentBetSummaryDataItem {
	if x != nil {
		return x.Data
	}
	return nil
}

type AgentBetSummaryDataItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameProviderSubtypeName string  `protobuf:"bytes,1,opt,name=gameProviderSubtypeName,proto3" json:"gameProviderSubtypeName,omitempty"`
	BetCount                int64   `protobuf:"varint,2,opt,name=betCount,proto3" json:"betCount,omitempty"`
	BetUserCount            int64   `protobuf:"varint,3,opt,name=betUserCount,proto3" json:"betUserCount,omitempty"`
	TotalStake              float64 `protobuf:"fixed64,4,opt,name=totalStake,proto3" json:"totalStake,omitempty"`
	TotalValidStake         float64 `protobuf:"fixed64,5,opt,name=totalValidStake,proto3" json:"totalValidStake,omitempty"`
	TotalCoinRefund         float64 `protobuf:"fixed64,6,opt,name=totalCoinRefund,proto3" json:"totalCoinRefund,omitempty"`
	TotalPayout             float64 `protobuf:"fixed64,7,opt,name=totalPayout,proto3" json:"totalPayout,omitempty"`
	TotalProfit             float64 `protobuf:"fixed64,8,opt,name=totalProfit,proto3" json:"totalProfit,omitempty"`
	TotalStakeExport        float64 `protobuf:"fixed64,9,opt,name=totalStakeExport,proto3" json:"totalStakeExport,omitempty"`
	TotalValidStakeExport   float64 `protobuf:"fixed64,10,opt,name=totalValidStakeExport,proto3" json:"totalValidStakeExport,omitempty"`
	TotalCoinRefundExport   float64 `protobuf:"fixed64,11,opt,name=totalCoinRefundExport,proto3" json:"totalCoinRefundExport,omitempty"`
	TotalPayoutExport       float64 `protobuf:"fixed64,12,opt,name=totalPayoutExport,proto3" json:"totalPayoutExport,omitempty"`
	TotalProfitExport       float64 `protobuf:"fixed64,13,opt,name=totalProfitExport,proto3" json:"totalProfitExport,omitempty"`
}

func (x *AgentBetSummaryDataItem) Reset() {
	*x = AgentBetSummaryDataItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[118]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentBetSummaryDataItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentBetSummaryDataItem) ProtoMessage() {}

func (x *AgentBetSummaryDataItem) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[118]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentBetSummaryDataItem.ProtoReflect.Descriptor instead.
func (*AgentBetSummaryDataItem) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{118}
}

func (x *AgentBetSummaryDataItem) GetGameProviderSubtypeName() string {
	if x != nil {
		return x.GameProviderSubtypeName
	}
	return ""
}

func (x *AgentBetSummaryDataItem) GetBetCount() int64 {
	if x != nil {
		return x.BetCount
	}
	return 0
}

func (x *AgentBetSummaryDataItem) GetBetUserCount() int64 {
	if x != nil {
		return x.BetUserCount
	}
	return 0
}

func (x *AgentBetSummaryDataItem) GetTotalStake() float64 {
	if x != nil {
		return x.TotalStake
	}
	return 0
}

func (x *AgentBetSummaryDataItem) GetTotalValidStake() float64 {
	if x != nil {
		return x.TotalValidStake
	}
	return 0
}

func (x *AgentBetSummaryDataItem) GetTotalCoinRefund() float64 {
	if x != nil {
		return x.TotalCoinRefund
	}
	return 0
}

func (x *AgentBetSummaryDataItem) GetTotalPayout() float64 {
	if x != nil {
		return x.TotalPayout
	}
	return 0
}

func (x *AgentBetSummaryDataItem) GetTotalProfit() float64 {
	if x != nil {
		return x.TotalProfit
	}
	return 0
}

func (x *AgentBetSummaryDataItem) GetTotalStakeExport() float64 {
	if x != nil {
		return x.TotalStakeExport
	}
	return 0
}

func (x *AgentBetSummaryDataItem) GetTotalValidStakeExport() float64 {
	if x != nil {
		return x.TotalValidStakeExport
	}
	return 0
}

func (x *AgentBetSummaryDataItem) GetTotalCoinRefundExport() float64 {
	if x != nil {
		return x.TotalCoinRefundExport
	}
	return 0
}

func (x *AgentBetSummaryDataItem) GetTotalPayoutExport() float64 {
	if x != nil {
		return x.TotalPayoutExport
	}
	return 0
}

func (x *AgentBetSummaryDataItem) GetTotalProfitExport() float64 {
	if x != nil {
		return x.TotalProfitExport
	}
	return 0
}

type DailyReportStatisticsPlatCoinReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartTime int64  `protobuf:"varint,1,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime   int64  `protobuf:"varint,2,opt,name=endTime,proto3" json:"endTime,omitempty"`
	Type      string `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *DailyReportStatisticsPlatCoinReq) Reset() {
	*x = DailyReportStatisticsPlatCoinReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[119]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DailyReportStatisticsPlatCoinReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DailyReportStatisticsPlatCoinReq) ProtoMessage() {}

func (x *DailyReportStatisticsPlatCoinReq) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[119]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DailyReportStatisticsPlatCoinReq.ProtoReflect.Descriptor instead.
func (*DailyReportStatisticsPlatCoinReq) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{119}
}

func (x *DailyReportStatisticsPlatCoinReq) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *DailyReportStatisticsPlatCoinReq) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *DailyReportStatisticsPlatCoinReq) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type DailyReportStatisticsPlatCoinResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32                                `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string                               `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data []*DailyReportStatisticsPlatCoinData `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *DailyReportStatisticsPlatCoinResp) Reset() {
	*x = DailyReportStatisticsPlatCoinResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[120]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DailyReportStatisticsPlatCoinResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DailyReportStatisticsPlatCoinResp) ProtoMessage() {}

func (x *DailyReportStatisticsPlatCoinResp) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[120]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DailyReportStatisticsPlatCoinResp.ProtoReflect.Descriptor instead.
func (*DailyReportStatisticsPlatCoinResp) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{120}
}

func (x *DailyReportStatisticsPlatCoinResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *DailyReportStatisticsPlatCoinResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *DailyReportStatisticsPlatCoinResp) GetData() []*DailyReportStatisticsPlatCoinData {
	if x != nil {
		return x.Data
	}
	return nil
}

type DailyReportStatisticsPlatCoinData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameTypeId   int64   `protobuf:"varint,1,opt,name=gameTypeId,proto3" json:"gameTypeId,omitempty"`    //游戏类型Id
	GameTypeName string  `protobuf:"bytes,2,opt,name=gameTypeName,proto3" json:"gameTypeName,omitempty"` //游戏类型名称
	BetCoin      float64 `protobuf:"fixed64,3,opt,name=betCoin,proto3" json:"betCoin,omitempty"`         //游戏下注额
	ProfitCoin   float64 `protobuf:"fixed64,4,opt,name=profitCoin,proto3" json:"profitCoin,omitempty"`   //游戏盈亏额
}

func (x *DailyReportStatisticsPlatCoinData) Reset() {
	*x = DailyReportStatisticsPlatCoinData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[121]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DailyReportStatisticsPlatCoinData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DailyReportStatisticsPlatCoinData) ProtoMessage() {}

func (x *DailyReportStatisticsPlatCoinData) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[121]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DailyReportStatisticsPlatCoinData.ProtoReflect.Descriptor instead.
func (*DailyReportStatisticsPlatCoinData) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{121}
}

func (x *DailyReportStatisticsPlatCoinData) GetGameTypeId() int64 {
	if x != nil {
		return x.GameTypeId
	}
	return 0
}

func (x *DailyReportStatisticsPlatCoinData) GetGameTypeName() string {
	if x != nil {
		return x.GameTypeName
	}
	return ""
}

func (x *DailyReportStatisticsPlatCoinData) GetBetCoin() float64 {
	if x != nil {
		return x.BetCoin
	}
	return 0
}

func (x *DailyReportStatisticsPlatCoinData) GetProfitCoin() float64 {
	if x != nil {
		return x.ProfitCoin
	}
	return 0
}

type AdminBetGameListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameTypes int64 `protobuf:"varint,1,opt,name=gameTypes,proto3" json:"gameTypes,omitempty"` //游戏类型
}

func (x *AdminBetGameListReq) Reset() {
	*x = AdminBetGameListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[122]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminBetGameListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminBetGameListReq) ProtoMessage() {}

func (x *AdminBetGameListReq) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[122]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminBetGameListReq.ProtoReflect.Descriptor instead.
func (*AdminBetGameListReq) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{122}
}

func (x *AdminBetGameListReq) GetGameTypes() int64 {
	if x != nil {
		return x.GameTypes
	}
	return 0
}

type AdminBetGameListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32                   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string                  `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data []*AdminBetGameListData `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *AdminBetGameListResp) Reset() {
	*x = AdminBetGameListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[123]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminBetGameListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminBetGameListResp) ProtoMessage() {}

func (x *AdminBetGameListResp) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[123]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminBetGameListResp.ProtoReflect.Descriptor instead.
func (*AdminBetGameListResp) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{123}
}

func (x *AdminBetGameListResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *AdminBetGameListResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *AdminBetGameListResp) GetData() []*AdminBetGameListData {
	if x != nil {
		return x.Data
	}
	return nil
}

type AdminBetGameListData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                 //Id
	Name           string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`              //游戏类型名称
	Icon           string `protobuf:"bytes,3,opt,name=icon,proto3" json:"icon,omitempty"`              //游戏图标
	GameTypeId     int64  `protobuf:"varint,4,opt,name=gameTypeId,proto3" json:"gameTypeId,omitempty"` //游戏类型Id
	Model          string `protobuf:"bytes,5,opt,name=model,proto3" json:"model,omitempty"`
	GamePagcorId   int64  `protobuf:"varint,6,opt,name=gamePagcorId,proto3" json:"gamePagcorId,omitempty"`     //pagcor游戏分类表ID
	GameProviderId int64  `protobuf:"varint,7,opt,name=gameProviderId,proto3" json:"gameProviderId,omitempty"` //游戏供应商列表ID
	ProviderRate   string `protobuf:"bytes,8,opt,name=providerRate,proto3" json:"providerRate,omitempty"`
	PagcorRate     string `protobuf:"bytes,9,opt,name=pagcorRate,proto3" json:"pagcorRate,omitempty"`
}

func (x *AdminBetGameListData) Reset() {
	*x = AdminBetGameListData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[124]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminBetGameListData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminBetGameListData) ProtoMessage() {}

func (x *AdminBetGameListData) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[124]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminBetGameListData.ProtoReflect.Descriptor instead.
func (*AdminBetGameListData) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{124}
}

func (x *AdminBetGameListData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AdminBetGameListData) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AdminBetGameListData) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *AdminBetGameListData) GetGameTypeId() int64 {
	if x != nil {
		return x.GameTypeId
	}
	return 0
}

func (x *AdminBetGameListData) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

func (x *AdminBetGameListData) GetGamePagcorId() int64 {
	if x != nil {
		return x.GamePagcorId
	}
	return 0
}

func (x *AdminBetGameListData) GetGameProviderId() int64 {
	if x != nil {
		return x.GameProviderId
	}
	return 0
}

func (x *AdminBetGameListData) GetProviderRate() string {
	if x != nil {
		return x.ProviderRate
	}
	return ""
}

func (x *AdminBetGameListData) GetPagcorRate() string {
	if x != nil {
		return x.PagcorRate
	}
	return ""
}

type AgentListSubGameReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current   int64                    `protobuf:"varint,1,opt,name=current,proto3" json:"current,omitempty"`
	Size      int64                    `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	SortKey   string                   `protobuf:"bytes,3,opt,name=sortKey,proto3" json:"sortKey,omitempty"`
	SortField []string                 `protobuf:"bytes,4,rep,name=sortField,proto3" json:"sortField,omitempty"`
	Data      *AgentListSubGameDataReq `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *AgentListSubGameReq) Reset() {
	*x = AgentListSubGameReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[125]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentListSubGameReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentListSubGameReq) ProtoMessage() {}

func (x *AgentListSubGameReq) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[125]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentListSubGameReq.ProtoReflect.Descriptor instead.
func (*AgentListSubGameReq) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{125}
}

func (x *AgentListSubGameReq) GetCurrent() int64 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *AgentListSubGameReq) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *AgentListSubGameReq) GetSortKey() string {
	if x != nil {
		return x.SortKey
	}
	return ""
}

func (x *AgentListSubGameReq) GetSortField() []string {
	if x != nil {
		return x.SortField
	}
	return nil
}

func (x *AgentListSubGameReq) GetData() *AgentListSubGameDataReq {
	if x != nil {
		return x.Data
	}
	return nil
}

type AgentListSubGameDataReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameProviderSubtypeId int64  `protobuf:"varint,1,opt,name=gameProviderSubtypeId,proto3" json:"gameProviderSubtypeId,omitempty"`
	Name                  string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Device                string `protobuf:"bytes,3,opt,name=device,proto3" json:"device,omitempty"`
	Status                string `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *AgentListSubGameDataReq) Reset() {
	*x = AgentListSubGameDataReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[126]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentListSubGameDataReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentListSubGameDataReq) ProtoMessage() {}

func (x *AgentListSubGameDataReq) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[126]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentListSubGameDataReq.ProtoReflect.Descriptor instead.
func (*AgentListSubGameDataReq) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{126}
}

func (x *AgentListSubGameDataReq) GetGameProviderSubtypeId() int64 {
	if x != nil {
		return x.GameProviderSubtypeId
	}
	return 0
}

func (x *AgentListSubGameDataReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AgentListSubGameDataReq) GetDevice() string {
	if x != nil {
		return x.Device
	}
	return ""
}

func (x *AgentListSubGameDataReq) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type AgentListSubGameResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int64                     `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string                    `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *AgentListSubGameDataResp `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *AgentListSubGameResp) Reset() {
	*x = AgentListSubGameResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[127]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentListSubGameResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentListSubGameResp) ProtoMessage() {}

func (x *AgentListSubGameResp) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[127]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentListSubGameResp.ProtoReflect.Descriptor instead.
func (*AgentListSubGameResp) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{127}
}

func (x *AgentListSubGameResp) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *AgentListSubGameResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *AgentListSubGameResp) GetData() *AgentListSubGameDataResp {
	if x != nil {
		return x.Data
	}
	return nil
}

type AgentListSubGameDataResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current string                      `protobuf:"bytes,1,opt,name=current,proto3" json:"current,omitempty"`
	Pages   string                      `protobuf:"bytes,2,opt,name=pages,proto3" json:"pages,omitempty"`
	Size    string                      `protobuf:"bytes,3,opt,name=size,proto3" json:"size,omitempty"`
	Total   string                      `protobuf:"bytes,4,opt,name=total,proto3" json:"total,omitempty"`
	List    []*AgentListSubGameDataItem `protobuf:"bytes,5,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *AgentListSubGameDataResp) Reset() {
	*x = AgentListSubGameDataResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[128]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentListSubGameDataResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentListSubGameDataResp) ProtoMessage() {}

func (x *AgentListSubGameDataResp) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[128]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentListSubGameDataResp.ProtoReflect.Descriptor instead.
func (*AgentListSubGameDataResp) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{128}
}

func (x *AgentListSubGameDataResp) GetCurrent() string {
	if x != nil {
		return x.Current
	}
	return ""
}

func (x *AgentListSubGameDataResp) GetPages() string {
	if x != nil {
		return x.Pages
	}
	return ""
}

func (x *AgentListSubGameDataResp) GetSize() string {
	if x != nil {
		return x.Size
	}
	return ""
}

func (x *AgentListSubGameDataResp) GetTotal() string {
	if x != nil {
		return x.Total
	}
	return ""
}

func (x *AgentListSubGameDataResp) GetList() []*AgentListSubGameDataItem {
	if x != nil {
		return x.List
	}
	return nil
}

type AgentListSubGameDataItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                      string                               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Device                  int64                                `protobuf:"varint,2,opt,name=device,proto3" json:"device,omitempty"`
	FavoriteStar            int64                                `protobuf:"varint,3,opt,name=favoriteStar,proto3" json:"favoriteStar,omitempty"`
	GameListStatus          int64                                `protobuf:"varint,4,opt,name=gameListStatus,proto3" json:"gameListStatus,omitempty"`
	GameProviderId          int64                                `protobuf:"varint,5,opt,name=gameProviderId,proto3" json:"gameProviderId,omitempty"`
	GameProviderName        string                               `protobuf:"bytes,6,opt,name=gameProviderName,proto3" json:"gameProviderName,omitempty"`
	GameProviderSubtypeId   int64                                `protobuf:"varint,7,opt,name=gameProviderSubtypeId,proto3" json:"gameProviderSubtypeId,omitempty"`
	GameProviderSubtypeName string                               `protobuf:"bytes,8,opt,name=gameProviderSubtypeName,proto3" json:"gameProviderSubtypeName,omitempty"`
	GameTypeId              int64                                `protobuf:"varint,9,opt,name=gameTypeId,proto3" json:"gameTypeId,omitempty"`
	GameTypeName            string                               `protobuf:"bytes,10,opt,name=gameTypeName,proto3" json:"gameTypeName,omitempty"`
	HotStar                 int64                                `protobuf:"varint,11,opt,name=hotStar,proto3" json:"hotStar,omitempty"`
	IsCasino                int64                                `protobuf:"varint,12,opt,name=isCasino,proto3" json:"isCasino,omitempty"`
	IsNew                   int64                                `protobuf:"varint,13,opt,name=isNew,proto3" json:"isNew,omitempty"`
	LatestIcon              string                               `protobuf:"bytes,14,opt,name=latestIcon,proto3" json:"latestIcon,omitempty"`
	Maintenance             *AgentListSubGameDataItemMainTenance `protobuf:"bytes,15,opt,name=maintenance,proto3" json:"maintenance,omitempty"`
	Name                    string                               `protobuf:"bytes,16,opt,name=name,proto3" json:"name,omitempty"`
	OperatorName            string                               `protobuf:"bytes,17,opt,name=operatorName,proto3" json:"operatorName,omitempty"`
	OriginalIcon            string                               `protobuf:"bytes,18,opt,name=originalIcon,proto3" json:"originalIcon,omitempty"`
	Sort                    int64                                `protobuf:"varint,19,opt,name=sort,proto3" json:"sort,omitempty"`
	Status                  int64                                `protobuf:"varint,20,opt,name=status,proto3" json:"status,omitempty"`
	UpdatedAt               int64                                `protobuf:"varint,21,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	UpdatedUser             string                               `protobuf:"bytes,22,opt,name=updatedUser,proto3" json:"updatedUser,omitempty"`
	BetTotalLimit           float32                              `protobuf:"fixed32,23,opt,name=betTotalLimit,proto3" json:"betTotalLimit,omitempty"`                     //比赛下注总金额限制
	SingleUserBetPercentage float32                              `protobuf:"fixed32,24,opt,name=singleUserBetPercentage,proto3" json:"singleUserBetPercentage,omitempty"` //单用户下注金额不超过总金额的百分比比例(数值范围0-100，如50表示50%)
	BetTotal                float32                              `protobuf:"fixed32,25,opt,name=betTotal,proto3" json:"betTotal,omitempty"`                               //比赛当前下注总金额
}

func (x *AgentListSubGameDataItem) Reset() {
	*x = AgentListSubGameDataItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[129]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentListSubGameDataItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentListSubGameDataItem) ProtoMessage() {}

func (x *AgentListSubGameDataItem) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[129]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentListSubGameDataItem.ProtoReflect.Descriptor instead.
func (*AgentListSubGameDataItem) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{129}
}

func (x *AgentListSubGameDataItem) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AgentListSubGameDataItem) GetDevice() int64 {
	if x != nil {
		return x.Device
	}
	return 0
}

func (x *AgentListSubGameDataItem) GetFavoriteStar() int64 {
	if x != nil {
		return x.FavoriteStar
	}
	return 0
}

func (x *AgentListSubGameDataItem) GetGameListStatus() int64 {
	if x != nil {
		return x.GameListStatus
	}
	return 0
}

func (x *AgentListSubGameDataItem) GetGameProviderId() int64 {
	if x != nil {
		return x.GameProviderId
	}
	return 0
}

func (x *AgentListSubGameDataItem) GetGameProviderName() string {
	if x != nil {
		return x.GameProviderName
	}
	return ""
}

func (x *AgentListSubGameDataItem) GetGameProviderSubtypeId() int64 {
	if x != nil {
		return x.GameProviderSubtypeId
	}
	return 0
}

func (x *AgentListSubGameDataItem) GetGameProviderSubtypeName() string {
	if x != nil {
		return x.GameProviderSubtypeName
	}
	return ""
}

func (x *AgentListSubGameDataItem) GetGameTypeId() int64 {
	if x != nil {
		return x.GameTypeId
	}
	return 0
}

func (x *AgentListSubGameDataItem) GetGameTypeName() string {
	if x != nil {
		return x.GameTypeName
	}
	return ""
}

func (x *AgentListSubGameDataItem) GetHotStar() int64 {
	if x != nil {
		return x.HotStar
	}
	return 0
}

func (x *AgentListSubGameDataItem) GetIsCasino() int64 {
	if x != nil {
		return x.IsCasino
	}
	return 0
}

func (x *AgentListSubGameDataItem) GetIsNew() int64 {
	if x != nil {
		return x.IsNew
	}
	return 0
}

func (x *AgentListSubGameDataItem) GetLatestIcon() string {
	if x != nil {
		return x.LatestIcon
	}
	return ""
}

func (x *AgentListSubGameDataItem) GetMaintenance() *AgentListSubGameDataItemMainTenance {
	if x != nil {
		return x.Maintenance
	}
	return nil
}

func (x *AgentListSubGameDataItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AgentListSubGameDataItem) GetOperatorName() string {
	if x != nil {
		return x.OperatorName
	}
	return ""
}

func (x *AgentListSubGameDataItem) GetOriginalIcon() string {
	if x != nil {
		return x.OriginalIcon
	}
	return ""
}

func (x *AgentListSubGameDataItem) GetSort() int64 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *AgentListSubGameDataItem) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *AgentListSubGameDataItem) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *AgentListSubGameDataItem) GetUpdatedUser() string {
	if x != nil {
		return x.UpdatedUser
	}
	return ""
}

func (x *AgentListSubGameDataItem) GetBetTotalLimit() float32 {
	if x != nil {
		return x.BetTotalLimit
	}
	return 0
}

func (x *AgentListSubGameDataItem) GetSingleUserBetPercentage() float32 {
	if x != nil {
		return x.SingleUserBetPercentage
	}
	return 0
}

func (x *AgentListSubGameDataItem) GetBetTotal() float32 {
	if x != nil {
		return x.BetTotal
	}
	return 0
}

type AgentListSubGameDataItemMainTenance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Start string `protobuf:"bytes,1,opt,name=start,proto3" json:"start,omitempty"`
	End   string `protobuf:"bytes,2,opt,name=end,proto3" json:"end,omitempty"`
	Info  string `protobuf:"bytes,3,opt,name=info,proto3" json:"info,omitempty"`
}

func (x *AgentListSubGameDataItemMainTenance) Reset() {
	*x = AgentListSubGameDataItemMainTenance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[130]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentListSubGameDataItemMainTenance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentListSubGameDataItemMainTenance) ProtoMessage() {}

func (x *AgentListSubGameDataItemMainTenance) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[130]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentListSubGameDataItemMainTenance.ProtoReflect.Descriptor instead.
func (*AgentListSubGameDataItemMainTenance) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{130}
}

func (x *AgentListSubGameDataItemMainTenance) GetStart() string {
	if x != nil {
		return x.Start
	}
	return ""
}

func (x *AgentListSubGameDataItemMainTenance) GetEnd() string {
	if x != nil {
		return x.End
	}
	return ""
}

func (x *AgentListSubGameDataItemMainTenance) GetInfo() string {
	if x != nil {
		return x.Info
	}
	return ""
}

type ValidStakeCronReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Date string `protobuf:"bytes,1,opt,name=date,proto3" json:"date,omitempty"`
}

func (x *ValidStakeCronReq) Reset() {
	*x = ValidStakeCronReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[131]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidStakeCronReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidStakeCronReq) ProtoMessage() {}

func (x *ValidStakeCronReq) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[131]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidStakeCronReq.ProtoReflect.Descriptor instead.
func (*ValidStakeCronReq) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{131}
}

func (x *ValidStakeCronReq) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

type ValidStakeCronResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int64  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *ValidStakeCronResp) Reset() {
	*x = ValidStakeCronResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[132]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidStakeCronResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidStakeCronResp) ProtoMessage() {}

func (x *ValidStakeCronResp) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[132]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidStakeCronResp.ProtoReflect.Descriptor instead.
func (*ValidStakeCronResp) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{132}
}

func (x *ValidStakeCronResp) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ValidStakeCronResp) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ValidStakeWeekCronReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Date string `protobuf:"bytes,1,opt,name=date,proto3" json:"date,omitempty"`
}

func (x *ValidStakeWeekCronReq) Reset() {
	*x = ValidStakeWeekCronReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[133]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidStakeWeekCronReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidStakeWeekCronReq) ProtoMessage() {}

func (x *ValidStakeWeekCronReq) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[133]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidStakeWeekCronReq.ProtoReflect.Descriptor instead.
func (*ValidStakeWeekCronReq) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{133}
}

func (x *ValidStakeWeekCronReq) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

type ValidStakeWeekCronResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int64  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *ValidStakeWeekCronResp) Reset() {
	*x = ValidStakeWeekCronResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[134]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidStakeWeekCronResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidStakeWeekCronResp) ProtoMessage() {}

func (x *ValidStakeWeekCronResp) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[134]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidStakeWeekCronResp.ProtoReflect.Descriptor instead.
func (*ValidStakeWeekCronResp) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{134}
}

func (x *ValidStakeWeekCronResp) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ValidStakeWeekCronResp) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ValidStakeMonthCronReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Date string `protobuf:"bytes,1,opt,name=date,proto3" json:"date,omitempty"`
}

func (x *ValidStakeMonthCronReq) Reset() {
	*x = ValidStakeMonthCronReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[135]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidStakeMonthCronReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidStakeMonthCronReq) ProtoMessage() {}

func (x *ValidStakeMonthCronReq) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[135]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidStakeMonthCronReq.ProtoReflect.Descriptor instead.
func (*ValidStakeMonthCronReq) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{135}
}

func (x *ValidStakeMonthCronReq) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

type ValidStakeMonthCronResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int64  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *ValidStakeMonthCronResp) Reset() {
	*x = ValidStakeMonthCronResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[136]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidStakeMonthCronResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidStakeMonthCronResp) ProtoMessage() {}

func (x *ValidStakeMonthCronResp) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[136]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidStakeMonthCronResp.ProtoReflect.Descriptor instead.
func (*ValidStakeMonthCronResp) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{136}
}

func (x *ValidStakeMonthCronResp) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ValidStakeMonthCronResp) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type MonthlyReductionInCodingReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MonthlyReductionInCodingReq) Reset() {
	*x = MonthlyReductionInCodingReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[137]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MonthlyReductionInCodingReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MonthlyReductionInCodingReq) ProtoMessage() {}

func (x *MonthlyReductionInCodingReq) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[137]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MonthlyReductionInCodingReq.ProtoReflect.Descriptor instead.
func (*MonthlyReductionInCodingReq) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{137}
}

type MonthlyReductionInCodingResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int64  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *MonthlyReductionInCodingResp) Reset() {
	*x = MonthlyReductionInCodingResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[138]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MonthlyReductionInCodingResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MonthlyReductionInCodingResp) ProtoMessage() {}

func (x *MonthlyReductionInCodingResp) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[138]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MonthlyReductionInCodingResp.ProtoReflect.Descriptor instead.
func (*MonthlyReductionInCodingResp) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{138}
}

func (x *MonthlyReductionInCodingResp) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *MonthlyReductionInCodingResp) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type GetAllGameProviderReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetAllGameProviderReq) Reset() {
	*x = GetAllGameProviderReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[139]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllGameProviderReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllGameProviderReq) ProtoMessage() {}

func (x *GetAllGameProviderReq) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[139]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllGameProviderReq.ProtoReflect.Descriptor instead.
func (*GetAllGameProviderReq) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{139}
}

type GetAllGameProviderResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32                         `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string                        `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data []*GetAllGameSlotResponseData `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *GetAllGameProviderResp) Reset() {
	*x = GetAllGameProviderResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[140]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllGameProviderResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllGameProviderResp) ProtoMessage() {}

func (x *GetAllGameProviderResp) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[140]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllGameProviderResp.ProtoReflect.Descriptor instead.
func (*GetAllGameProviderResp) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{140}
}

func (x *GetAllGameProviderResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetAllGameProviderResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GetAllGameProviderResp) GetData() []*GetAllGameSlotResponseData {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetAllGameSlotResponseData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Code         string `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	Name         string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Icon         string `protobuf:"bytes,4,opt,name=icon,proto3" json:"icon,omitempty"`
	ConfigStatus int64  `protobuf:"varint,5,opt,name=configStatus,proto3" json:"configStatus,omitempty"`
}

func (x *GetAllGameSlotResponseData) Reset() {
	*x = GetAllGameSlotResponseData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[141]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllGameSlotResponseData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllGameSlotResponseData) ProtoMessage() {}

func (x *GetAllGameSlotResponseData) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[141]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllGameSlotResponseData.ProtoReflect.Descriptor instead.
func (*GetAllGameSlotResponseData) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{141}
}

func (x *GetAllGameSlotResponseData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetAllGameSlotResponseData) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *GetAllGameSlotResponseData) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetAllGameSlotResponseData) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *GetAllGameSlotResponseData) GetConfigStatus() int64 {
	if x != nil {
		return x.ConfigStatus
	}
	return 0
}

// 跳转到指定体育游戏链接配置数据结构
type GameOperationUrlData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Language       string `protobuf:"bytes,2,opt,name=language,proto3" json:"language,omitempty"`                                      //语言
	LeagueName     string `protobuf:"bytes,3,opt,name=league_name,json=leagueName,proto3" json:"league_name,omitempty"`                //联赛名称
	MatchTime      int32  `protobuf:"varint,4,opt,name=match_time,json=matchTime,proto3" json:"match_time,omitempty"`                  //比赛时间
	HomeName       string `protobuf:"bytes,5,opt,name=home_name,json=homeName,proto3" json:"home_name,omitempty"`                      //主队名称
	HomeIcon       string `protobuf:"bytes,6,opt,name=home_icon,json=homeIcon,proto3" json:"home_icon,omitempty"`                      //主队图标
	VisitorName    string `protobuf:"bytes,7,opt,name=visitor_name,json=visitorName,proto3" json:"visitor_name,omitempty"`             //客队名称
	VisitorIcon    string `protobuf:"bytes,8,opt,name=visitor_icon,json=visitorIcon,proto3" json:"visitor_icon,omitempty"`             //客队图标
	GameProviderId int32  `protobuf:"varint,9,opt,name=game_provider_id,json=gameProviderId,proto3" json:"game_provider_id,omitempty"` //游戏平台id
	MatchId        string `protobuf:"bytes,10,opt,name=match_id,json=matchId,proto3" json:"match_id,omitempty"`                        //比赛id
	LeagueId       string `protobuf:"bytes,11,opt,name=league_id,json=leagueId,proto3" json:"league_id,omitempty"`                     //联赛id
	Status         int32  `protobuf:"varint,12,opt,name=status,proto3" json:"status,omitempty"`                                        //状态: 1-启用 0-停用
	CreatedAt      int32  `protobuf:"varint,13,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`                 //创建时间
	UpdatedAt      int32  `protobuf:"varint,14,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`                 //更新时间
	CreatedBy      string `protobuf:"bytes,15,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`                  //操作人姓名
	UpdatedBy      string `protobuf:"bytes,16,opt,name=updated_by,json=updatedBy,proto3" json:"updated_by,omitempty"`                  //最后更新人
}

func (x *GameOperationUrlData) Reset() {
	*x = GameOperationUrlData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[142]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameOperationUrlData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameOperationUrlData) ProtoMessage() {}

func (x *GameOperationUrlData) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[142]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameOperationUrlData.ProtoReflect.Descriptor instead.
func (*GameOperationUrlData) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{142}
}

func (x *GameOperationUrlData) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GameOperationUrlData) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *GameOperationUrlData) GetLeagueName() string {
	if x != nil {
		return x.LeagueName
	}
	return ""
}

func (x *GameOperationUrlData) GetMatchTime() int32 {
	if x != nil {
		return x.MatchTime
	}
	return 0
}

func (x *GameOperationUrlData) GetHomeName() string {
	if x != nil {
		return x.HomeName
	}
	return ""
}

func (x *GameOperationUrlData) GetHomeIcon() string {
	if x != nil {
		return x.HomeIcon
	}
	return ""
}

func (x *GameOperationUrlData) GetVisitorName() string {
	if x != nil {
		return x.VisitorName
	}
	return ""
}

func (x *GameOperationUrlData) GetVisitorIcon() string {
	if x != nil {
		return x.VisitorIcon
	}
	return ""
}

func (x *GameOperationUrlData) GetGameProviderId() int32 {
	if x != nil {
		return x.GameProviderId
	}
	return 0
}

func (x *GameOperationUrlData) GetMatchId() string {
	if x != nil {
		return x.MatchId
	}
	return ""
}

func (x *GameOperationUrlData) GetLeagueId() string {
	if x != nil {
		return x.LeagueId
	}
	return ""
}

func (x *GameOperationUrlData) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *GameOperationUrlData) GetCreatedAt() int32 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *GameOperationUrlData) GetUpdatedAt() int32 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *GameOperationUrlData) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

func (x *GameOperationUrlData) GetUpdatedBy() string {
	if x != nil {
		return x.UpdatedBy
	}
	return ""
}

// 增加 跳转到指定体育游戏链接配置
type AddGameOperationUrlReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Language       string `protobuf:"bytes,1,opt,name=language,proto3" json:"language,omitempty"`                                      //语言
	LeagueName     string `protobuf:"bytes,2,opt,name=league_name,json=leagueName,proto3" json:"league_name,omitempty"`                //联赛名称
	MatchTime      int32  `protobuf:"varint,3,opt,name=match_time,json=matchTime,proto3" json:"match_time,omitempty"`                  //比赛时间
	HomeName       string `protobuf:"bytes,4,opt,name=home_name,json=homeName,proto3" json:"home_name,omitempty"`                      //主队名称
	HomeIcon       string `protobuf:"bytes,5,opt,name=home_icon,json=homeIcon,proto3" json:"home_icon,omitempty"`                      //主队图标
	VisitorName    string `protobuf:"bytes,6,opt,name=visitor_name,json=visitorName,proto3" json:"visitor_name,omitempty"`             //客队名称
	VisitorIcon    string `protobuf:"bytes,7,opt,name=visitor_icon,json=visitorIcon,proto3" json:"visitor_icon,omitempty"`             //客队图标
	GameProviderId int32  `protobuf:"varint,8,opt,name=game_provider_id,json=gameProviderId,proto3" json:"game_provider_id,omitempty"` //游戏平台id
	MatchId        string `protobuf:"bytes,9,opt,name=match_id,json=matchId,proto3" json:"match_id,omitempty"`                         //比赛id
	LeagueId       string `protobuf:"bytes,10,opt,name=league_id,json=leagueId,proto3" json:"league_id,omitempty"`                     //联赛id
	Status         int32  `protobuf:"varint,11,opt,name=status,proto3" json:"status,omitempty"`                                        //状态: 1-启用 0-停用
}

func (x *AddGameOperationUrlReq) Reset() {
	*x = AddGameOperationUrlReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[143]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddGameOperationUrlReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddGameOperationUrlReq) ProtoMessage() {}

func (x *AddGameOperationUrlReq) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[143]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddGameOperationUrlReq.ProtoReflect.Descriptor instead.
func (*AddGameOperationUrlReq) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{143}
}

func (x *AddGameOperationUrlReq) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *AddGameOperationUrlReq) GetLeagueName() string {
	if x != nil {
		return x.LeagueName
	}
	return ""
}

func (x *AddGameOperationUrlReq) GetMatchTime() int32 {
	if x != nil {
		return x.MatchTime
	}
	return 0
}

func (x *AddGameOperationUrlReq) GetHomeName() string {
	if x != nil {
		return x.HomeName
	}
	return ""
}

func (x *AddGameOperationUrlReq) GetHomeIcon() string {
	if x != nil {
		return x.HomeIcon
	}
	return ""
}

func (x *AddGameOperationUrlReq) GetVisitorName() string {
	if x != nil {
		return x.VisitorName
	}
	return ""
}

func (x *AddGameOperationUrlReq) GetVisitorIcon() string {
	if x != nil {
		return x.VisitorIcon
	}
	return ""
}

func (x *AddGameOperationUrlReq) GetGameProviderId() int32 {
	if x != nil {
		return x.GameProviderId
	}
	return 0
}

func (x *AddGameOperationUrlReq) GetMatchId() string {
	if x != nil {
		return x.MatchId
	}
	return ""
}

func (x *AddGameOperationUrlReq) GetLeagueId() string {
	if x != nil {
		return x.LeagueId
	}
	return ""
}

func (x *AddGameOperationUrlReq) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type AddGameOperationUrlResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data bool   `protobuf:"varint,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *AddGameOperationUrlResp) Reset() {
	*x = AddGameOperationUrlResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[144]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddGameOperationUrlResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddGameOperationUrlResp) ProtoMessage() {}

func (x *AddGameOperationUrlResp) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[144]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddGameOperationUrlResp.ProtoReflect.Descriptor instead.
func (*AddGameOperationUrlResp) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{144}
}

func (x *AddGameOperationUrlResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *AddGameOperationUrlResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *AddGameOperationUrlResp) GetData() bool {
	if x != nil {
		return x.Data
	}
	return false
}

// 删除 跳转到指定体育游戏链接配置
type DelGameOperationUrlReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DelGameOperationUrlReq) Reset() {
	*x = DelGameOperationUrlReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[145]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelGameOperationUrlReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelGameOperationUrlReq) ProtoMessage() {}

func (x *DelGameOperationUrlReq) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[145]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelGameOperationUrlReq.ProtoReflect.Descriptor instead.
func (*DelGameOperationUrlReq) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{145}
}

func (x *DelGameOperationUrlReq) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DelGameOperationUrlResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data bool   `protobuf:"varint,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *DelGameOperationUrlResp) Reset() {
	*x = DelGameOperationUrlResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[146]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelGameOperationUrlResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelGameOperationUrlResp) ProtoMessage() {}

func (x *DelGameOperationUrlResp) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[146]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelGameOperationUrlResp.ProtoReflect.Descriptor instead.
func (*DelGameOperationUrlResp) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{146}
}

func (x *DelGameOperationUrlResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *DelGameOperationUrlResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *DelGameOperationUrlResp) GetData() bool {
	if x != nil {
		return x.Data
	}
	return false
}

// 修改 跳转到指定体育游戏链接配置
type UpdateGameOperationUrlReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Language       string `protobuf:"bytes,2,opt,name=language,proto3" json:"language,omitempty"`                                      //语言
	LeagueName     string `protobuf:"bytes,3,opt,name=league_name,json=leagueName,proto3" json:"league_name,omitempty"`                //联赛名称
	MatchTime      int32  `protobuf:"varint,4,opt,name=match_time,json=matchTime,proto3" json:"match_time,omitempty"`                  //比赛时间
	HomeName       string `protobuf:"bytes,5,opt,name=home_name,json=homeName,proto3" json:"home_name,omitempty"`                      //主队名称
	HomeIcon       string `protobuf:"bytes,6,opt,name=home_icon,json=homeIcon,proto3" json:"home_icon,omitempty"`                      //主队图标
	VisitorName    string `protobuf:"bytes,7,opt,name=visitor_name,json=visitorName,proto3" json:"visitor_name,omitempty"`             //客队名称
	VisitorIcon    string `protobuf:"bytes,8,opt,name=visitor_icon,json=visitorIcon,proto3" json:"visitor_icon,omitempty"`             //客队图标
	GameProviderId int32  `protobuf:"varint,9,opt,name=game_provider_id,json=gameProviderId,proto3" json:"game_provider_id,omitempty"` //游戏平台id
	MatchId        string `protobuf:"bytes,10,opt,name=match_id,json=matchId,proto3" json:"match_id,omitempty"`                        //比赛id
	LeagueId       string `protobuf:"bytes,11,opt,name=league_id,json=leagueId,proto3" json:"league_id,omitempty"`                     //联赛id
	Status         int32  `protobuf:"varint,12,opt,name=status,proto3" json:"status,omitempty"`                                        //状态: 1-启用 0-停用
}

func (x *UpdateGameOperationUrlReq) Reset() {
	*x = UpdateGameOperationUrlReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[147]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateGameOperationUrlReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateGameOperationUrlReq) ProtoMessage() {}

func (x *UpdateGameOperationUrlReq) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[147]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateGameOperationUrlReq.ProtoReflect.Descriptor instead.
func (*UpdateGameOperationUrlReq) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{147}
}

func (x *UpdateGameOperationUrlReq) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateGameOperationUrlReq) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *UpdateGameOperationUrlReq) GetLeagueName() string {
	if x != nil {
		return x.LeagueName
	}
	return ""
}

func (x *UpdateGameOperationUrlReq) GetMatchTime() int32 {
	if x != nil {
		return x.MatchTime
	}
	return 0
}

func (x *UpdateGameOperationUrlReq) GetHomeName() string {
	if x != nil {
		return x.HomeName
	}
	return ""
}

func (x *UpdateGameOperationUrlReq) GetHomeIcon() string {
	if x != nil {
		return x.HomeIcon
	}
	return ""
}

func (x *UpdateGameOperationUrlReq) GetVisitorName() string {
	if x != nil {
		return x.VisitorName
	}
	return ""
}

func (x *UpdateGameOperationUrlReq) GetVisitorIcon() string {
	if x != nil {
		return x.VisitorIcon
	}
	return ""
}

func (x *UpdateGameOperationUrlReq) GetGameProviderId() int32 {
	if x != nil {
		return x.GameProviderId
	}
	return 0
}

func (x *UpdateGameOperationUrlReq) GetMatchId() string {
	if x != nil {
		return x.MatchId
	}
	return ""
}

func (x *UpdateGameOperationUrlReq) GetLeagueId() string {
	if x != nil {
		return x.LeagueId
	}
	return ""
}

func (x *UpdateGameOperationUrlReq) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type UpdateGameOperationUrlResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data bool   `protobuf:"varint,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *UpdateGameOperationUrlResp) Reset() {
	*x = UpdateGameOperationUrlResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[148]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateGameOperationUrlResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateGameOperationUrlResp) ProtoMessage() {}

func (x *UpdateGameOperationUrlResp) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[148]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateGameOperationUrlResp.ProtoReflect.Descriptor instead.
func (*UpdateGameOperationUrlResp) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{148}
}

func (x *UpdateGameOperationUrlResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *UpdateGameOperationUrlResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *UpdateGameOperationUrlResp) GetData() bool {
	if x != nil {
		return x.Data
	}
	return false
}

type GetUpdateGameOperationUrlDetailReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetUpdateGameOperationUrlDetailReq) Reset() {
	*x = GetUpdateGameOperationUrlDetailReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[149]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUpdateGameOperationUrlDetailReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUpdateGameOperationUrlDetailReq) ProtoMessage() {}

func (x *GetUpdateGameOperationUrlDetailReq) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[149]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUpdateGameOperationUrlDetailReq.ProtoReflect.Descriptor instead.
func (*GetUpdateGameOperationUrlDetailReq) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{149}
}

func (x *GetUpdateGameOperationUrlDetailReq) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetUpdateGameOperationUrlDetailResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32                 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string                `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *GameOperationUrlData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetUpdateGameOperationUrlDetailResp) Reset() {
	*x = GetUpdateGameOperationUrlDetailResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[150]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUpdateGameOperationUrlDetailResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUpdateGameOperationUrlDetailResp) ProtoMessage() {}

func (x *GetUpdateGameOperationUrlDetailResp) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[150]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUpdateGameOperationUrlDetailResp.ProtoReflect.Descriptor instead.
func (*GetUpdateGameOperationUrlDetailResp) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{150}
}

func (x *GetUpdateGameOperationUrlDetailResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetUpdateGameOperationUrlDetailResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GetUpdateGameOperationUrlDetailResp) GetData() *GameOperationUrlData {
	if x != nil {
		return x.Data
	}
	return nil
}

// 查询 跳转到指定体育游戏链接配置列表
type GameOperationUrlListFilterData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Language  string `protobuf:"bytes,1,opt,name=language,proto3" json:"language,omitempty"`                 //语言
	MatchId   string `protobuf:"bytes,2,opt,name=match_id,json=matchId,proto3" json:"match_id,omitempty"`    //比赛id
	LeagueId  string `protobuf:"bytes,3,opt,name=league_id,json=leagueId,proto3" json:"league_id,omitempty"` //联赛id
	StartTime int64  `protobuf:"varint,4,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime   int64  `protobuf:"varint,5,opt,name=endTime,proto3" json:"endTime,omitempty"`
}

func (x *GameOperationUrlListFilterData) Reset() {
	*x = GameOperationUrlListFilterData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[151]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameOperationUrlListFilterData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameOperationUrlListFilterData) ProtoMessage() {}

func (x *GameOperationUrlListFilterData) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[151]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameOperationUrlListFilterData.ProtoReflect.Descriptor instead.
func (*GameOperationUrlListFilterData) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{151}
}

func (x *GameOperationUrlListFilterData) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *GameOperationUrlListFilterData) GetMatchId() string {
	if x != nil {
		return x.MatchId
	}
	return ""
}

func (x *GameOperationUrlListFilterData) GetLeagueId() string {
	if x != nil {
		return x.LeagueId
	}
	return ""
}

func (x *GameOperationUrlListFilterData) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *GameOperationUrlListFilterData) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

type GetGameOperationUrlListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current   int32                           `protobuf:"varint,1,opt,name=current,proto3" json:"current,omitempty"`
	Size      int32                           `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	Data      *GameOperationUrlListFilterData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	SortField []string                        `protobuf:"bytes,4,rep,name=sortField,proto3" json:"sortField,omitempty"`
	SortKey   string                          `protobuf:"bytes,5,opt,name=sortKey,proto3" json:"sortKey,omitempty"`
}

func (x *GetGameOperationUrlListReq) Reset() {
	*x = GetGameOperationUrlListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[152]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGameOperationUrlListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGameOperationUrlListReq) ProtoMessage() {}

func (x *GetGameOperationUrlListReq) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[152]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGameOperationUrlListReq.ProtoReflect.Descriptor instead.
func (*GetGameOperationUrlListReq) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{152}
}

func (x *GetGameOperationUrlListReq) GetCurrent() int32 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *GetGameOperationUrlListReq) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *GetGameOperationUrlListReq) GetData() *GameOperationUrlListFilterData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *GetGameOperationUrlListReq) GetSortField() []string {
	if x != nil {
		return x.SortField
	}
	return nil
}

func (x *GetGameOperationUrlListReq) GetSortKey() string {
	if x != nil {
		return x.SortKey
	}
	return ""
}

type GetGameOperationUrlListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32                   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg     string                  `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Current int32                   `protobuf:"varint,3,opt,name=current,proto3" json:"current,omitempty"`
	Pages   int32                   `protobuf:"varint,4,opt,name=pages,proto3" json:"pages,omitempty"`
	Size    int32                   `protobuf:"varint,5,opt,name=size,proto3" json:"size,omitempty"`
	Total   int32                   `protobuf:"varint,6,opt,name=total,proto3" json:"total,omitempty"`
	List    []*GameOperationUrlData `protobuf:"bytes,7,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *GetGameOperationUrlListResp) Reset() {
	*x = GetGameOperationUrlListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[153]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGameOperationUrlListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGameOperationUrlListResp) ProtoMessage() {}

func (x *GetGameOperationUrlListResp) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[153]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGameOperationUrlListResp.ProtoReflect.Descriptor instead.
func (*GetGameOperationUrlListResp) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{153}
}

func (x *GetGameOperationUrlListResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetGameOperationUrlListResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GetGameOperationUrlListResp) GetCurrent() int32 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *GetGameOperationUrlListResp) GetPages() int32 {
	if x != nil {
		return x.Pages
	}
	return 0
}

func (x *GetGameOperationUrlListResp) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *GetGameOperationUrlListResp) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *GetGameOperationUrlListResp) GetList() []*GameOperationUrlData {
	if x != nil {
		return x.List
	}
	return nil
}

// 体育热门游戏列表
type GetSportHotGameListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Language       string `protobuf:"bytes,1,opt,name=language,proto3" json:"language,omitempty"`                                      //语言
	GameProviderId int32  `protobuf:"varint,2,opt,name=game_provider_id,json=gameProviderId,proto3" json:"game_provider_id,omitempty"` //游戏平台id
}

func (x *GetSportHotGameListReq) Reset() {
	*x = GetSportHotGameListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[154]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSportHotGameListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSportHotGameListReq) ProtoMessage() {}

func (x *GetSportHotGameListReq) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[154]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSportHotGameListReq.ProtoReflect.Descriptor instead.
func (*GetSportHotGameListReq) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{154}
}

func (x *GetSportHotGameListReq) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *GetSportHotGameListReq) GetGameProviderId() int32 {
	if x != nil {
		return x.GameProviderId
	}
	return 0
}

type GetSportHotGameListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32                   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string                  `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	List []*GameOperationUrlData `protobuf:"bytes,3,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *GetSportHotGameListResp) Reset() {
	*x = GetSportHotGameListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[155]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSportHotGameListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSportHotGameListResp) ProtoMessage() {}

func (x *GetSportHotGameListResp) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[155]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSportHotGameListResp.ProtoReflect.Descriptor instead.
func (*GetSportHotGameListResp) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{155}
}

func (x *GetSportHotGameListResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetSportHotGameListResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GetSportHotGameListResp) GetList() []*GameOperationUrlData {
	if x != nil {
		return x.List
	}
	return nil
}

// 开始体育热门游戏
type StartSportHotGameReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid                int32  `protobuf:"varint,2,opt,name=uid,proto3" json:"uid,omitempty"`
	Username           string `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`
	Ip                 string `protobuf:"bytes,4,opt,name=ip,proto3" json:"ip,omitempty"`
	PlayMode           int32  `protobuf:"varint,5,opt,name=play_mode,json=playMode,proto3" json:"play_mode,omitempty"`
	Authorization      string `protobuf:"bytes,6,opt,name=authorization,proto3" json:"authorization,omitempty"`
	Device             string `protobuf:"bytes,7,opt,name=device,proto3" json:"device,omitempty"`
	Lang               string `protobuf:"bytes,8,opt,name=lang,proto3" json:"lang,omitempty"`
	Theme              string `protobuf:"bytes,9,opt,name=theme,proto3" json:"theme,omitempty"`
	WebType            string `protobuf:"bytes,10,opt,name=web_type,json=webType,proto3" json:"web_type,omitempty"`
	Origin             string `protobuf:"bytes,11,opt,name=origin,proto3" json:"origin,omitempty"`
	GameProviderId     int64  `protobuf:"varint,12,opt,name=gameProviderId,proto3" json:"gameProviderId,omitempty"`
	GameOperationUrlId int64  `protobuf:"varint,13,opt,name=gameOperationUrlId,proto3" json:"gameOperationUrlId,omitempty"`
}

func (x *StartSportHotGameReq) Reset() {
	*x = StartSportHotGameReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[156]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartSportHotGameReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartSportHotGameReq) ProtoMessage() {}

func (x *StartSportHotGameReq) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[156]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartSportHotGameReq.ProtoReflect.Descriptor instead.
func (*StartSportHotGameReq) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{156}
}

func (x *StartSportHotGameReq) GetUid() int32 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *StartSportHotGameReq) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *StartSportHotGameReq) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *StartSportHotGameReq) GetPlayMode() int32 {
	if x != nil {
		return x.PlayMode
	}
	return 0
}

func (x *StartSportHotGameReq) GetAuthorization() string {
	if x != nil {
		return x.Authorization
	}
	return ""
}

func (x *StartSportHotGameReq) GetDevice() string {
	if x != nil {
		return x.Device
	}
	return ""
}

func (x *StartSportHotGameReq) GetLang() string {
	if x != nil {
		return x.Lang
	}
	return ""
}

func (x *StartSportHotGameReq) GetTheme() string {
	if x != nil {
		return x.Theme
	}
	return ""
}

func (x *StartSportHotGameReq) GetWebType() string {
	if x != nil {
		return x.WebType
	}
	return ""
}

func (x *StartSportHotGameReq) GetOrigin() string {
	if x != nil {
		return x.Origin
	}
	return ""
}

func (x *StartSportHotGameReq) GetGameProviderId() int64 {
	if x != nil {
		return x.GameProviderId
	}
	return 0
}

func (x *StartSportHotGameReq) GetGameOperationUrlId() int64 {
	if x != nil {
		return x.GameOperationUrlId
	}
	return 0
}

type StartSportHotGameResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int64  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg     string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	GameUrl string `protobuf:"bytes,3,opt,name=game_url,json=gameUrl,proto3" json:"game_url,omitempty"`
}

func (x *StartSportHotGameResp) Reset() {
	*x = StartSportHotGameResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[157]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartSportHotGameResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartSportHotGameResp) ProtoMessage() {}

func (x *StartSportHotGameResp) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[157]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartSportHotGameResp.ProtoReflect.Descriptor instead.
func (*StartSportHotGameResp) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{157}
}

func (x *StartSportHotGameResp) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *StartSportHotGameResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *StartSportHotGameResp) GetGameUrl() string {
	if x != nil {
		return x.GameUrl
	}
	return ""
}

type AddFrontClassifyInfoCmsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InfoCmsList []*AddFrontClassifyInfoCmsDataReq `protobuf:"bytes,1,rep,name=infoCmsList,proto3" json:"infoCmsList,omitempty"`
}

func (x *AddFrontClassifyInfoCmsReq) Reset() {
	*x = AddFrontClassifyInfoCmsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[158]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddFrontClassifyInfoCmsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddFrontClassifyInfoCmsReq) ProtoMessage() {}

func (x *AddFrontClassifyInfoCmsReq) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[158]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddFrontClassifyInfoCmsReq.ProtoReflect.Descriptor instead.
func (*AddFrontClassifyInfoCmsReq) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{158}
}

func (x *AddFrontClassifyInfoCmsReq) GetInfoCmsList() []*AddFrontClassifyInfoCmsDataReq {
	if x != nil {
		return x.InfoCmsList
	}
	return nil
}

type AddFrontClassifyInfoCmsDataReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Chose        bool   `protobuf:"varint,1,opt,name=chose,proto3" json:"chose,omitempty"`
	ClassId      int64  `protobuf:"varint,2,opt,name=classId,proto3" json:"classId,omitempty"`
	Device       int64  `protobuf:"varint,3,opt,name=device,proto3" json:"device,omitempty"`
	FavoriteStar int64  `protobuf:"varint,4,opt,name=favoriteStar,proto3" json:"favoriteStar,omitempty"`
	GameGroupId  int64  `protobuf:"varint,5,opt,name=gameGroupId,proto3" json:"gameGroupId,omitempty"`
	GameId       int64  `protobuf:"varint,6,opt,name=gameId,proto3" json:"gameId,omitempty"`
	GroupName    string `protobuf:"bytes,7,opt,name=groupName,proto3" json:"groupName,omitempty"`
	HotStar      int64  `protobuf:"varint,8,opt,name=hotStar,proto3" json:"hotStar,omitempty"`
	Id           int64  `protobuf:"varint,9,opt,name=id,proto3" json:"id,omitempty"`
	Img          string `protobuf:"bytes,10,opt,name=img,proto3" json:"img,omitempty"`
	IsNew        int64  `protobuf:"varint,11,opt,name=isNew,proto3" json:"isNew,omitempty"`
	Name         string `protobuf:"bytes,12,opt,name=name,proto3" json:"name,omitempty"`
	PlatId       int64  `protobuf:"varint,13,opt,name=platId,proto3" json:"platId,omitempty"`
	PlatName     string `protobuf:"bytes,14,opt,name=platName,proto3" json:"platName,omitempty"`
	Provider     string `protobuf:"bytes,15,opt,name=provider,proto3" json:"provider,omitempty"`
	SlotId       int64  `protobuf:"varint,16,opt,name=slotId,proto3" json:"slotId,omitempty"`
	Sort         int64  `protobuf:"varint,17,opt,name=sort,proto3" json:"sort,omitempty"`
	Status       int64  `protobuf:"varint,18,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *AddFrontClassifyInfoCmsDataReq) Reset() {
	*x = AddFrontClassifyInfoCmsDataReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[159]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddFrontClassifyInfoCmsDataReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddFrontClassifyInfoCmsDataReq) ProtoMessage() {}

func (x *AddFrontClassifyInfoCmsDataReq) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[159]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddFrontClassifyInfoCmsDataReq.ProtoReflect.Descriptor instead.
func (*AddFrontClassifyInfoCmsDataReq) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{159}
}

func (x *AddFrontClassifyInfoCmsDataReq) GetChose() bool {
	if x != nil {
		return x.Chose
	}
	return false
}

func (x *AddFrontClassifyInfoCmsDataReq) GetClassId() int64 {
	if x != nil {
		return x.ClassId
	}
	return 0
}

func (x *AddFrontClassifyInfoCmsDataReq) GetDevice() int64 {
	if x != nil {
		return x.Device
	}
	return 0
}

func (x *AddFrontClassifyInfoCmsDataReq) GetFavoriteStar() int64 {
	if x != nil {
		return x.FavoriteStar
	}
	return 0
}

func (x *AddFrontClassifyInfoCmsDataReq) GetGameGroupId() int64 {
	if x != nil {
		return x.GameGroupId
	}
	return 0
}

func (x *AddFrontClassifyInfoCmsDataReq) GetGameId() int64 {
	if x != nil {
		return x.GameId
	}
	return 0
}

func (x *AddFrontClassifyInfoCmsDataReq) GetGroupName() string {
	if x != nil {
		return x.GroupName
	}
	return ""
}

func (x *AddFrontClassifyInfoCmsDataReq) GetHotStar() int64 {
	if x != nil {
		return x.HotStar
	}
	return 0
}

func (x *AddFrontClassifyInfoCmsDataReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AddFrontClassifyInfoCmsDataReq) GetImg() string {
	if x != nil {
		return x.Img
	}
	return ""
}

func (x *AddFrontClassifyInfoCmsDataReq) GetIsNew() int64 {
	if x != nil {
		return x.IsNew
	}
	return 0
}

func (x *AddFrontClassifyInfoCmsDataReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AddFrontClassifyInfoCmsDataReq) GetPlatId() int64 {
	if x != nil {
		return x.PlatId
	}
	return 0
}

func (x *AddFrontClassifyInfoCmsDataReq) GetPlatName() string {
	if x != nil {
		return x.PlatName
	}
	return ""
}

func (x *AddFrontClassifyInfoCmsDataReq) GetProvider() string {
	if x != nil {
		return x.Provider
	}
	return ""
}

func (x *AddFrontClassifyInfoCmsDataReq) GetSlotId() int64 {
	if x != nil {
		return x.SlotId
	}
	return 0
}

func (x *AddFrontClassifyInfoCmsDataReq) GetSort() int64 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *AddFrontClassifyInfoCmsDataReq) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

type AddFrontClassifyInfoCmsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data bool   `protobuf:"varint,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *AddFrontClassifyInfoCmsResp) Reset() {
	*x = AddFrontClassifyInfoCmsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[160]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddFrontClassifyInfoCmsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddFrontClassifyInfoCmsResp) ProtoMessage() {}

func (x *AddFrontClassifyInfoCmsResp) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[160]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddFrontClassifyInfoCmsResp.ProtoReflect.Descriptor instead.
func (*AddFrontClassifyInfoCmsResp) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{160}
}

func (x *AddFrontClassifyInfoCmsResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *AddFrontClassifyInfoCmsResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *AddFrontClassifyInfoCmsResp) GetData() bool {
	if x != nil {
		return x.Data
	}
	return false
}

type FrontClassifyGameInfoPageReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current int64                             `protobuf:"varint,1,opt,name=current,proto3" json:"current,omitempty"`
	Size    int64                             `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	Data    *FrontClassifyGameInfoPageDataReq `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *FrontClassifyGameInfoPageReq) Reset() {
	*x = FrontClassifyGameInfoPageReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[161]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FrontClassifyGameInfoPageReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FrontClassifyGameInfoPageReq) ProtoMessage() {}

func (x *FrontClassifyGameInfoPageReq) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[161]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FrontClassifyGameInfoPageReq.ProtoReflect.Descriptor instead.
func (*FrontClassifyGameInfoPageReq) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{161}
}

func (x *FrontClassifyGameInfoPageReq) GetCurrent() int64 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *FrontClassifyGameInfoPageReq) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *FrontClassifyGameInfoPageReq) GetData() *FrontClassifyGameInfoPageDataReq {
	if x != nil {
		return x.Data
	}
	return nil
}

type FrontClassifyGameInfoPageDataReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClassId int64 `protobuf:"varint,1,opt,name=classId,proto3" json:"classId,omitempty"`
}

func (x *FrontClassifyGameInfoPageDataReq) Reset() {
	*x = FrontClassifyGameInfoPageDataReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[162]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FrontClassifyGameInfoPageDataReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FrontClassifyGameInfoPageDataReq) ProtoMessage() {}

func (x *FrontClassifyGameInfoPageDataReq) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[162]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FrontClassifyGameInfoPageDataReq.ProtoReflect.Descriptor instead.
func (*FrontClassifyGameInfoPageDataReq) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{162}
}

func (x *FrontClassifyGameInfoPageDataReq) GetClassId() int64 {
	if x != nil {
		return x.ClassId
	}
	return 0
}

type FrontClassifyGameInfoPageResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32                              `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string                             `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *FrontClassifyGameInfoPageDataResp `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *FrontClassifyGameInfoPageResp) Reset() {
	*x = FrontClassifyGameInfoPageResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[163]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FrontClassifyGameInfoPageResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FrontClassifyGameInfoPageResp) ProtoMessage() {}

func (x *FrontClassifyGameInfoPageResp) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[163]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FrontClassifyGameInfoPageResp.ProtoReflect.Descriptor instead.
func (*FrontClassifyGameInfoPageResp) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{163}
}

func (x *FrontClassifyGameInfoPageResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *FrontClassifyGameInfoPageResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *FrontClassifyGameInfoPageResp) GetData() *FrontClassifyGameInfoPageDataResp {
	if x != nil {
		return x.Data
	}
	return nil
}

type FrontClassifyGameInfoPageDataResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current string                               `protobuf:"bytes,1,opt,name=current,proto3" json:"current,omitempty"`
	Pages   string                               `protobuf:"bytes,2,opt,name=pages,proto3" json:"pages,omitempty"`
	Size    string                               `protobuf:"bytes,3,opt,name=size,proto3" json:"size,omitempty"`
	Total   string                               `protobuf:"bytes,4,opt,name=total,proto3" json:"total,omitempty"`
	List    []*FrontClassifyGameInfoPageDataItem `protobuf:"bytes,5,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *FrontClassifyGameInfoPageDataResp) Reset() {
	*x = FrontClassifyGameInfoPageDataResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[164]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FrontClassifyGameInfoPageDataResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FrontClassifyGameInfoPageDataResp) ProtoMessage() {}

func (x *FrontClassifyGameInfoPageDataResp) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[164]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FrontClassifyGameInfoPageDataResp.ProtoReflect.Descriptor instead.
func (*FrontClassifyGameInfoPageDataResp) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{164}
}

func (x *FrontClassifyGameInfoPageDataResp) GetCurrent() string {
	if x != nil {
		return x.Current
	}
	return ""
}

func (x *FrontClassifyGameInfoPageDataResp) GetPages() string {
	if x != nil {
		return x.Pages
	}
	return ""
}

func (x *FrontClassifyGameInfoPageDataResp) GetSize() string {
	if x != nil {
		return x.Size
	}
	return ""
}

func (x *FrontClassifyGameInfoPageDataResp) GetTotal() string {
	if x != nil {
		return x.Total
	}
	return ""
}

func (x *FrontClassifyGameInfoPageDataResp) GetList() []*FrontClassifyGameInfoPageDataItem {
	if x != nil {
		return x.List
	}
	return nil
}

type FrontClassifyGameInfoPageDataItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	SlotId      string `protobuf:"bytes,2,opt,name=slotId,proto3" json:"slotId,omitempty"`
	Sort        int64  `protobuf:"varint,3,opt,name=sort,proto3" json:"sort,omitempty"`
	GameId      int64  `protobuf:"varint,4,opt,name=gameId,proto3" json:"gameId,omitempty"`
	GameGroupId int64  `protobuf:"varint,5,opt,name=gameGroupId,proto3" json:"gameGroupId,omitempty"`
	PlatId      int64  `protobuf:"varint,6,opt,name=platId,proto3" json:"platId,omitempty"`
	Name        string `protobuf:"bytes,7,opt,name=name,proto3" json:"name,omitempty"`
	CreatedAt   int64  `protobuf:"varint,8,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	CreateUser  string `protobuf:"bytes,9,opt,name=createUser,proto3" json:"createUser,omitempty"`
	UpdatedAt   int64  `protobuf:"varint,10,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	UpdateUser  string `protobuf:"bytes,11,opt,name=updateUser,proto3" json:"updateUser,omitempty"`
}

func (x *FrontClassifyGameInfoPageDataItem) Reset() {
	*x = FrontClassifyGameInfoPageDataItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[165]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FrontClassifyGameInfoPageDataItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FrontClassifyGameInfoPageDataItem) ProtoMessage() {}

func (x *FrontClassifyGameInfoPageDataItem) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[165]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FrontClassifyGameInfoPageDataItem.ProtoReflect.Descriptor instead.
func (*FrontClassifyGameInfoPageDataItem) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{165}
}

func (x *FrontClassifyGameInfoPageDataItem) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *FrontClassifyGameInfoPageDataItem) GetSlotId() string {
	if x != nil {
		return x.SlotId
	}
	return ""
}

func (x *FrontClassifyGameInfoPageDataItem) GetSort() int64 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *FrontClassifyGameInfoPageDataItem) GetGameId() int64 {
	if x != nil {
		return x.GameId
	}
	return 0
}

func (x *FrontClassifyGameInfoPageDataItem) GetGameGroupId() int64 {
	if x != nil {
		return x.GameGroupId
	}
	return 0
}

func (x *FrontClassifyGameInfoPageDataItem) GetPlatId() int64 {
	if x != nil {
		return x.PlatId
	}
	return 0
}

func (x *FrontClassifyGameInfoPageDataItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FrontClassifyGameInfoPageDataItem) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *FrontClassifyGameInfoPageDataItem) GetCreateUser() string {
	if x != nil {
		return x.CreateUser
	}
	return ""
}

func (x *FrontClassifyGameInfoPageDataItem) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *FrontClassifyGameInfoPageDataItem) GetUpdateUser() string {
	if x != nil {
		return x.UpdateUser
	}
	return ""
}

// 获取赛事分页列表请求结构体
type GetMatchPageListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current   int64                    `protobuf:"varint,1,opt,name=current,proto3" json:"current,omitempty"`
	Size      int64                    `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	SortKey   string                   `protobuf:"bytes,3,opt,name=sortKey,proto3" json:"sortKey,omitempty"`
	SortField []string                 `protobuf:"bytes,4,rep,name=sortField,proto3" json:"sortField,omitempty"`
	Data      *GetMatchPageListDataReq `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"` // 请求参数
}

func (x *GetMatchPageListReq) Reset() {
	*x = GetMatchPageListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[166]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMatchPageListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMatchPageListReq) ProtoMessage() {}

func (x *GetMatchPageListReq) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[166]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMatchPageListReq.ProtoReflect.Descriptor instead.
func (*GetMatchPageListReq) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{166}
}

func (x *GetMatchPageListReq) GetCurrent() int64 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *GetMatchPageListReq) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *GetMatchPageListReq) GetSortKey() string {
	if x != nil {
		return x.SortKey
	}
	return ""
}

func (x *GetMatchPageListReq) GetSortField() []string {
	if x != nil {
		return x.SortField
	}
	return nil
}

func (x *GetMatchPageListReq) GetData() *GetMatchPageListDataReq {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetMatchPageListDataReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SportId   int64   `protobuf:"varint,1,opt,name=sportId,proto3" json:"sportId,omitempty"`            //运动ID
	SportIds  []int64 `protobuf:"varint,2,rep,packed,name=sportIds,proto3" json:"sportIds,omitempty"`   // 运动ID集合
	LeagueId  int64   `protobuf:"varint,3,opt,name=leagueId,proto3" json:"leagueId,omitempty"`          //联赛ID
	LeagueIds []int64 `protobuf:"varint,4,rep,packed,name=leagueIds,proto3" json:"leagueIds,omitempty"` // 联赛ID集合
	MatchType int64   `protobuf:"varint,5,opt,name=matchType,proto3" json:"matchType,omitempty"`        //赛事分组类型
	BeginTime int64   `protobuf:"varint,6,opt,name=beginTime,proto3" json:"beginTime,omitempty"`        //比赛开始时间戳
	EndTime   int64   `protobuf:"varint,7,opt,name=endTime,proto3" json:"endTime,omitempty"`            //比赛结束时间戳
	MatchIds  []int64 `protobuf:"varint,8,rep,packed,name=matchIds,proto3" json:"matchIds,omitempty"`   //赛事ID集合
	OddsType  int64   `protobuf:"varint,9,opt,name=oddsType,proto3" json:"oddsType,omitempty"`          // 赔率类型
}

func (x *GetMatchPageListDataReq) Reset() {
	*x = GetMatchPageListDataReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[167]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMatchPageListDataReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMatchPageListDataReq) ProtoMessage() {}

func (x *GetMatchPageListDataReq) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[167]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMatchPageListDataReq.ProtoReflect.Descriptor instead.
func (*GetMatchPageListDataReq) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{167}
}

func (x *GetMatchPageListDataReq) GetSportId() int64 {
	if x != nil {
		return x.SportId
	}
	return 0
}

func (x *GetMatchPageListDataReq) GetSportIds() []int64 {
	if x != nil {
		return x.SportIds
	}
	return nil
}

func (x *GetMatchPageListDataReq) GetLeagueId() int64 {
	if x != nil {
		return x.LeagueId
	}
	return 0
}

func (x *GetMatchPageListDataReq) GetLeagueIds() []int64 {
	if x != nil {
		return x.LeagueIds
	}
	return nil
}

func (x *GetMatchPageListDataReq) GetMatchType() int64 {
	if x != nil {
		return x.MatchType
	}
	return 0
}

func (x *GetMatchPageListDataReq) GetBeginTime() int64 {
	if x != nil {
		return x.BeginTime
	}
	return 0
}

func (x *GetMatchPageListDataReq) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *GetMatchPageListDataReq) GetMatchIds() []int64 {
	if x != nil {
		return x.MatchIds
	}
	return nil
}

func (x *GetMatchPageListDataReq) GetOddsType() int64 {
	if x != nil {
		return x.OddsType
	}
	return 0
}

// 获取赛事分页列表返回结构体
type GetMatchPageListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32                     `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string                    `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *GetMatchPageListDataResp `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetMatchPageListResp) Reset() {
	*x = GetMatchPageListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[168]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMatchPageListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMatchPageListResp) ProtoMessage() {}

func (x *GetMatchPageListResp) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[168]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMatchPageListResp.ProtoReflect.Descriptor instead.
func (*GetMatchPageListResp) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{168}
}

func (x *GetMatchPageListResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetMatchPageListResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GetMatchPageListResp) GetData() *GetMatchPageListDataResp {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetMatchPageListDataResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current string                      `protobuf:"bytes,1,opt,name=current,proto3" json:"current,omitempty"`
	Pages   string                      `protobuf:"bytes,2,opt,name=pages,proto3" json:"pages,omitempty"`
	Size    string                      `protobuf:"bytes,3,opt,name=size,proto3" json:"size,omitempty"`
	Total   string                      `protobuf:"bytes,4,opt,name=total,proto3" json:"total,omitempty"`
	List    []*GetMatchPageListDataItem `protobuf:"bytes,5,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *GetMatchPageListDataResp) Reset() {
	*x = GetMatchPageListDataResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[169]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMatchPageListDataResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMatchPageListDataResp) ProtoMessage() {}

func (x *GetMatchPageListDataResp) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[169]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMatchPageListDataResp.ProtoReflect.Descriptor instead.
func (*GetMatchPageListDataResp) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{169}
}

func (x *GetMatchPageListDataResp) GetCurrent() string {
	if x != nil {
		return x.Current
	}
	return ""
}

func (x *GetMatchPageListDataResp) GetPages() string {
	if x != nil {
		return x.Pages
	}
	return ""
}

func (x *GetMatchPageListDataResp) GetSize() string {
	if x != nil {
		return x.Size
	}
	return ""
}

func (x *GetMatchPageListDataResp) GetTotal() string {
	if x != nil {
		return x.Total
	}
	return ""
}

func (x *GetMatchPageListDataResp) GetList() []*GetMatchPageListDataItem {
	if x != nil {
		return x.List
	}
	return nil
}

type GetMatchPageListDataItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                        // 主键
	MatchId       int64  `protobuf:"varint,2,opt,name=matchId,proto3" json:"matchId,omitempty"`              //赛事ID
	MatchName     string `protobuf:"bytes,3,opt,name=matchName,proto3" json:"matchName,omitempty"`           //赛事名称
	MatchTime     int64  `protobuf:"varint,4,opt,name=matchTime,proto3" json:"matchTime,omitempty"`          //赛事时间
	MatchStatus   int64  `protobuf:"varint,5,opt,name=matchStatus,proto3" json:"matchStatus,omitempty"`      //赛事进行状态
	SportId       int64  `protobuf:"varint,6,opt,name=sportId,proto3" json:"sportId,omitempty"`              //运动ID
	MarketCount   int64  `protobuf:"varint,7,opt,name=marketCount,proto3" json:"marketCount,omitempty"`      // 单个赛事玩法总数
	Neutral       int64  `protobuf:"varint,8,opt,name=neutral,proto3" json:"neutral,omitempty"`              // 中立场标记
	Scores        string `protobuf:"bytes,9,opt,name=scores,proto3" json:"scores,omitempty"`                 //比分列表
	Odds          string `protobuf:"bytes,10,opt,name=odds,proto3" json:"odds,omitempty"`                    //赔率列表
	LeagueInfo    string `protobuf:"bytes,11,opt,name=leagueInfo,proto3" json:"leagueInfo,omitempty"`        //联赛信息
	TeamInfo      string `protobuf:"bytes,12,opt,name=teamInfo,proto3" json:"teamInfo,omitempty"`            //球队信息
	MatchClock    string `protobuf:"bytes,13,opt,name=matchClock,proto3" json:"matchClock,omitempty"`        //比赛时钟信息
	MarketTags    string `protobuf:"bytes,14,opt,name=marketTags,proto3" json:"marketTags,omitempty"`        //盘口组标签集合
	MatchFormatId int64  `protobuf:"varint,15,opt,name=matchFormatId,proto3" json:"matchFormatId,omitempty"` //晒制的场次，局数，节数
	LiveUrls      string `protobuf:"bytes,16,opt,name=liveUrls,proto3" json:"liveUrls,omitempty"`            //动画直播地址集合
	ServiceSide   int64  `protobuf:"varint,17,opt,name=serviceSide,proto3" json:"serviceSide,omitempty"`     //主/客发球
	MatchPhase    string `protobuf:"bytes,18,opt,name=matchPhase,proto3" json:"matchPhase,omitempty"`        //赛事辅助标记
	SellingStatus int64  `protobuf:"varint,19,opt,name=sellingStatus,proto3" json:"sellingStatus,omitempty"` // 销售状态 1==开售 2=暂停
	SubMatchType  int64  `protobuf:"varint,20,opt,name=subMatchType,proto3" json:"subMatchType,omitempty"`   //滚球赛事当前阶段标识
	MatchType     int64  `protobuf:"varint,21,opt,name=matchType,proto3" json:"matchType,omitempty"`         //赛事类型 1=冠军投注赛事，2正常赛事
	Season        string `protobuf:"bytes,22,opt,name=season,proto3" json:"season,omitempty"`                //冠军赛事联赛赛季 如2025
	ScoreBoard    string `protobuf:"bytes,23,opt,name=scoreBoard,proto3" json:"scoreBoard,omitempty"`        //比分扳
	IsInPlay      int64  `protobuf:"varint,24,opt,name=isInPlay,proto3" json:"isInPlay,omitempty"`           //是否可以开售滚球盘口
	CreatedAt     int64  `protobuf:"varint,25,opt,name=createdAt,proto3" json:"createdAt,omitempty"`         //创建时间
	UpdatedAt     int64  `protobuf:"varint,26,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`         //更新时间
	MatchFormat   int64  `protobuf:"varint,27,opt,name=matchFormat,proto3" json:"matchFormat,omitempty"`     //晒制
}

func (x *GetMatchPageListDataItem) Reset() {
	*x = GetMatchPageListDataItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[170]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMatchPageListDataItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMatchPageListDataItem) ProtoMessage() {}

func (x *GetMatchPageListDataItem) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[170]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMatchPageListDataItem.ProtoReflect.Descriptor instead.
func (*GetMatchPageListDataItem) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{170}
}

func (x *GetMatchPageListDataItem) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetMatchPageListDataItem) GetMatchId() int64 {
	if x != nil {
		return x.MatchId
	}
	return 0
}

func (x *GetMatchPageListDataItem) GetMatchName() string {
	if x != nil {
		return x.MatchName
	}
	return ""
}

func (x *GetMatchPageListDataItem) GetMatchTime() int64 {
	if x != nil {
		return x.MatchTime
	}
	return 0
}

func (x *GetMatchPageListDataItem) GetMatchStatus() int64 {
	if x != nil {
		return x.MatchStatus
	}
	return 0
}

func (x *GetMatchPageListDataItem) GetSportId() int64 {
	if x != nil {
		return x.SportId
	}
	return 0
}

func (x *GetMatchPageListDataItem) GetMarketCount() int64 {
	if x != nil {
		return x.MarketCount
	}
	return 0
}

func (x *GetMatchPageListDataItem) GetNeutral() int64 {
	if x != nil {
		return x.Neutral
	}
	return 0
}

func (x *GetMatchPageListDataItem) GetScores() string {
	if x != nil {
		return x.Scores
	}
	return ""
}

func (x *GetMatchPageListDataItem) GetOdds() string {
	if x != nil {
		return x.Odds
	}
	return ""
}

func (x *GetMatchPageListDataItem) GetLeagueInfo() string {
	if x != nil {
		return x.LeagueInfo
	}
	return ""
}

func (x *GetMatchPageListDataItem) GetTeamInfo() string {
	if x != nil {
		return x.TeamInfo
	}
	return ""
}

func (x *GetMatchPageListDataItem) GetMatchClock() string {
	if x != nil {
		return x.MatchClock
	}
	return ""
}

func (x *GetMatchPageListDataItem) GetMarketTags() string {
	if x != nil {
		return x.MarketTags
	}
	return ""
}

func (x *GetMatchPageListDataItem) GetMatchFormatId() int64 {
	if x != nil {
		return x.MatchFormatId
	}
	return 0
}

func (x *GetMatchPageListDataItem) GetLiveUrls() string {
	if x != nil {
		return x.LiveUrls
	}
	return ""
}

func (x *GetMatchPageListDataItem) GetServiceSide() int64 {
	if x != nil {
		return x.ServiceSide
	}
	return 0
}

func (x *GetMatchPageListDataItem) GetMatchPhase() string {
	if x != nil {
		return x.MatchPhase
	}
	return ""
}

func (x *GetMatchPageListDataItem) GetSellingStatus() int64 {
	if x != nil {
		return x.SellingStatus
	}
	return 0
}

func (x *GetMatchPageListDataItem) GetSubMatchType() int64 {
	if x != nil {
		return x.SubMatchType
	}
	return 0
}

func (x *GetMatchPageListDataItem) GetMatchType() int64 {
	if x != nil {
		return x.MatchType
	}
	return 0
}

func (x *GetMatchPageListDataItem) GetSeason() string {
	if x != nil {
		return x.Season
	}
	return ""
}

func (x *GetMatchPageListDataItem) GetScoreBoard() string {
	if x != nil {
		return x.ScoreBoard
	}
	return ""
}

func (x *GetMatchPageListDataItem) GetIsInPlay() int64 {
	if x != nil {
		return x.IsInPlay
	}
	return 0
}

func (x *GetMatchPageListDataItem) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *GetMatchPageListDataItem) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *GetMatchPageListDataItem) GetMatchFormat() int64 {
	if x != nil {
		return x.MatchFormat
	}
	return 0
}

// 获取赛事推荐列表请求参数
type GetRecommendMatchListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Size     int64 `protobuf:"varint,1,opt,name=size,proto3" json:"size,omitempty"`         // 推荐的赛事数量
	Random   bool  `protobuf:"varint,2,opt,name=random,proto3" json:"random,omitempty"`     // 是否随机
	SortType int64 `protobuf:"varint,3,opt,name=sortType,proto3" json:"sortType,omitempty"` // 排序类型 默认按推荐
	OddsType int64 `protobuf:"varint,4,opt,name=oddsType,proto3" json:"oddsType,omitempty"` // 赔率类型
}

func (x *GetRecommendMatchListReq) Reset() {
	*x = GetRecommendMatchListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[171]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRecommendMatchListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRecommendMatchListReq) ProtoMessage() {}

func (x *GetRecommendMatchListReq) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[171]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRecommendMatchListReq.ProtoReflect.Descriptor instead.
func (*GetRecommendMatchListReq) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{171}
}

func (x *GetRecommendMatchListReq) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *GetRecommendMatchListReq) GetRandom() bool {
	if x != nil {
		return x.Random
	}
	return false
}

func (x *GetRecommendMatchListReq) GetSortType() int64 {
	if x != nil {
		return x.SortType
	}
	return 0
}

func (x *GetRecommendMatchListReq) GetOddsType() int64 {
	if x != nil {
		return x.OddsType
	}
	return 0
}

// 获取赛事推荐列表返回参数
type GetRecommendMatchListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32                            `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string                           `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data []*GetRecommendMatchListDataResp `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *GetRecommendMatchListResp) Reset() {
	*x = GetRecommendMatchListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[172]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRecommendMatchListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRecommendMatchListResp) ProtoMessage() {}

func (x *GetRecommendMatchListResp) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[172]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRecommendMatchListResp.ProtoReflect.Descriptor instead.
func (*GetRecommendMatchListResp) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{172}
}

func (x *GetRecommendMatchListResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetRecommendMatchListResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GetRecommendMatchListResp) GetData() []*GetRecommendMatchListDataResp {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetRecommendMatchListDataResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`            // 赛事 ID
	Nm       string `protobuf:"bytes,2,opt,name=nm,proto3" json:"nm,omitempty"`             // 冠军赛赛事名称，用于展示名称
	Bt       int64  `protobuf:"varint,3,opt,name=bt,proto3" json:"bt,omitempty"`            //赛事开赛时间
	Ms       int64  `protobuf:"varint,4,opt,name=ms,proto3" json:"ms,omitempty"`            // 赛事进行状态，返回赛事进行状态code，具体请对照枚举 , see enum: match_status
	Fid      int64  `protobuf:"varint,5,opt,name=fid,proto3" json:"fid,omitempty"`          // 赛制的场次、局数、节数
	Fmt      int64  `protobuf:"varint,6,opt,name=fmt,proto3" json:"fmt,omitempty"`          // 赛制 , see enum: match_format
	Ss       int64  `protobuf:"varint,7,opt,name=ss,proto3" json:"ss,omitempty"`            //  销售状态，1 开售，2 暂停，其他状态都不展示 , see enum: match_sales_status_enum
	Ne       int64  `protobuf:"varint,8,opt,name=ne,proto3" json:"ne,omitempty"`            // 中立场标记，0 非中立场 ，1 中立场
	LiveUrls string `protobuf:"bytes,9,opt,name=liveUrls,proto3" json:"liveUrls,omitempty"` // 动画直接地址集合
	Sid      int64  `protobuf:"varint,10,opt,name=sid,proto3" json:"sid,omitempty"`         // 运动ID , see enum: sports
	Ssi      int64  `protobuf:"varint,11,opt,name=ssi,proto3" json:"ssi,omitempty"`         //  主/客发球，1主队发球，2客队发球 , see enum: serving_side
	Mp       string `protobuf:"bytes,12,opt,name=mp,proto3" json:"mp,omitempty"`            // 赛事辅助标记，如附加赛、季前赛等，具体请看枚举 , see enum: phase
	Smt      int64  `protobuf:"varint,13,opt,name=smt,proto3" json:"smt,omitempty"`         // 滚球赛事当前阶段标识：常规时间，加时赛，点球大战等 , see enum: sub_match_type
	Ty       int64  `protobuf:"varint,14,opt,name=ty,proto3" json:"ty,omitempty"`           // 赛事类型 1 冠军投注赛事，2 正常赛事 , see enum: match_type
	Ye       string `protobuf:"bytes,15,opt,name=ye,proto3" json:"ye,omitempty"`            //  冠军赛事联赛赛季，返回赛季字符串，如：2019年
	Sb       string `protobuf:"bytes,16,opt,name=sb,proto3" json:"sb,omitempty"`            // 比分板
	Pl       int64  `protobuf:"varint,17,opt,name=pl,proto3" json:"pl,omitempty"`           //  是否可以开售滚球盘口 , see enum: in_play_enum
	Nsg      string `protobuf:"bytes,18,opt,name=nsg,proto3" json:"nsg,omitempty"`          // 比分列表，提供各个赛事阶段的比分
	Mg       string `protobuf:"bytes,19,opt,name=mg,proto3" json:"mg,omitempty"`            // 赔率列表
	Tms      int64  `protobuf:"varint,20,opt,name=tms,proto3" json:"tms,omitempty"`         // 单个赛事玩法总数
	Tps      string `protobuf:"bytes,21,opt,name=tps,proto3" json:"tps,omitempty"`          //  盘口组标签集合 , see enum: market_tag
	Lg       string `protobuf:"bytes,22,opt,name=lg,proto3" json:"lg,omitempty"`            // 联赛信息
	Ts       string `protobuf:"bytes,23,opt,name=ts,proto3" json:"ts,omitempty"`            // 球队信息，第一个是主队，第二个是客队
	Mc       string `protobuf:"bytes,24,opt,name=mc,proto3" json:"mc,omitempty"`            //  比赛时钟信息，滚球走表信息
}

func (x *GetRecommendMatchListDataResp) Reset() {
	*x = GetRecommendMatchListDataResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[173]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRecommendMatchListDataResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRecommendMatchListDataResp) ProtoMessage() {}

func (x *GetRecommendMatchListDataResp) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[173]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRecommendMatchListDataResp.ProtoReflect.Descriptor instead.
func (*GetRecommendMatchListDataResp) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{173}
}

func (x *GetRecommendMatchListDataResp) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetRecommendMatchListDataResp) GetNm() string {
	if x != nil {
		return x.Nm
	}
	return ""
}

func (x *GetRecommendMatchListDataResp) GetBt() int64 {
	if x != nil {
		return x.Bt
	}
	return 0
}

func (x *GetRecommendMatchListDataResp) GetMs() int64 {
	if x != nil {
		return x.Ms
	}
	return 0
}

func (x *GetRecommendMatchListDataResp) GetFid() int64 {
	if x != nil {
		return x.Fid
	}
	return 0
}

func (x *GetRecommendMatchListDataResp) GetFmt() int64 {
	if x != nil {
		return x.Fmt
	}
	return 0
}

func (x *GetRecommendMatchListDataResp) GetSs() int64 {
	if x != nil {
		return x.Ss
	}
	return 0
}

func (x *GetRecommendMatchListDataResp) GetNe() int64 {
	if x != nil {
		return x.Ne
	}
	return 0
}

func (x *GetRecommendMatchListDataResp) GetLiveUrls() string {
	if x != nil {
		return x.LiveUrls
	}
	return ""
}

func (x *GetRecommendMatchListDataResp) GetSid() int64 {
	if x != nil {
		return x.Sid
	}
	return 0
}

func (x *GetRecommendMatchListDataResp) GetSsi() int64 {
	if x != nil {
		return x.Ssi
	}
	return 0
}

func (x *GetRecommendMatchListDataResp) GetMp() string {
	if x != nil {
		return x.Mp
	}
	return ""
}

func (x *GetRecommendMatchListDataResp) GetSmt() int64 {
	if x != nil {
		return x.Smt
	}
	return 0
}

func (x *GetRecommendMatchListDataResp) GetTy() int64 {
	if x != nil {
		return x.Ty
	}
	return 0
}

func (x *GetRecommendMatchListDataResp) GetYe() string {
	if x != nil {
		return x.Ye
	}
	return ""
}

func (x *GetRecommendMatchListDataResp) GetSb() string {
	if x != nil {
		return x.Sb
	}
	return ""
}

func (x *GetRecommendMatchListDataResp) GetPl() int64 {
	if x != nil {
		return x.Pl
	}
	return 0
}

func (x *GetRecommendMatchListDataResp) GetNsg() string {
	if x != nil {
		return x.Nsg
	}
	return ""
}

func (x *GetRecommendMatchListDataResp) GetMg() string {
	if x != nil {
		return x.Mg
	}
	return ""
}

func (x *GetRecommendMatchListDataResp) GetTms() int64 {
	if x != nil {
		return x.Tms
	}
	return 0
}

func (x *GetRecommendMatchListDataResp) GetTps() string {
	if x != nil {
		return x.Tps
	}
	return ""
}

func (x *GetRecommendMatchListDataResp) GetLg() string {
	if x != nil {
		return x.Lg
	}
	return ""
}

func (x *GetRecommendMatchListDataResp) GetTs() string {
	if x != nil {
		return x.Ts
	}
	return ""
}

func (x *GetRecommendMatchListDataResp) GetMc() string {
	if x != nil {
		return x.Mc
	}
	return ""
}

// 玩法推荐请求参数
type GetRecomendPlayMatchListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MatchIds      []int64 `protobuf:"varint,1,rep,packed,name=matchIds,proto3" json:"matchIds,omitempty"`    //赛事ID集合
	OnlyOneMarket bool    `protobuf:"varint,2,opt,name=onlyOneMarket,proto3" json:"onlyOneMarket,omitempty"` // 是否每个赛事只返回一个盘口
	OddsType      int64   `protobuf:"varint,3,opt,name=oddsType,proto3" json:"oddsType,omitempty"`           //赔率类型 , see enum: odds_format_type_enum
}

func (x *GetRecomendPlayMatchListReq) Reset() {
	*x = GetRecomendPlayMatchListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[174]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRecomendPlayMatchListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRecomendPlayMatchListReq) ProtoMessage() {}

func (x *GetRecomendPlayMatchListReq) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[174]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRecomendPlayMatchListReq.ProtoReflect.Descriptor instead.
func (*GetRecomendPlayMatchListReq) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{174}
}

func (x *GetRecomendPlayMatchListReq) GetMatchIds() []int64 {
	if x != nil {
		return x.MatchIds
	}
	return nil
}

func (x *GetRecomendPlayMatchListReq) GetOnlyOneMarket() bool {
	if x != nil {
		return x.OnlyOneMarket
	}
	return false
}

func (x *GetRecomendPlayMatchListReq) GetOddsType() int64 {
	if x != nil {
		return x.OddsType
	}
	return 0
}

// 玩法推荐返回参数
type GetRecomendPlayMatchListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32                               `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string                              `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data []*GetRecomendPlayMatchListDataResp `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *GetRecomendPlayMatchListResp) Reset() {
	*x = GetRecomendPlayMatchListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[175]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRecomendPlayMatchListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRecomendPlayMatchListResp) ProtoMessage() {}

func (x *GetRecomendPlayMatchListResp) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[175]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRecomendPlayMatchListResp.ProtoReflect.Descriptor instead.
func (*GetRecomendPlayMatchListResp) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{175}
}

func (x *GetRecomendPlayMatchListResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetRecomendPlayMatchListResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GetRecomendPlayMatchListResp) GetData() []*GetRecomendPlayMatchListDataResp {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetRecomendPlayMatchListDataResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mid int64  `protobuf:"varint,1,opt,name=mid,proto3" json:"mid,omitempty"` // 赛事ID
	Nm  string `protobuf:"bytes,2,opt,name=nm,proto3" json:"nm,omitempty"`    //赛事名称
	Bt  int64  `protobuf:"varint,3,opt,name=bt,proto3" json:"bt,omitempty"`   //赛事开赛实际
	Ms  int64  `protobuf:"varint,4,opt,name=ms,proto3" json:"ms,omitempty"`   // 赛事进行状态
	Ops string `protobuf:"bytes,5,opt,name=ops,proto3" json:"ops,omitempty"`  // 选项集合
	Ts  string `protobuf:"bytes,6,opt,name=ts,proto3" json:"ts,omitempty"`    // 球队信息，第一个是主队，第二个是客队
	Lg  string `protobuf:"bytes,7,opt,name=lg,proto3" json:"lg,omitempty"`    // 联赛信息
}

func (x *GetRecomendPlayMatchListDataResp) Reset() {
	*x = GetRecomendPlayMatchListDataResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[176]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRecomendPlayMatchListDataResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRecomendPlayMatchListDataResp) ProtoMessage() {}

func (x *GetRecomendPlayMatchListDataResp) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[176]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRecomendPlayMatchListDataResp.ProtoReflect.Descriptor instead.
func (*GetRecomendPlayMatchListDataResp) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{176}
}

func (x *GetRecomendPlayMatchListDataResp) GetMid() int64 {
	if x != nil {
		return x.Mid
	}
	return 0
}

func (x *GetRecomendPlayMatchListDataResp) GetNm() string {
	if x != nil {
		return x.Nm
	}
	return ""
}

func (x *GetRecomendPlayMatchListDataResp) GetBt() int64 {
	if x != nil {
		return x.Bt
	}
	return 0
}

func (x *GetRecomendPlayMatchListDataResp) GetMs() int64 {
	if x != nil {
		return x.Ms
	}
	return 0
}

func (x *GetRecomendPlayMatchListDataResp) GetOps() string {
	if x != nil {
		return x.Ops
	}
	return ""
}

func (x *GetRecomendPlayMatchListDataResp) GetTs() string {
	if x != nil {
		return x.Ts
	}
	return ""
}

func (x *GetRecomendPlayMatchListDataResp) GetLg() string {
	if x != nil {
		return x.Lg
	}
	return ""
}

type GetFutureMatchCountReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SportId int64 `protobuf:"varint,1,opt,name=sportId,proto3" json:"sportId,omitempty"` // 运动ID
	Days    int64 `protobuf:"varint,2,opt,name=days,proto3" json:"days,omitempty"`       // 天数, 默认七天 (不包含今天)
}

func (x *GetFutureMatchCountReq) Reset() {
	*x = GetFutureMatchCountReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[177]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFutureMatchCountReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFutureMatchCountReq) ProtoMessage() {}

func (x *GetFutureMatchCountReq) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[177]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFutureMatchCountReq.ProtoReflect.Descriptor instead.
func (*GetFutureMatchCountReq) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{177}
}

func (x *GetFutureMatchCountReq) GetSportId() int64 {
	if x != nil {
		return x.SportId
	}
	return 0
}

func (x *GetFutureMatchCountReq) GetDays() int64 {
	if x != nil {
		return x.Days
	}
	return 0
}

type GetFutureMatchCountResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32                        `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string                       `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *GetFutureMatchCountDataResp `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetFutureMatchCountResp) Reset() {
	*x = GetFutureMatchCountResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[178]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFutureMatchCountResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFutureMatchCountResp) ProtoMessage() {}

func (x *GetFutureMatchCountResp) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[178]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFutureMatchCountResp.ProtoReflect.Descriptor instead.
func (*GetFutureMatchCountResp) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{178}
}

func (x *GetFutureMatchCountResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetFutureMatchCountResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GetFutureMatchCountResp) GetData() *GetFutureMatchCountDataResp {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetFutureMatchCountDataResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	D  int64  `protobuf:"varint,1,opt,name=d,proto3" json:"d,omitempty"`  //  天数
	Dl string `protobuf:"bytes,2,opt,name=dl,proto3" json:"dl,omitempty"` // 未来 天的赛事统计数据
	O  string `protobuf:"bytes,3,opt,name=o,proto3" json:"o,omitempty"`   //超过 天后的赛事
}

func (x *GetFutureMatchCountDataResp) Reset() {
	*x = GetFutureMatchCountDataResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[179]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFutureMatchCountDataResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFutureMatchCountDataResp) ProtoMessage() {}

func (x *GetFutureMatchCountDataResp) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[179]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFutureMatchCountDataResp.ProtoReflect.Descriptor instead.
func (*GetFutureMatchCountDataResp) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{179}
}

func (x *GetFutureMatchCountDataResp) GetD() int64 {
	if x != nil {
		return x.D
	}
	return 0
}

func (x *GetFutureMatchCountDataResp) GetDl() string {
	if x != nil {
		return x.Dl
	}
	return ""
}

func (x *GetFutureMatchCountDataResp) GetO() string {
	if x != nil {
		return x.O
	}
	return ""
}

type GetMatchMarketGroupReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MatchId  int64  `protobuf:"varint,1,opt,name=matchId,proto3" json:"matchId,omitempty"`   //赛事ID
	Tag      string `protobuf:"bytes,2,opt,name=tag,proto3" json:"tag,omitempty"`            // 盘口组标签
	OddsType int64  `protobuf:"varint,3,opt,name=oddsType,proto3" json:"oddsType,omitempty"` // 赔率类型
}

func (x *GetMatchMarketGroupReq) Reset() {
	*x = GetMatchMarketGroupReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[180]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMatchMarketGroupReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMatchMarketGroupReq) ProtoMessage() {}

func (x *GetMatchMarketGroupReq) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[180]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMatchMarketGroupReq.ProtoReflect.Descriptor instead.
func (*GetMatchMarketGroupReq) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{180}
}

func (x *GetMatchMarketGroupReq) GetMatchId() int64 {
	if x != nil {
		return x.MatchId
	}
	return 0
}

func (x *GetMatchMarketGroupReq) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

func (x *GetMatchMarketGroupReq) GetOddsType() int64 {
	if x != nil {
		return x.OddsType
	}
	return 0
}

type GetMatchMarketGroupResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32                          `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string                         `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data []*GetMatchMarketGroupDataResp `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *GetMatchMarketGroupResp) Reset() {
	*x = GetMatchMarketGroupResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[181]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMatchMarketGroupResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMatchMarketGroupResp) ProtoMessage() {}

func (x *GetMatchMarketGroupResp) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[181]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMatchMarketGroupResp.ProtoReflect.Descriptor instead.
func (*GetMatchMarketGroupResp) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{181}
}

func (x *GetMatchMarketGroupResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetMatchMarketGroupResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GetMatchMarketGroupResp) GetData() []*GetMatchMarketGroupDataResp {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetMatchMarketGroupDataResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mid int64  `protobuf:"varint,1,opt,name=mid,proto3" json:"mid,omitempty"` //赛事ID
	Mty int64  `protobuf:"varint,2,opt,name=mty,proto3" json:"mty,omitempty"` // 玩法类型，如 亚盘、大小球等 , see enum: market_type
	Pe  int64  `protobuf:"varint,3,opt,name=pe,proto3" json:"pe,omitempty"`   // 玩法阶段，如足球上半场、全场等，和玩法类型组合成一个玩法 , see enum: period
	Mks string `protobuf:"bytes,4,opt,name=mks,proto3" json:"mks,omitempty"`  // 玩法赔率集合
	Tps string `protobuf:"bytes,5,opt,name=tps,proto3" json:"tps,omitempty"`  //  玩法展示分类数组， 如：热门、角球、波胆等，返回英文字母简称 , see enum: market_tag
	Nm  string `protobuf:"bytes,6,opt,name=nm,proto3" json:"nm,omitempty"`    //  玩法名称
}

func (x *GetMatchMarketGroupDataResp) Reset() {
	*x = GetMatchMarketGroupDataResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[182]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMatchMarketGroupDataResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMatchMarketGroupDataResp) ProtoMessage() {}

func (x *GetMatchMarketGroupDataResp) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[182]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMatchMarketGroupDataResp.ProtoReflect.Descriptor instead.
func (*GetMatchMarketGroupDataResp) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{182}
}

func (x *GetMatchMarketGroupDataResp) GetMid() int64 {
	if x != nil {
		return x.Mid
	}
	return 0
}

func (x *GetMatchMarketGroupDataResp) GetMty() int64 {
	if x != nil {
		return x.Mty
	}
	return 0
}

func (x *GetMatchMarketGroupDataResp) GetPe() int64 {
	if x != nil {
		return x.Pe
	}
	return 0
}

func (x *GetMatchMarketGroupDataResp) GetMks() string {
	if x != nil {
		return x.Mks
	}
	return ""
}

func (x *GetMatchMarketGroupDataResp) GetTps() string {
	if x != nil {
		return x.Tps
	}
	return ""
}

func (x *GetMatchMarketGroupDataResp) GetNm() string {
	if x != nil {
		return x.Nm
	}
	return ""
}

type GetMatchStatisticalReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LeagueId          int64                            `protobuf:"varint,1,opt,name=leagueId,proto3" json:"leagueId,omitempty"`                   //  联赛ID, 如果该参数不为null, 忽略参数allLeague, 只返回该联赛的统计, 只影响响应结果中的hls字段
	AllLeague         bool                             `protobuf:"varint,2,opt,name=allLeague,proto3" json:"allLeague,omitempty"`                 // 是否返回所有联赛统计，为false则只返回顶级联赛统计，默认false, 只影响响应结果中的hls字段
	TypeForLeagueStat int64                            `protobuf:"varint,3,opt,name=typeForLeagueStat,proto3" json:"typeForLeagueStat,omitempty"` //赛事分组类型，只影响响应结果中的hls字段 , see enum: match_play_type
	Markets           []*GetMatchStatisticalMarketsReq `protobuf:"bytes,4,rep,name=markets,proto3" json:"markets,omitempty"`                      // 组合(盘口+阶段)集合
}

func (x *GetMatchStatisticalReq) Reset() {
	*x = GetMatchStatisticalReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[183]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMatchStatisticalReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMatchStatisticalReq) ProtoMessage() {}

func (x *GetMatchStatisticalReq) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[183]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMatchStatisticalReq.ProtoReflect.Descriptor instead.
func (*GetMatchStatisticalReq) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{183}
}

func (x *GetMatchStatisticalReq) GetLeagueId() int64 {
	if x != nil {
		return x.LeagueId
	}
	return 0
}

func (x *GetMatchStatisticalReq) GetAllLeague() bool {
	if x != nil {
		return x.AllLeague
	}
	return false
}

func (x *GetMatchStatisticalReq) GetTypeForLeagueStat() int64 {
	if x != nil {
		return x.TypeForLeagueStat
	}
	return 0
}

func (x *GetMatchStatisticalReq) GetMarkets() []*GetMatchStatisticalMarketsReq {
	if x != nil {
		return x.Markets
	}
	return nil
}

type GetMatchStatisticalMarketsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      string                            `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Markets []*GetMatchStatisticalMarkets2Req `protobuf:"bytes,2,rep,name=markets,proto3" json:"markets,omitempty"` // 组合(盘口+阶段)集合
}

func (x *GetMatchStatisticalMarketsReq) Reset() {
	*x = GetMatchStatisticalMarketsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[184]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMatchStatisticalMarketsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMatchStatisticalMarketsReq) ProtoMessage() {}

func (x *GetMatchStatisticalMarketsReq) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[184]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMatchStatisticalMarketsReq.ProtoReflect.Descriptor instead.
func (*GetMatchStatisticalMarketsReq) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{184}
}

func (x *GetMatchStatisticalMarketsReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetMatchStatisticalMarketsReq) GetMarkets() []*GetMatchStatisticalMarkets2Req {
	if x != nil {
		return x.Markets
	}
	return nil
}

type GetMatchStatisticalMarkets2Req struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MarketType int64 `protobuf:"varint,1,opt,name=marketType,proto3" json:"marketType,omitempty"` //盘口类型 , see enum: market_type
	Period     int64 `protobuf:"varint,2,opt,name=period,proto3" json:"period,omitempty"`         // 阶段 , see enum: period
}

func (x *GetMatchStatisticalMarkets2Req) Reset() {
	*x = GetMatchStatisticalMarkets2Req{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[185]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMatchStatisticalMarkets2Req) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMatchStatisticalMarkets2Req) ProtoMessage() {}

func (x *GetMatchStatisticalMarkets2Req) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[185]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMatchStatisticalMarkets2Req.ProtoReflect.Descriptor instead.
func (*GetMatchStatisticalMarkets2Req) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{185}
}

func (x *GetMatchStatisticalMarkets2Req) GetMarketType() int64 {
	if x != nil {
		return x.MarketType
	}
	return 0
}

func (x *GetMatchStatisticalMarkets2Req) GetPeriod() int64 {
	if x != nil {
		return x.Period
	}
	return 0
}

type GetMatchStatisticalResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32                        `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string                       `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *GetMatchStatisticalDataResp `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetMatchStatisticalResp) Reset() {
	*x = GetMatchStatisticalResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[186]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMatchStatisticalResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMatchStatisticalResp) ProtoMessage() {}

func (x *GetMatchStatisticalResp) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[186]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMatchStatisticalResp.ProtoReflect.Descriptor instead.
func (*GetMatchStatisticalResp) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{186}
}

func (x *GetMatchStatisticalResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetMatchStatisticalResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GetMatchStatisticalResp) GetData() *GetMatchStatisticalDataResp {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetMatchStatisticalDataResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tc  int64  `protobuf:"varint,1,opt,name=tc,proto3" json:"tc,omitempty"`  // 赛事个数
	Sl  string `protobuf:"bytes,2,opt,name=sl,proto3" json:"sl,omitempty"`   //  所有赛事对应的不同类型的场次集合
	Ht  int64  `protobuf:"varint,3,opt,name=ht,proto3" json:"ht,omitempty"`  // 热门总数，包括竞彩赛事和热门联赛赛事
	Hls string `protobuf:"bytes,4,opt,name=hls,proto3" json:"hls,omitempty"` //  热门联赛下的赛事个数统计
	Mts string `protobuf:"bytes,5,opt,name=mts,proto3" json:"mts,omitempty"` // 盘口组合（盘口类型+阶段）下赛事个数统计
}

func (x *GetMatchStatisticalDataResp) Reset() {
	*x = GetMatchStatisticalDataResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[187]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMatchStatisticalDataResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMatchStatisticalDataResp) ProtoMessage() {}

func (x *GetMatchStatisticalDataResp) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[187]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMatchStatisticalDataResp.ProtoReflect.Descriptor instead.
func (*GetMatchStatisticalDataResp) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{187}
}

func (x *GetMatchStatisticalDataResp) GetTc() int64 {
	if x != nil {
		return x.Tc
	}
	return 0
}

func (x *GetMatchStatisticalDataResp) GetSl() string {
	if x != nil {
		return x.Sl
	}
	return ""
}

func (x *GetMatchStatisticalDataResp) GetHt() int64 {
	if x != nil {
		return x.Ht
	}
	return 0
}

func (x *GetMatchStatisticalDataResp) GetHls() string {
	if x != nil {
		return x.Hls
	}
	return ""
}

func (x *GetMatchStatisticalDataResp) GetMts() string {
	if x != nil {
		return x.Mts
	}
	return ""
}

type GetMatchDetailReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MatchId  int64 `protobuf:"varint,1,opt,name=matchId,proto3" json:"matchId,omitempty"`   // 赛事ID
	OddsType int64 `protobuf:"varint,2,opt,name=oddsType,proto3" json:"oddsType,omitempty"` // 赔率类型 , see enum: odds_format_type_enum
}

func (x *GetMatchDetailReq) Reset() {
	*x = GetMatchDetailReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[188]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMatchDetailReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMatchDetailReq) ProtoMessage() {}

func (x *GetMatchDetailReq) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[188]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMatchDetailReq.ProtoReflect.Descriptor instead.
func (*GetMatchDetailReq) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{188}
}

func (x *GetMatchDetailReq) GetMatchId() int64 {
	if x != nil {
		return x.MatchId
	}
	return 0
}

func (x *GetMatchDetailReq) GetOddsType() int64 {
	if x != nil {
		return x.OddsType
	}
	return 0
}

type GetMatchDetailResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32                   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string                  `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *GetMatchDetailDataResp `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetMatchDetailResp) Reset() {
	*x = GetMatchDetailResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[189]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMatchDetailResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMatchDetailResp) ProtoMessage() {}

func (x *GetMatchDetailResp) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[189]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMatchDetailResp.ProtoReflect.Descriptor instead.
func (*GetMatchDetailResp) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{189}
}

func (x *GetMatchDetailResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetMatchDetailResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GetMatchDetailResp) GetData() *GetMatchDetailDataResp {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetMatchDetailDataResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nsg      string `protobuf:"bytes,1,opt,name=nsg,proto3" json:"nsg,omitempty"`            // 比分列表，提供各个赛事阶段的比分
	Mg       string `protobuf:"bytes,2,opt,name=mg,proto3" json:"mg,omitempty"`              //  赔率列表
	Tms      int64  `protobuf:"varint,3,opt,name=tms,proto3" json:"tms,omitempty"`           // 单个赛事玩法总数
	Tps      string `protobuf:"bytes,4,opt,name=tps,proto3" json:"tps,omitempty"`            // 盘口组标签集合 , see enum: market_tag
	Lg       string `protobuf:"bytes,5,opt,name=lg,proto3" json:"lg,omitempty"`              //联赛信息
	Ts       string `protobuf:"bytes,6,opt,name=ts,proto3" json:"ts,omitempty"`              // 球队信息
	Mc       string `protobuf:"bytes,7,opt,name=mc,proto3" json:"mc,omitempty"`              // 比赛时钟信息
	Id       int64  `protobuf:"varint,8,opt,name=id,proto3" json:"id,omitempty"`             // 赛事Id
	Bt       int64  `protobuf:"varint,9,opt,name=bt,proto3" json:"bt,omitempty"`             // 赛事开赛时间
	Ms       int64  `protobuf:"varint,10,opt,name=ms,proto3" json:"ms,omitempty"`            // 赛事进行状态
	Fid      int64  `protobuf:"varint,11,opt,name=fid,proto3" json:"fid,omitempty"`          // 赛制的场次、局数、节数
	Fmt      int64  `protobuf:"varint,12,opt,name=fmt,proto3" json:"fmt,omitempty"`          //赛制 , see enum: match_format
	Ss       int64  `protobuf:"varint,13,opt,name=ss,proto3" json:"ss,omitempty"`            // 销售状态，1 开售，2 暂停，其他状态都不展示 , see enum: match_sales_status_enum
	Ne       int64  `protobuf:"varint,14,opt,name=ne,proto3" json:"ne,omitempty"`            // 中立场标记
	LiveUrls string `protobuf:"bytes,15,opt,name=liveUrls,proto3" json:"liveUrls,omitempty"` // 动画直接地址集合
	Sid      int64  `protobuf:"varint,16,opt,name=sid,proto3" json:"sid,omitempty"`          // 运动ID
	Ssi      int64  `protobuf:"varint,17,opt,name=ssi,proto3" json:"ssi,omitempty"`          // 主/客发球
	Mp       string `protobuf:"bytes,18,opt,name=mp,proto3" json:"mp,omitempty"`             // 赛事辅助标记
	Smt      int64  `protobuf:"varint,19,opt,name=smt,proto3" json:"smt,omitempty"`          // 滚球赛事当前阶段标识
	Ty       int64  `protobuf:"varint,20,opt,name=ty,proto3" json:"ty,omitempty"`            // 赛事类型
	Ye       string `protobuf:"bytes,21,opt,name=ye,proto3" json:"ye,omitempty"`             //  冠军赛事联赛赛季，返回赛季字符串，如：2019年
	Nm       string `protobuf:"bytes,22,opt,name=nm,proto3" json:"nm,omitempty"`             // 冠军赛赛事名称，用于展示名称
	Sb       string `protobuf:"bytes,23,opt,name=sb,proto3" json:"sb,omitempty"`             // 比分扳
	Pl       int64  `protobuf:"varint,24,opt,name=pl,proto3" json:"pl,omitempty"`            // 是否可以开售滚球盘口
}

func (x *GetMatchDetailDataResp) Reset() {
	*x = GetMatchDetailDataResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[190]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMatchDetailDataResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMatchDetailDataResp) ProtoMessage() {}

func (x *GetMatchDetailDataResp) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[190]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMatchDetailDataResp.ProtoReflect.Descriptor instead.
func (*GetMatchDetailDataResp) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{190}
}

func (x *GetMatchDetailDataResp) GetNsg() string {
	if x != nil {
		return x.Nsg
	}
	return ""
}

func (x *GetMatchDetailDataResp) GetMg() string {
	if x != nil {
		return x.Mg
	}
	return ""
}

func (x *GetMatchDetailDataResp) GetTms() int64 {
	if x != nil {
		return x.Tms
	}
	return 0
}

func (x *GetMatchDetailDataResp) GetTps() string {
	if x != nil {
		return x.Tps
	}
	return ""
}

func (x *GetMatchDetailDataResp) GetLg() string {
	if x != nil {
		return x.Lg
	}
	return ""
}

func (x *GetMatchDetailDataResp) GetTs() string {
	if x != nil {
		return x.Ts
	}
	return ""
}

func (x *GetMatchDetailDataResp) GetMc() string {
	if x != nil {
		return x.Mc
	}
	return ""
}

func (x *GetMatchDetailDataResp) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetMatchDetailDataResp) GetBt() int64 {
	if x != nil {
		return x.Bt
	}
	return 0
}

func (x *GetMatchDetailDataResp) GetMs() int64 {
	if x != nil {
		return x.Ms
	}
	return 0
}

func (x *GetMatchDetailDataResp) GetFid() int64 {
	if x != nil {
		return x.Fid
	}
	return 0
}

func (x *GetMatchDetailDataResp) GetFmt() int64 {
	if x != nil {
		return x.Fmt
	}
	return 0
}

func (x *GetMatchDetailDataResp) GetSs() int64 {
	if x != nil {
		return x.Ss
	}
	return 0
}

func (x *GetMatchDetailDataResp) GetNe() int64 {
	if x != nil {
		return x.Ne
	}
	return 0
}

func (x *GetMatchDetailDataResp) GetLiveUrls() string {
	if x != nil {
		return x.LiveUrls
	}
	return ""
}

func (x *GetMatchDetailDataResp) GetSid() int64 {
	if x != nil {
		return x.Sid
	}
	return 0
}

func (x *GetMatchDetailDataResp) GetSsi() int64 {
	if x != nil {
		return x.Ssi
	}
	return 0
}

func (x *GetMatchDetailDataResp) GetMp() string {
	if x != nil {
		return x.Mp
	}
	return ""
}

func (x *GetMatchDetailDataResp) GetSmt() int64 {
	if x != nil {
		return x.Smt
	}
	return 0
}

func (x *GetMatchDetailDataResp) GetTy() int64 {
	if x != nil {
		return x.Ty
	}
	return 0
}

func (x *GetMatchDetailDataResp) GetYe() string {
	if x != nil {
		return x.Ye
	}
	return ""
}

func (x *GetMatchDetailDataResp) GetNm() string {
	if x != nil {
		return x.Nm
	}
	return ""
}

func (x *GetMatchDetailDataResp) GetSb() string {
	if x != nil {
		return x.Sb
	}
	return ""
}

func (x *GetMatchDetailDataResp) GetPl() int64 {
	if x != nil {
		return x.Pl
	}
	return 0
}

type GetMatchLeaguesListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SportId       int64   `protobuf:"varint,1,opt,name=sportId,proto3" json:"sportId,omitempty"`             // 运动ID , see enum: sports
	SportIds      []int64 `protobuf:"varint,2,rep,packed,name=sportIds,proto3" json:"sportIds,omitempty"`    //  运动ID集合 , see enum: sports
	MatchPlayType int64   `protobuf:"varint,3,opt,name=matchPlayType,proto3" json:"matchPlayType,omitempty"` // 类表分类类型，如滚球、今日、早盘等 , see enum: match_play_type
	BeginTime     int64   `protobuf:"varint,4,opt,name=beginTime,proto3" json:"beginTime,omitempty"`         // 开始时间
	EndTime       int64   `protobuf:"varint,5,opt,name=endTime,proto3" json:"endTime,omitempty"`
}

func (x *GetMatchLeaguesListReq) Reset() {
	*x = GetMatchLeaguesListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[191]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMatchLeaguesListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMatchLeaguesListReq) ProtoMessage() {}

func (x *GetMatchLeaguesListReq) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[191]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMatchLeaguesListReq.ProtoReflect.Descriptor instead.
func (*GetMatchLeaguesListReq) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{191}
}

func (x *GetMatchLeaguesListReq) GetSportId() int64 {
	if x != nil {
		return x.SportId
	}
	return 0
}

func (x *GetMatchLeaguesListReq) GetSportIds() []int64 {
	if x != nil {
		return x.SportIds
	}
	return nil
}

func (x *GetMatchLeaguesListReq) GetMatchPlayType() int64 {
	if x != nil {
		return x.MatchPlayType
	}
	return 0
}

func (x *GetMatchLeaguesListReq) GetBeginTime() int64 {
	if x != nil {
		return x.BeginTime
	}
	return 0
}

func (x *GetMatchLeaguesListReq) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

type GetMatchLeaguesListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32                          `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string                         `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data []*GetMatchLeaguesListDataResp `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *GetMatchLeaguesListResp) Reset() {
	*x = GetMatchLeaguesListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[192]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMatchLeaguesListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMatchLeaguesListResp) ProtoMessage() {}

func (x *GetMatchLeaguesListResp) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[192]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMatchLeaguesListResp.ProtoReflect.Descriptor instead.
func (*GetMatchLeaguesListResp) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{192}
}

func (x *GetMatchLeaguesListResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetMatchLeaguesListResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GetMatchLeaguesListResp) GetData() []*GetMatchLeaguesListDataResp {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetMatchLeaguesListDataResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`       //联赛ID
	Na    string `protobuf:"bytes,2,opt,name=na,proto3" json:"na,omitempty"`        //联赛名称
	Mt    int64  `protobuf:"varint,3,opt,name=mt,proto3" json:"mt,omitempty"`       // 该联赛开售的赛事统计
	Level int64  `protobuf:"varint,4,opt,name=level,proto3" json:"level,omitempty"` // 联赛等级，可用于联赛排序，值越小，联赛等级越高
	Lurl  string `protobuf:"bytes,5,opt,name=lurl,proto3" json:"lurl,omitempty"`    //  联赛图标地址
	Sid   int64  `protobuf:"varint,6,opt,name=sid,proto3" json:"sid,omitempty"`     // 运动种类id
	Rid   int64  `protobuf:"varint,7,opt,name=rid,proto3" json:"rid,omitempty"`     //区域id
	Rnm   string `protobuf:"bytes,8,opt,name=rnm,proto3" json:"rnm,omitempty"`      //区域名称
	Rlg   string `protobuf:"bytes,9,opt,name=rlg,proto3" json:"rlg,omitempty"`      // 区域logo
	Hot   bool   `protobuf:"varint,10,opt,name=hot,proto3" json:"hot,omitempty"`    // 是否热门
	Slid  int64  `protobuf:"varint,11,opt,name=slid,proto3" json:"slid,omitempty"`  //联赛分组
}

func (x *GetMatchLeaguesListDataResp) Reset() {
	*x = GetMatchLeaguesListDataResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[193]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMatchLeaguesListDataResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMatchLeaguesListDataResp) ProtoMessage() {}

func (x *GetMatchLeaguesListDataResp) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[193]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMatchLeaguesListDataResp.ProtoReflect.Descriptor instead.
func (*GetMatchLeaguesListDataResp) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{193}
}

func (x *GetMatchLeaguesListDataResp) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetMatchLeaguesListDataResp) GetNa() string {
	if x != nil {
		return x.Na
	}
	return ""
}

func (x *GetMatchLeaguesListDataResp) GetMt() int64 {
	if x != nil {
		return x.Mt
	}
	return 0
}

func (x *GetMatchLeaguesListDataResp) GetLevel() int64 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *GetMatchLeaguesListDataResp) GetLurl() string {
	if x != nil {
		return x.Lurl
	}
	return ""
}

func (x *GetMatchLeaguesListDataResp) GetSid() int64 {
	if x != nil {
		return x.Sid
	}
	return 0
}

func (x *GetMatchLeaguesListDataResp) GetRid() int64 {
	if x != nil {
		return x.Rid
	}
	return 0
}

func (x *GetMatchLeaguesListDataResp) GetRnm() string {
	if x != nil {
		return x.Rnm
	}
	return ""
}

func (x *GetMatchLeaguesListDataResp) GetRlg() string {
	if x != nil {
		return x.Rlg
	}
	return ""
}

func (x *GetMatchLeaguesListDataResp) GetHot() bool {
	if x != nil {
		return x.Hot
	}
	return false
}

func (x *GetMatchLeaguesListDataResp) GetSlid() int64 {
	if x != nil {
		return x.Slid
	}
	return 0
}

type GetMatchResultPageListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current   int64                          `protobuf:"varint,1,opt,name=current,proto3" json:"current,omitempty"`
	Size      int64                          `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	SortKey   string                         `protobuf:"bytes,3,opt,name=sortKey,proto3" json:"sortKey,omitempty"`
	SortField []string                       `protobuf:"bytes,4,rep,name=sortField,proto3" json:"sortField,omitempty"`
	Data      *GetMatchResultPageListDataReq `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"` // 请求参数
}

func (x *GetMatchResultPageListReq) Reset() {
	*x = GetMatchResultPageListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[194]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMatchResultPageListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMatchResultPageListReq) ProtoMessage() {}

func (x *GetMatchResultPageListReq) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[194]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMatchResultPageListReq.ProtoReflect.Descriptor instead.
func (*GetMatchResultPageListReq) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{194}
}

func (x *GetMatchResultPageListReq) GetCurrent() int64 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *GetMatchResultPageListReq) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *GetMatchResultPageListReq) GetSortKey() string {
	if x != nil {
		return x.SortKey
	}
	return ""
}

func (x *GetMatchResultPageListReq) GetSortField() []string {
	if x != nil {
		return x.SortField
	}
	return nil
}

func (x *GetMatchResultPageListReq) GetData() *GetMatchResultPageListDataReq {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetMatchResultPageListDataReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SportId   int64   `protobuf:"varint,1,opt,name=sportId,proto3" json:"sportId,omitempty"`            // 运动ID，与leagueIds必选其一 , see enum: sports
	LeagueIds []int64 `protobuf:"varint,2,rep,packed,name=leagueIds,proto3" json:"leagueIds,omitempty"` // 联赛id列表，与sportId必选其一
	BeginTime int64   `protobuf:"varint,3,opt,name=beginTime,proto3" json:"beginTime,omitempty"`        // 开始时间
	EndTime   int64   `protobuf:"varint,4,opt,name=endTime,proto3" json:"endTime,omitempty"`            //结束时间
	MatchType int64   `protobuf:"varint,7,opt,name=matchType,proto3" json:"matchType,omitempty"`        // 赛事类型，只支持1和2 , see enum: match_type
}

func (x *GetMatchResultPageListDataReq) Reset() {
	*x = GetMatchResultPageListDataReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[195]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMatchResultPageListDataReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMatchResultPageListDataReq) ProtoMessage() {}

func (x *GetMatchResultPageListDataReq) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[195]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMatchResultPageListDataReq.ProtoReflect.Descriptor instead.
func (*GetMatchResultPageListDataReq) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{195}
}

func (x *GetMatchResultPageListDataReq) GetSportId() int64 {
	if x != nil {
		return x.SportId
	}
	return 0
}

func (x *GetMatchResultPageListDataReq) GetLeagueIds() []int64 {
	if x != nil {
		return x.LeagueIds
	}
	return nil
}

func (x *GetMatchResultPageListDataReq) GetBeginTime() int64 {
	if x != nil {
		return x.BeginTime
	}
	return 0
}

func (x *GetMatchResultPageListDataReq) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *GetMatchResultPageListDataReq) GetMatchType() int64 {
	if x != nil {
		return x.MatchType
	}
	return 0
}

type GetMatchResultPageListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32                           `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string                          `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *GetMatchResultPageListDataResp `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetMatchResultPageListResp) Reset() {
	*x = GetMatchResultPageListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[196]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMatchResultPageListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMatchResultPageListResp) ProtoMessage() {}

func (x *GetMatchResultPageListResp) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[196]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMatchResultPageListResp.ProtoReflect.Descriptor instead.
func (*GetMatchResultPageListResp) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{196}
}

func (x *GetMatchResultPageListResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetMatchResultPageListResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GetMatchResultPageListResp) GetData() *GetMatchResultPageListDataResp {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetMatchResultPageListDataResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current string                            `protobuf:"bytes,1,opt,name=current,proto3" json:"current,omitempty"`
	Pages   string                            `protobuf:"bytes,2,opt,name=pages,proto3" json:"pages,omitempty"`
	Size    string                            `protobuf:"bytes,3,opt,name=size,proto3" json:"size,omitempty"`
	Total   string                            `protobuf:"bytes,4,opt,name=total,proto3" json:"total,omitempty"`
	List    []*GetMatchResultPageListDataItem `protobuf:"bytes,5,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *GetMatchResultPageListDataResp) Reset() {
	*x = GetMatchResultPageListDataResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[197]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMatchResultPageListDataResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMatchResultPageListDataResp) ProtoMessage() {}

func (x *GetMatchResultPageListDataResp) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[197]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMatchResultPageListDataResp.ProtoReflect.Descriptor instead.
func (*GetMatchResultPageListDataResp) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{197}
}

func (x *GetMatchResultPageListDataResp) GetCurrent() string {
	if x != nil {
		return x.Current
	}
	return ""
}

func (x *GetMatchResultPageListDataResp) GetPages() string {
	if x != nil {
		return x.Pages
	}
	return ""
}

func (x *GetMatchResultPageListDataResp) GetSize() string {
	if x != nil {
		return x.Size
	}
	return ""
}

func (x *GetMatchResultPageListDataResp) GetTotal() string {
	if x != nil {
		return x.Total
	}
	return ""
}

func (x *GetMatchResultPageListDataResp) GetList() []*GetMatchResultPageListDataItem {
	if x != nil {
		return x.List
	}
	return nil
}

type GetMatchResultPageListDataItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id  int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`   // 赛事ID
	Bt  int64  `protobuf:"varint,2,opt,name=bt,proto3" json:"bt,omitempty"`   // 赛事开赛时间
	Ms  int64  `protobuf:"varint,3,opt,name=ms,proto3" json:"ms,omitempty"`   // 赛事进行状态 , see enum: match_status
	Fid int64  `protobuf:"varint,4,opt,name=fid,proto3" json:"fid,omitempty"` // 赛制的场次、局数、节数
	Fmt int64  `protobuf:"varint,5,opt,name=fmt,proto3" json:"fmt,omitempty"` // 赛制 , see enum: match_format
	Ne  int64  `protobuf:"varint,6,opt,name=ne,proto3" json:"ne,omitempty"`   // 中立场 1:中立场 0:非中立场 ,
	Sid int64  `protobuf:"varint,7,opt,name=sid,proto3" json:"sid,omitempty"` // 运动ID ,
	Lg  string `protobuf:"bytes,8,opt,name=lg,proto3" json:"lg,omitempty"`    // 联赛数据
	Ts  string `protobuf:"bytes,9,opt,name=ts,proto3" json:"ts,omitempty"`    // 球队信息
	Nsg string `protobuf:"bytes,10,opt,name=nsg,proto3" json:"nsg,omitempty"` //  比分或者赛果
	Mgs string `protobuf:"bytes,11,opt,name=mgs,proto3" json:"mgs,omitempty"` // 盘口结算结果集合
}

func (x *GetMatchResultPageListDataItem) Reset() {
	*x = GetMatchResultPageListDataItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[198]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMatchResultPageListDataItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMatchResultPageListDataItem) ProtoMessage() {}

func (x *GetMatchResultPageListDataItem) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[198]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMatchResultPageListDataItem.ProtoReflect.Descriptor instead.
func (*GetMatchResultPageListDataItem) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{198}
}

func (x *GetMatchResultPageListDataItem) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetMatchResultPageListDataItem) GetBt() int64 {
	if x != nil {
		return x.Bt
	}
	return 0
}

func (x *GetMatchResultPageListDataItem) GetMs() int64 {
	if x != nil {
		return x.Ms
	}
	return 0
}

func (x *GetMatchResultPageListDataItem) GetFid() int64 {
	if x != nil {
		return x.Fid
	}
	return 0
}

func (x *GetMatchResultPageListDataItem) GetFmt() int64 {
	if x != nil {
		return x.Fmt
	}
	return 0
}

func (x *GetMatchResultPageListDataItem) GetNe() int64 {
	if x != nil {
		return x.Ne
	}
	return 0
}

func (x *GetMatchResultPageListDataItem) GetSid() int64 {
	if x != nil {
		return x.Sid
	}
	return 0
}

func (x *GetMatchResultPageListDataItem) GetLg() string {
	if x != nil {
		return x.Lg
	}
	return ""
}

func (x *GetMatchResultPageListDataItem) GetTs() string {
	if x != nil {
		return x.Ts
	}
	return ""
}

func (x *GetMatchResultPageListDataItem) GetNsg() string {
	if x != nil {
		return x.Nsg
	}
	return ""
}

func (x *GetMatchResultPageListDataItem) GetMgs() string {
	if x != nil {
		return x.Mgs
	}
	return ""
}

type GetMatchResultInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MatchId int64 `protobuf:"varint,1,opt,name=matchId,proto3" json:"matchId,omitempty"` // 赛事ID
}

func (x *GetMatchResultInfoReq) Reset() {
	*x = GetMatchResultInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[199]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMatchResultInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMatchResultInfoReq) ProtoMessage() {}

func (x *GetMatchResultInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[199]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMatchResultInfoReq.ProtoReflect.Descriptor instead.
func (*GetMatchResultInfoReq) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{199}
}

func (x *GetMatchResultInfoReq) GetMatchId() int64 {
	if x != nil {
		return x.MatchId
	}
	return 0
}

type GetMatchResultInfoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32                       `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string                      `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *GetMatchResultInfoDataResp `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetMatchResultInfoResp) Reset() {
	*x = GetMatchResultInfoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[200]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMatchResultInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMatchResultInfoResp) ProtoMessage() {}

func (x *GetMatchResultInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[200]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMatchResultInfoResp.ProtoReflect.Descriptor instead.
func (*GetMatchResultInfoResp) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{200}
}

func (x *GetMatchResultInfoResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetMatchResultInfoResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GetMatchResultInfoResp) GetData() *GetMatchResultInfoDataResp {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetMatchResultInfoDataResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id  int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`   // 赛事ID
	Bt  int64  `protobuf:"varint,2,opt,name=bt,proto3" json:"bt,omitempty"`   // 赛事开赛时间
	Ms  int64  `protobuf:"varint,3,opt,name=ms,proto3" json:"ms,omitempty"`   // 赛事进行状态 , see enum: match_status
	Fid int64  `protobuf:"varint,4,opt,name=fid,proto3" json:"fid,omitempty"` // 赛制的场次、局数、节数
	Fmt int64  `protobuf:"varint,5,opt,name=fmt,proto3" json:"fmt,omitempty"` // 赛制 , see enum: match_format
	Ne  int64  `protobuf:"varint,6,opt,name=ne,proto3" json:"ne,omitempty"`   // 中立场 1:中立场 0:非中立场 ,
	Sid int64  `protobuf:"varint,7,opt,name=sid,proto3" json:"sid,omitempty"` // 运动ID ,
	Lg  string `protobuf:"bytes,8,opt,name=lg,proto3" json:"lg,omitempty"`    // 联赛数据
	Ts  string `protobuf:"bytes,9,opt,name=ts,proto3" json:"ts,omitempty"`    // 球队信息
	Nsg string `protobuf:"bytes,10,opt,name=nsg,proto3" json:"nsg,omitempty"` //  比分或者赛果
	Mgs string `protobuf:"bytes,11,opt,name=mgs,proto3" json:"mgs,omitempty"` // 盘口结算结果集合
}

func (x *GetMatchResultInfoDataResp) Reset() {
	*x = GetMatchResultInfoDataResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[201]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMatchResultInfoDataResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMatchResultInfoDataResp) ProtoMessage() {}

func (x *GetMatchResultInfoDataResp) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[201]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMatchResultInfoDataResp.ProtoReflect.Descriptor instead.
func (*GetMatchResultInfoDataResp) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{201}
}

func (x *GetMatchResultInfoDataResp) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetMatchResultInfoDataResp) GetBt() int64 {
	if x != nil {
		return x.Bt
	}
	return 0
}

func (x *GetMatchResultInfoDataResp) GetMs() int64 {
	if x != nil {
		return x.Ms
	}
	return 0
}

func (x *GetMatchResultInfoDataResp) GetFid() int64 {
	if x != nil {
		return x.Fid
	}
	return 0
}

func (x *GetMatchResultInfoDataResp) GetFmt() int64 {
	if x != nil {
		return x.Fmt
	}
	return 0
}

func (x *GetMatchResultInfoDataResp) GetNe() int64 {
	if x != nil {
		return x.Ne
	}
	return 0
}

func (x *GetMatchResultInfoDataResp) GetSid() int64 {
	if x != nil {
		return x.Sid
	}
	return 0
}

func (x *GetMatchResultInfoDataResp) GetLg() string {
	if x != nil {
		return x.Lg
	}
	return ""
}

func (x *GetMatchResultInfoDataResp) GetTs() string {
	if x != nil {
		return x.Ts
	}
	return ""
}

func (x *GetMatchResultInfoDataResp) GetNsg() string {
	if x != nil {
		return x.Nsg
	}
	return ""
}

func (x *GetMatchResultInfoDataResp) GetMgs() string {
	if x != nil {
		return x.Mgs
	}
	return ""
}

type GetMatchByRecommendReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Recommend string `protobuf:"bytes,1,opt,name=recommend,proto3" json:"recommend,omitempty"` // 推荐词
	OddsType  int64  `protobuf:"varint,2,opt,name=oddsType,proto3" json:"oddsType,omitempty"`  // 率类型 , see enum: odds_format_type_enum
	OrderBy   int64  `protobuf:"varint,3,opt,name=orderBy,proto3" json:"orderBy,omitempty"`    // 赛事列表排序方式：0 按开赛时间排序，1 按联赛排序， 传：0或1 , see enum: get_match_list_order_by_enum
}

func (x *GetMatchByRecommendReq) Reset() {
	*x = GetMatchByRecommendReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[202]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMatchByRecommendReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMatchByRecommendReq) ProtoMessage() {}

func (x *GetMatchByRecommendReq) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[202]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMatchByRecommendReq.ProtoReflect.Descriptor instead.
func (*GetMatchByRecommendReq) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{202}
}

func (x *GetMatchByRecommendReq) GetRecommend() string {
	if x != nil {
		return x.Recommend
	}
	return ""
}

func (x *GetMatchByRecommendReq) GetOddsType() int64 {
	if x != nil {
		return x.OddsType
	}
	return 0
}

func (x *GetMatchByRecommendReq) GetOrderBy() int64 {
	if x != nil {
		return x.OrderBy
	}
	return 0
}

type GetMatchByRecommendResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32                          `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string                         `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data []*GetMatchByRecommendDataResp `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *GetMatchByRecommendResp) Reset() {
	*x = GetMatchByRecommendResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[203]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMatchByRecommendResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMatchByRecommendResp) ProtoMessage() {}

func (x *GetMatchByRecommendResp) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[203]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMatchByRecommendResp.ProtoReflect.Descriptor instead.
func (*GetMatchByRecommendResp) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{203}
}

func (x *GetMatchByRecommendResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetMatchByRecommendResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GetMatchByRecommendResp) GetData() []*GetMatchByRecommendDataResp {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetMatchByRecommendDataResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nsg      string `protobuf:"bytes,1,opt,name=nsg,proto3" json:"nsg,omitempty"`            //比分列表，提供各个赛事阶段的比分
	Mg       string `protobuf:"bytes,2,opt,name=mg,proto3" json:"mg,omitempty"`              // 赔率列表
	Tms      int64  `protobuf:"varint,3,opt,name=tms,proto3" json:"tms,omitempty"`           // 单个赛事玩法总数
	Tps      string `protobuf:"bytes,4,opt,name=tps,proto3" json:"tps,omitempty"`            // 盘口组标签集合 , see enum: market_tag
	Lg       string `protobuf:"bytes,5,opt,name=lg,proto3" json:"lg,omitempty"`              // 联赛信息
	Ts       string `protobuf:"bytes,6,opt,name=ts,proto3" json:"ts,omitempty"`              // 球队信息，第一个是主队，第二个是客队
	Mc       string `protobuf:"bytes,7,opt,name=mc,proto3" json:"mc,omitempty"`              // 比赛时钟信息，滚球走表信息
	Id       int64  `protobuf:"varint,8,opt,name=id,proto3" json:"id,omitempty"`             //赛事ID
	Bt       int64  `protobuf:"varint,9,opt,name=bt,proto3" json:"bt,omitempty"`             // 赛事开赛时间
	Ms       int64  `protobuf:"varint,10,opt,name=ms,proto3" json:"ms,omitempty"`            //赛事进行状态，返回赛事进行状态code，具体请对照枚举 , see enum: match_status
	Fid      int64  `protobuf:"varint,11,opt,name=fid,proto3" json:"fid,omitempty"`          //赛制的场次、局数、节数
	Fmt      int64  `protobuf:"varint,12,opt,name=fmt,proto3" json:"fmt,omitempty"`          // 赛制 , see enum: match_format
	Ss       int64  `protobuf:"varint,13,opt,name=ss,proto3" json:"ss,omitempty"`            // 销售状态，1 开售，2 暂停，其他状态都不展示 , see enum: match_sales_status_enum
	Ne       int64  `protobuf:"varint,14,opt,name=ne,proto3" json:"ne,omitempty"`            // 中立场标记，0 非中立场 ，1 中立场
	LiveUrls string `protobuf:"bytes,15,opt,name=liveUrls,proto3" json:"liveUrls,omitempty"` //  动画直接地址集合
	Sid      int64  `protobuf:"varint,16,opt,name=sid,proto3" json:"sid,omitempty"`          //运动ID , see enum: sports
	Ssi      int64  `protobuf:"varint,17,opt,name=ssi,proto3" json:"ssi,omitempty"`          //主/客发球，1主队发球，2客队发球, see enum: serving_side
	Mp       string `protobuf:"bytes,18,opt,name=mp,proto3" json:"mp,omitempty"`             //赛事辅助标记，如附加赛、季前赛等，具体请看枚举 , see enum: phase
	Smt      int64  `protobuf:"varint,19,opt,name=smt,proto3" json:"smt,omitempty"`          //滚球赛事当前阶段标识：常规时间，加时赛，点球大战等 , see enum: sub_match_type
	Ty       int64  `protobuf:"varint,20,opt,name=ty,proto3" json:"ty,omitempty"`            //赛事类型 1 冠军投注赛事，2 正常赛事 , see enum: match_type
	Ye       string `protobuf:"bytes,21,opt,name=ye,proto3" json:"ye,omitempty"`             //  冠军赛事联赛赛季，返回赛季字符串，如：2019年
	Nm       string `protobuf:"bytes,22,opt,name=nm,proto3" json:"nm,omitempty"`             //冠军赛赛事名称，用于展示名称
	Sb       string `protobuf:"bytes,23,opt,name=sb,proto3" json:"sb,omitempty"`             //比分板
	Pl       int64  `protobuf:"varint,24,opt,name=pl,proto3" json:"pl,omitempty"`            // 是否可以开售滚球盘口 , see enum: in_play_enum
}

func (x *GetMatchByRecommendDataResp) Reset() {
	*x = GetMatchByRecommendDataResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[204]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMatchByRecommendDataResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMatchByRecommendDataResp) ProtoMessage() {}

func (x *GetMatchByRecommendDataResp) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[204]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMatchByRecommendDataResp.ProtoReflect.Descriptor instead.
func (*GetMatchByRecommendDataResp) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{204}
}

func (x *GetMatchByRecommendDataResp) GetNsg() string {
	if x != nil {
		return x.Nsg
	}
	return ""
}

func (x *GetMatchByRecommendDataResp) GetMg() string {
	if x != nil {
		return x.Mg
	}
	return ""
}

func (x *GetMatchByRecommendDataResp) GetTms() int64 {
	if x != nil {
		return x.Tms
	}
	return 0
}

func (x *GetMatchByRecommendDataResp) GetTps() string {
	if x != nil {
		return x.Tps
	}
	return ""
}

func (x *GetMatchByRecommendDataResp) GetLg() string {
	if x != nil {
		return x.Lg
	}
	return ""
}

func (x *GetMatchByRecommendDataResp) GetTs() string {
	if x != nil {
		return x.Ts
	}
	return ""
}

func (x *GetMatchByRecommendDataResp) GetMc() string {
	if x != nil {
		return x.Mc
	}
	return ""
}

func (x *GetMatchByRecommendDataResp) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetMatchByRecommendDataResp) GetBt() int64 {
	if x != nil {
		return x.Bt
	}
	return 0
}

func (x *GetMatchByRecommendDataResp) GetMs() int64 {
	if x != nil {
		return x.Ms
	}
	return 0
}

func (x *GetMatchByRecommendDataResp) GetFid() int64 {
	if x != nil {
		return x.Fid
	}
	return 0
}

func (x *GetMatchByRecommendDataResp) GetFmt() int64 {
	if x != nil {
		return x.Fmt
	}
	return 0
}

func (x *GetMatchByRecommendDataResp) GetSs() int64 {
	if x != nil {
		return x.Ss
	}
	return 0
}

func (x *GetMatchByRecommendDataResp) GetNe() int64 {
	if x != nil {
		return x.Ne
	}
	return 0
}

func (x *GetMatchByRecommendDataResp) GetLiveUrls() string {
	if x != nil {
		return x.LiveUrls
	}
	return ""
}

func (x *GetMatchByRecommendDataResp) GetSid() int64 {
	if x != nil {
		return x.Sid
	}
	return 0
}

func (x *GetMatchByRecommendDataResp) GetSsi() int64 {
	if x != nil {
		return x.Ssi
	}
	return 0
}

func (x *GetMatchByRecommendDataResp) GetMp() string {
	if x != nil {
		return x.Mp
	}
	return ""
}

func (x *GetMatchByRecommendDataResp) GetSmt() int64 {
	if x != nil {
		return x.Smt
	}
	return 0
}

func (x *GetMatchByRecommendDataResp) GetTy() int64 {
	if x != nil {
		return x.Ty
	}
	return 0
}

func (x *GetMatchByRecommendDataResp) GetYe() string {
	if x != nil {
		return x.Ye
	}
	return ""
}

func (x *GetMatchByRecommendDataResp) GetNm() string {
	if x != nil {
		return x.Nm
	}
	return ""
}

func (x *GetMatchByRecommendDataResp) GetSb() string {
	if x != nil {
		return x.Sb
	}
	return ""
}

func (x *GetMatchByRecommendDataResp) GetPl() int64 {
	if x != nil {
		return x.Pl
	}
	return 0
}

type GetMatchLeaguesRecommentReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Num int64 `protobuf:"varint,1,opt,name=num,proto3" json:"num,omitempty"` //获取到条数
}

func (x *GetMatchLeaguesRecommentReq) Reset() {
	*x = GetMatchLeaguesRecommentReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[205]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMatchLeaguesRecommentReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMatchLeaguesRecommentReq) ProtoMessage() {}

func (x *GetMatchLeaguesRecommentReq) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[205]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMatchLeaguesRecommentReq.ProtoReflect.Descriptor instead.
func (*GetMatchLeaguesRecommentReq) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{205}
}

func (x *GetMatchLeaguesRecommentReq) GetNum() int64 {
	if x != nil {
		return x.Num
	}
	return 0
}

type GetMatchLeaguesRecommentResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32                               `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string                              `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data []*GetMatchLeaguesRecommentDataResp `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *GetMatchLeaguesRecommentResp) Reset() {
	*x = GetMatchLeaguesRecommentResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[206]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMatchLeaguesRecommentResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMatchLeaguesRecommentResp) ProtoMessage() {}

func (x *GetMatchLeaguesRecommentResp) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[206]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMatchLeaguesRecommentResp.ProtoReflect.Descriptor instead.
func (*GetMatchLeaguesRecommentResp) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{206}
}

func (x *GetMatchLeaguesRecommentResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetMatchLeaguesRecommentResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GetMatchLeaguesRecommentResp) GetData() []*GetMatchLeaguesRecommentDataResp {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetMatchLeaguesRecommentDataResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MatchId    int64  `protobuf:"varint,1,opt,name=match_id,json=matchId,proto3" json:"match_id,omitempty"`          // 赛事ID
	LeagueId   int64  `protobuf:"varint,2,opt,name=league_id,json=leagueId,proto3" json:"league_id,omitempty"`       // 联赛ID
	LeagueName string `protobuf:"bytes,3,opt,name=league_name,json=leagueName,proto3" json:"league_name,omitempty"`  // 联赛名称
	LeagueType int64  `protobuf:"varint,4,opt,name=league_type,json=leagueType,proto3" json:"league_type,omitempty"` //分类类型 滚球 今日 早盘等
	MatchCount int64  `protobuf:"varint,5,opt,name=match_count,json=matchCount,proto3" json:"match_count,omitempty"`
	IsHot      int64  `protobuf:"varint,6,opt,name=is_hot,json=isHot,proto3" json:"is_hot,omitempty"` // 1==热门 0==非热门
}

func (x *GetMatchLeaguesRecommentDataResp) Reset() {
	*x = GetMatchLeaguesRecommentDataResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[207]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMatchLeaguesRecommentDataResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMatchLeaguesRecommentDataResp) ProtoMessage() {}

func (x *GetMatchLeaguesRecommentDataResp) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[207]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMatchLeaguesRecommentDataResp.ProtoReflect.Descriptor instead.
func (*GetMatchLeaguesRecommentDataResp) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{207}
}

func (x *GetMatchLeaguesRecommentDataResp) GetMatchId() int64 {
	if x != nil {
		return x.MatchId
	}
	return 0
}

func (x *GetMatchLeaguesRecommentDataResp) GetLeagueId() int64 {
	if x != nil {
		return x.LeagueId
	}
	return 0
}

func (x *GetMatchLeaguesRecommentDataResp) GetLeagueName() string {
	if x != nil {
		return x.LeagueName
	}
	return ""
}

func (x *GetMatchLeaguesRecommentDataResp) GetLeagueType() int64 {
	if x != nil {
		return x.LeagueType
	}
	return 0
}

func (x *GetMatchLeaguesRecommentDataResp) GetMatchCount() int64 {
	if x != nil {
		return x.MatchCount
	}
	return 0
}

func (x *GetMatchLeaguesRecommentDataResp) GetIsHot() int64 {
	if x != nil {
		return x.IsHot
	}
	return 0
}

type GetMatchTopRecommentReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Num int64 `protobuf:"varint,1,opt,name=num,proto3" json:"num,omitempty"` //获取到条数
}

func (x *GetMatchTopRecommentReq) Reset() {
	*x = GetMatchTopRecommentReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[208]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMatchTopRecommentReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMatchTopRecommentReq) ProtoMessage() {}

func (x *GetMatchTopRecommentReq) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[208]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMatchTopRecommentReq.ProtoReflect.Descriptor instead.
func (*GetMatchTopRecommentReq) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{208}
}

func (x *GetMatchTopRecommentReq) GetNum() int64 {
	if x != nil {
		return x.Num
	}
	return 0
}

type GetMatchTopRecommentResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32                           `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string                          `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data []*GetMatchTopRecommentDataResp `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *GetMatchTopRecommentResp) Reset() {
	*x = GetMatchTopRecommentResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[209]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMatchTopRecommentResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMatchTopRecommentResp) ProtoMessage() {}

func (x *GetMatchTopRecommentResp) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[209]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMatchTopRecommentResp.ProtoReflect.Descriptor instead.
func (*GetMatchTopRecommentResp) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{209}
}

func (x *GetMatchTopRecommentResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetMatchTopRecommentResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GetMatchTopRecommentResp) GetData() []*GetMatchTopRecommentDataResp {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetMatchTopRecommentDataResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MatchId   int64  `protobuf:"varint,1,opt,name=match_id,json=matchId,proto3" json:"match_id,omitempty"`
	MatchName string `protobuf:"bytes,2,opt,name=match_name,json=matchName,proto3" json:"match_name,omitempty"`
	TeamInfo  string `protobuf:"bytes,3,opt,name=team_info,json=teamInfo,proto3" json:"team_info,omitempty"`
}

func (x *GetMatchTopRecommentDataResp) Reset() {
	*x = GetMatchTopRecommentDataResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[210]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMatchTopRecommentDataResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMatchTopRecommentDataResp) ProtoMessage() {}

func (x *GetMatchTopRecommentDataResp) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[210]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMatchTopRecommentDataResp.ProtoReflect.Descriptor instead.
func (*GetMatchTopRecommentDataResp) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{210}
}

func (x *GetMatchTopRecommentDataResp) GetMatchId() int64 {
	if x != nil {
		return x.MatchId
	}
	return 0
}

func (x *GetMatchTopRecommentDataResp) GetMatchName() string {
	if x != nil {
		return x.MatchName
	}
	return ""
}

func (x *GetMatchTopRecommentDataResp) GetTeamInfo() string {
	if x != nil {
		return x.TeamInfo
	}
	return ""
}

type GetMatchIndexMainListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TimeDay int64 `protobuf:"varint,1,opt,name=TimeDay,proto3" json:"TimeDay,omitempty"` //日期时间戳 默认0 是所有
}

func (x *GetMatchIndexMainListReq) Reset() {
	*x = GetMatchIndexMainListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[211]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMatchIndexMainListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMatchIndexMainListReq) ProtoMessage() {}

func (x *GetMatchIndexMainListReq) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[211]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMatchIndexMainListReq.ProtoReflect.Descriptor instead.
func (*GetMatchIndexMainListReq) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{211}
}

func (x *GetMatchIndexMainListReq) GetTimeDay() int64 {
	if x != nil {
		return x.TimeDay
	}
	return 0
}

type GetMatchIndexMainListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32                          `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string                         `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *GetMatchIndexMainListDataResp `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetMatchIndexMainListResp) Reset() {
	*x = GetMatchIndexMainListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[212]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMatchIndexMainListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMatchIndexMainListResp) ProtoMessage() {}

func (x *GetMatchIndexMainListResp) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[212]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMatchIndexMainListResp.ProtoReflect.Descriptor instead.
func (*GetMatchIndexMainListResp) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{212}
}

func (x *GetMatchIndexMainListResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetMatchIndexMainListResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GetMatchIndexMainListResp) GetData() *GetMatchIndexMainListDataResp {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetMatchIndexMainListDataResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UnMatchCount int64                                `protobuf:"varint,1,opt,name=UnMatchCount,proto3" json:"UnMatchCount,omitempty"` //未开赛数量
	List         []*GetMatchIndexMainListDataItemResp `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *GetMatchIndexMainListDataResp) Reset() {
	*x = GetMatchIndexMainListDataResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[213]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMatchIndexMainListDataResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMatchIndexMainListDataResp) ProtoMessage() {}

func (x *GetMatchIndexMainListDataResp) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[213]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMatchIndexMainListDataResp.ProtoReflect.Descriptor instead.
func (*GetMatchIndexMainListDataResp) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{213}
}

func (x *GetMatchIndexMainListDataResp) GetUnMatchCount() int64 {
	if x != nil {
		return x.UnMatchCount
	}
	return 0
}

func (x *GetMatchIndexMainListDataResp) GetList() []*GetMatchIndexMainListDataItemResp {
	if x != nil {
		return x.List
	}
	return nil
}

type GetMatchIndexMainListDataItemResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MatchId   int64  `protobuf:"varint,1,opt,name=match_id,json=matchId,proto3" json:"match_id,omitempty"`
	MatchName string `protobuf:"bytes,2,opt,name=match_name,json=matchName,proto3" json:"match_name,omitempty"`
	TeamInfo  string `protobuf:"bytes,3,opt,name=team_info,json=teamInfo,proto3" json:"team_info,omitempty"`
}

func (x *GetMatchIndexMainListDataItemResp) Reset() {
	*x = GetMatchIndexMainListDataItemResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[214]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMatchIndexMainListDataItemResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMatchIndexMainListDataItemResp) ProtoMessage() {}

func (x *GetMatchIndexMainListDataItemResp) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[214]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMatchIndexMainListDataItemResp.ProtoReflect.Descriptor instead.
func (*GetMatchIndexMainListDataItemResp) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{214}
}

func (x *GetMatchIndexMainListDataItemResp) GetMatchId() int64 {
	if x != nil {
		return x.MatchId
	}
	return 0
}

func (x *GetMatchIndexMainListDataItemResp) GetMatchName() string {
	if x != nil {
		return x.MatchName
	}
	return ""
}

func (x *GetMatchIndexMainListDataItemResp) GetTeamInfo() string {
	if x != nil {
		return x.TeamInfo
	}
	return ""
}

type GetMatchIndexMarketsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SportId    int64 `protobuf:"varint,1,opt,name=sport_id,json=sportId,proto3" json:"sport_id,omitempty"`          // 运动类型
	MarketType int64 `protobuf:"varint,2,opt,name=market_type,json=marketType,proto3" json:"market_type,omitempty"` // 今日=3  早盘=4
}

func (x *GetMatchIndexMarketsReq) Reset() {
	*x = GetMatchIndexMarketsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[215]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMatchIndexMarketsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMatchIndexMarketsReq) ProtoMessage() {}

func (x *GetMatchIndexMarketsReq) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[215]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMatchIndexMarketsReq.ProtoReflect.Descriptor instead.
func (*GetMatchIndexMarketsReq) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{215}
}

func (x *GetMatchIndexMarketsReq) GetSportId() int64 {
	if x != nil {
		return x.SportId
	}
	return 0
}

func (x *GetMatchIndexMarketsReq) GetMarketType() int64 {
	if x != nil {
		return x.MarketType
	}
	return 0
}

type GetMatchIndexMarketsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32                           `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string                          `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data []*GetMatchIndexMarketsDataResp `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *GetMatchIndexMarketsResp) Reset() {
	*x = GetMatchIndexMarketsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[216]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMatchIndexMarketsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMatchIndexMarketsResp) ProtoMessage() {}

func (x *GetMatchIndexMarketsResp) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[216]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMatchIndexMarketsResp.ProtoReflect.Descriptor instead.
func (*GetMatchIndexMarketsResp) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{216}
}

func (x *GetMatchIndexMarketsResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetMatchIndexMarketsResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GetMatchIndexMarketsResp) GetData() []*GetMatchIndexMarketsDataResp {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetMatchIndexMarketsDataResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MatchId int64  `protobuf:"varint,1,opt,name=match_id,json=matchId,proto3" json:"match_id,omitempty"` //
	Name    string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`                       //玩法名称
}

func (x *GetMatchIndexMarketsDataResp) Reset() {
	*x = GetMatchIndexMarketsDataResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[217]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMatchIndexMarketsDataResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMatchIndexMarketsDataResp) ProtoMessage() {}

func (x *GetMatchIndexMarketsDataResp) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[217]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMatchIndexMarketsDataResp.ProtoReflect.Descriptor instead.
func (*GetMatchIndexMarketsDataResp) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{217}
}

func (x *GetMatchIndexMarketsDataResp) GetMatchId() int64 {
	if x != nil {
		return x.MatchId
	}
	return 0
}

func (x *GetMatchIndexMarketsDataResp) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GetMatchIndexUrlReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetMatchIndexUrlReq) Reset() {
	*x = GetMatchIndexUrlReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[218]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMatchIndexUrlReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMatchIndexUrlReq) ProtoMessage() {}

func (x *GetMatchIndexUrlReq) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[218]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMatchIndexUrlReq.ProtoReflect.Descriptor instead.
func (*GetMatchIndexUrlReq) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{218}
}

type GetMatchIndexUrlResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32                     `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string                    `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *GetMatchIndexUrlDataResp `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetMatchIndexUrlResp) Reset() {
	*x = GetMatchIndexUrlResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[219]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMatchIndexUrlResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMatchIndexUrlResp) ProtoMessage() {}

func (x *GetMatchIndexUrlResp) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[219]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMatchIndexUrlResp.ProtoReflect.Descriptor instead.
func (*GetMatchIndexUrlResp) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{219}
}

func (x *GetMatchIndexUrlResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetMatchIndexUrlResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GetMatchIndexUrlResp) GetData() *GetMatchIndexUrlDataResp {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetMatchIndexUrlDataResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PcAddress string `protobuf:"bytes,1,opt,name=PcAddress,proto3" json:"PcAddress,omitempty"`
	H5Address string `protobuf:"bytes,2,opt,name=H5Address,proto3" json:"H5Address,omitempty"`
	Token     string `protobuf:"bytes,3,opt,name=Token,proto3" json:"Token,omitempty"`
}

func (x *GetMatchIndexUrlDataResp) Reset() {
	*x = GetMatchIndexUrlDataResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[220]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMatchIndexUrlDataResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMatchIndexUrlDataResp) ProtoMessage() {}

func (x *GetMatchIndexUrlDataResp) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[220]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMatchIndexUrlDataResp.ProtoReflect.Descriptor instead.
func (*GetMatchIndexUrlDataResp) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{220}
}

func (x *GetMatchIndexUrlDataResp) GetPcAddress() string {
	if x != nil {
		return x.PcAddress
	}
	return ""
}

func (x *GetMatchIndexUrlDataResp) GetH5Address() string {
	if x != nil {
		return x.H5Address
	}
	return ""
}

func (x *GetMatchIndexUrlDataResp) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type SaveLiveAnchorReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId     int64  `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	AnchorNick string `protobuf:"bytes,3,opt,name=anchor_nick,json=anchorNick,proto3" json:"anchor_nick,omitempty"`
	Phone      string `protobuf:"bytes,4,opt,name=phone,proto3" json:"phone,omitempty"`
	RoomNumber int64  `protobuf:"varint,5,opt,name=room_number,json=roomNumber,proto3" json:"room_number,omitempty"`
	Image      string `protobuf:"bytes,6,opt,name=image,proto3" json:"image,omitempty"`
	AnchorType int64  `protobuf:"varint,7,opt,name=anchor_type,json=anchorType,proto3" json:"anchor_type,omitempty"`
	FansCount  int64  `protobuf:"varint,8,opt,name=fans_count,json=fansCount,proto3" json:"fans_count,omitempty"`
	IsLive     int64  `protobuf:"varint,9,opt,name=is_live,json=isLive,proto3" json:"is_live,omitempty"`
}

func (x *SaveLiveAnchorReq) Reset() {
	*x = SaveLiveAnchorReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[221]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveLiveAnchorReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveLiveAnchorReq) ProtoMessage() {}

func (x *SaveLiveAnchorReq) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[221]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveLiveAnchorReq.ProtoReflect.Descriptor instead.
func (*SaveLiveAnchorReq) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{221}
}

func (x *SaveLiveAnchorReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SaveLiveAnchorReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *SaveLiveAnchorReq) GetAnchorNick() string {
	if x != nil {
		return x.AnchorNick
	}
	return ""
}

func (x *SaveLiveAnchorReq) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *SaveLiveAnchorReq) GetRoomNumber() int64 {
	if x != nil {
		return x.RoomNumber
	}
	return 0
}

func (x *SaveLiveAnchorReq) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *SaveLiveAnchorReq) GetAnchorType() int64 {
	if x != nil {
		return x.AnchorType
	}
	return 0
}

func (x *SaveLiveAnchorReq) GetFansCount() int64 {
	if x != nil {
		return x.FansCount
	}
	return 0
}

func (x *SaveLiveAnchorReq) GetIsLive() int64 {
	if x != nil {
		return x.IsLive
	}
	return 0
}

type SaveLiveAnchorResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data bool   `protobuf:"varint,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *SaveLiveAnchorResp) Reset() {
	*x = SaveLiveAnchorResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[222]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveLiveAnchorResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveLiveAnchorResp) ProtoMessage() {}

func (x *SaveLiveAnchorResp) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[222]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveLiveAnchorResp.ProtoReflect.Descriptor instead.
func (*SaveLiveAnchorResp) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{222}
}

func (x *SaveLiveAnchorResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *SaveLiveAnchorResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *SaveLiveAnchorResp) GetData() bool {
	if x != nil {
		return x.Data
	}
	return false
}

type DeleteLiveAnchorReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteLiveAnchorReq) Reset() {
	*x = DeleteLiveAnchorReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[223]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteLiveAnchorReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteLiveAnchorReq) ProtoMessage() {}

func (x *DeleteLiveAnchorReq) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[223]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteLiveAnchorReq.ProtoReflect.Descriptor instead.
func (*DeleteLiveAnchorReq) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{223}
}

func (x *DeleteLiveAnchorReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeleteLiveAnchorResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data bool   `protobuf:"varint,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *DeleteLiveAnchorResp) Reset() {
	*x = DeleteLiveAnchorResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[224]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteLiveAnchorResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteLiveAnchorResp) ProtoMessage() {}

func (x *DeleteLiveAnchorResp) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[224]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteLiveAnchorResp.ProtoReflect.Descriptor instead.
func (*DeleteLiveAnchorResp) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{224}
}

func (x *DeleteLiveAnchorResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *DeleteLiveAnchorResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *DeleteLiveAnchorResp) GetData() bool {
	if x != nil {
		return x.Data
	}
	return false
}

type GetLiveAnchorListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current   int64                     `protobuf:"varint,1,opt,name=current,proto3" json:"current,omitempty"`
	Size      int64                     `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	SortKey   string                    `protobuf:"bytes,3,opt,name=sortKey,proto3" json:"sortKey,omitempty"`
	SortField []string                  `protobuf:"bytes,4,rep,name=sortField,proto3" json:"sortField,omitempty"`
	Data      *GetLiveAnchorListDataReq `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetLiveAnchorListReq) Reset() {
	*x = GetLiveAnchorListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[225]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLiveAnchorListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLiveAnchorListReq) ProtoMessage() {}

func (x *GetLiveAnchorListReq) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[225]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLiveAnchorListReq.ProtoReflect.Descriptor instead.
func (*GetLiveAnchorListReq) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{225}
}

func (x *GetLiveAnchorListReq) GetCurrent() int64 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *GetLiveAnchorListReq) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *GetLiveAnchorListReq) GetSortKey() string {
	if x != nil {
		return x.SortKey
	}
	return ""
}

func (x *GetLiveAnchorListReq) GetSortField() []string {
	if x != nil {
		return x.SortField
	}
	return nil
}

func (x *GetLiveAnchorListReq) GetData() *GetLiveAnchorListDataReq {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetLiveAnchorListDataReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AnchorType     int64  `protobuf:"varint,1,opt,name=anchor_type,json=anchorType,proto3" json:"anchor_type,omitempty"`
	AnchorNick     string `protobuf:"bytes,2,opt,name=anchor_nick,json=anchorNick,proto3" json:"anchor_nick,omitempty"`
	AnchorUserName string `protobuf:"bytes,3,opt,name=anchor_userName,json=anchorUserName,proto3" json:"anchor_userName,omitempty"`
	Phone          string `protobuf:"bytes,4,opt,name=phone,proto3" json:"phone,omitempty"`
}

func (x *GetLiveAnchorListDataReq) Reset() {
	*x = GetLiveAnchorListDataReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[226]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLiveAnchorListDataReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLiveAnchorListDataReq) ProtoMessage() {}

func (x *GetLiveAnchorListDataReq) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[226]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLiveAnchorListDataReq.ProtoReflect.Descriptor instead.
func (*GetLiveAnchorListDataReq) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{226}
}

func (x *GetLiveAnchorListDataReq) GetAnchorType() int64 {
	if x != nil {
		return x.AnchorType
	}
	return 0
}

func (x *GetLiveAnchorListDataReq) GetAnchorNick() string {
	if x != nil {
		return x.AnchorNick
	}
	return ""
}

func (x *GetLiveAnchorListDataReq) GetAnchorUserName() string {
	if x != nil {
		return x.AnchorUserName
	}
	return ""
}

func (x *GetLiveAnchorListDataReq) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

type GetLiveAnchorListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int64                      `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string                     `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *GetLiveAnchorListDataResp `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetLiveAnchorListResp) Reset() {
	*x = GetLiveAnchorListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[227]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLiveAnchorListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLiveAnchorListResp) ProtoMessage() {}

func (x *GetLiveAnchorListResp) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[227]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLiveAnchorListResp.ProtoReflect.Descriptor instead.
func (*GetLiveAnchorListResp) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{227}
}

func (x *GetLiveAnchorListResp) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetLiveAnchorListResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GetLiveAnchorListResp) GetData() *GetLiveAnchorListDataResp {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetLiveAnchorListDataResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current string                           `protobuf:"bytes,1,opt,name=current,proto3" json:"current,omitempty"`
	Pages   string                           `protobuf:"bytes,2,opt,name=pages,proto3" json:"pages,omitempty"`
	Size    string                           `protobuf:"bytes,3,opt,name=size,proto3" json:"size,omitempty"`
	Total   string                           `protobuf:"bytes,4,opt,name=total,proto3" json:"total,omitempty"`
	List    []*GetLiveAnchorListDataItemResp `protobuf:"bytes,5,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *GetLiveAnchorListDataResp) Reset() {
	*x = GetLiveAnchorListDataResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[228]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLiveAnchorListDataResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLiveAnchorListDataResp) ProtoMessage() {}

func (x *GetLiveAnchorListDataResp) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[228]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLiveAnchorListDataResp.ProtoReflect.Descriptor instead.
func (*GetLiveAnchorListDataResp) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{228}
}

func (x *GetLiveAnchorListDataResp) GetCurrent() string {
	if x != nil {
		return x.Current
	}
	return ""
}

func (x *GetLiveAnchorListDataResp) GetPages() string {
	if x != nil {
		return x.Pages
	}
	return ""
}

func (x *GetLiveAnchorListDataResp) GetSize() string {
	if x != nil {
		return x.Size
	}
	return ""
}

func (x *GetLiveAnchorListDataResp) GetTotal() string {
	if x != nil {
		return x.Total
	}
	return ""
}

func (x *GetLiveAnchorListDataResp) GetList() []*GetLiveAnchorListDataItemResp {
	if x != nil {
		return x.List
	}
	return nil
}

type GetLiveAnchorListDataItemResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId         int64  `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	AnchorNick     string `protobuf:"bytes,3,opt,name=anchor_nick,json=anchorNick,proto3" json:"anchor_nick,omitempty"`
	UserName       string `protobuf:"bytes,4,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	UserAvatar     string `protobuf:"bytes,5,opt,name=user_avatar,json=userAvatar,proto3" json:"user_avatar,omitempty"`
	Phone          string `protobuf:"bytes,6,opt,name=phone,proto3" json:"phone,omitempty"`
	RoomNumber     int64  `protobuf:"varint,7,opt,name=room_number,json=roomNumber,proto3" json:"room_number,omitempty"`
	Image          string `protobuf:"bytes,8,opt,name=image,proto3" json:"image,omitempty"`
	AnchorType     int64  `protobuf:"varint,9,opt,name=anchor_type,json=anchorType,proto3" json:"anchor_type,omitempty"`
	AnchorTypeName string `protobuf:"bytes,10,opt,name=anchor_type_name,json=anchorTypeName,proto3" json:"anchor_type_name,omitempty"`
	FansCount      int64  `protobuf:"varint,11,opt,name=fans_count,json=fansCount,proto3" json:"fans_count,omitempty"`
	IsLive         int64  `protobuf:"varint,12,opt,name=is_live,json=isLive,proto3" json:"is_live,omitempty"`
}

func (x *GetLiveAnchorListDataItemResp) Reset() {
	*x = GetLiveAnchorListDataItemResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[229]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLiveAnchorListDataItemResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLiveAnchorListDataItemResp) ProtoMessage() {}

func (x *GetLiveAnchorListDataItemResp) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[229]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLiveAnchorListDataItemResp.ProtoReflect.Descriptor instead.
func (*GetLiveAnchorListDataItemResp) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{229}
}

func (x *GetLiveAnchorListDataItemResp) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetLiveAnchorListDataItemResp) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GetLiveAnchorListDataItemResp) GetAnchorNick() string {
	if x != nil {
		return x.AnchorNick
	}
	return ""
}

func (x *GetLiveAnchorListDataItemResp) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *GetLiveAnchorListDataItemResp) GetUserAvatar() string {
	if x != nil {
		return x.UserAvatar
	}
	return ""
}

func (x *GetLiveAnchorListDataItemResp) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *GetLiveAnchorListDataItemResp) GetRoomNumber() int64 {
	if x != nil {
		return x.RoomNumber
	}
	return 0
}

func (x *GetLiveAnchorListDataItemResp) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *GetLiveAnchorListDataItemResp) GetAnchorType() int64 {
	if x != nil {
		return x.AnchorType
	}
	return 0
}

func (x *GetLiveAnchorListDataItemResp) GetAnchorTypeName() string {
	if x != nil {
		return x.AnchorTypeName
	}
	return ""
}

func (x *GetLiveAnchorListDataItemResp) GetFansCount() int64 {
	if x != nil {
		return x.FansCount
	}
	return 0
}

func (x *GetLiveAnchorListDataItemResp) GetIsLive() int64 {
	if x != nil {
		return x.IsLive
	}
	return 0
}

type SaveLiveRoomReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	RoomName  string `protobuf:"bytes,2,opt,name=room_name,json=roomName,proto3" json:"room_name,omitempty"`    // 直播间名称
	AnchorId  int64  `protobuf:"varint,3,opt,name=anchor_id,json=anchorId,proto3" json:"anchor_id,omitempty"`   //主播序号
	RoomImage string `protobuf:"bytes,4,opt,name=room_image,json=roomImage,proto3" json:"room_image,omitempty"` // 直播间图片
	MatchId   int64  `protobuf:"varint,5,opt,name=match_id,json=matchId,proto3" json:"match_id,omitempty"`      // 赛事ID
	Position  int64  `protobuf:"varint,6,opt,name=position,proto3" json:"position,omitempty"`                   // 排序号
}

func (x *SaveLiveRoomReq) Reset() {
	*x = SaveLiveRoomReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[230]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveLiveRoomReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveLiveRoomReq) ProtoMessage() {}

func (x *SaveLiveRoomReq) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[230]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveLiveRoomReq.ProtoReflect.Descriptor instead.
func (*SaveLiveRoomReq) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{230}
}

func (x *SaveLiveRoomReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SaveLiveRoomReq) GetRoomName() string {
	if x != nil {
		return x.RoomName
	}
	return ""
}

func (x *SaveLiveRoomReq) GetAnchorId() int64 {
	if x != nil {
		return x.AnchorId
	}
	return 0
}

func (x *SaveLiveRoomReq) GetRoomImage() string {
	if x != nil {
		return x.RoomImage
	}
	return ""
}

func (x *SaveLiveRoomReq) GetMatchId() int64 {
	if x != nil {
		return x.MatchId
	}
	return 0
}

func (x *SaveLiveRoomReq) GetPosition() int64 {
	if x != nil {
		return x.Position
	}
	return 0
}

type SaveLiveRoomResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data bool   `protobuf:"varint,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *SaveLiveRoomResp) Reset() {
	*x = SaveLiveRoomResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[231]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveLiveRoomResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveLiveRoomResp) ProtoMessage() {}

func (x *SaveLiveRoomResp) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[231]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveLiveRoomResp.ProtoReflect.Descriptor instead.
func (*SaveLiveRoomResp) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{231}
}

func (x *SaveLiveRoomResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *SaveLiveRoomResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *SaveLiveRoomResp) GetData() bool {
	if x != nil {
		return x.Data
	}
	return false
}

type DeleteLiveRoomReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteLiveRoomReq) Reset() {
	*x = DeleteLiveRoomReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[232]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteLiveRoomReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteLiveRoomReq) ProtoMessage() {}

func (x *DeleteLiveRoomReq) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[232]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteLiveRoomReq.ProtoReflect.Descriptor instead.
func (*DeleteLiveRoomReq) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{232}
}

func (x *DeleteLiveRoomReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeleteLiveRoomResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data bool   `protobuf:"varint,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *DeleteLiveRoomResp) Reset() {
	*x = DeleteLiveRoomResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[233]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteLiveRoomResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteLiveRoomResp) ProtoMessage() {}

func (x *DeleteLiveRoomResp) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[233]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteLiveRoomResp.ProtoReflect.Descriptor instead.
func (*DeleteLiveRoomResp) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{233}
}

func (x *DeleteLiveRoomResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *DeleteLiveRoomResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *DeleteLiveRoomResp) GetData() bool {
	if x != nil {
		return x.Data
	}
	return false
}

type DownLiveRoomReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DownLiveRoomReq) Reset() {
	*x = DownLiveRoomReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[234]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DownLiveRoomReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownLiveRoomReq) ProtoMessage() {}

func (x *DownLiveRoomReq) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[234]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownLiveRoomReq.ProtoReflect.Descriptor instead.
func (*DownLiveRoomReq) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{234}
}

func (x *DownLiveRoomReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DownLiveRoomResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data bool   `protobuf:"varint,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *DownLiveRoomResp) Reset() {
	*x = DownLiveRoomResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[235]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DownLiveRoomResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownLiveRoomResp) ProtoMessage() {}

func (x *DownLiveRoomResp) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[235]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownLiveRoomResp.ProtoReflect.Descriptor instead.
func (*DownLiveRoomResp) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{235}
}

func (x *DownLiveRoomResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *DownLiveRoomResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *DownLiveRoomResp) GetData() bool {
	if x != nil {
		return x.Data
	}
	return false
}

type GetLiveRoomListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current   int64                   `protobuf:"varint,1,opt,name=current,proto3" json:"current,omitempty"`
	Size      int64                   `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	SortKey   string                  `protobuf:"bytes,3,opt,name=sortKey,proto3" json:"sortKey,omitempty"`
	SortField []string                `protobuf:"bytes,4,rep,name=sortField,proto3" json:"sortField,omitempty"`
	Data      *GetLiveRoomListDataReq `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetLiveRoomListReq) Reset() {
	*x = GetLiveRoomListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[236]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLiveRoomListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLiveRoomListReq) ProtoMessage() {}

func (x *GetLiveRoomListReq) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[236]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLiveRoomListReq.ProtoReflect.Descriptor instead.
func (*GetLiveRoomListReq) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{236}
}

func (x *GetLiveRoomListReq) GetCurrent() int64 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *GetLiveRoomListReq) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *GetLiveRoomListReq) GetSortKey() string {
	if x != nil {
		return x.SortKey
	}
	return ""
}

func (x *GetLiveRoomListReq) GetSortField() []string {
	if x != nil {
		return x.SortField
	}
	return nil
}

func (x *GetLiveRoomListReq) GetData() *GetLiveRoomListDataReq {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetLiveRoomListDataReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MatchType     int64  `protobuf:"varint,1,opt,name=match_type,json=matchType,proto3" json:"match_type,omitempty"`            //赛事类型
	LiveStatus    int64  `protobuf:"varint,2,opt,name=live_status,json=liveStatus,proto3" json:"live_status,omitempty"`         // 直播状态
	MatchId       int64  `protobuf:"varint,3,opt,name=match_id,json=matchId,proto3" json:"match_id,omitempty"`                  // 赛事ID
	RoomName      string `protobuf:"bytes,4,opt,name=room_name,json=roomName,proto3" json:"room_name,omitempty"`                // 直播间名称
	AnchorAccount string `protobuf:"bytes,5,opt,name=anchor_account,json=anchorAccount,proto3" json:"anchor_account,omitempty"` // 主播账户
	StartTime     int64  `protobuf:"varint,6,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`            //开赛开始时间
	EndTime       int64  `protobuf:"varint,7,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`                  // 开赛结束时间
}

func (x *GetLiveRoomListDataReq) Reset() {
	*x = GetLiveRoomListDataReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[237]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLiveRoomListDataReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLiveRoomListDataReq) ProtoMessage() {}

func (x *GetLiveRoomListDataReq) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[237]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLiveRoomListDataReq.ProtoReflect.Descriptor instead.
func (*GetLiveRoomListDataReq) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{237}
}

func (x *GetLiveRoomListDataReq) GetMatchType() int64 {
	if x != nil {
		return x.MatchType
	}
	return 0
}

func (x *GetLiveRoomListDataReq) GetLiveStatus() int64 {
	if x != nil {
		return x.LiveStatus
	}
	return 0
}

func (x *GetLiveRoomListDataReq) GetMatchId() int64 {
	if x != nil {
		return x.MatchId
	}
	return 0
}

func (x *GetLiveRoomListDataReq) GetRoomName() string {
	if x != nil {
		return x.RoomName
	}
	return ""
}

func (x *GetLiveRoomListDataReq) GetAnchorAccount() string {
	if x != nil {
		return x.AnchorAccount
	}
	return ""
}

func (x *GetLiveRoomListDataReq) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *GetLiveRoomListDataReq) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

type GetLiveRoomListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int64                    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string                   `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *GetLiveRoomListDataResp `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetLiveRoomListResp) Reset() {
	*x = GetLiveRoomListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[238]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLiveRoomListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLiveRoomListResp) ProtoMessage() {}

func (x *GetLiveRoomListResp) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[238]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLiveRoomListResp.ProtoReflect.Descriptor instead.
func (*GetLiveRoomListResp) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{238}
}

func (x *GetLiveRoomListResp) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetLiveRoomListResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GetLiveRoomListResp) GetData() *GetLiveRoomListDataResp {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetLiveRoomListDataResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current string                         `protobuf:"bytes,1,opt,name=current,proto3" json:"current,omitempty"`
	Pages   string                         `protobuf:"bytes,2,opt,name=pages,proto3" json:"pages,omitempty"`
	Size    string                         `protobuf:"bytes,3,opt,name=size,proto3" json:"size,omitempty"`
	Total   string                         `protobuf:"bytes,4,opt,name=total,proto3" json:"total,omitempty"`
	List    []*GetLiveRoomListDataItemResp `protobuf:"bytes,5,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *GetLiveRoomListDataResp) Reset() {
	*x = GetLiveRoomListDataResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[239]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLiveRoomListDataResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLiveRoomListDataResp) ProtoMessage() {}

func (x *GetLiveRoomListDataResp) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[239]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLiveRoomListDataResp.ProtoReflect.Descriptor instead.
func (*GetLiveRoomListDataResp) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{239}
}

func (x *GetLiveRoomListDataResp) GetCurrent() string {
	if x != nil {
		return x.Current
	}
	return ""
}

func (x *GetLiveRoomListDataResp) GetPages() string {
	if x != nil {
		return x.Pages
	}
	return ""
}

func (x *GetLiveRoomListDataResp) GetSize() string {
	if x != nil {
		return x.Size
	}
	return ""
}

func (x *GetLiveRoomListDataResp) GetTotal() string {
	if x != nil {
		return x.Total
	}
	return ""
}

func (x *GetLiveRoomListDataResp) GetList() []*GetLiveRoomListDataItemResp {
	if x != nil {
		return x.List
	}
	return nil
}

type GetLiveRoomListDataItemResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	RoomName      string `protobuf:"bytes,2,opt,name=room_name,json=roomName,proto3" json:"room_name,omitempty"`
	AnchorNick    string `protobuf:"bytes,3,opt,name=anchor_nick,json=anchorNick,proto3" json:"anchor_nick,omitempty"`
	MatchId       int64  `protobuf:"varint,4,opt,name=match_id,json=matchId,proto3" json:"match_id,omitempty"`
	MatchType     int64  `protobuf:"varint,5,opt,name=match_type,json=matchType,proto3" json:"match_type,omitempty"`
	StartTime     int64  `protobuf:"varint,6,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime       int64  `protobuf:"varint,7,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	LiveStatus    int64  `protobuf:"varint,8,opt,name=live_status,json=liveStatus,proto3" json:"live_status,omitempty"`
	PushUrl       string `protobuf:"bytes,9,opt,name=push_url,json=pushUrl,proto3" json:"push_url,omitempty"`  // 推流信息
	PlayUrl       string `protobuf:"bytes,10,opt,name=play_url,json=playUrl,proto3" json:"play_url,omitempty"` //播放地址
	AnchorAccount string `protobuf:"bytes,11,opt,name=anchor_account,json=anchorAccount,proto3" json:"anchor_account,omitempty"`
	LeagueName    string `protobuf:"bytes,12,opt,name=league_name,json=leagueName,proto3" json:"league_name,omitempty"` // 联赛名称
	HomeTeam      string `protobuf:"bytes,13,opt,name=home_team,json=homeTeam,proto3" json:"home_team,omitempty"`
	AwayTeam      string `protobuf:"bytes,14,opt,name=away_team,json=awayTeam,proto3" json:"away_team,omitempty"`
	HomeLogo      string `protobuf:"bytes,15,opt,name=home_logo,json=homeLogo,proto3" json:"home_logo,omitempty"`
	AwayLogo      string `protobuf:"bytes,16,opt,name=away_logo,json=awayLogo,proto3" json:"away_logo,omitempty"`
	AnchorId      int64  `protobuf:"varint,17,opt,name=anchor_id,json=anchorId,proto3" json:"anchor_id,omitempty"`
	RoomImage     string `protobuf:"bytes,18,opt,name=room_image,json=roomImage,proto3" json:"room_image,omitempty"`
	AnchorAvatar  string `protobuf:"bytes,19,opt,name=anchor_avatar,json=anchorAvatar,proto3" json:"anchor_avatar,omitempty"`
	Position      int64  `protobuf:"varint,20,opt,name=position,proto3" json:"position,omitempty"` // 排序号
}

func (x *GetLiveRoomListDataItemResp) Reset() {
	*x = GetLiveRoomListDataItemResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[240]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLiveRoomListDataItemResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLiveRoomListDataItemResp) ProtoMessage() {}

func (x *GetLiveRoomListDataItemResp) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[240]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLiveRoomListDataItemResp.ProtoReflect.Descriptor instead.
func (*GetLiveRoomListDataItemResp) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{240}
}

func (x *GetLiveRoomListDataItemResp) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetLiveRoomListDataItemResp) GetRoomName() string {
	if x != nil {
		return x.RoomName
	}
	return ""
}

func (x *GetLiveRoomListDataItemResp) GetAnchorNick() string {
	if x != nil {
		return x.AnchorNick
	}
	return ""
}

func (x *GetLiveRoomListDataItemResp) GetMatchId() int64 {
	if x != nil {
		return x.MatchId
	}
	return 0
}

func (x *GetLiveRoomListDataItemResp) GetMatchType() int64 {
	if x != nil {
		return x.MatchType
	}
	return 0
}

func (x *GetLiveRoomListDataItemResp) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *GetLiveRoomListDataItemResp) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *GetLiveRoomListDataItemResp) GetLiveStatus() int64 {
	if x != nil {
		return x.LiveStatus
	}
	return 0
}

func (x *GetLiveRoomListDataItemResp) GetPushUrl() string {
	if x != nil {
		return x.PushUrl
	}
	return ""
}

func (x *GetLiveRoomListDataItemResp) GetPlayUrl() string {
	if x != nil {
		return x.PlayUrl
	}
	return ""
}

func (x *GetLiveRoomListDataItemResp) GetAnchorAccount() string {
	if x != nil {
		return x.AnchorAccount
	}
	return ""
}

func (x *GetLiveRoomListDataItemResp) GetLeagueName() string {
	if x != nil {
		return x.LeagueName
	}
	return ""
}

func (x *GetLiveRoomListDataItemResp) GetHomeTeam() string {
	if x != nil {
		return x.HomeTeam
	}
	return ""
}

func (x *GetLiveRoomListDataItemResp) GetAwayTeam() string {
	if x != nil {
		return x.AwayTeam
	}
	return ""
}

func (x *GetLiveRoomListDataItemResp) GetHomeLogo() string {
	if x != nil {
		return x.HomeLogo
	}
	return ""
}

func (x *GetLiveRoomListDataItemResp) GetAwayLogo() string {
	if x != nil {
		return x.AwayLogo
	}
	return ""
}

func (x *GetLiveRoomListDataItemResp) GetAnchorId() int64 {
	if x != nil {
		return x.AnchorId
	}
	return 0
}

func (x *GetLiveRoomListDataItemResp) GetRoomImage() string {
	if x != nil {
		return x.RoomImage
	}
	return ""
}

func (x *GetLiveRoomListDataItemResp) GetAnchorAvatar() string {
	if x != nil {
		return x.AnchorAvatar
	}
	return ""
}

func (x *GetLiveRoomListDataItemResp) GetPosition() int64 {
	if x != nil {
		return x.Position
	}
	return 0
}

type GetLiveRoomMatchListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current   int64                        `protobuf:"varint,1,opt,name=current,proto3" json:"current,omitempty"`
	Size      int64                        `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	SortKey   string                       `protobuf:"bytes,3,opt,name=sortKey,proto3" json:"sortKey,omitempty"`
	SortField []string                     `protobuf:"bytes,4,rep,name=sortField,proto3" json:"sortField,omitempty"`
	Data      *GetLiveRoomMatchListDataReq `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetLiveRoomMatchListReq) Reset() {
	*x = GetLiveRoomMatchListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[241]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLiveRoomMatchListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLiveRoomMatchListReq) ProtoMessage() {}

func (x *GetLiveRoomMatchListReq) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[241]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLiveRoomMatchListReq.ProtoReflect.Descriptor instead.
func (*GetLiveRoomMatchListReq) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{241}
}

func (x *GetLiveRoomMatchListReq) GetCurrent() int64 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *GetLiveRoomMatchListReq) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *GetLiveRoomMatchListReq) GetSortKey() string {
	if x != nil {
		return x.SortKey
	}
	return ""
}

func (x *GetLiveRoomMatchListReq) GetSortField() []string {
	if x != nil {
		return x.SortField
	}
	return nil
}

func (x *GetLiveRoomMatchListReq) GetData() *GetLiveRoomMatchListDataReq {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetLiveRoomMatchListDataReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SportsType      int64  `protobuf:"varint,1,opt,name=sportsType,proto3" json:"sportsType,omitempty"`
	CompetitionName string `protobuf:"bytes,2,opt,name=competitionName,proto3" json:"competitionName,omitempty"` // 联赛名称
	HomeTeamName    string `protobuf:"bytes,3,opt,name=homeTeamName,proto3" json:"homeTeamName,omitempty"`       //主队名称
	AwayTeamName    string `protobuf:"bytes,4,opt,name=awayTeamName,proto3" json:"awayTeamName,omitempty"`       //从队名称
	MatchID         int64  `protobuf:"varint,5,opt,name=matchID,proto3" json:"matchID,omitempty"`                // 赛事ID
	StatusID        int64  `protobuf:"varint,6,opt,name=statusID,proto3" json:"statusID,omitempty"`              // 赛事状态
	StartTime       int64  `protobuf:"varint,7,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime         int64  `protobuf:"varint,8,opt,name=endTime,proto3" json:"endTime,omitempty"`
}

func (x *GetLiveRoomMatchListDataReq) Reset() {
	*x = GetLiveRoomMatchListDataReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[242]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLiveRoomMatchListDataReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLiveRoomMatchListDataReq) ProtoMessage() {}

func (x *GetLiveRoomMatchListDataReq) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[242]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLiveRoomMatchListDataReq.ProtoReflect.Descriptor instead.
func (*GetLiveRoomMatchListDataReq) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{242}
}

func (x *GetLiveRoomMatchListDataReq) GetSportsType() int64 {
	if x != nil {
		return x.SportsType
	}
	return 0
}

func (x *GetLiveRoomMatchListDataReq) GetCompetitionName() string {
	if x != nil {
		return x.CompetitionName
	}
	return ""
}

func (x *GetLiveRoomMatchListDataReq) GetHomeTeamName() string {
	if x != nil {
		return x.HomeTeamName
	}
	return ""
}

func (x *GetLiveRoomMatchListDataReq) GetAwayTeamName() string {
	if x != nil {
		return x.AwayTeamName
	}
	return ""
}

func (x *GetLiveRoomMatchListDataReq) GetMatchID() int64 {
	if x != nil {
		return x.MatchID
	}
	return 0
}

func (x *GetLiveRoomMatchListDataReq) GetStatusID() int64 {
	if x != nil {
		return x.StatusID
	}
	return 0
}

func (x *GetLiveRoomMatchListDataReq) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *GetLiveRoomMatchListDataReq) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

type GetLiveRoomMatchListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int64                         `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string                        `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *GetLiveRoomMatchListDataResp `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetLiveRoomMatchListResp) Reset() {
	*x = GetLiveRoomMatchListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[243]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLiveRoomMatchListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLiveRoomMatchListResp) ProtoMessage() {}

func (x *GetLiveRoomMatchListResp) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[243]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLiveRoomMatchListResp.ProtoReflect.Descriptor instead.
func (*GetLiveRoomMatchListResp) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{243}
}

func (x *GetLiveRoomMatchListResp) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetLiveRoomMatchListResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GetLiveRoomMatchListResp) GetData() *GetLiveRoomMatchListDataResp {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetLiveRoomMatchListDataResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current string                              `protobuf:"bytes,1,opt,name=current,proto3" json:"current,omitempty"`
	Pages   string                              `protobuf:"bytes,2,opt,name=pages,proto3" json:"pages,omitempty"`
	Size    string                              `protobuf:"bytes,3,opt,name=size,proto3" json:"size,omitempty"`
	Total   string                              `protobuf:"bytes,4,opt,name=total,proto3" json:"total,omitempty"`
	List    []*GetLiveRoomMatchListDataItemResp `protobuf:"bytes,5,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *GetLiveRoomMatchListDataResp) Reset() {
	*x = GetLiveRoomMatchListDataResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[244]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLiveRoomMatchListDataResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLiveRoomMatchListDataResp) ProtoMessage() {}

func (x *GetLiveRoomMatchListDataResp) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[244]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLiveRoomMatchListDataResp.ProtoReflect.Descriptor instead.
func (*GetLiveRoomMatchListDataResp) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{244}
}

func (x *GetLiveRoomMatchListDataResp) GetCurrent() string {
	if x != nil {
		return x.Current
	}
	return ""
}

func (x *GetLiveRoomMatchListDataResp) GetPages() string {
	if x != nil {
		return x.Pages
	}
	return ""
}

func (x *GetLiveRoomMatchListDataResp) GetSize() string {
	if x != nil {
		return x.Size
	}
	return ""
}

func (x *GetLiveRoomMatchListDataResp) GetTotal() string {
	if x != nil {
		return x.Total
	}
	return ""
}

func (x *GetLiveRoomMatchListDataResp) GetList() []*GetLiveRoomMatchListDataItemResp {
	if x != nil {
		return x.List
	}
	return nil
}

type GetLiveRoomMatchListDataItemResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                          // 对应赛事ID
	CompetitionName string `protobuf:"bytes,2,opt,name=competitionName,proto3" json:"competitionName,omitempty"` // 联赛名称
	MatchTime       int64  `protobuf:"varint,3,opt,name=matchTime,proto3" json:"matchTime,omitempty"`            // 开赛时间
	HomeTeamName    string `protobuf:"bytes,4,opt,name=homeTeamName,proto3" json:"homeTeamName,omitempty"`       //主队名称
	HomeTeamLogo    string `protobuf:"bytes,5,opt,name=homeTeamLogo,proto3" json:"homeTeamLogo,omitempty"`       // 主队LOGO
	AwayTeamName    string `protobuf:"bytes,6,opt,name=awayTeamName,proto3" json:"awayTeamName,omitempty"`       // 客队名称
	AwayTeamLogo    string `protobuf:"bytes,7,opt,name=awayTeamLogo,proto3" json:"awayTeamLogo,omitempty"`       // 客队LOGO
}

func (x *GetLiveRoomMatchListDataItemResp) Reset() {
	*x = GetLiveRoomMatchListDataItemResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[245]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLiveRoomMatchListDataItemResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLiveRoomMatchListDataItemResp) ProtoMessage() {}

func (x *GetLiveRoomMatchListDataItemResp) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[245]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLiveRoomMatchListDataItemResp.ProtoReflect.Descriptor instead.
func (*GetLiveRoomMatchListDataItemResp) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{245}
}

func (x *GetLiveRoomMatchListDataItemResp) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetLiveRoomMatchListDataItemResp) GetCompetitionName() string {
	if x != nil {
		return x.CompetitionName
	}
	return ""
}

func (x *GetLiveRoomMatchListDataItemResp) GetMatchTime() int64 {
	if x != nil {
		return x.MatchTime
	}
	return 0
}

func (x *GetLiveRoomMatchListDataItemResp) GetHomeTeamName() string {
	if x != nil {
		return x.HomeTeamName
	}
	return ""
}

func (x *GetLiveRoomMatchListDataItemResp) GetHomeTeamLogo() string {
	if x != nil {
		return x.HomeTeamLogo
	}
	return ""
}

func (x *GetLiveRoomMatchListDataItemResp) GetAwayTeamName() string {
	if x != nil {
		return x.AwayTeamName
	}
	return ""
}

func (x *GetLiveRoomMatchListDataItemResp) GetAwayTeamLogo() string {
	if x != nil {
		return x.AwayTeamLogo
	}
	return ""
}

type FbTouristReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Device  string `protobuf:"bytes,1,opt,name=device,proto3" json:"device,omitempty"`
	MatchId int64  `protobuf:"varint,2,opt,name=matchId,proto3" json:"matchId,omitempty"`
	SportId int64  `protobuf:"varint,3,opt,name=sportId,proto3" json:"sportId,omitempty"`
}

func (x *FbTouristReq) Reset() {
	*x = FbTouristReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[246]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FbTouristReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FbTouristReq) ProtoMessage() {}

func (x *FbTouristReq) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[246]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FbTouristReq.ProtoReflect.Descriptor instead.
func (*FbTouristReq) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{246}
}

func (x *FbTouristReq) GetDevice() string {
	if x != nil {
		return x.Device
	}
	return ""
}

func (x *FbTouristReq) GetMatchId() int64 {
	if x != nil {
		return x.MatchId
	}
	return 0
}

func (x *FbTouristReq) GetSportId() int64 {
	if x != nil {
		return x.SportId
	}
	return 0
}

type FbTouristResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int64  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data string `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *FbTouristResp) Reset() {
	*x = FbTouristResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[247]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FbTouristResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FbTouristResp) ProtoMessage() {}

func (x *FbTouristResp) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[247]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FbTouristResp.ProtoReflect.Descriptor instead.
func (*FbTouristResp) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{247}
}

func (x *FbTouristResp) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *FbTouristResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *FbTouristResp) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

type LiveRoomCallBackReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Action  string `protobuf:"bytes,1,opt,name=action,proto3" json:"action,omitempty"`
	App     string `protobuf:"bytes,2,opt,name=app,proto3" json:"app,omitempty"`
	Appname string `protobuf:"bytes,3,opt,name=appname,proto3" json:"appname,omitempty"`
	Height  string `protobuf:"bytes,4,opt,name=height,proto3" json:"height,omitempty"`
	Id      string `protobuf:"bytes,5,opt,name=id,proto3" json:"id,omitempty"`
	Ip      string `protobuf:"bytes,6,opt,name=ip,proto3" json:"ip,omitempty"`
	Node    string `protobuf:"bytes,7,opt,name=node,proto3" json:"node,omitempty"`
	Time    string `protobuf:"bytes,8,opt,name=time,proto3" json:"time,omitempty"`
	Usrargs string `protobuf:"bytes,9,opt,name=usrargs,proto3" json:"usrargs,omitempty"`
	Width   string `protobuf:"bytes,10,opt,name=width,proto3" json:"width,omitempty"`
}

func (x *LiveRoomCallBackReq) Reset() {
	*x = LiveRoomCallBackReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[248]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LiveRoomCallBackReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LiveRoomCallBackReq) ProtoMessage() {}

func (x *LiveRoomCallBackReq) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[248]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LiveRoomCallBackReq.ProtoReflect.Descriptor instead.
func (*LiveRoomCallBackReq) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{248}
}

func (x *LiveRoomCallBackReq) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

func (x *LiveRoomCallBackReq) GetApp() string {
	if x != nil {
		return x.App
	}
	return ""
}

func (x *LiveRoomCallBackReq) GetAppname() string {
	if x != nil {
		return x.Appname
	}
	return ""
}

func (x *LiveRoomCallBackReq) GetHeight() string {
	if x != nil {
		return x.Height
	}
	return ""
}

func (x *LiveRoomCallBackReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *LiveRoomCallBackReq) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *LiveRoomCallBackReq) GetNode() string {
	if x != nil {
		return x.Node
	}
	return ""
}

func (x *LiveRoomCallBackReq) GetTime() string {
	if x != nil {
		return x.Time
	}
	return ""
}

func (x *LiveRoomCallBackReq) GetUsrargs() string {
	if x != nil {
		return x.Usrargs
	}
	return ""
}

func (x *LiveRoomCallBackReq) GetWidth() string {
	if x != nil {
		return x.Width
	}
	return ""
}

type LiveRoomCallBackResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int64  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data string `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *LiveRoomCallBackResp) Reset() {
	*x = LiveRoomCallBackResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[249]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LiveRoomCallBackResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LiveRoomCallBackResp) ProtoMessage() {}

func (x *LiveRoomCallBackResp) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[249]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LiveRoomCallBackResp.ProtoReflect.Descriptor instead.
func (*LiveRoomCallBackResp) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{249}
}

func (x *LiveRoomCallBackResp) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *LiveRoomCallBackResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *LiveRoomCallBackResp) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

type GetRecommendLiveRoomMatchListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current   int64                                 `protobuf:"varint,1,opt,name=current,proto3" json:"current,omitempty"`
	Size      int64                                 `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	SortKey   string                                `protobuf:"bytes,3,opt,name=sortKey,proto3" json:"sortKey,omitempty"`
	SortField []string                              `protobuf:"bytes,4,rep,name=sortField,proto3" json:"sortField,omitempty"`
	Data      *GetRecommendLiveRoomMatchLisDatatReq `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetRecommendLiveRoomMatchListReq) Reset() {
	*x = GetRecommendLiveRoomMatchListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[250]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRecommendLiveRoomMatchListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRecommendLiveRoomMatchListReq) ProtoMessage() {}

func (x *GetRecommendLiveRoomMatchListReq) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[250]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRecommendLiveRoomMatchListReq.ProtoReflect.Descriptor instead.
func (*GetRecommendLiveRoomMatchListReq) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{250}
}

func (x *GetRecommendLiveRoomMatchListReq) GetCurrent() int64 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *GetRecommendLiveRoomMatchListReq) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *GetRecommendLiveRoomMatchListReq) GetSortKey() string {
	if x != nil {
		return x.SortKey
	}
	return ""
}

func (x *GetRecommendLiveRoomMatchListReq) GetSortField() []string {
	if x != nil {
		return x.SortField
	}
	return nil
}

func (x *GetRecommendLiveRoomMatchListReq) GetData() *GetRecommendLiveRoomMatchLisDatatReq {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetRecommendLiveRoomMatchLisDatatReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SportsType int64 `protobuf:"varint,1,opt,name=sportsType,proto3" json:"sportsType,omitempty"`
}

func (x *GetRecommendLiveRoomMatchLisDatatReq) Reset() {
	*x = GetRecommendLiveRoomMatchLisDatatReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[251]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRecommendLiveRoomMatchLisDatatReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRecommendLiveRoomMatchLisDatatReq) ProtoMessage() {}

func (x *GetRecommendLiveRoomMatchLisDatatReq) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[251]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRecommendLiveRoomMatchLisDatatReq.ProtoReflect.Descriptor instead.
func (*GetRecommendLiveRoomMatchLisDatatReq) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{251}
}

func (x *GetRecommendLiveRoomMatchLisDatatReq) GetSportsType() int64 {
	if x != nil {
		return x.SportsType
	}
	return 0
}

type GetRecommendLiveRoomMatchListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int64                                  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string                                 `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *GetRecommendLiveRoomMatchListDataResp `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetRecommendLiveRoomMatchListResp) Reset() {
	*x = GetRecommendLiveRoomMatchListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[252]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRecommendLiveRoomMatchListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRecommendLiveRoomMatchListResp) ProtoMessage() {}

func (x *GetRecommendLiveRoomMatchListResp) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[252]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRecommendLiveRoomMatchListResp.ProtoReflect.Descriptor instead.
func (*GetRecommendLiveRoomMatchListResp) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{252}
}

func (x *GetRecommendLiveRoomMatchListResp) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetRecommendLiveRoomMatchListResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GetRecommendLiveRoomMatchListResp) GetData() *GetRecommendLiveRoomMatchListDataResp {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetRecommendLiveRoomMatchListDataResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current string                                       `protobuf:"bytes,1,opt,name=current,proto3" json:"current,omitempty"`
	Pages   string                                       `protobuf:"bytes,2,opt,name=pages,proto3" json:"pages,omitempty"`
	Size    string                                       `protobuf:"bytes,3,opt,name=size,proto3" json:"size,omitempty"`
	Total   string                                       `protobuf:"bytes,4,opt,name=total,proto3" json:"total,omitempty"`
	List    []*GetRecommendLiveRoomMatchListDataItemResp `protobuf:"bytes,5,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *GetRecommendLiveRoomMatchListDataResp) Reset() {
	*x = GetRecommendLiveRoomMatchListDataResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[253]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRecommendLiveRoomMatchListDataResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRecommendLiveRoomMatchListDataResp) ProtoMessage() {}

func (x *GetRecommendLiveRoomMatchListDataResp) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[253]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRecommendLiveRoomMatchListDataResp.ProtoReflect.Descriptor instead.
func (*GetRecommendLiveRoomMatchListDataResp) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{253}
}

func (x *GetRecommendLiveRoomMatchListDataResp) GetCurrent() string {
	if x != nil {
		return x.Current
	}
	return ""
}

func (x *GetRecommendLiveRoomMatchListDataResp) GetPages() string {
	if x != nil {
		return x.Pages
	}
	return ""
}

func (x *GetRecommendLiveRoomMatchListDataResp) GetSize() string {
	if x != nil {
		return x.Size
	}
	return ""
}

func (x *GetRecommendLiveRoomMatchListDataResp) GetTotal() string {
	if x != nil {
		return x.Total
	}
	return ""
}

func (x *GetRecommendLiveRoomMatchListDataResp) GetList() []*GetRecommendLiveRoomMatchListDataItemResp {
	if x != nil {
		return x.List
	}
	return nil
}

type GetRecommendLiveRoomMatchListDataItemResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MatchId         int64  `protobuf:"varint,1,opt,name=matchId,proto3" json:"matchId,omitempty"`                // 赛事
	RoomName        string `protobuf:"bytes,2,opt,name=roomName,proto3" json:"roomName,omitempty"`               // 直播间名称
	CompetitionName string `protobuf:"bytes,3,opt,name=competitionName,proto3" json:"competitionName,omitempty"` // 联赛名称
	MatchTime       int64  `protobuf:"varint,4,opt,name=matchTime,proto3" json:"matchTime,omitempty"`            // 开赛时间
	HomeTeamName    string `protobuf:"bytes,5,opt,name=homeTeamName,proto3" json:"homeTeamName,omitempty"`       //主队名称
	HomeTeamLogo    string `protobuf:"bytes,6,opt,name=homeTeamLogo,proto3" json:"homeTeamLogo,omitempty"`       // 主队LOGO
	AwayTeamName    string `protobuf:"bytes,7,opt,name=awayTeamName,proto3" json:"awayTeamName,omitempty"`       // 客队名称
	AwayTeamLogo    string `protobuf:"bytes,8,opt,name=awayTeamLogo,proto3" json:"awayTeamLogo,omitempty"`       // 客队LOGO
	HomeTeamScore   int64  `protobuf:"varint,9,opt,name=homeTeamScore,proto3" json:"homeTeamScore,omitempty"`    // 主队分数
	AwayTeamScore   int64  `protobuf:"varint,10,opt,name=awayTeamScore,proto3" json:"awayTeamScore,omitempty"`   // 客队分数 // 比分，数组形式，第一个数是主队分，第二个数是客队分
	MatchStatus     int64  `protobuf:"varint,11,opt,name=matchStatus,proto3" json:"matchStatus,omitempty"`       // 赛事状态 1==未开赛 3==结束 5==其他
	LiveStatus      int64  `protobuf:"varint,12,opt,name=liveStatus,proto3" json:"liveStatus,omitempty"`         // 直播状态 1==未开赛 3==直播中 5==已结束
	PlayUrl         string `protobuf:"bytes,13,opt,name=playUrl,proto3" json:"playUrl,omitempty"`                // 播放地址
	Position        int64  `protobuf:"varint,14,opt,name=position,proto3" json:"position,omitempty"`             // 排序号
	SportId         int64  `protobuf:"varint,15,opt,name=sportId,proto3" json:"sportId,omitempty"`               // 类型
	RoomImage       string `protobuf:"bytes,16,opt,name=roomImage,proto3" json:"roomImage,omitempty"`            //直播间封面
	RnchorAvatar    string `protobuf:"bytes,17,opt,name=rnchorAvatar,proto3" json:"rnchorAvatar,omitempty"`      //主播头像
	RnchorNick      string `protobuf:"bytes,18,opt,name=rnchorNick,proto3" json:"rnchorNick,omitempty"`          //主播昵称
}

func (x *GetRecommendLiveRoomMatchListDataItemResp) Reset() {
	*x = GetRecommendLiveRoomMatchListDataItemResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[254]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRecommendLiveRoomMatchListDataItemResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRecommendLiveRoomMatchListDataItemResp) ProtoMessage() {}

func (x *GetRecommendLiveRoomMatchListDataItemResp) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[254]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRecommendLiveRoomMatchListDataItemResp.ProtoReflect.Descriptor instead.
func (*GetRecommendLiveRoomMatchListDataItemResp) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{254}
}

func (x *GetRecommendLiveRoomMatchListDataItemResp) GetMatchId() int64 {
	if x != nil {
		return x.MatchId
	}
	return 0
}

func (x *GetRecommendLiveRoomMatchListDataItemResp) GetRoomName() string {
	if x != nil {
		return x.RoomName
	}
	return ""
}

func (x *GetRecommendLiveRoomMatchListDataItemResp) GetCompetitionName() string {
	if x != nil {
		return x.CompetitionName
	}
	return ""
}

func (x *GetRecommendLiveRoomMatchListDataItemResp) GetMatchTime() int64 {
	if x != nil {
		return x.MatchTime
	}
	return 0
}

func (x *GetRecommendLiveRoomMatchListDataItemResp) GetHomeTeamName() string {
	if x != nil {
		return x.HomeTeamName
	}
	return ""
}

func (x *GetRecommendLiveRoomMatchListDataItemResp) GetHomeTeamLogo() string {
	if x != nil {
		return x.HomeTeamLogo
	}
	return ""
}

func (x *GetRecommendLiveRoomMatchListDataItemResp) GetAwayTeamName() string {
	if x != nil {
		return x.AwayTeamName
	}
	return ""
}

func (x *GetRecommendLiveRoomMatchListDataItemResp) GetAwayTeamLogo() string {
	if x != nil {
		return x.AwayTeamLogo
	}
	return ""
}

func (x *GetRecommendLiveRoomMatchListDataItemResp) GetHomeTeamScore() int64 {
	if x != nil {
		return x.HomeTeamScore
	}
	return 0
}

func (x *GetRecommendLiveRoomMatchListDataItemResp) GetAwayTeamScore() int64 {
	if x != nil {
		return x.AwayTeamScore
	}
	return 0
}

func (x *GetRecommendLiveRoomMatchListDataItemResp) GetMatchStatus() int64 {
	if x != nil {
		return x.MatchStatus
	}
	return 0
}

func (x *GetRecommendLiveRoomMatchListDataItemResp) GetLiveStatus() int64 {
	if x != nil {
		return x.LiveStatus
	}
	return 0
}

func (x *GetRecommendLiveRoomMatchListDataItemResp) GetPlayUrl() string {
	if x != nil {
		return x.PlayUrl
	}
	return ""
}

func (x *GetRecommendLiveRoomMatchListDataItemResp) GetPosition() int64 {
	if x != nil {
		return x.Position
	}
	return 0
}

func (x *GetRecommendLiveRoomMatchListDataItemResp) GetSportId() int64 {
	if x != nil {
		return x.SportId
	}
	return 0
}

func (x *GetRecommendLiveRoomMatchListDataItemResp) GetRoomImage() string {
	if x != nil {
		return x.RoomImage
	}
	return ""
}

func (x *GetRecommendLiveRoomMatchListDataItemResp) GetRnchorAvatar() string {
	if x != nil {
		return x.RnchorAvatar
	}
	return ""
}

func (x *GetRecommendLiveRoomMatchListDataItemResp) GetRnchorNick() string {
	if x != nil {
		return x.RnchorNick
	}
	return ""
}

type GetRecommentLiveRoomMatchDetailOptionReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MatchId      int64  `protobuf:"varint,1,opt,name=matchId,proto3" json:"matchId,omitempty"`          // 赛事ID
	LanguageType string `protobuf:"bytes,2,opt,name=languageType,proto3" json:"languageType,omitempty"` // 语言类型
	Device       string `protobuf:"bytes,3,opt,name=device,proto3" json:"device,omitempty"`             //设备id
}

func (x *GetRecommentLiveRoomMatchDetailOptionReq) Reset() {
	*x = GetRecommentLiveRoomMatchDetailOptionReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[255]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRecommentLiveRoomMatchDetailOptionReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRecommentLiveRoomMatchDetailOptionReq) ProtoMessage() {}

func (x *GetRecommentLiveRoomMatchDetailOptionReq) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[255]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRecommentLiveRoomMatchDetailOptionReq.ProtoReflect.Descriptor instead.
func (*GetRecommentLiveRoomMatchDetailOptionReq) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{255}
}

func (x *GetRecommentLiveRoomMatchDetailOptionReq) GetMatchId() int64 {
	if x != nil {
		return x.MatchId
	}
	return 0
}

func (x *GetRecommentLiveRoomMatchDetailOptionReq) GetLanguageType() string {
	if x != nil {
		return x.LanguageType
	}
	return ""
}

func (x *GetRecommentLiveRoomMatchDetailOptionReq) GetDevice() string {
	if x != nil {
		return x.Device
	}
	return ""
}

type GetRecommentLiveRoomMatchDetailOptionResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code         int64                                            `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg          string                                           `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data         []*GetRecommentLiveRoomMatchDetailOptionDataResp `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
	StartGameUrl string                                           `protobuf:"bytes,4,opt,name=startGameUrl,proto3" json:"startGameUrl,omitempty"` // 游戏地址
}

func (x *GetRecommentLiveRoomMatchDetailOptionResp) Reset() {
	*x = GetRecommentLiveRoomMatchDetailOptionResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[256]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRecommentLiveRoomMatchDetailOptionResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRecommentLiveRoomMatchDetailOptionResp) ProtoMessage() {}

func (x *GetRecommentLiveRoomMatchDetailOptionResp) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[256]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRecommentLiveRoomMatchDetailOptionResp.ProtoReflect.Descriptor instead.
func (*GetRecommentLiveRoomMatchDetailOptionResp) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{256}
}

func (x *GetRecommentLiveRoomMatchDetailOptionResp) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetRecommentLiveRoomMatchDetailOptionResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GetRecommentLiveRoomMatchDetailOptionResp) GetData() []*GetRecommentLiveRoomMatchDetailOptionDataResp {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *GetRecommentLiveRoomMatchDetailOptionResp) GetStartGameUrl() string {
	if x != nil {
		return x.StartGameUrl
	}
	return ""
}

type GetRecommentLiveRoomMatchDetailOptionDataResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mty     int64                                                `protobuf:"varint,1,opt,name=mty,proto3" json:"mty,omitempty"`        // 玩法类型，如 亚盘、大小球等 , see enum: market_type
	MtyName string                                               `protobuf:"bytes,2,opt,name=mtyName,proto3" json:"mtyName,omitempty"` // 玩法类型名称
	Options []*GetRecommentLiveRoomMatchDetailOptionDataItemResp `protobuf:"bytes,3,rep,name=Options,proto3" json:"Options,omitempty"` // 选项
}

func (x *GetRecommentLiveRoomMatchDetailOptionDataResp) Reset() {
	*x = GetRecommentLiveRoomMatchDetailOptionDataResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[257]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRecommentLiveRoomMatchDetailOptionDataResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRecommentLiveRoomMatchDetailOptionDataResp) ProtoMessage() {}

func (x *GetRecommentLiveRoomMatchDetailOptionDataResp) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[257]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRecommentLiveRoomMatchDetailOptionDataResp.ProtoReflect.Descriptor instead.
func (*GetRecommentLiveRoomMatchDetailOptionDataResp) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{257}
}

func (x *GetRecommentLiveRoomMatchDetailOptionDataResp) GetMty() int64 {
	if x != nil {
		return x.Mty
	}
	return 0
}

func (x *GetRecommentLiveRoomMatchDetailOptionDataResp) GetMtyName() string {
	if x != nil {
		return x.MtyName
	}
	return ""
}

func (x *GetRecommentLiveRoomMatchDetailOptionDataResp) GetOptions() []*GetRecommentLiveRoomMatchDetailOptionDataItemResp {
	if x != nil {
		return x.Options
	}
	return nil
}

type GetRecommentLiveRoomMatchDetailOptionDataItemResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ty     int64   `protobuf:"varint,1,opt,name=ty,proto3" json:"ty,omitempty"`        // 选项类型
	TyName string  `protobuf:"bytes,2,opt,name=tyName,proto3" json:"tyName,omitempty"` //选项类型名称
	Od     float32 `protobuf:"fixed32,3,opt,name=od,proto3" json:"od,omitempty"`       // 欧盘赔率
}

func (x *GetRecommentLiveRoomMatchDetailOptionDataItemResp) Reset() {
	*x = GetRecommentLiveRoomMatchDetailOptionDataItemResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[258]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRecommentLiveRoomMatchDetailOptionDataItemResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRecommentLiveRoomMatchDetailOptionDataItemResp) ProtoMessage() {}

func (x *GetRecommentLiveRoomMatchDetailOptionDataItemResp) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[258]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRecommentLiveRoomMatchDetailOptionDataItemResp.ProtoReflect.Descriptor instead.
func (*GetRecommentLiveRoomMatchDetailOptionDataItemResp) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{258}
}

func (x *GetRecommentLiveRoomMatchDetailOptionDataItemResp) GetTy() int64 {
	if x != nil {
		return x.Ty
	}
	return 0
}

func (x *GetRecommentLiveRoomMatchDetailOptionDataItemResp) GetTyName() string {
	if x != nil {
		return x.TyName
	}
	return ""
}

func (x *GetRecommentLiveRoomMatchDetailOptionDataItemResp) GetOd() float32 {
	if x != nil {
		return x.Od
	}
	return 0
}

type GetRecommentLiveRoomMatchResultReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MatchId      int64  `protobuf:"varint,1,opt,name=matchId,proto3" json:"matchId,omitempty"` //
	LanguageType string `protobuf:"bytes,2,opt,name=languageType,proto3" json:"languageType,omitempty"`
}

func (x *GetRecommentLiveRoomMatchResultReq) Reset() {
	*x = GetRecommentLiveRoomMatchResultReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[259]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRecommentLiveRoomMatchResultReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRecommentLiveRoomMatchResultReq) ProtoMessage() {}

func (x *GetRecommentLiveRoomMatchResultReq) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[259]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRecommentLiveRoomMatchResultReq.ProtoReflect.Descriptor instead.
func (*GetRecommentLiveRoomMatchResultReq) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{259}
}

func (x *GetRecommentLiveRoomMatchResultReq) GetMatchId() int64 {
	if x != nil {
		return x.MatchId
	}
	return 0
}

func (x *GetRecommentLiveRoomMatchResultReq) GetLanguageType() string {
	if x != nil {
		return x.LanguageType
	}
	return ""
}

type GetRecommentLiveRoomMatchResultResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int64                                    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string                                   `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *GetRecommentLiveRoomMatchResultDataResp `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetRecommentLiveRoomMatchResultResp) Reset() {
	*x = GetRecommentLiveRoomMatchResultResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[260]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRecommentLiveRoomMatchResultResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRecommentLiveRoomMatchResultResp) ProtoMessage() {}

func (x *GetRecommentLiveRoomMatchResultResp) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[260]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRecommentLiveRoomMatchResultResp.ProtoReflect.Descriptor instead.
func (*GetRecommentLiveRoomMatchResultResp) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{260}
}

func (x *GetRecommentLiveRoomMatchResultResp) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetRecommentLiveRoomMatchResultResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GetRecommentLiveRoomMatchResultResp) GetData() *GetRecommentLiveRoomMatchResultDataResp {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetRecommentLiveRoomMatchResultDataResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HomeTeamScore int64 `protobuf:"varint,1,opt,name=homeTeamScore,proto3" json:"homeTeamScore,omitempty"` // 主队分数
	AwayTeamScore int64 `protobuf:"varint,2,opt,name=awayTeamScore,proto3" json:"awayTeamScore,omitempty"` // 客队分数
}

func (x *GetRecommentLiveRoomMatchResultDataResp) Reset() {
	*x = GetRecommentLiveRoomMatchResultDataResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[261]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRecommentLiveRoomMatchResultDataResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRecommentLiveRoomMatchResultDataResp) ProtoMessage() {}

func (x *GetRecommentLiveRoomMatchResultDataResp) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[261]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRecommentLiveRoomMatchResultDataResp.ProtoReflect.Descriptor instead.
func (*GetRecommentLiveRoomMatchResultDataResp) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{261}
}

func (x *GetRecommentLiveRoomMatchResultDataResp) GetHomeTeamScore() int64 {
	if x != nil {
		return x.HomeTeamScore
	}
	return 0
}

func (x *GetRecommentLiveRoomMatchResultDataResp) GetAwayTeamScore() int64 {
	if x != nil {
		return x.AwayTeamScore
	}
	return 0
}

type SaBaTouristReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Menutype string `protobuf:"bytes,1,opt,name=menutype,proto3" json:"menutype,omitempty"`
	Act      string `protobuf:"bytes,2,opt,name=act,proto3" json:"act,omitempty"`
	Market   string `protobuf:"bytes,3,opt,name=market,proto3" json:"market,omitempty"`
	Device   string `protobuf:"bytes,4,opt,name=Device,proto3" json:"Device,omitempty"`
}

func (x *SaBaTouristReq) Reset() {
	*x = SaBaTouristReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[262]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaBaTouristReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaBaTouristReq) ProtoMessage() {}

func (x *SaBaTouristReq) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[262]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaBaTouristReq.ProtoReflect.Descriptor instead.
func (*SaBaTouristReq) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{262}
}

func (x *SaBaTouristReq) GetMenutype() string {
	if x != nil {
		return x.Menutype
	}
	return ""
}

func (x *SaBaTouristReq) GetAct() string {
	if x != nil {
		return x.Act
	}
	return ""
}

func (x *SaBaTouristReq) GetMarket() string {
	if x != nil {
		return x.Market
	}
	return ""
}

func (x *SaBaTouristReq) GetDevice() string {
	if x != nil {
		return x.Device
	}
	return ""
}

type SaBaTouristResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data string `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *SaBaTouristResp) Reset() {
	*x = SaBaTouristResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[263]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaBaTouristResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaBaTouristResp) ProtoMessage() {}

func (x *SaBaTouristResp) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[263]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaBaTouristResp.ProtoReflect.Descriptor instead.
func (*SaBaTouristResp) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{263}
}

func (x *SaBaTouristResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *SaBaTouristResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *SaBaTouristResp) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

type PlatformGameListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameTypeId int64 `protobuf:"varint,1,opt,name=gameTypeId,proto3" json:"gameTypeId,omitempty"`
}

func (x *PlatformGameListReq) Reset() {
	*x = PlatformGameListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[264]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlatformGameListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlatformGameListReq) ProtoMessage() {}

func (x *PlatformGameListReq) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[264]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlatformGameListReq.ProtoReflect.Descriptor instead.
func (*PlatformGameListReq) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{264}
}

func (x *PlatformGameListReq) GetGameTypeId() int64 {
	if x != nil {
		return x.GameTypeId
	}
	return 0
}

type PlatformGameListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32                   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string                  `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data []*PlatformGameDataResp `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *PlatformGameListResp) Reset() {
	*x = PlatformGameListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[265]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlatformGameListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlatformGameListResp) ProtoMessage() {}

func (x *PlatformGameListResp) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[265]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlatformGameListResp.ProtoReflect.Descriptor instead.
func (*PlatformGameListResp) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{265}
}

func (x *PlatformGameListResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *PlatformGameListResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *PlatformGameListResp) GetData() []*PlatformGameDataResp {
	if x != nil {
		return x.Data
	}
	return nil
}

type PlatformGameDataResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name           string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	GamePagcorId   int64  `protobuf:"varint,3,opt,name=gamePagcorId,proto3" json:"gamePagcorId,omitempty"`
	GameProviderId int64  `protobuf:"varint,4,opt,name=gameProviderId,proto3" json:"gameProviderId,omitempty"`
	GameTypeId     int64  `protobuf:"varint,5,opt,name=gameTypeId,proto3" json:"gameTypeId,omitempty"`
	Icon           string `protobuf:"bytes,6,opt,name=icon,proto3" json:"icon,omitempty"`
	Model          string `protobuf:"bytes,7,opt,name=model,proto3" json:"model,omitempty"`
	PagcorRate     string `protobuf:"bytes,8,opt,name=pagcorRate,proto3" json:"pagcorRate,omitempty"`
	ProviderRate   string `protobuf:"bytes,9,opt,name=providerRate,proto3" json:"providerRate,omitempty"`
}

func (x *PlatformGameDataResp) Reset() {
	*x = PlatformGameDataResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[266]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlatformGameDataResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlatformGameDataResp) ProtoMessage() {}

func (x *PlatformGameDataResp) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[266]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlatformGameDataResp.ProtoReflect.Descriptor instead.
func (*PlatformGameDataResp) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{266}
}

func (x *PlatformGameDataResp) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PlatformGameDataResp) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PlatformGameDataResp) GetGamePagcorId() int64 {
	if x != nil {
		return x.GamePagcorId
	}
	return 0
}

func (x *PlatformGameDataResp) GetGameProviderId() int64 {
	if x != nil {
		return x.GameProviderId
	}
	return 0
}

func (x *PlatformGameDataResp) GetGameTypeId() int64 {
	if x != nil {
		return x.GameTypeId
	}
	return 0
}

func (x *PlatformGameDataResp) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *PlatformGameDataResp) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

func (x *PlatformGameDataResp) GetPagcorRate() string {
	if x != nil {
		return x.PagcorRate
	}
	return ""
}

func (x *PlatformGameDataResp) GetProviderRate() string {
	if x != nil {
		return x.ProviderRate
	}
	return ""
}

type PlatformPlatListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current   int64                    `protobuf:"varint,1,opt,name=current,proto3" json:"current,omitempty"`
	Size      int64                    `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	SortKey   string                   `protobuf:"bytes,3,opt,name=sortKey,proto3" json:"sortKey,omitempty"`
	SortField []string                 `protobuf:"bytes,4,rep,name=sortField,proto3" json:"sortField,omitempty"`
	Data      *PlatformPlatListDataReq `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *PlatformPlatListReq) Reset() {
	*x = PlatformPlatListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[267]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlatformPlatListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlatformPlatListReq) ProtoMessage() {}

func (x *PlatformPlatListReq) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[267]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlatformPlatListReq.ProtoReflect.Descriptor instead.
func (*PlatformPlatListReq) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{267}
}

func (x *PlatformPlatListReq) GetCurrent() int64 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *PlatformPlatListReq) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *PlatformPlatListReq) GetSortKey() string {
	if x != nil {
		return x.SortKey
	}
	return ""
}

func (x *PlatformPlatListReq) GetSortField() []string {
	if x != nil {
		return x.SortField
	}
	return nil
}

func (x *PlatformPlatListReq) GetData() *PlatformPlatListDataReq {
	if x != nil {
		return x.Data
	}
	return nil
}

type PlatformPlatListDataReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code   string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Name   string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Status string `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *PlatformPlatListDataReq) Reset() {
	*x = PlatformPlatListDataReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[268]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlatformPlatListDataReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlatformPlatListDataReq) ProtoMessage() {}

func (x *PlatformPlatListDataReq) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[268]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlatformPlatListDataReq.ProtoReflect.Descriptor instead.
func (*PlatformPlatListDataReq) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{268}
}

func (x *PlatformPlatListDataReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *PlatformPlatListDataReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PlatformPlatListDataReq) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type PlatformPlatListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int64                     `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string                    `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *PlatformPlatListDataResp `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *PlatformPlatListResp) Reset() {
	*x = PlatformPlatListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[269]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlatformPlatListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlatformPlatListResp) ProtoMessage() {}

func (x *PlatformPlatListResp) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[269]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlatformPlatListResp.ProtoReflect.Descriptor instead.
func (*PlatformPlatListResp) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{269}
}

func (x *PlatformPlatListResp) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *PlatformPlatListResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *PlatformPlatListResp) GetData() *PlatformPlatListDataResp {
	if x != nil {
		return x.Data
	}
	return nil
}

type PlatformPlatListDataResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current string                          `protobuf:"bytes,1,opt,name=current,proto3" json:"current,omitempty"`
	Pages   string                          `protobuf:"bytes,2,opt,name=pages,proto3" json:"pages,omitempty"`
	Size    string                          `protobuf:"bytes,3,opt,name=size,proto3" json:"size,omitempty"`
	Total   string                          `protobuf:"bytes,4,opt,name=total,proto3" json:"total,omitempty"`
	List    []*PlatformPlatListDataItemResp `protobuf:"bytes,5,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *PlatformPlatListDataResp) Reset() {
	*x = PlatformPlatListDataResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[270]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlatformPlatListDataResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlatformPlatListDataResp) ProtoMessage() {}

func (x *PlatformPlatListDataResp) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[270]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlatformPlatListDataResp.ProtoReflect.Descriptor instead.
func (*PlatformPlatListDataResp) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{270}
}

func (x *PlatformPlatListDataResp) GetCurrent() string {
	if x != nil {
		return x.Current
	}
	return ""
}

func (x *PlatformPlatListDataResp) GetPages() string {
	if x != nil {
		return x.Pages
	}
	return ""
}

func (x *PlatformPlatListDataResp) GetSize() string {
	if x != nil {
		return x.Size
	}
	return ""
}

func (x *PlatformPlatListDataResp) GetTotal() string {
	if x != nil {
		return x.Total
	}
	return ""
}

func (x *PlatformPlatListDataResp) GetList() []*PlatformPlatListDataItemResp {
	if x != nil {
		return x.List
	}
	return nil
}

type PlatformPlatListDataItemResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name             string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Status           int64  `protobuf:"varint,3,opt,name=status,proto3" json:"status,omitempty"`
	Code             string `protobuf:"bytes,4,opt,name=code,proto3" json:"code,omitempty"`
	GameProviderId   int64  `protobuf:"varint,5,opt,name=gameProviderId,proto3" json:"gameProviderId,omitempty"`
	GameProviderName string `protobuf:"bytes,6,opt,name=gameProviderName,proto3" json:"gameProviderName,omitempty"`
	GameTypeId       int64  `protobuf:"varint,7,opt,name=gameTypeId,proto3" json:"gameTypeId,omitempty"`
	GameTypeName     string `protobuf:"bytes,8,opt,name=gameTypeName,proto3" json:"gameTypeName,omitempty"`
	Maintenance      string `protobuf:"bytes,9,opt,name=maintenance,proto3" json:"maintenance,omitempty"`
	OperatorName     string `protobuf:"bytes,10,opt,name=operatorName,proto3" json:"operatorName,omitempty"`
	ProviderRate     string `protobuf:"bytes,11,opt,name=providerRate,proto3" json:"providerRate,omitempty"`
	Remark           string `protobuf:"bytes,12,opt,name=remark,proto3" json:"remark,omitempty"`
	Sort             int64  `protobuf:"varint,13,opt,name=sort,proto3" json:"sort,omitempty"`
	UpdatedAt        int64  `protobuf:"varint,14,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	UpdatedUser      string `protobuf:"bytes,15,opt,name=updatedUser,proto3" json:"updatedUser,omitempty"`
}

func (x *PlatformPlatListDataItemResp) Reset() {
	*x = PlatformPlatListDataItemResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[271]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlatformPlatListDataItemResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlatformPlatListDataItemResp) ProtoMessage() {}

func (x *PlatformPlatListDataItemResp) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[271]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlatformPlatListDataItemResp.ProtoReflect.Descriptor instead.
func (*PlatformPlatListDataItemResp) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{271}
}

func (x *PlatformPlatListDataItemResp) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PlatformPlatListDataItemResp) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PlatformPlatListDataItemResp) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *PlatformPlatListDataItemResp) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *PlatformPlatListDataItemResp) GetGameProviderId() int64 {
	if x != nil {
		return x.GameProviderId
	}
	return 0
}

func (x *PlatformPlatListDataItemResp) GetGameProviderName() string {
	if x != nil {
		return x.GameProviderName
	}
	return ""
}

func (x *PlatformPlatListDataItemResp) GetGameTypeId() int64 {
	if x != nil {
		return x.GameTypeId
	}
	return 0
}

func (x *PlatformPlatListDataItemResp) GetGameTypeName() string {
	if x != nil {
		return x.GameTypeName
	}
	return ""
}

func (x *PlatformPlatListDataItemResp) GetMaintenance() string {
	if x != nil {
		return x.Maintenance
	}
	return ""
}

func (x *PlatformPlatListDataItemResp) GetOperatorName() string {
	if x != nil {
		return x.OperatorName
	}
	return ""
}

func (x *PlatformPlatListDataItemResp) GetProviderRate() string {
	if x != nil {
		return x.ProviderRate
	}
	return ""
}

func (x *PlatformPlatListDataItemResp) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *PlatformPlatListDataItemResp) GetSort() int64 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *PlatformPlatListDataItemResp) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *PlatformPlatListDataItemResp) GetUpdatedUser() string {
	if x != nil {
		return x.UpdatedUser
	}
	return ""
}

type GetGamesByCategoryReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetGamesByCategoryReq) Reset() {
	*x = GetGamesByCategoryReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[272]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGamesByCategoryReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGamesByCategoryReq) ProtoMessage() {}

func (x *GetGamesByCategoryReq) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[272]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGamesByCategoryReq.ProtoReflect.Descriptor instead.
func (*GetGamesByCategoryReq) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{272}
}

type GetGamesByCategoryResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int64                         `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string                        `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data []*GetGamesByCategoryDataResp `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *GetGamesByCategoryResp) Reset() {
	*x = GetGamesByCategoryResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[273]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGamesByCategoryResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGamesByCategoryResp) ProtoMessage() {}

func (x *GetGamesByCategoryResp) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[273]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGamesByCategoryResp.ProtoReflect.Descriptor instead.
func (*GetGamesByCategoryResp) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{273}
}

func (x *GetGamesByCategoryResp) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetGamesByCategoryResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GetGamesByCategoryResp) GetData() []*GetGamesByCategoryDataResp {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetGamesByCategoryDataResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name           string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	GamePagcorId   int64  `protobuf:"varint,3,opt,name=gamePagcorId,proto3" json:"gamePagcorId,omitempty"`
	GameProviderId int64  `protobuf:"varint,4,opt,name=gameProviderId,proto3" json:"gameProviderId,omitempty"`
	GameTypeId     int64  `protobuf:"varint,5,opt,name=gameTypeId,proto3" json:"gameTypeId,omitempty"`
	Icon           string `protobuf:"bytes,6,opt,name=icon,proto3" json:"icon,omitempty"`
	Model          string `protobuf:"bytes,7,opt,name=model,proto3" json:"model,omitempty"`
	PagcorRate     string `protobuf:"bytes,8,opt,name=pagcorRate,proto3" json:"pagcorRate,omitempty"`
	ProviderRate   string `protobuf:"bytes,9,opt,name=providerRate,proto3" json:"providerRate,omitempty"`
}

func (x *GetGamesByCategoryDataResp) Reset() {
	*x = GetGamesByCategoryDataResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[274]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGamesByCategoryDataResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGamesByCategoryDataResp) ProtoMessage() {}

func (x *GetGamesByCategoryDataResp) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[274]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGamesByCategoryDataResp.ProtoReflect.Descriptor instead.
func (*GetGamesByCategoryDataResp) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{274}
}

func (x *GetGamesByCategoryDataResp) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetGamesByCategoryDataResp) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetGamesByCategoryDataResp) GetGamePagcorId() int64 {
	if x != nil {
		return x.GamePagcorId
	}
	return 0
}

func (x *GetGamesByCategoryDataResp) GetGameProviderId() int64 {
	if x != nil {
		return x.GameProviderId
	}
	return 0
}

func (x *GetGamesByCategoryDataResp) GetGameTypeId() int64 {
	if x != nil {
		return x.GameTypeId
	}
	return 0
}

func (x *GetGamesByCategoryDataResp) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *GetGamesByCategoryDataResp) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

func (x *GetGamesByCategoryDataResp) GetPagcorRate() string {
	if x != nil {
		return x.PagcorRate
	}
	return ""
}

func (x *GetGamesByCategoryDataResp) GetProviderRate() string {
	if x != nil {
		return x.ProviderRate
	}
	return ""
}

type GamePagcorListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GamePagcorListReq) Reset() {
	*x = GamePagcorListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[275]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GamePagcorListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GamePagcorListReq) ProtoMessage() {}

func (x *GamePagcorListReq) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[275]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GamePagcorListReq.ProtoReflect.Descriptor instead.
func (*GamePagcorListReq) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{275}
}

type GamePagcorListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int64                     `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string                    `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data []*GamePagcorListDataResp `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *GamePagcorListResp) Reset() {
	*x = GamePagcorListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[276]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GamePagcorListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GamePagcorListResp) ProtoMessage() {}

func (x *GamePagcorListResp) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[276]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GamePagcorListResp.ProtoReflect.Descriptor instead.
func (*GamePagcorListResp) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{276}
}

func (x *GamePagcorListResp) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GamePagcorListResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GamePagcorListResp) GetData() []*GamePagcorListDataResp {
	if x != nil {
		return x.Data
	}
	return nil
}

type GamePagcorListDataResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name   string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Status int64  `protobuf:"varint,3,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *GamePagcorListDataResp) Reset() {
	*x = GamePagcorListDataResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[277]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GamePagcorListDataResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GamePagcorListDataResp) ProtoMessage() {}

func (x *GamePagcorListDataResp) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[277]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GamePagcorListDataResp.ProtoReflect.Descriptor instead.
func (*GamePagcorListDataResp) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{277}
}

func (x *GamePagcorListDataResp) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GamePagcorListDataResp) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GamePagcorListDataResp) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

type GameProviderListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GameProviderListReq) Reset() {
	*x = GameProviderListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[278]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameProviderListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameProviderListReq) ProtoMessage() {}

func (x *GameProviderListReq) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[278]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameProviderListReq.ProtoReflect.Descriptor instead.
func (*GameProviderListReq) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{278}
}

type GameProviderListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int64                       `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string                      `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data []*GameProviderListDataResp `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *GameProviderListResp) Reset() {
	*x = GameProviderListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[279]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameProviderListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameProviderListResp) ProtoMessage() {}

func (x *GameProviderListResp) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[279]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameProviderListResp.ProtoReflect.Descriptor instead.
func (*GameProviderListResp) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{279}
}

func (x *GameProviderListResp) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GameProviderListResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GameProviderListResp) GetData() []*GameProviderListDataResp {
	if x != nil {
		return x.Data
	}
	return nil
}

type GameProviderListDataResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name   string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Status string `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	Code   string `protobuf:"bytes,4,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *GameProviderListDataResp) Reset() {
	*x = GameProviderListDataResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[280]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameProviderListDataResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameProviderListDataResp) ProtoMessage() {}

func (x *GameProviderListDataResp) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[280]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameProviderListDataResp.ProtoReflect.Descriptor instead.
func (*GameProviderListDataResp) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{280}
}

func (x *GameProviderListDataResp) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GameProviderListDataResp) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GameProviderListDataResp) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *GameProviderListDataResp) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type LoginUserCountChartReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type      string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Username  string `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	StartTime int64  `protobuf:"varint,3,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime   int64  `protobuf:"varint,4,opt,name=endTime,proto3" json:"endTime,omitempty"`
}

func (x *LoginUserCountChartReq) Reset() {
	*x = LoginUserCountChartReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[281]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginUserCountChartReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginUserCountChartReq) ProtoMessage() {}

func (x *LoginUserCountChartReq) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[281]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginUserCountChartReq.ProtoReflect.Descriptor instead.
func (*LoginUserCountChartReq) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{281}
}

func (x *LoginUserCountChartReq) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *LoginUserCountChartReq) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *LoginUserCountChartReq) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *LoginUserCountChartReq) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

type LoginUserCountChartResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int64                          `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string                         `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data []*LoginUserCountChartDataResp `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *LoginUserCountChartResp) Reset() {
	*x = LoginUserCountChartResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[282]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginUserCountChartResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginUserCountChartResp) ProtoMessage() {}

func (x *LoginUserCountChartResp) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[282]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginUserCountChartResp.ProtoReflect.Descriptor instead.
func (*LoginUserCountChartResp) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{282}
}

func (x *LoginUserCountChartResp) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *LoginUserCountChartResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *LoginUserCountChartResp) GetData() []*LoginUserCountChartDataResp {
	if x != nil {
		return x.Data
	}
	return nil
}

type LoginUserCountChartDataResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Count int64  `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *LoginUserCountChartDataResp) Reset() {
	*x = LoginUserCountChartDataResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[283]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginUserCountChartDataResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginUserCountChartDataResp) ProtoMessage() {}

func (x *LoginUserCountChartDataResp) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[283]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginUserCountChartDataResp.ProtoReflect.Descriptor instead.
func (*LoginUserCountChartDataResp) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{283}
}

func (x *LoginUserCountChartDataResp) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *LoginUserCountChartDataResp) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

type BetGameListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameTypes []int64 `protobuf:"varint,1,rep,packed,name=gameTypes,proto3" json:"gameTypes,omitempty"`
}

func (x *BetGameListReq) Reset() {
	*x = BetGameListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[284]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BetGameListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BetGameListReq) ProtoMessage() {}

func (x *BetGameListReq) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[284]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BetGameListReq.ProtoReflect.Descriptor instead.
func (*BetGameListReq) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{284}
}

func (x *BetGameListReq) GetGameTypes() []int64 {
	if x != nil {
		return x.GameTypes
	}
	return nil
}

type BetGameListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int64                  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string                 `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data []*BetGameListDataResp `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *BetGameListResp) Reset() {
	*x = BetGameListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[285]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BetGameListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BetGameListResp) ProtoMessage() {}

func (x *BetGameListResp) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[285]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BetGameListResp.ProtoReflect.Descriptor instead.
func (*BetGameListResp) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{285}
}

func (x *BetGameListResp) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *BetGameListResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *BetGameListResp) GetData() []*BetGameListDataResp {
	if x != nil {
		return x.Data
	}
	return nil
}

type BetGameListDataResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name           string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	GameTypeId     int64  `protobuf:"varint,3,opt,name=gameTypeId,proto3" json:"gameTypeId,omitempty"`
	Icon           string `protobuf:"bytes,4,opt,name=icon,proto3" json:"icon,omitempty"`
	Model          string `protobuf:"bytes,5,opt,name=model,proto3" json:"model,omitempty"`
	PagcorRate     string `protobuf:"bytes,6,opt,name=pagcorRate,proto3" json:"pagcorRate,omitempty"`
	ProviderRate   string `protobuf:"bytes,7,opt,name=providerRate,proto3" json:"providerRate,omitempty"`
	GameProviderId int64  `protobuf:"varint,8,opt,name=gameProviderId,proto3" json:"gameProviderId,omitempty"`
	GamePagcorId   int64  `protobuf:"varint,9,opt,name=gamePagcorId,proto3" json:"gamePagcorId,omitempty"`
}

func (x *BetGameListDataResp) Reset() {
	*x = BetGameListDataResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[286]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BetGameListDataResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BetGameListDataResp) ProtoMessage() {}

func (x *BetGameListDataResp) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[286]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BetGameListDataResp.ProtoReflect.Descriptor instead.
func (*BetGameListDataResp) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{286}
}

func (x *BetGameListDataResp) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *BetGameListDataResp) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *BetGameListDataResp) GetGameTypeId() int64 {
	if x != nil {
		return x.GameTypeId
	}
	return 0
}

func (x *BetGameListDataResp) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *BetGameListDataResp) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

func (x *BetGameListDataResp) GetPagcorRate() string {
	if x != nil {
		return x.PagcorRate
	}
	return ""
}

func (x *BetGameListDataResp) GetProviderRate() string {
	if x != nil {
		return x.ProviderRate
	}
	return ""
}

func (x *BetGameListDataResp) GetGameProviderId() int64 {
	if x != nil {
		return x.GameProviderId
	}
	return 0
}

func (x *BetGameListDataResp) GetGamePagcorId() int64 {
	if x != nil {
		return x.GamePagcorId
	}
	return 0
}

type GetCascadeByGameGroupListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetCascadeByGameGroupListReq) Reset() {
	*x = GetCascadeByGameGroupListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[287]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCascadeByGameGroupListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCascadeByGameGroupListReq) ProtoMessage() {}

func (x *GetCascadeByGameGroupListReq) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[287]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCascadeByGameGroupListReq.ProtoReflect.Descriptor instead.
func (*GetCascadeByGameGroupListReq) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{287}
}

type GetCascadeByGameGroupListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int64                                `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string                               `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data []*GetCascadeByGameGroupListDataResp `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *GetCascadeByGameGroupListResp) Reset() {
	*x = GetCascadeByGameGroupListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[288]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCascadeByGameGroupListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCascadeByGameGroupListResp) ProtoMessage() {}

func (x *GetCascadeByGameGroupListResp) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[288]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCascadeByGameGroupListResp.ProtoReflect.Descriptor instead.
func (*GetCascadeByGameGroupListResp) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{288}
}

func (x *GetCascadeByGameGroupListResp) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetCascadeByGameGroupListResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GetCascadeByGameGroupListResp) GetData() []*GetCascadeByGameGroupListDataResp {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetCascadeByGameGroupListDataResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameTypeId   int64  `protobuf:"varint,1,opt,name=gameTypeId,proto3" json:"gameTypeId,omitempty"`
	GameTypeName string `protobuf:"bytes,2,opt,name=gameTypeName,proto3" json:"gameTypeName,omitempty"`
}

func (x *GetCascadeByGameGroupListDataResp) Reset() {
	*x = GetCascadeByGameGroupListDataResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[289]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCascadeByGameGroupListDataResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCascadeByGameGroupListDataResp) ProtoMessage() {}

func (x *GetCascadeByGameGroupListDataResp) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[289]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCascadeByGameGroupListDataResp.ProtoReflect.Descriptor instead.
func (*GetCascadeByGameGroupListDataResp) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{289}
}

func (x *GetCascadeByGameGroupListDataResp) GetGameTypeId() int64 {
	if x != nil {
		return x.GameTypeId
	}
	return 0
}

func (x *GetCascadeByGameGroupListDataResp) GetGameTypeName() string {
	if x != nil {
		return x.GameTypeName
	}
	return ""
}

// 直播列表
type LiveGameListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *LiveGameListReq) Reset() {
	*x = LiveGameListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[290]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LiveGameListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LiveGameListReq) ProtoMessage() {}

func (x *LiveGameListReq) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[290]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LiveGameListReq.ProtoReflect.Descriptor instead.
func (*LiveGameListReq) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{290}
}

type LiveGameListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int64               `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string              `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data []*LiveGameListData `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *LiveGameListResp) Reset() {
	*x = LiveGameListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[291]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LiveGameListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LiveGameListResp) ProtoMessage() {}

func (x *LiveGameListResp) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[291]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LiveGameListResp.ProtoReflect.Descriptor instead.
func (*LiveGameListResp) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{291}
}

func (x *LiveGameListResp) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *LiveGameListResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *LiveGameListResp) GetData() []*LiveGameListData {
	if x != nil {
		return x.Data
	}
	return nil
}

type LiveGameListData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int64  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	MatchType      int64  `protobuf:"varint,2,opt,name=matchType,proto3" json:"matchType,omitempty"`
	MatchId        int64  `protobuf:"varint,3,opt,name=matchId,proto3" json:"matchId,omitempty"`
	MatchName      string `protobuf:"bytes,4,opt,name=matchName,proto3" json:"matchName,omitempty"`
	MatchNameEn    string `protobuf:"bytes,5,opt,name=matchNameEn,proto3" json:"matchNameEn,omitempty"`
	LeagueId       int64  `protobuf:"varint,6,opt,name=leagueId,proto3" json:"leagueId,omitempty"`
	LeagueName     string `protobuf:"bytes,7,opt,name=leagueName,proto3" json:"leagueName,omitempty"`
	LeagueNameEn   string `protobuf:"bytes,8,opt,name=leagueNameEn,proto3" json:"leagueNameEn,omitempty"`
	CoverImage     string `protobuf:"bytes,9,opt,name=coverImage,proto3" json:"coverImage,omitempty"`
	HomeTeam       string `protobuf:"bytes,10,opt,name=homeTeam,proto3" json:"homeTeam,omitempty"`
	HomeTeamEn     string `protobuf:"bytes,11,opt,name=homeTeamEn,proto3" json:"homeTeamEn,omitempty"`
	AwayTeam       string `protobuf:"bytes,12,opt,name=awayTeam,proto3" json:"awayTeam,omitempty"`
	AwayTeamEn     string `protobuf:"bytes,13,opt,name=awayTeamEn,proto3" json:"awayTeamEn,omitempty"`
	MatchStatus    int64  `protobuf:"varint,14,opt,name=matchStatus,proto3" json:"matchStatus,omitempty"`
	StartTime      int64  `protobuf:"varint,15,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime        int64  `protobuf:"varint,16,opt,name=endTime,proto3" json:"endTime,omitempty"`
	HomeLogo       string `protobuf:"bytes,17,opt,name=homeLogo,proto3" json:"homeLogo,omitempty"`
	AwayLogo       string `protobuf:"bytes,18,opt,name=awayLogo,proto3" json:"awayLogo,omitempty"`
	LiveStatus     int64  `protobuf:"varint,19,opt,name=liveStatus,proto3" json:"liveStatus,omitempty"`
	PushUrl        string `protobuf:"bytes,20,opt,name=pushUrl,proto3" json:"pushUrl,omitempty"`
	PlayUrl        string `protobuf:"bytes,21,opt,name=playUrl,proto3" json:"playUrl,omitempty"`
	LiveAppName    string `protobuf:"bytes,22,opt,name=liveAppName,proto3" json:"liveAppName,omitempty"`
	LiveStreamName string `protobuf:"bytes,23,opt,name=liveStreamName,proto3" json:"liveStreamName,omitempty"`
	Position       int64  `protobuf:"varint,24,opt,name=position,proto3" json:"position,omitempty"`
	CreatedAt      int64  `protobuf:"varint,25,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt      int64  `protobuf:"varint,26,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
}

func (x *LiveGameListData) Reset() {
	*x = LiveGameListData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zerogamerpc_proto_msgTypes[292]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LiveGameListData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LiveGameListData) ProtoMessage() {}

func (x *LiveGameListData) ProtoReflect() protoreflect.Message {
	mi := &file_zerogamerpc_proto_msgTypes[292]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LiveGameListData.ProtoReflect.Descriptor instead.
func (*LiveGameListData) Descriptor() ([]byte, []int) {
	return file_zerogamerpc_proto_rawDescGZIP(), []int{292}
}

func (x *LiveGameListData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *LiveGameListData) GetMatchType() int64 {
	if x != nil {
		return x.MatchType
	}
	return 0
}

func (x *LiveGameListData) GetMatchId() int64 {
	if x != nil {
		return x.MatchId
	}
	return 0
}

func (x *LiveGameListData) GetMatchName() string {
	if x != nil {
		return x.MatchName
	}
	return ""
}

func (x *LiveGameListData) GetMatchNameEn() string {
	if x != nil {
		return x.MatchNameEn
	}
	return ""
}

func (x *LiveGameListData) GetLeagueId() int64 {
	if x != nil {
		return x.LeagueId
	}
	return 0
}

func (x *LiveGameListData) GetLeagueName() string {
	if x != nil {
		return x.LeagueName
	}
	return ""
}

func (x *LiveGameListData) GetLeagueNameEn() string {
	if x != nil {
		return x.LeagueNameEn
	}
	return ""
}

func (x *LiveGameListData) GetCoverImage() string {
	if x != nil {
		return x.CoverImage
	}
	return ""
}

func (x *LiveGameListData) GetHomeTeam() string {
	if x != nil {
		return x.HomeTeam
	}
	return ""
}

func (x *LiveGameListData) GetHomeTeamEn() string {
	if x != nil {
		return x.HomeTeamEn
	}
	return ""
}

func (x *LiveGameListData) GetAwayTeam() string {
	if x != nil {
		return x.AwayTeam
	}
	return ""
}

func (x *LiveGameListData) GetAwayTeamEn() string {
	if x != nil {
		return x.AwayTeamEn
	}
	return ""
}

func (x *LiveGameListData) GetMatchStatus() int64 {
	if x != nil {
		return x.MatchStatus
	}
	return 0
}

func (x *LiveGameListData) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *LiveGameListData) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *LiveGameListData) GetHomeLogo() string {
	if x != nil {
		return x.HomeLogo
	}
	return ""
}

func (x *LiveGameListData) GetAwayLogo() string {
	if x != nil {
		return x.AwayLogo
	}
	return ""
}

func (x *LiveGameListData) GetLiveStatus() int64 {
	if x != nil {
		return x.LiveStatus
	}
	return 0
}

func (x *LiveGameListData) GetPushUrl() string {
	if x != nil {
		return x.PushUrl
	}
	return ""
}

func (x *LiveGameListData) GetPlayUrl() string {
	if x != nil {
		return x.PlayUrl
	}
	return ""
}

func (x *LiveGameListData) GetLiveAppName() string {
	if x != nil {
		return x.LiveAppName
	}
	return ""
}

func (x *LiveGameListData) GetLiveStreamName() string {
	if x != nil {
		return x.LiveStreamName
	}
	return ""
}

func (x *LiveGameListData) GetPosition() int64 {
	if x != nil {
		return x.Position
	}
	return 0
}

func (x *LiveGameListData) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *LiveGameListData) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

var File_zerogamerpc_proto protoreflect.FileDescriptor

var file_zerogamerpc_proto_rawDesc = []byte{
	0x0a, 0x11, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63,
	0x22, 0x70, 0x0a, 0x0a, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x65, 0x73, 0x52, 0x65, 0x71, 0x12, 0x12,
	0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x61,
	0x73, 0x68, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x65, 0x63, 0x75, 0x72, 0x65, 0x4c, 0x6f, 0x67, 0x69,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x65, 0x63, 0x75, 0x72, 0x65, 0x4c,
	0x6f, 0x67, 0x69, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x69, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75,
	0x72, 0x69, 0x22, 0xa3, 0x02, 0x0a, 0x0b, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x65, 0x73, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x6f, 0x6e, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x6f, 0x6e, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x62, 0x6f, 0x6e, 0x75, 0x73, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x07, 0x62, 0x6f, 0x6e, 0x75, 0x73, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x26, 0x0a, 0x0e, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1e,
	0x0a, 0x0a, 0x67, 0x61, 0x6d, 0x65, 0x49, 0x44, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x67, 0x61, 0x6d, 0x65, 0x49, 0x44, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1c,
	0x0a, 0x09, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x49, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x09, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x6f, 0x75, 0x6e, 0x64, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x72, 0x6f,
	0x75, 0x6e, 0x64, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x73, 0x50, 0x6c,
	0x61, 0x79, 0x65, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x72, 0x6f, 0x75, 0x6e,
	0x64, 0x73, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x64, 0x22, 0x40, 0x0a, 0x0a, 0x42, 0x6f, 0x6e, 0x75,
	0x73, 0x65, 0x73, 0x52, 0x65, 0x73, 0x12, 0x32, 0x0a, 0x07, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61,
	0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x65, 0x73, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x07, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x65, 0x73, 0x22, 0xd3, 0x02, 0x0a, 0x0c, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x67,
	0x61, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x67, 0x61,
	0x6d, 0x65, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x70, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x4d, 0x6f, 0x64, 0x65, 0x12,
	0x24, 0x0a, 0x0d, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x6c, 0x61, 0x6e, 0x67, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x61, 0x6e,
	0x67, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x68, 0x65, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x68, 0x65, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x77, 0x65, 0x62, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x77, 0x65, 0x62, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x12, 0x34, 0x0a, 0x15, 0x67, 0x61,
	0x6d, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x53, 0x75, 0x62, 0x74, 0x79, 0x70,
	0x65, 0x49, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x15, 0x67, 0x61, 0x6d, 0x65, 0x50,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x53, 0x75, 0x62, 0x74, 0x79, 0x70, 0x65, 0x49, 0x64,
	0x22, 0x50, 0x0a, 0x0d, 0x53, 0x74, 0x61, 0x72, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x61, 0x6d, 0x65, 0x5f,
	0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x61, 0x6d, 0x65, 0x55,
	0x72, 0x6c, 0x22, 0x44, 0x0a, 0x1c, 0x4f, 0x75, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x46, 0x6f, 0x72,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x2f, 0x0a, 0x1b, 0x4f, 0x75, 0x74, 0x47,
	0x61, 0x6d, 0x65, 0x46, 0x6f, 0x72, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x57, 0x61,
	0x6c, 0x6c, 0x65, 0x74, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x75, 0x69, 0x64, 0x22, 0x75, 0x0a, 0x0f, 0x53, 0x6c, 0x6f,
	0x74, 0x47, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x34, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72,
	0x70, 0x63, 0x2e, 0x53, 0x6c, 0x6f, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04,
	0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65,
	0x22, 0x43, 0x0a, 0x13, 0x53, 0x6c, 0x6f, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x03,
	0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x67, 0x0a, 0x10, 0x53, 0x6c, 0x6f, 0x74, 0x47, 0x61, 0x6d,
	0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12,
	0x2d, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x6c, 0x6f, 0x74,
	0x47, 0x61, 0x6d, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x9f,
	0x01, 0x0a, 0x0c, 0x53, 0x6c, 0x6f, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x18, 0x0a, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x70, 0x61, 0x67, 0x65, 0x73, 0x12, 0x35, 0x0a, 0x04, 0x6c, 0x69, 0x73,
	0x74, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61,
	0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x6c, 0x6f, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74,
	0x22, 0xb9, 0x04, 0x0a, 0x14, 0x53, 0x6c, 0x6f, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a,
	0x0c, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x49, 0x63, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x49, 0x63, 0x6f,
	0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x49, 0x63, 0x6f, 0x6e, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x49, 0x63, 0x6f,
	0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x67, 0x61, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x67, 0x61, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x49,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x73, 0x4e, 0x65, 0x77, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x69, 0x73, 0x4e, 0x65, 0x77, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x73, 0x46, 0x61, 0x76,
	0x6f, 0x72, 0x69, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x69, 0x73, 0x46,
	0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x20, 0x0a, 0x0b, 0x6d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x68, 0x6f, 0x74, 0x53, 0x74, 0x61, 0x72, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x07, 0x68, 0x6f, 0x74, 0x53, 0x74, 0x61, 0x72, 0x12, 0x34, 0x0a, 0x15, 0x67,
	0x61, 0x6d, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x53, 0x75, 0x62, 0x74, 0x79,
	0x70, 0x65, 0x49, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x15, 0x67, 0x61, 0x6d, 0x65,
	0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x53, 0x75, 0x62, 0x74, 0x79, 0x70, 0x65, 0x49,
	0x64, 0x12, 0x2a, 0x0a, 0x10, 0x67, 0x61, 0x6d, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x67, 0x61, 0x6d,
	0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a,
	0x0e, 0x67, 0x61, 0x6d, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x67, 0x61, 0x6d, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x66, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74,
	0x65, 0x53, 0x74, 0x61, 0x72, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x66, 0x61, 0x76,
	0x6f, 0x72, 0x69, 0x74, 0x65, 0x53, 0x74, 0x61, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x73, 0x52,
	0x6f, 0x74, 0x61, 0x74, 0x65, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x69, 0x73,
	0x52, 0x6f, 0x74, 0x61, 0x74, 0x65, 0x64, 0x12, 0x43, 0x0a, 0x0e, 0x67, 0x61, 0x6d, 0x65, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1b, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x61,
	0x6d, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x52, 0x0e, 0x67, 0x61,
	0x6d, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x22, 0xc0, 0x01, 0x0a,
	0x0e, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x12,
	0x1c, 0x0a, 0x09, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x62, 0x6f, 0x74, 0x74, 0x6f, 0x6d, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0b, 0x62, 0x6f, 0x74, 0x74, 0x6f, 0x6d, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12,
	0x32, 0x0a, 0x14, 0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x43, 0x61, 0x72, 0x72, 0x79, 0x69,
	0x6e, 0x67, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x14, 0x6d,
	0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x43, 0x61, 0x72, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x53, 0x63,
	0x6f, 0x72, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x64, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x61, 0x74,
	0x63, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x22,
	0x3f, 0x0a, 0x0b, 0x47, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x12,
	0x0a, 0x04, 0x73, 0x69, 0x67, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x73, 0x69,
	0x67, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x67, 0x61, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x03, 0x52, 0x09, 0x67, 0x61, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x73,
	0x22, 0x67, 0x0a, 0x0c, 0x47, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x31, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72,
	0x70, 0x63, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x65, 0x73, 0x70, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0xc6, 0x02, 0x0a, 0x10, 0x47, 0x61,
	0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x67, 0x61, 0x6d, 0x65, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x67, 0x61, 0x6d, 0x65, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04,
	0x73, 0x6f, 0x72, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74,
	0x12, 0x20, 0x0a, 0x0b, 0x6d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e,
	0x63, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x67, 0x61, 0x6d, 0x65, 0x50, 0x61, 0x67, 0x63, 0x6f, 0x72,
	0x49, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x67, 0x61, 0x6d, 0x65, 0x50, 0x61,
	0x67, 0x63, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x67, 0x61, 0x6d, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x49, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x67, 0x61, 0x6d, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x67, 0x61, 0x6d, 0x65, 0x50, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e,
	0x67, 0x61, 0x6d, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x22,
	0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x49, 0x63, 0x6f, 0x6e, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x49, 0x63,
	0x6f, 0x6e, 0x22, 0x44, 0x0a, 0x10, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x67, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x73, 0x69, 0x67, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x67, 0x61,
	0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x03, 0x52, 0x09, 0x67,
	0x61, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x73, 0x22, 0x71, 0x0a, 0x11, 0x41, 0x67, 0x65, 0x6e,
	0x74, 0x47, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6d, 0x73, 0x67, 0x12, 0x36, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x22, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e,
	0x41, 0x67, 0x65, 0x6e, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x65, 0x73, 0x70, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0xcb, 0x02, 0x0a, 0x15,
	0x41, 0x67, 0x65, 0x6e, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x65, 0x73, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x1c, 0x0a,
	0x09, 0x67, 0x61, 0x6d, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x67, 0x61, 0x6d, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x6d, 0x61, 0x69, 0x6e, 0x74,
	0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6d, 0x61,
	0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x67, 0x61, 0x6d,
	0x65, 0x50, 0x61, 0x67, 0x63, 0x6f, 0x72, 0x49, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0c, 0x67, 0x61, 0x6d, 0x65, 0x50, 0x61, 0x67, 0x63, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x1e, 0x0a,
	0x0a, 0x67, 0x61, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x67, 0x61, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x26, 0x0a,
	0x0e, 0x67, 0x61, 0x6d, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x67, 0x61, 0x6d, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x72, 0x49, 0x63, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x49, 0x63, 0x6f, 0x6e, 0x22, 0x1c, 0x0a, 0x1a, 0x41, 0x67, 0x65,
	0x6e, 0x74, 0x47, 0x65, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x73, 0x42, 0x79, 0x43, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x22, 0x81, 0x01, 0x0a, 0x1b, 0x41, 0x67, 0x65, 0x6e,
	0x74, 0x47, 0x65, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x73, 0x42, 0x79, 0x43, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d,
	0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x3c, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x7a, 0x65,
	0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x47,
	0x65, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x73, 0x42, 0x79, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x9b, 0x02, 0x0a, 0x1b,
	0x41, 0x67, 0x65, 0x6e, 0x74, 0x47, 0x65, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x73, 0x42, 0x79, 0x43,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69,
	0x63, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x47, 0x61, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x49,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x47, 0x61, 0x6d, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x22, 0x0a, 0x0c, 0x47, 0x61, 0x6d,
	0x65, 0x50, 0x61, 0x67, 0x63, 0x6f, 0x72, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0c, 0x47, 0x61, 0x6d, 0x65, 0x50, 0x61, 0x67, 0x63, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x26, 0x0a,
	0x0e, 0x47, 0x61, 0x6d, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x47, 0x61, 0x6d, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x72, 0x52, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0c, 0x50, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x61, 0x74, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x50, 0x61, 0x67,
	0x63, 0x6f, 0x72, 0x52, 0x61, 0x74, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0a, 0x50,
	0x61, 0x67, 0x63, 0x6f, 0x72, 0x52, 0x61, 0x74, 0x65, 0x22, 0x18, 0x0a, 0x16, 0x41, 0x67, 0x65,
	0x6e, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x50, 0x61, 0x67, 0x63, 0x6f, 0x72, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x22, 0x79, 0x0a, 0x17, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x47, 0x61, 0x6d, 0x65,
	0x50, 0x61, 0x67, 0x63, 0x6f, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6d, 0x73, 0x67, 0x12, 0x38, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x24, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63,
	0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x50, 0x61, 0x67, 0x63, 0x6f, 0x72,
	0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x55,
	0x0a, 0x17, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x50, 0x61, 0x67, 0x63, 0x6f,
	0x72, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x86, 0x01, 0x0a, 0x0e, 0x47, 0x61, 0x6d, 0x65, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x34, 0x0a, 0x15, 0x67, 0x61, 0x6d, 0x65,
	0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x53, 0x75, 0x62, 0x74, 0x79, 0x70, 0x65, 0x49,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x15, 0x67, 0x61, 0x6d, 0x65, 0x50, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x53, 0x75, 0x62, 0x74, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x4d, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69,
	0x67, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x73, 0x69, 0x67, 0x6e, 0x22, 0x6d,
	0x0a, 0x0f, 0x47, 0x61, 0x6d, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x34, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65,
	0x72, 0x70, 0x63, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xf4, 0x03,
	0x0a, 0x13, 0x47, 0x61, 0x6d, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x65, 0x73, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x34, 0x0a, 0x15, 0x67, 0x61, 0x6d, 0x65, 0x50, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x53, 0x75, 0x62, 0x74, 0x79, 0x70, 0x65, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x15, 0x67, 0x61, 0x6d, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x53, 0x75, 0x62, 0x74, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x67,
	0x61, 0x6d, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0e, 0x67, 0x61, 0x6d, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x10, 0x67, 0x61, 0x6d, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x67,
	0x61, 0x6d, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x49,
	0x63, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6f, 0x72, 0x69, 0x67, 0x69,
	0x6e, 0x61, 0x6c, 0x49, 0x63, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x6c, 0x61, 0x74, 0x65, 0x73,
	0x74, 0x49, 0x63, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6c, 0x61, 0x74,
	0x65, 0x73, 0x74, 0x49, 0x63, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x73, 0x4e, 0x65, 0x77,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x69, 0x73, 0x4e, 0x65, 0x77, 0x12, 0x22, 0x0a,
	0x0c, 0x66, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x53, 0x74, 0x61, 0x72, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0c, 0x66, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x53, 0x74, 0x61,
	0x72, 0x12, 0x18, 0x0a, 0x07, 0x68, 0x6f, 0x74, 0x53, 0x74, 0x61, 0x72, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x07, 0x68, 0x6f, 0x74, 0x53, 0x74, 0x61, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x69,
	0x73, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0a, 0x69, 0x73, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x6d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e,
	0x63, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6d, 0x61, 0x69, 0x6e, 0x74, 0x65,
	0x6e, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x67, 0x61, 0x6d, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x49, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x67, 0x61, 0x6d, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x72, 0x6f, 0x74, 0x61,
	0x74, 0x65, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x69, 0x73, 0x52, 0x6f, 0x74,
	0x61, 0x74, 0x65, 0x64, 0x22, 0xb7, 0x01, 0x0a, 0x0a, 0x42, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x67, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x04, 0x73, 0x69, 0x67, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x4b, 0x65, 0x79,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x4b, 0x65, 0x79, 0x12,
	0x2f, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e,
	0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x42, 0x65, 0x74, 0x4c,
	0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x12, 0x1c, 0x0a, 0x09, 0x73, 0x6f, 0x72, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x06, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x09, 0x73, 0x6f, 0x72, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x22, 0x28,
	0x0a, 0x0e, 0x42, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x61, 0x0a, 0x0b, 0x42, 0x65, 0x74, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d,
	0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x2c, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x7a, 0x65,
	0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x42, 0x65, 0x74, 0x4c, 0x69, 0x73,
	0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x99, 0x01, 0x0a, 0x0b,
	0x42, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x67,
	0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x61, 0x67, 0x65, 0x73, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x30, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x05, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x70,
	0x63, 0x2e, 0x42, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x49, 0x74, 0x65,
	0x6d, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0xd5, 0x02, 0x0a, 0x0f, 0x42, 0x65, 0x74, 0x4c,
	0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x78,
	0x62, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x78, 0x62, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x34, 0x0a, 0x15, 0x67,
	0x61, 0x6d, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x53, 0x75, 0x62, 0x74, 0x79,
	0x70, 0x65, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x15, 0x67, 0x61, 0x6d, 0x65,
	0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x53, 0x75, 0x62, 0x74, 0x79, 0x70, 0x65, 0x49,
	0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x69, 0x6e, 0x42, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0a, 0x63, 0x6f, 0x69, 0x6e, 0x42, 0x65, 0x66, 0x6f, 0x72,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x05, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x79, 0x6f, 0x75,
	0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x70, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x12,
	0x1a, 0x0a, 0x08, 0x78, 0x62, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x78, 0x62, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x67, 0x61, 0x6d, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x67, 0x61, 0x6d, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x78, 0x62, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x78, 0x62, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x22,
	0x26, 0x0a, 0x10, 0x42, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73,
	0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x67, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x04, 0x73, 0x69, 0x67, 0x6e, 0x22, 0x6d, 0x0a, 0x11, 0x42, 0x65, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d,
	0x73, 0x67, 0x12, 0x32, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1e, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x42,
	0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x4d, 0x0a, 0x11, 0x42, 0x65, 0x74, 0x53, 0x74, 0x61,
	0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x70,
	0x61, 0x79, 0x4f, 0x75, 0x74, 0x53, 0x75, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x70, 0x61, 0x79, 0x4f, 0x75, 0x74, 0x53, 0x75, 0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x74, 0x61,
	0x6b, 0x65, 0x53, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x74, 0x61,
	0x6b, 0x65, 0x53, 0x75, 0x6d, 0x22, 0x99, 0x01, 0x0a, 0x0f, 0x47, 0x61, 0x6d, 0x65, 0x46, 0x61,
	0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x64, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x34, 0x0a, 0x15, 0x67, 0x61, 0x6d, 0x65, 0x50,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x53, 0x75, 0x62, 0x74, 0x79, 0x70, 0x65, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x15, 0x67, 0x61, 0x6d, 0x65, 0x50, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x53, 0x75, 0x62, 0x74, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x1e, 0x0a,
	0x0a, 0x67, 0x61, 0x6d, 0x65, 0x53, 0x6c, 0x6f, 0x74, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x67, 0x61, 0x6d, 0x65, 0x53, 0x6c, 0x6f, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x73, 0x69, 0x67, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x73, 0x69, 0x67,
	0x6e, 0x22, 0x4c, 0x0a, 0x10, 0x47, 0x61, 0x6d, 0x65, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22,
	0x4c, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x52, 0x61, 0x6e, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x1e, 0x0a,
	0x0a, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x49, 0x64, 0x22, 0x66, 0x0a,
	0x0f, 0x47, 0x65, 0x74, 0x52, 0x61, 0x6e, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x2d, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72,
	0x70, 0x63, 0x2e, 0x52, 0x61, 0x6e, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xdc, 0x01, 0x0a, 0x0c, 0x52, 0x61, 0x6e, 0x6b, 0x4c, 0x69,
	0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1a, 0x0a, 0x08, 0x67, 0x61, 0x6d, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x67, 0x61, 0x6d, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x67, 0x61, 0x6d, 0x65, 0x49, 0x63, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x67, 0x61, 0x6d, 0x65, 0x49, 0x63, 0x6f, 0x6e, 0x12, 0x16,
	0x0a, 0x06, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x65, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x65, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x69, 0x65, 0x72, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x69, 0x65, 0x72,
	0x12, 0x22, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x22, 0xae, 0x02, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a,
	0x0a, 0x67, 0x61, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x67, 0x61, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x34, 0x0a,
	0x15, 0x67, 0x61, 0x6d, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x53, 0x75, 0x62,
	0x74, 0x79, 0x70, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x15, 0x67, 0x61,
	0x6d, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x53, 0x75, 0x62, 0x74, 0x79, 0x70,
	0x65, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x67, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x49,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x67, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x49, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65,
	0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x6e,
	0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x46,
	0x6c, 0x61, 0x67, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x65, 0x78, 0x70, 0x6f, 0x72,
	0x74, 0x46, 0x6c, 0x61, 0x67, 0x22, 0x75, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6d, 0x73, 0x67, 0x12, 0x36, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x22, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63,
	0x2e, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x50, 0x72, 0x6f, 0x66,
	0x69, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x39, 0x0a, 0x15,
	0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x50, 0x72, 0x6f, 0x66, 0x69,
	0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x72,
	0x6f, 0x66, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x22, 0xbf, 0x01, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x50,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69,
	0x7a, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x4b, 0x65, 0x79, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x4b, 0x65, 0x79, 0x12, 0x1c, 0x0a, 0x09,
	0x73, 0x6f, 0x72, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x09, 0x73, 0x6f, 0x72, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x3d, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67,
	0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x65, 0x71, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x96, 0x02, 0x0a, 0x1c, 0x47, 0x65,
	0x74, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x4c,
	0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e,
	0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x6e, 0x64,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x67, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x67, 0x61, 0x6d, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x49, 0x64, 0x12, 0x34, 0x0a, 0x15, 0x67, 0x61, 0x6d, 0x65, 0x50, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x53, 0x75, 0x62, 0x74, 0x79, 0x70, 0x65, 0x49, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x15, 0x67, 0x61, 0x6d, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x72, 0x53, 0x75, 0x62, 0x74, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x67, 0x61,
	0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a,
	0x67, 0x61, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6c, 0x65,
	0x76, 0x65, 0x6c, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6c, 0x65, 0x76,
	0x65, 0x6c, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61,
	0x6d, 0x65, 0x22, 0xb1, 0x01, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x18, 0x0a, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69,
	0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x70, 0x61, 0x67, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x70,
	0x61, 0x67, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x3a, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67,
	0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x57, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x3a, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x26, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e,
	0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x50, 0x72, 0x6f, 0x66, 0x69,
	0x74, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22,
	0xcf, 0x02, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x1a, 0x0a,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x67,
	0x61, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x67, 0x61, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x67, 0x61, 0x6d, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x67, 0x61, 0x6d, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x38, 0x0a, 0x17, 0x67,
	0x61, 0x6d, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x53, 0x75, 0x62, 0x74, 0x79,
	0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x17, 0x67, 0x61,
	0x6d, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x53, 0x75, 0x62, 0x74, 0x79, 0x70,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x12, 0x1c, 0x0a,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6c,
	0x65, 0x76, 0x65, 0x6c, 0x54, 0x65, 0x78, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x6c, 0x65, 0x76, 0x65, 0x6c, 0x54, 0x65, 0x78, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6c,
	0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12, 0x22, 0x0a,
	0x0c, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x45, 0x78, 0x70, 0x6f, 0x72,
	0x74, 0x22, 0xa7, 0x01, 0x0a, 0x1d, 0x50, 0x6c, 0x61, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x74,
	0x41, 0x6e, 0x64, 0x42, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x68, 0x61, 0x72, 0x74,
	0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x67,
	0x61, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0a, 0x67, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x64, 0x22, 0x87, 0x01, 0x0a, 0x1e,
	0x50, 0x6c, 0x61, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x41, 0x6e, 0x64, 0x42, 0x65, 0x74,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x68, 0x61, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6d, 0x73, 0x67, 0x12, 0x3f, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63,
	0x2e, 0x50, 0x6c, 0x61, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x41, 0x6e, 0x64, 0x42, 0x65,
	0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x68, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xdc, 0x01, 0x0a, 0x1e, 0x50, 0x6c, 0x61, 0x74, 0x50, 0x72,
	0x6f, 0x66, 0x69, 0x74, 0x41, 0x6e, 0x64, 0x42, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x43,
	0x68, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x3a, 0x0a, 0x0c, 0x62, 0x65, 0x74, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x43, 0x68, 0x61, 0x72, 0x74, 0x52, 0x0c, 0x62, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x42, 0x0a, 0x10, 0x62, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x43, 0x68, 0x61, 0x72, 0x74, 0x52, 0x10, 0x62, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x3a, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x66,
	0x69, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x7a,
	0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43,
	0x6f, 0x69, 0x6e, 0x43, 0x68, 0x61, 0x72, 0x74, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x22, 0x35, 0x0a, 0x09, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x68, 0x61, 0x72,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x37, 0x0a, 0x0d, 0x4c,
	0x69, 0x73, 0x74, 0x43, 0x6f, 0x69, 0x6e, 0x43, 0x68, 0x61, 0x72, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04,
	0x63, 0x6f, 0x69, 0x6e, 0x22, 0x78, 0x0a, 0x0e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x75, 0x6d, 0x6d,
	0x61, 0x72, 0x79, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x69,
	0x0a, 0x0f, 0x55, 0x73, 0x65, 0x72, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x30, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65,
	0x72, 0x70, 0x63, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xe3, 0x02, 0x0a, 0x0f, 0x55, 0x73,
	0x65, 0x72, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1e, 0x0a,
	0x0a, 0x63, 0x6f, 0x69, 0x6e, 0x41, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x63, 0x6f, 0x69, 0x6e, 0x41, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x12, 0x18, 0x0a,
	0x07, 0x63, 0x6f, 0x69, 0x6e, 0x42, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x63, 0x6f, 0x69, 0x6e, 0x42, 0x65, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x6f, 0x69, 0x6e, 0x42,
	0x65, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x63, 0x6f, 0x69, 0x6e, 0x42, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x12, 0x26, 0x0a,
	0x0e, 0x63, 0x6f, 0x69, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x69, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x69, 0x6e, 0x44, 0x65, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x69, 0x6e,
	0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x69, 0x6e, 0x52,
	0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f,
	0x69, 0x6e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x6f, 0x69,
	0x6e, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x61, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x63, 0x6f, 0x69, 0x6e, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x61,
	0x6c, 0x12, 0x32, 0x0a, 0x14, 0x63, 0x6f, 0x69, 0x6e, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61,
	0x77, 0x61, 0x6c, 0x52, 0x65, 0x61, 0x6c, 0x6c, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x14, 0x63, 0x6f, 0x69, 0x6e, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x61, 0x6c, 0x52,
	0x65, 0x61, 0x6c, 0x6c, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x67, 0x67, 0x72, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x67, 0x67, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x72, 0x6f, 0x66, 0x69,
	0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x22,
	0xb9, 0x01, 0x0a, 0x15, 0x46, 0x72, 0x65, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x4b,
	0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x4b, 0x65,
	0x79, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x6f, 0x72, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x73, 0x6f, 0x72, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12,
	0x3a, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e,
	0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x46, 0x72, 0x65, 0x65,
	0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x65, 0x71, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x8b, 0x02, 0x0a, 0x19,
	0x46, 0x72, 0x65, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x4c, 0x69,
	0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x76, 0x69, 0x70,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x76, 0x69, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x75,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x69, 0x6d,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x69, 0x6d,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x70, 0x69, 0x6e, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x70, 0x69, 0x6e, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x22, 0x0a, 0x0c, 0x67, 0x61, 0x6d, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x67, 0x61, 0x6d, 0x65, 0x50, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x67, 0x61, 0x6d, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x67, 0x61, 0x6d, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x77, 0x0a, 0x16, 0x46, 0x72, 0x65,
	0x65, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x37, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61,
	0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x46, 0x72, 0x65, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x22, 0xaf, 0x01, 0x0a, 0x16, 0x46, 0x72, 0x65, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x52,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x18, 0x0a,
	0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x70, 0x61, 0x67, 0x65, 0x73, 0x12, 0x3b, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65,
	0x72, 0x70, 0x63, 0x2e, 0x46, 0x72, 0x65, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04,
	0x6c, 0x69, 0x73, 0x74, 0x22, 0xe4, 0x02, 0x0a, 0x1a, 0x46, 0x72, 0x65, 0x65, 0x47, 0x61, 0x6d,
	0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x49,
	0x74, 0x65, 0x6d, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x6f, 0x6e, 0x75, 0x73, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x6f, 0x6e, 0x75, 0x73, 0x49, 0x64, 0x12, 0x1c, 0x0a,
	0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65,
	0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x6e,
	0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x67, 0x61, 0x6d, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x67, 0x61, 0x6d, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x1c, 0x0a,
	0x09, 0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x12, 0x1e, 0x0a, 0x0a, 0x73,
	0x70, 0x69, 0x6e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x0a, 0x73, 0x70, 0x69, 0x6e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73,
	0x70, 0x69, 0x6e, 0x4e, 0x75, 0x6d, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x73, 0x70,
	0x69, 0x6e, 0x4e, 0x75, 0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x70, 0x69, 0x6e, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x73, 0x70, 0x69, 0x6e, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03,
	0x75, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x76, 0x69, 0x70, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x76, 0x69, 0x70, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x22, 0x93, 0x01, 0x0a, 0x11,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x72, 0x65, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65,
	0x71, 0x12, 0x3e, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x70,
	0x63, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x72, 0x65, 0x65, 0x47, 0x61, 0x6d, 0x65,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x3e, 0x0a, 0x08, 0x67, 0x61, 0x6d, 0x65, 0x44, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x70,
	0x63, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x72, 0x65, 0x65, 0x47, 0x61, 0x6d, 0x65,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x52, 0x08, 0x67, 0x61, 0x6d, 0x65, 0x44, 0x61, 0x74,
	0x61, 0x22, 0x61, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x72, 0x65, 0x65, 0x47,
	0x61, 0x6d, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08,
	0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x76, 0x69, 0x70, 0x4c,
	0x65, 0x76, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x76, 0x69, 0x70, 0x4c,
	0x65, 0x76, 0x65, 0x6c, 0x22, 0xab, 0x01, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46,
	0x72, 0x65, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x12, 0x1c,
	0x0a, 0x09, 0x62, 0x65, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x62, 0x65, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08,
	0x67, 0x61, 0x6d, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x67, 0x61, 0x6d, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x70, 0x69, 0x6e, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x73, 0x70, 0x69, 0x6e, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x54, 0x69,
	0x6d, 0x65, 0x22, 0x4e, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x72, 0x65, 0x65,
	0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d,
	0x73, 0x67, 0x22, 0x2d, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x72, 0x65, 0x65,
	0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x6f, 0x6e, 0x75, 0x73,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x6f, 0x6e, 0x75, 0x73, 0x49,
	0x64, 0x22, 0x4e, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x72, 0x65, 0x65, 0x47,
	0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12,
	0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73,
	0x67, 0x22, 0xb7, 0x01, 0x0a, 0x14, 0x54, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x4d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x6f, 0x72, 0x74,
	0x4b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x4b,
	0x65, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x6f, 0x72, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x73, 0x6f, 0x72, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x12, 0x39, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25,
	0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x72, 0x61,
	0x64, 0x69, 0x6e, 0x67, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x65, 0x71, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xae, 0x01, 0x0a, 0x18,
	0x54, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08,
	0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08,
	0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x79, 0x0a, 0x15,
	0x54, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x3a, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x7a, 0x65, 0x72, 0x6f,
	0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x4d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73,
	0x70, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xb1, 0x01, 0x0a, 0x19, 0x54, 0x72, 0x61, 0x64,
	0x69, 0x6e, 0x67, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x65, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x70, 0x61, 0x67, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12,
	0x3a, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e,
	0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x72, 0x61, 0x64,
	0x69, 0x6e, 0x67, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0xf7, 0x03, 0x0a, 0x19,
	0x54, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x44, 0x61, 0x74, 0x61, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75,
	0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75,
	0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x66, 0x65, 0x72,
	0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x66, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x75, 0x74, 0x49, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x6f, 0x75, 0x74, 0x49, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x65, 0x72, 0x63, 0x68,
	0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6d, 0x65, 0x72,
	0x63, 0x68, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x6d, 0x65, 0x72, 0x63, 0x68,
	0x61, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6d,
	0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x6d,
	0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x43,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x65, 0x76, 0x65, 0x6c,
	0x54, 0x65, 0x78, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6c, 0x65, 0x76, 0x65,
	0x6c, 0x54, 0x65, 0x78, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x69, 0x6e, 0x42, 0x65, 0x66, 0x6f, 0x72,
	0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x69, 0x6e, 0x42, 0x65, 0x66,
	0x6f, 0x72, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x69, 0x6e, 0x41, 0x66, 0x74, 0x65, 0x72,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x69, 0x6e, 0x41, 0x66, 0x74, 0x65,
	0x72, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x69, 0x6e, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x63, 0x6f, 0x69, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x6c, 0x61, 0x74, 0x4e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x6c, 0x61, 0x74, 0x4e, 0x69, 0x63,
	0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xaa, 0x01, 0x0a, 0x14, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73,
	0x74, 0x69, 0x63, 0x73, 0x54, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x12, 0x1c,
	0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65,
	0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x05,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x22, 0x75, 0x0a, 0x15, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73,
	0x54, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73,
	0x67, 0x12, 0x36, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x22, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x74,
	0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x54, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x87, 0x03, 0x0a, 0x15, 0x53, 0x74,
	0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x54, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x69, 0x6e, 0x44, 0x65, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x69, 0x6e, 0x44, 0x65,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x6f, 0x69, 0x6e, 0x57, 0x69, 0x74,
	0x68, 0x64, 0x72, 0x61, 0x77, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63,
	0x6f, 0x69, 0x6e, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x61, 0x6c, 0x12, 0x18, 0x0a,
	0x07, 0x63, 0x6f, 0x69, 0x6e, 0x42, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x63, 0x6f, 0x69, 0x6e, 0x42, 0x65, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x69, 0x6e, 0x50,
	0x61, 0x79, 0x4f, 0x75, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x69,
	0x6e, 0x50, 0x61, 0x79, 0x4f, 0x75, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x69, 0x6e, 0x52,
	0x65, 0x62, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x69,
	0x6e, 0x52, 0x65, 0x62, 0x61, 0x74, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x6f, 0x69, 0x6e, 0x43,
	0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x63, 0x6f, 0x69, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x69, 0x6e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x69, 0x6e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x73, 0x12, 0x2e, 0x0a, 0x12, 0x63, 0x6f, 0x69, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x6e, 0x63, 0x69,
	0x6c, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x63,
	0x6f, 0x69, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x6e, 0x63, 0x69, 0x6c, 0x69, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x69, 0x6e, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x69, 0x6e, 0x52, 0x65, 0x66, 0x75, 0x6e,
	0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x69, 0x6e, 0x4f, 0x75, 0x74, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x69, 0x6e, 0x4f, 0x75, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x63,
	0x6f, 0x69, 0x6e, 0x49, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6f, 0x69,
	0x6e, 0x49, 0x6e, 0x22, 0xf5, 0x06, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x75,
	0x62, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x37, 0x0a, 0x18,
	0x67, 0x61, 0x6d, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x5f, 0x73, 0x75,
	0x62, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x15,
	0x67, 0x61, 0x6d, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x53, 0x75, 0x62, 0x74,
	0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x70, 0x61,
	0x67, 0x63, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x67,
	0x61, 0x6d, 0x65, 0x50, 0x61, 0x67, 0x63, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0c, 0x67,
	0x61, 0x6d, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x67, 0x61, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x28, 0x0a,
	0x10, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x67, 0x61, 0x6d, 0x65, 0x50, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x67, 0x61, 0x6d, 0x65, 0x5f,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x67, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x61, 0x6d, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x12, 0x0a, 0x04,
	0x73, 0x6f, 0x72, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c,
	0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x49, 0x63, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x49, 0x63, 0x6f, 0x6e,
	0x12, 0x1e, 0x0a, 0x0a, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x49, 0x63, 0x6f, 0x6e, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x49, 0x63, 0x6f, 0x6e,
	0x12, 0x15, 0x0a, 0x06, 0x69, 0x73, 0x5f, 0x6e, 0x65, 0x77, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x69, 0x73, 0x4e, 0x65, 0x77, 0x12, 0x23, 0x0a, 0x0d, 0x66, 0x61, 0x76, 0x6f, 0x72,
	0x69, 0x74, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c,
	0x66, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x53, 0x74, 0x61, 0x72, 0x12, 0x19, 0x0a, 0x08,
	0x68, 0x6f, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x68, 0x6f, 0x74, 0x53, 0x74, 0x61, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x11, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d,
	0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x12, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x13, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x1d, 0x0a, 0x0a,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x6d,
	0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x6d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x1b, 0x0a,
	0x09, 0x69, 0x73, 0x5f, 0x63, 0x61, 0x73, 0x69, 0x6e, 0x6f, 0x18, 0x16, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x69, 0x73, 0x43, 0x61, 0x73, 0x69, 0x6e, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73,
	0x5f, 0x72, 0x6f, 0x74, 0x61, 0x74, 0x65, 0x64, 0x18, 0x18, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x69, 0x73, 0x52, 0x6f, 0x74, 0x61, 0x74, 0x65, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x62, 0x65, 0x74,
	0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x19, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x0d, 0x62, 0x65, 0x74, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x4c, 0x69, 0x6d, 0x69,
	0x74, 0x12, 0x3b, 0x0a, 0x1a, 0x73, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x5f, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x62, 0x65, 0x74, 0x5f, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x18,
	0x1a, 0x20, 0x01, 0x28, 0x02, 0x52, 0x17, 0x73, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x55, 0x73, 0x65,
	0x72, 0x42, 0x65, 0x74, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x12, 0x1b,
	0x0a, 0x09, 0x62, 0x65, 0x74, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x1b, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x08, 0x62, 0x65, 0x74, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x4d, 0x0a, 0x11, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x75, 0x62, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xe2, 0x06, 0x0a, 0x0d, 0x41,
	0x64, 0x64, 0x53, 0x75, 0x62, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x37, 0x0a, 0x18, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x72, 0x5f, 0x73, 0x75, 0x62, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x15, 0x67, 0x61, 0x6d, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x53, 0x75, 0x62, 0x74, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x67, 0x61, 0x6d,
	0x65, 0x5f, 0x70, 0x61, 0x67, 0x63, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0c, 0x67, 0x61, 0x6d, 0x65, 0x50, 0x61, 0x67, 0x63, 0x6f, 0x72, 0x49, 0x64, 0x12,
	0x20, 0x0a, 0x0c, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x67, 0x61, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x49,
	0x64, 0x12, 0x28, 0x0a, 0x10, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x67, 0x61, 0x6d,
	0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x67,
	0x61, 0x6d, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x67, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x75, 0x72,
	0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x61, 0x6d, 0x65, 0x55, 0x72, 0x6c,
	0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04,
	0x73, 0x6f, 0x72, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x22, 0x0a, 0x0c, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x49, 0x63, 0x6f, 0x6e,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c,
	0x49, 0x63, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x49, 0x63,
	0x6f, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74,
	0x49, 0x63, 0x6f, 0x6e, 0x12, 0x15, 0x0a, 0x06, 0x69, 0x73, 0x5f, 0x6e, 0x65, 0x77, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x69, 0x73, 0x4e, 0x65, 0x77, 0x12, 0x23, 0x0a, 0x0d, 0x66,
	0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0c, 0x66, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x53, 0x74, 0x61, 0x72,
	0x12, 0x19, 0x0a, 0x08, 0x68, 0x6f, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x07, 0x68, 0x6f, 0x74, 0x53, 0x74, 0x61, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x18, 0x11, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x12, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18,
	0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79,
	0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x14,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12,
	0x20, 0x0a, 0x0b, 0x6d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x15,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63,
	0x65, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x63, 0x61, 0x73, 0x69, 0x6e, 0x6f, 0x18, 0x16,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x69, 0x73, 0x43, 0x61, 0x73, 0x69, 0x6e, 0x6f, 0x12, 0x1d,
	0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x72, 0x6f, 0x74, 0x61, 0x74, 0x65, 0x64, 0x18, 0x17, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x69, 0x73, 0x52, 0x6f, 0x74, 0x61, 0x74, 0x65, 0x64, 0x12, 0x26, 0x0a,
	0x0f, 0x62, 0x65, 0x74, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x18, 0x18, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0d, 0x62, 0x65, 0x74, 0x54, 0x6f, 0x74, 0x61, 0x6c,
	0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x3b, 0x0a, 0x1a, 0x73, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x5f,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x62, 0x65, 0x74, 0x5f, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74,
	0x61, 0x67, 0x65, 0x18, 0x19, 0x20, 0x01, 0x28, 0x02, 0x52, 0x17, 0x73, 0x69, 0x6e, 0x67, 0x6c,
	0x65, 0x55, 0x73, 0x65, 0x72, 0x42, 0x65, 0x74, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61,
	0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x65, 0x74, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18,
	0x24, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x62, 0x65, 0x74, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x22,
	0x36, 0x0a, 0x0e, 0x41, 0x64, 0x64, 0x53, 0x75, 0x62, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0xab, 0x01, 0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74,
	0x53, 0x75, 0x62, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x6f, 0x72, 0x74,
	0x4b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x4b,
	0x65, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x6f, 0x72, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x73, 0x6f, 0x72, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x12, 0x33, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f,
	0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x53, 0x75, 0x62, 0x47, 0x61, 0x6d, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xc1, 0x01, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x75,
	0x62, 0x47, 0x61, 0x6d, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x12, 0x34, 0x0a, 0x15,
	0x67, 0x61, 0x6d, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x53, 0x75, 0x62, 0x74,
	0x79, 0x70, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x15, 0x67, 0x61, 0x6d,
	0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x53, 0x75, 0x62, 0x74, 0x79, 0x70, 0x65,
	0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x72, 0x6f, 0x74,
	0x61, 0x74, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x69, 0x73, 0x52, 0x6f,
	0x74, 0x61, 0x74, 0x65, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x6d, 0x0a, 0x0f, 0x4c, 0x69, 0x73,
	0x74, 0x53, 0x75, 0x62, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d,
	0x73, 0x67, 0x12, 0x34, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x20, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x53, 0x75, 0x62, 0x47, 0x61, 0x6d, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65,
	0x73, 0x70, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xa5, 0x01, 0x0a, 0x13, 0x4c, 0x69, 0x73,
	0x74, 0x53, 0x75, 0x62, 0x47, 0x61, 0x6d, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x18, 0x0a, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61,
	0x67, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x61, 0x67, 0x65, 0x73,
	0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x73, 0x69, 0x7a, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x34, 0x0a, 0x04, 0x6c, 0x69,
	0x73, 0x74, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67,
	0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x75, 0x62, 0x47, 0x61,
	0x6d, 0x65, 0x44, 0x61, 0x74, 0x61, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74,
	0x22, 0xaf, 0x08, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x75, 0x62, 0x47, 0x61, 0x6d, 0x65,
	0x44, 0x61, 0x74, 0x61, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x22, 0x0a, 0x0c, 0x66, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x53, 0x74, 0x61, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x66, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65,
	0x53, 0x74, 0x61, 0x72, 0x12, 0x26, 0x0a, 0x0e, 0x67, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x67, 0x61,
	0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x26, 0x0a, 0x0e,
	0x67, 0x61, 0x6d, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x67, 0x61, 0x6d, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x10, 0x67, 0x61, 0x6d, 0x65, 0x50, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10,
	0x67, 0x61, 0x6d, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x34, 0x0a, 0x15, 0x67, 0x61, 0x6d, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x53, 0x75, 0x62, 0x74, 0x79, 0x70, 0x65, 0x49, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x15, 0x67, 0x61, 0x6d, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x53, 0x75, 0x62,
	0x74, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x38, 0x0a, 0x17, 0x67, 0x61, 0x6d, 0x65, 0x50, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x53, 0x75, 0x62, 0x74, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x17, 0x67, 0x61, 0x6d, 0x65, 0x50, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x53, 0x75, 0x62, 0x74, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x1e, 0x0a, 0x0a, 0x67, 0x61, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x67, 0x61, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64,
	0x12, 0x22, 0x0a, 0x0c, 0x67, 0x61, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x67, 0x61, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x68, 0x6f, 0x74, 0x53, 0x74, 0x61, 0x72, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x68, 0x6f, 0x74, 0x53, 0x74, 0x61, 0x72, 0x12, 0x1a,
	0x0a, 0x08, 0x69, 0x73, 0x43, 0x61, 0x73, 0x69, 0x6e, 0x6f, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x69, 0x73, 0x43, 0x61, 0x73, 0x69, 0x6e, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x73,
	0x4e, 0x65, 0x77, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x69, 0x73, 0x4e, 0x65, 0x77,
	0x12, 0x1e, 0x0a, 0x0a, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x49, 0x63, 0x6f, 0x6e, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x49, 0x63, 0x6f, 0x6e,
	0x12, 0x4d, 0x0a, 0x0b, 0x6d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x18,
	0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65,
	0x72, 0x70, 0x63, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x75, 0x62, 0x47, 0x61, 0x6d, 0x65, 0x44,
	0x61, 0x74, 0x61, 0x49, 0x74, 0x65, 0x6d, 0x4d, 0x61, 0x69, 0x6e, 0x54, 0x65, 0x6e, 0x61, 0x6e,
	0x63, 0x65, 0x52, 0x0b, 0x6d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x6f, 0x72, 0x69, 0x67, 0x69,
	0x6e, 0x61, 0x6c, 0x49, 0x63, 0x6f, 0x6e, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6f,
	0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x49, 0x63, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x73,
	0x6f, 0x72, 0x74, 0x18, 0x13, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x14, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x18, 0x15, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x55, 0x73, 0x65, 0x72, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x72, 0x6f,
	0x74, 0x61, 0x74, 0x65, 0x64, 0x18, 0x17, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x69, 0x73, 0x52,
	0x6f, 0x74, 0x61, 0x74, 0x65, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x18,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x47, 0x61,
	0x6d, 0x65, 0x50, 0x61, 0x67, 0x63, 0x6f, 0x72, 0x49, 0x44, 0x18, 0x19, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0c, 0x47, 0x61, 0x6d, 0x65, 0x50, 0x61, 0x67, 0x63, 0x6f, 0x72, 0x49, 0x44, 0x12, 0x26,
	0x0a, 0x0e, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x18, 0x1a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x18, 0x0a, 0x07, 0x47, 0x61, 0x6d, 0x65, 0x55, 0x52,
	0x4c, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x47, 0x61, 0x6d, 0x65, 0x55, 0x52, 0x4c,
	0x12, 0x26, 0x0a, 0x0f, 0x62, 0x65, 0x74, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0d, 0x62, 0x65, 0x74, 0x54, 0x6f,
	0x74, 0x61, 0x6c, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x3b, 0x0a, 0x1a, 0x73, 0x69, 0x6e, 0x67,
	0x6c, 0x65, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x62, 0x65, 0x74, 0x5f, 0x70, 0x65, 0x72, 0x63,
	0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x02, 0x52, 0x17, 0x73, 0x69,
	0x6e, 0x67, 0x6c, 0x65, 0x55, 0x73, 0x65, 0x72, 0x42, 0x65, 0x74, 0x50, 0x65, 0x72, 0x63, 0x65,
	0x6e, 0x74, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x65, 0x74, 0x5f, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x62, 0x65, 0x74, 0x54, 0x6f, 0x74,
	0x61, 0x6c, 0x22, 0x5c, 0x0a, 0x1e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x75, 0x62, 0x47, 0x61, 0x6d,
	0x65, 0x44, 0x61, 0x74, 0x61, 0x49, 0x74, 0x65, 0x6d, 0x4d, 0x61, 0x69, 0x6e, 0x54, 0x65, 0x6e,
	0x61, 0x6e, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x6e,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x65, 0x6e, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x69, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f,
	0x22, 0x79, 0x0a, 0x11, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x47, 0x61, 0x6d, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73,
	0x69, 0x7a, 0x65, 0x12, 0x36, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x22, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x47, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x65, 0x71, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x59, 0x0a, 0x15, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x47, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x03, 0x69, 0x64, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x22, 0x6f, 0x0a, 0x12, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x47, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d,
	0x73, 0x67, 0x12, 0x33, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1f, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x47, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xa7, 0x01, 0x0a, 0x12, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x47, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x65,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x61, 0x67, 0x65, 0x73, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x37, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74,
	0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d,
	0x65, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x47, 0x61, 0x6d, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x6c, 0x69, 0x73,
	0x74, 0x22, 0xd8, 0x03, 0x0a, 0x16, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x47, 0x61, 0x6d, 0x65,
	0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x22, 0x0a, 0x0c,
	0x66, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x53, 0x74, 0x61, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0c, 0x66, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x53, 0x74, 0x61, 0x72,
	0x12, 0x26, 0x0a, 0x0e, 0x67, 0x61, 0x6d, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x67, 0x61, 0x6d, 0x65, 0x50, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x10, 0x67, 0x61, 0x6d, 0x65,
	0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x10, 0x67, 0x61, 0x6d, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x34, 0x0a, 0x15, 0x67, 0x61, 0x6d, 0x65, 0x50, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x53, 0x75, 0x62, 0x74, 0x79, 0x70, 0x65, 0x49, 0x64, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x15, 0x67, 0x61, 0x6d, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x72, 0x53, 0x75, 0x62, 0x74, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x67, 0x61,
	0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a,
	0x67, 0x61, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x68, 0x6f,
	0x74, 0x53, 0x74, 0x61, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x68, 0x6f, 0x74,
	0x53, 0x74, 0x61, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x73, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69,
	0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x69, 0x73, 0x46, 0x61, 0x76, 0x6f,
	0x72, 0x69, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x73, 0x4e, 0x65, 0x77, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x69, 0x73, 0x4e, 0x65, 0x77, 0x12, 0x1e, 0x0a, 0x0a, 0x6c, 0x61,
	0x74, 0x65, 0x73, 0x74, 0x49, 0x63, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x49, 0x63, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x22,
	0x0a, 0x0c, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x49, 0x63, 0x6f, 0x6e, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x49, 0x63,
	0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x6d, 0x61,
	0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x6d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x22, 0xb7, 0x02, 0x0a,
	0x19, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x42, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74,
	0x69, 0x63, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x36,
	0x0a, 0x16, 0x47, 0x61, 0x6d, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x53, 0x75,
	0x62, 0x74, 0x79, 0x70, 0x65, 0x49, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x03, 0x52, 0x16,
	0x47, 0x61, 0x6d, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x53, 0x75, 0x62, 0x74,
	0x79, 0x70, 0x65, 0x49, 0x64, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x7a, 0x6f,
	0x6e, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x7a, 0x6f,
	0x6e, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x03, 0x75, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x67, 0x61, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x73, 0x18, 0x08, 0x20,
	0x03, 0x28, 0x03, 0x52, 0x09, 0x67, 0x61, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x73, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x7b, 0x0a, 0x1a, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x42,
	0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x37, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67,
	0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x42, 0x65, 0x74, 0x53,
	0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x22, 0xa0, 0x01, 0x0a, 0x16, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x42, 0x65, 0x74,
	0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x1a,
	0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x0f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x53,
	0x74, 0x61, 0x6b, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x72, 0x6f,
	0x66, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x22, 0xe1, 0x01, 0x0a, 0x0e, 0x42, 0x65, 0x74, 0x50, 0x61,
	0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x33, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65,
	0x72, 0x70, 0x63, 0x2e, 0x42, 0x65, 0x74, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09,
	0x73, 0x6f, 0x72, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x09, 0x73, 0x6f, 0x72, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x6f,
	0x72, 0x74, 0x4b, 0x65, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x6f, 0x72,
	0x74, 0x4b, 0x65, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x72, 0x74, 0x49, 0x64, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x72, 0x74, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09,
	0x73, 0x6f, 0x72, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x73, 0x6f, 0x72, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xb7, 0x02, 0x0a, 0x19, 0x41,
	0x67, 0x65, 0x6e, 0x74, 0x42, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x36, 0x0a, 0x16,
	0x47, 0x61, 0x6d, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x53, 0x75, 0x62, 0x74,
	0x79, 0x70, 0x65, 0x49, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x03, 0x52, 0x16, 0x47, 0x61,
	0x6d, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x53, 0x75, 0x62, 0x74, 0x79, 0x70,
	0x65, 0x49, 0x64, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x7a, 0x6f, 0x6e, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x7a, 0x6f, 0x6e, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75,
	0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x67, 0x61, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28,
	0x03, 0x52, 0x09, 0x67, 0x61, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x73, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x22, 0x7b, 0x0a, 0x1a, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x42, 0x65, 0x74,
	0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x37, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d,
	0x65, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x42, 0x65, 0x74, 0x53, 0x74, 0x61,
	0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x22, 0xa0, 0x01, 0x0a, 0x16, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x42, 0x65, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x1a, 0x0a, 0x08,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x0f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x53, 0x74, 0x61,
	0x6b, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x72, 0x6f, 0x66, 0x69,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x72,
	0x6f, 0x66, 0x69, 0x74, 0x22, 0xb0, 0x02, 0x0a, 0x12, 0x42, 0x65, 0x74, 0x50, 0x61, 0x67, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x36, 0x0a, 0x16, 0x47, 0x61, 0x6d, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x53,
	0x75, 0x62, 0x74, 0x79, 0x70, 0x65, 0x49, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x03, 0x52,
	0x16, 0x47, 0x61, 0x6d, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x53, 0x75, 0x62,
	0x74, 0x79, 0x70, 0x65, 0x49, 0x64, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x7a,
	0x6f, 0x6e, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x7a,
	0x6f, 0x6e, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x67, 0x61, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x73, 0x18, 0x08,
	0x20, 0x03, 0x28, 0x03, 0x52, 0x09, 0x67, 0x61, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x73, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x6d, 0x0a, 0x0f, 0x42, 0x65, 0x74, 0x50, 0x61,
	0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67,
	0x12, 0x34, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20,
	0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x42, 0x65, 0x74,
	0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x97, 0x02, 0x0a, 0x13, 0x42, 0x65, 0x74, 0x50, 0x61,
	0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x38, 0x0a, 0x04,
	0x6c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x7a, 0x65, 0x72,
	0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x42, 0x65, 0x74, 0x50, 0x61, 0x67, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x49, 0x74, 0x65, 0x6d,
	0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x6f, 0x72, 0x74, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x73, 0x6f, 0x72, 0x74, 0x46,
	0x69, 0x65, 0x6c, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x4b, 0x65, 0x79, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x4b, 0x65, 0x79, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x6f, 0x72, 0x74, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x73, 0x6f, 0x72, 0x74, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x6f, 0x72, 0x74, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x6f, 0x72, 0x74, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61,
	0x67, 0x65, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x61, 0x67, 0x65, 0x73,
	0x22, 0xba, 0x0c, 0x0a, 0x17, 0x42, 0x65, 0x74, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x72, 0x6f, 0x75, 0x6e, 0x64, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72,
	0x6f, 0x75, 0x6e, 0x64, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c,
	0x67, 0x61, 0x6d, 0x65, 0x50, 0x61, 0x67, 0x63, 0x6f, 0x72, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0c, 0x67, 0x61, 0x6d, 0x65, 0x50, 0x61, 0x67, 0x63, 0x6f, 0x72, 0x49, 0x64,
	0x12, 0x1e, 0x0a, 0x0a, 0x67, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x67, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x64,
	0x12, 0x26, 0x0a, 0x0e, 0x67, 0x61, 0x6d, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x67, 0x61, 0x6d, 0x65, 0x50, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x78, 0x62, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x78, 0x62, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x78, 0x62, 0x55, 0x69, 0x64, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x78, 0x62, 0x55, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x78, 0x62,
	0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x78, 0x62, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x65,
	0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a,
	0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x78, 0x62,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x78, 0x62,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x12, 0x1e, 0x0a, 0x0a,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x70, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61,
	0x79, 0x6f, 0x75, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x69, 0x6e, 0x52, 0x65, 0x66, 0x75,
	0x6e, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x69, 0x6e, 0x52, 0x65,
	0x66, 0x75, 0x6e, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x69, 0x6e, 0x42, 0x65, 0x66, 0x6f,
	0x72, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x69, 0x6e, 0x42, 0x65,
	0x66, 0x6f, 0x72, 0x65, 0x12, 0x34, 0x0a, 0x15, 0x67, 0x61, 0x6d, 0x65, 0x50, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x53, 0x75, 0x62, 0x74, 0x79, 0x70, 0x65, 0x49, 0x64, 0x18, 0x11, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x15, 0x67, 0x61, 0x6d, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x72, 0x53, 0x75, 0x62, 0x74, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x67, 0x61,
	0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x18, 0x13, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a,
	0x67, 0x61, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x74,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x18, 0x14, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x64,
	0x74, 0x53, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x74, 0x43, 0x6f,
	0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x15, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x64,
	0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x2a, 0x0a, 0x10, 0x77, 0x69,
	0x6e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x16,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x77, 0x69, 0x6e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x72, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x72, 0x12, 0x1c, 0x0a, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x18, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x19, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x32, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67,
	0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x42, 0x65, 0x74, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x41, 0x0a, 0x0b,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x41, 0x6d, 0x74, 0x18, 0x1b, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1f, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e,
	0x42, 0x65, 0x74, 0x50, 0x61, 0x67, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x41,
	0x6d, 0x74, 0x52, 0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x41, 0x6d, 0x74, 0x12,
	0x2c, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x42, 0x65, 0x74, 0x50,
	0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x35, 0x0a,
	0x07, 0x62, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x42, 0x65, 0x74,
	0x50, 0x61, 0x67, 0x65, 0x42, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x62, 0x65, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x35, 0x0a, 0x07, 0x77, 0x69, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x18,
	0x1e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65,
	0x72, 0x70, 0x63, 0x2e, 0x42, 0x65, 0x74, 0x50, 0x61, 0x67, 0x65, 0x57, 0x69, 0x6e, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x07, 0x77, 0x69, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x24, 0x0a, 0x0d, 0x63,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x1f, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0d, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x54, 0x65, 0x78, 0x74, 0x18, 0x20,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x54, 0x65, 0x78, 0x74, 0x12,
	0x26, 0x0a, 0x0e, 0x67, 0x61, 0x6d, 0x65, 0x50, 0x61, 0x67, 0x63, 0x6f, 0x72, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x21, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x67, 0x61, 0x6d, 0x65, 0x50, 0x61, 0x67,
	0x63, 0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x67, 0x61, 0x6d, 0x65, 0x50,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x22, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x10, 0x67, 0x61, 0x6d, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x38, 0x0a, 0x17, 0x67, 0x61, 0x6d, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x53, 0x75, 0x62, 0x74, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x23,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x17, 0x67, 0x61, 0x6d, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x53, 0x75, 0x62, 0x74, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x50, 0x0a,
	0x10, 0x66, 0x6c, 0x6f, 0x77, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x24, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61,
	0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x42, 0x65, 0x74, 0x50, 0x61, 0x67, 0x65, 0x46, 0x6c, 0x6f,
	0x77, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x54, 0x79, 0x70, 0x65, 0x52, 0x10, 0x66,
	0x6c, 0x6f, 0x77, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x67, 0x61, 0x6d, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x25, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x67, 0x61, 0x6d, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x67,
	0x61, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x26, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x67, 0x61, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x22, 0x0a, 0x0c, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x27, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x43,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x28, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x6d,
	0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x62, 0x6f, 0x6e, 0x75, 0x73, 0x18, 0x29, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05,
	0x62, 0x6f, 0x6e, 0x75, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x42, 0x65,
	0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x18, 0x2a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x63,
	0x68, 0x65, 0x63, 0x6b, 0x42, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x22, 0x97, 0x02,
	0x0a, 0x13, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x42, 0x65, 0x74, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73,
	0x69, 0x7a, 0x65, 0x12, 0x38, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x24, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e,
	0x41, 0x67, 0x65, 0x6e, 0x74, 0x42, 0x65, 0x74, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a,
	0x09, 0x73, 0x6f, 0x72, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x09, 0x73, 0x6f, 0x72, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x73,
	0x6f, 0x72, 0x74, 0x4b, 0x65, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x6f,
	0x72, 0x74, 0x4b, 0x65, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x72, 0x74, 0x49, 0x64, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x72, 0x74, 0x49, 0x64, 0x12, 0x1c, 0x0a,
	0x09, 0x73, 0x6f, 0x72, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x73, 0x6f, 0x72, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x65, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x70, 0x61, 0x67, 0x65, 0x73, 0x22, 0x9d, 0x02, 0x0a, 0x17, 0x41, 0x67, 0x65, 0x6e,
	0x74, 0x42, 0x65, 0x74, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x74,
	0x69, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x74,
	0x69, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x36, 0x0a, 0x16, 0x47, 0x61, 0x6d, 0x65, 0x50,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x53, 0x75, 0x62, 0x74, 0x79, 0x70, 0x65, 0x49, 0x64,
	0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x03, 0x52, 0x16, 0x47, 0x61, 0x6d, 0x65, 0x50, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x53, 0x75, 0x62, 0x74, 0x79, 0x70, 0x65, 0x49, 0x64, 0x73, 0x12,
	0x1a, 0x0a, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x7a, 0x6f, 0x6e, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x7a, 0x6f, 0x6e, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75,
	0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x67, 0x61, 0x6d,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x03, 0x52, 0x09, 0x67, 0x61,
	0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x77, 0x0a, 0x14, 0x41, 0x67, 0x65, 0x6e, 0x74,
	0x42, 0x65, 0x74, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x39, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x70,
	0x63, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x42, 0x65, 0x74, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x22, 0x85, 0x02, 0x0a, 0x18, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x42, 0x65, 0x74, 0x50, 0x61, 0x67,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x18, 0x0a,
	0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x3d, 0x0a, 0x04, 0x6c,
	0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x7a, 0x65, 0x72, 0x6f,
	0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x42, 0x65, 0x74,
	0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61,
	0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x70, 0x61, 0x67, 0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x63, 0x72, 0x6f, 0x6c, 0x6c,
	0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x63, 0x72, 0x6f, 0x6c, 0x6c,
	0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x6f, 0x72, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x6f, 0x72, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x72, 0x74, 0x49, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x6f, 0x72, 0x74, 0x49, 0x64, 0x22, 0xbf, 0x0c, 0x0a, 0x1c, 0x41, 0x67, 0x65,
	0x6e, 0x74, 0x42, 0x65, 0x74, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x44, 0x61, 0x74, 0x61, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x6f, 0x75,
	0x6e, 0x64, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x6f, 0x75, 0x6e,
	0x64, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x67, 0x61, 0x6d,
	0x65, 0x50, 0x61, 0x67, 0x63, 0x6f, 0x72, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0c, 0x67, 0x61, 0x6d, 0x65, 0x50, 0x61, 0x67, 0x63, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x1e, 0x0a,
	0x0a, 0x67, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0a, 0x67, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x64, 0x12, 0x26, 0x0a,
	0x0e, 0x67, 0x61, 0x6d, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x67, 0x61, 0x6d, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x78, 0x62, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x78, 0x62, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x14, 0x0a, 0x05, 0x78, 0x62, 0x55, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x78, 0x62, 0x55, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x78, 0x62, 0x55, 0x73, 0x65,
	0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x78, 0x62, 0x55,
	0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x65, 0x72, 0x63, 0x68,
	0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6d, 0x65, 0x72,
	0x63, 0x68, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x78, 0x62, 0x50, 0x72, 0x6f,
	0x66, 0x69, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x78, 0x62, 0x50, 0x72, 0x6f,
	0x66, 0x69, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x76, 0x61, 0x6c,
	0x69, 0x64, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x79,
	0x6f, 0x75, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x79, 0x6f, 0x75,
	0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x69, 0x6e, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x18,
	0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x69, 0x6e, 0x52, 0x65, 0x66, 0x75, 0x6e,
	0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x69, 0x6e, 0x42, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x18,
	0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x69, 0x6e, 0x42, 0x65, 0x66, 0x6f, 0x72,
	0x65, 0x12, 0x34, 0x0a, 0x15, 0x67, 0x61, 0x6d, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x72, 0x53, 0x75, 0x62, 0x74, 0x79, 0x70, 0x65, 0x49, 0x64, 0x18, 0x11, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x15, 0x67, 0x61, 0x6d, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x53, 0x75,
	0x62, 0x74, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x67, 0x61, 0x6d, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x49, 0x64, 0x18, 0x13, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x67, 0x61, 0x6d,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x74, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x65, 0x64, 0x18, 0x14, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x64, 0x74, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x65, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6c,
	0x65, 0x74, 0x65, 0x64, 0x18, 0x15, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x64, 0x74, 0x43, 0x6f,
	0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x2a, 0x0a, 0x10, 0x77, 0x69, 0x6e, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x16, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x10, 0x77, 0x69, 0x6e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x53, 0x74, 0x72, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x18, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x18, 0x19, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x32, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18,
	0x1a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65,
	0x72, 0x70, 0x63, 0x2e, 0x42, 0x65, 0x74, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x41, 0x0a, 0x0b, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x66, 0x65, 0x72, 0x41, 0x6d, 0x74, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f,
	0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x42, 0x65, 0x74,
	0x50, 0x61, 0x67, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x41, 0x6d, 0x74, 0x52,
	0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x41, 0x6d, 0x74, 0x12, 0x2c, 0x0a, 0x04,
	0x69, 0x6e, 0x66, 0x6f, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x7a, 0x65, 0x72,
	0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x42, 0x65, 0x74, 0x50, 0x61, 0x67, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x35, 0x0a, 0x07, 0x62, 0x65,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x7a, 0x65,
	0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x42, 0x65, 0x74, 0x50, 0x61, 0x67,
	0x65, 0x42, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x62, 0x65, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x35, 0x0a, 0x07, 0x77, 0x69, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x1e, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63,
	0x2e, 0x42, 0x65, 0x74, 0x50, 0x61, 0x67, 0x65, 0x57, 0x69, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x07, 0x77, 0x69, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0d, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x54, 0x65, 0x78, 0x74, 0x18, 0x20, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x54, 0x65, 0x78, 0x74, 0x12, 0x26, 0x0a, 0x0e,
	0x67, 0x61, 0x6d, 0x65, 0x50, 0x61, 0x67, 0x63, 0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x21,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x67, 0x61, 0x6d, 0x65, 0x50, 0x61, 0x67, 0x63, 0x6f, 0x72,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x67, 0x61, 0x6d, 0x65, 0x50, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x22, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10,
	0x67, 0x61, 0x6d, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x38, 0x0a, 0x17, 0x67, 0x61, 0x6d, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x53, 0x75, 0x62, 0x74, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x23, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x17, 0x67, 0x61, 0x6d, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x53,
	0x75, 0x62, 0x74, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x50, 0x0a, 0x10, 0x66, 0x6c,
	0x6f, 0x77, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x54, 0x79, 0x70, 0x65, 0x18, 0x24,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72,
	0x70, 0x63, 0x2e, 0x42, 0x65, 0x74, 0x50, 0x61, 0x67, 0x65, 0x46, 0x6c, 0x6f, 0x77, 0x43, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x54, 0x79, 0x70, 0x65, 0x52, 0x10, 0x66, 0x6c, 0x6f, 0x77,
	0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x67, 0x61, 0x6d, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x25, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x67, 0x61, 0x6d, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x67, 0x61, 0x6d, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x26, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x67, 0x61, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c,
	0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x27, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x2a, 0x0a, 0x10, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x43, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x18, 0x28, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x6d, 0x65, 0x72, 0x63,
	0x68, 0x61, 0x6e, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x62, 0x6f, 0x6e, 0x75, 0x73, 0x18, 0x29, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x62, 0x6f, 0x6e,
	0x75, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x42, 0x65, 0x74, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x18, 0x2a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x63, 0x68, 0x65, 0x63,
	0x6b, 0x42, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x22, 0x0f, 0x0a, 0x0d, 0x42, 0x65,
	0x74, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x14, 0x0a, 0x12, 0x42,
	0x65, 0x74, 0x50, 0x61, 0x67, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x41, 0x6d,
	0x74, 0x22, 0x0d, 0x0a, 0x0b, 0x42, 0x65, 0x74, 0x50, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x22, 0x10, 0x0a, 0x0e, 0x42, 0x65, 0x74, 0x50, 0x61, 0x67, 0x65, 0x42, 0x65, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x22, 0x10, 0x0a, 0x0e, 0x42, 0x65, 0x74, 0x50, 0x61, 0x67, 0x65, 0x57, 0x69, 0x6e,
	0x49, 0x6e, 0x66, 0x6f, 0x22, 0x19, 0x0a, 0x17, 0x42, 0x65, 0x74, 0x50, 0x61, 0x67, 0x65, 0x46,
	0x6c, 0x6f, 0x77, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x54, 0x79, 0x70, 0x65, 0x22,
	0x6b, 0x0a, 0x11, 0x42, 0x65, 0x74, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x67, 0x61, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x67, 0x61, 0x6d, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x6f, 0x0a, 0x12,
	0x42, 0x65, 0x74, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x33, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d,
	0x65, 0x72, 0x70, 0x63, 0x2e, 0x42, 0x65, 0x74, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x44,
	0x61, 0x74, 0x61, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xba, 0x04,
	0x0a, 0x12, 0x42, 0x65, 0x74, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x44, 0x61, 0x74, 0x61,
	0x49, 0x74, 0x65, 0x6d, 0x12, 0x38, 0x0a, 0x17, 0x67, 0x61, 0x6d, 0x65, 0x50, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x53, 0x75, 0x62, 0x74, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x17, 0x67, 0x61, 0x6d, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x53, 0x75, 0x62, 0x74, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x62, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x62, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x62, 0x65,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0c, 0x62, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1e,
	0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x12, 0x28,
	0x0a, 0x0f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x53, 0x74, 0x61, 0x6b,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x56, 0x61,
	0x6c, 0x69, 0x64, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x43, 0x6f, 0x69, 0x6e, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x0f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x69, 0x6e, 0x52, 0x65, 0x66, 0x75,
	0x6e, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x61, 0x79, 0x6f, 0x75,
	0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x61,
	0x79, 0x6f, 0x75, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x72, 0x6f,
	0x66, 0x69, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x12, 0x2a, 0x0a, 0x10, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53,
	0x74, 0x61, 0x6b, 0x65, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x10, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x45, 0x78, 0x70, 0x6f,
	0x72, 0x74, 0x12, 0x34, 0x0a, 0x15, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x56, 0x61, 0x6c, 0x69, 0x64,
	0x53, 0x74, 0x61, 0x6b, 0x65, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x15, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x53, 0x74, 0x61,
	0x6b, 0x65, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x34, 0x0a, 0x15, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x43, 0x6f, 0x69, 0x6e, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x45, 0x78, 0x70, 0x6f, 0x72,
	0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x01, 0x52, 0x15, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f,
	0x69, 0x6e, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x2c,
	0x0a, 0x11, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x45, 0x78, 0x70,
	0x6f, 0x72, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x01, 0x52, 0x11, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x50, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x2c, 0x0a, 0x11,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x45, 0x78, 0x70, 0x6f, 0x72,
	0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x01, 0x52, 0x11, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x72,
	0x6f, 0x66, 0x69, 0x74, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x22, 0x70, 0x0a, 0x16, 0x41, 0x67,
	0x65, 0x6e, 0x74, 0x42, 0x65, 0x74, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x67, 0x61, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x67, 0x61, 0x6d, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x79, 0x0a, 0x17,
	0x41, 0x67, 0x65, 0x6e, 0x74, 0x42, 0x65, 0x74, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d,
	0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x38, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x7a, 0x65,
	0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x42,
	0x65, 0x74, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x44, 0x61, 0x74, 0x61, 0x49, 0x74, 0x65,
	0x6d, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xbf, 0x04, 0x0a, 0x17, 0x41, 0x67, 0x65, 0x6e,
	0x74, 0x42, 0x65, 0x74, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x44, 0x61, 0x74, 0x61, 0x49,
	0x74, 0x65, 0x6d, 0x12, 0x38, 0x0a, 0x17, 0x67, 0x61, 0x6d, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x53, 0x75, 0x62, 0x74, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x17, 0x67, 0x61, 0x6d, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x53, 0x75, 0x62, 0x74, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x62, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x62, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x62, 0x65, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0c, 0x62, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1e, 0x0a,
	0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x12, 0x28, 0x0a,
	0x0f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x53, 0x74, 0x61, 0x6b, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x56, 0x61, 0x6c,
	0x69, 0x64, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x43, 0x6f, 0x69, 0x6e, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x0f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x69, 0x6e, 0x52, 0x65, 0x66, 0x75, 0x6e,
	0x64, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x61, 0x79, 0x6f, 0x75, 0x74,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x61, 0x79,
	0x6f, 0x75, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x72, 0x6f, 0x66,
	0x69, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x74, 0x12, 0x2a, 0x0a, 0x10, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x74,
	0x61, 0x6b, 0x65, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x10, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x45, 0x78, 0x70, 0x6f, 0x72,
	0x74, 0x12, 0x34, 0x0a, 0x15, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x53,
	0x74, 0x61, 0x6b, 0x65, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x15, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x53, 0x74, 0x61, 0x6b,
	0x65, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x34, 0x0a, 0x15, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x43, 0x6f, 0x69, 0x6e, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x01, 0x52, 0x15, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x69,
	0x6e, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x2c, 0x0a,
	0x11, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x45, 0x78, 0x70, 0x6f,
	0x72, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x01, 0x52, 0x11, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50,
	0x61, 0x79, 0x6f, 0x75, 0x74, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x2c, 0x0a, 0x11, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x01, 0x52, 0x11, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x72, 0x6f,
	0x66, 0x69, 0x74, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x22, 0x6e, 0x0a, 0x20, 0x44, 0x61, 0x69,
	0x6c, 0x79, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69,
	0x63, 0x73, 0x50, 0x6c, 0x61, 0x74, 0x43, 0x6f, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a,
	0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65,
	0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x6e,
	0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x8d, 0x01, 0x0a, 0x21, 0x44, 0x61,
	0x69, 0x6c, 0x79, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74,
	0x69, 0x63, 0x73, 0x50, 0x6c, 0x61, 0x74, 0x43, 0x6f, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x42, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x70,
	0x63, 0x2e, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x74, 0x61,
	0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x50, 0x6c, 0x61, 0x74, 0x43, 0x6f, 0x69, 0x6e, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xa1, 0x01, 0x0a, 0x21, 0x44, 0x61,
	0x69, 0x6c, 0x79, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74,
	0x69, 0x63, 0x73, 0x50, 0x6c, 0x61, 0x74, 0x43, 0x6f, 0x69, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x1e, 0x0a, 0x0a, 0x67, 0x61, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x67, 0x61, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12,
	0x22, 0x0a, 0x0c, 0x67, 0x61, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x67, 0x61, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x65, 0x74, 0x43, 0x6f, 0x69, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x62, 0x65, 0x74, 0x43, 0x6f, 0x69, 0x6e, 0x12, 0x1e, 0x0a,
	0x0a, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x43, 0x6f, 0x69, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x43, 0x6f, 0x69, 0x6e, 0x22, 0x33, 0x0a,
	0x13, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x42, 0x65, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x67, 0x61, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x67, 0x61, 0x6d, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x73, 0x22, 0x73, 0x0a, 0x14, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x42, 0x65, 0x74, 0x47, 0x61,
	0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67,
	0x12, 0x35, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21,
	0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x64, 0x6d,
	0x69, 0x6e, 0x42, 0x65, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x94, 0x02, 0x0a, 0x14, 0x41, 0x64, 0x6d, 0x69,
	0x6e, 0x42, 0x65, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x67, 0x61, 0x6d, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x67, 0x61,
	0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x22,
	0x0a, 0x0c, 0x67, 0x61, 0x6d, 0x65, 0x50, 0x61, 0x67, 0x63, 0x6f, 0x72, 0x49, 0x64, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x67, 0x61, 0x6d, 0x65, 0x50, 0x61, 0x67, 0x63, 0x6f, 0x72,
	0x49, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x67, 0x61, 0x6d, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x49, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x67, 0x61, 0x6d, 0x65,
	0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x61, 0x74, 0x65, 0x12, 0x1e,
	0x0a, 0x0a, 0x70, 0x61, 0x67, 0x63, 0x6f, 0x72, 0x52, 0x61, 0x74, 0x65, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x63, 0x6f, 0x72, 0x52, 0x61, 0x74, 0x65, 0x22, 0xb5,
	0x01, 0x0a, 0x13, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x75, 0x62, 0x47,
	0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04,
	0x73, 0x69, 0x7a, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x4b, 0x65, 0x79, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x4b, 0x65, 0x79, 0x12, 0x1c,
	0x0a, 0x09, 0x73, 0x6f, 0x72, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x09, 0x73, 0x6f, 0x72, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x38, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x7a, 0x65, 0x72,
	0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x4c, 0x69,
	0x73, 0x74, 0x53, 0x75, 0x62, 0x47, 0x61, 0x6d, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x93, 0x01, 0x0a, 0x17, 0x41, 0x67, 0x65, 0x6e, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x53, 0x75, 0x62, 0x47, 0x61, 0x6d, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x65, 0x71, 0x12, 0x34, 0x0a, 0x15, 0x67, 0x61, 0x6d, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x53, 0x75, 0x62, 0x74, 0x79, 0x70, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x15, 0x67, 0x61, 0x6d, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x53,
	0x75, 0x62, 0x74, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x77, 0x0a, 0x14,
	0x41, 0x67, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x75, 0x62, 0x47, 0x61, 0x6d, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x39, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67,
	0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74,
	0x53, 0x75, 0x62, 0x47, 0x61, 0x6d, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xaf, 0x01, 0x0a, 0x18, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x4c,
	0x69, 0x73, 0x74, 0x53, 0x75, 0x62, 0x47, 0x61, 0x6d, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x70, 0x61, 0x67, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x61, 0x67,
	0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x39, 0x0a, 0x04,
	0x6c, 0x69, 0x73, 0x74, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x7a, 0x65, 0x72,
	0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x4c, 0x69,
	0x73, 0x74, 0x53, 0x75, 0x62, 0x47, 0x61, 0x6d, 0x65, 0x44, 0x61, 0x74, 0x61, 0x49, 0x74, 0x65,
	0x6d, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x9a, 0x07, 0x0a, 0x18, 0x41, 0x67, 0x65, 0x6e,
	0x74, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x75, 0x62, 0x47, 0x61, 0x6d, 0x65, 0x44, 0x61, 0x74, 0x61,
	0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x22, 0x0a, 0x0c,
	0x66, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x53, 0x74, 0x61, 0x72, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0c, 0x66, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x53, 0x74, 0x61, 0x72,
	0x12, 0x26, 0x0a, 0x0e, 0x67, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x67, 0x61, 0x6d, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x67, 0x61, 0x6d, 0x65,
	0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0e, 0x67, 0x61, 0x6d, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x2a, 0x0a, 0x10, 0x67, 0x61, 0x6d, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x67, 0x61, 0x6d, 0x65,
	0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x34, 0x0a, 0x15,
	0x67, 0x61, 0x6d, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x53, 0x75, 0x62, 0x74,
	0x79, 0x70, 0x65, 0x49, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x15, 0x67, 0x61, 0x6d,
	0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x53, 0x75, 0x62, 0x74, 0x79, 0x70, 0x65,
	0x49, 0x64, 0x12, 0x38, 0x0a, 0x17, 0x67, 0x61, 0x6d, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x53, 0x75, 0x62, 0x74, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x17, 0x67, 0x61, 0x6d, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x72, 0x53, 0x75, 0x62, 0x74, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a,
	0x67, 0x61, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x67, 0x61, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c,
	0x67, 0x61, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x67, 0x61, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x68, 0x6f, 0x74, 0x53, 0x74, 0x61, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x68, 0x6f, 0x74, 0x53, 0x74, 0x61, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x73,
	0x43, 0x61, 0x73, 0x69, 0x6e, 0x6f, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x69, 0x73,
	0x43, 0x61, 0x73, 0x69, 0x6e, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x73, 0x4e, 0x65, 0x77, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x69, 0x73, 0x4e, 0x65, 0x77, 0x12, 0x1e, 0x0a, 0x0a,
	0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x49, 0x63, 0x6f, 0x6e, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x49, 0x63, 0x6f, 0x6e, 0x12, 0x52, 0x0a, 0x0b,
	0x6d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x30, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e,
	0x41, 0x67, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x75, 0x62, 0x47, 0x61, 0x6d, 0x65,
	0x44, 0x61, 0x74, 0x61, 0x49, 0x74, 0x65, 0x6d, 0x4d, 0x61, 0x69, 0x6e, 0x54, 0x65, 0x6e, 0x61,
	0x6e, 0x63, 0x65, 0x52, 0x0b, 0x6d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x6f, 0x72, 0x69, 0x67,
	0x69, 0x6e, 0x61, 0x6c, 0x49, 0x63, 0x6f, 0x6e, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x49, 0x63, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04,
	0x73, 0x6f, 0x72, 0x74, 0x18, 0x13, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x14, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x15, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x55, 0x73, 0x65, 0x72, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x55, 0x73, 0x65, 0x72, 0x12, 0x24, 0x0a, 0x0d, 0x62, 0x65, 0x74, 0x54,
	0x6f, 0x74, 0x61, 0x6c, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x17, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x0d, 0x62, 0x65, 0x74, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x38,
	0x0a, 0x17, 0x73, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x55, 0x73, 0x65, 0x72, 0x42, 0x65, 0x74, 0x50,
	0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x18, 0x18, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x17, 0x73, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x55, 0x73, 0x65, 0x72, 0x42, 0x65, 0x74, 0x50, 0x65,
	0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x65, 0x74, 0x54,
	0x6f, 0x74, 0x61, 0x6c, 0x18, 0x19, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x62, 0x65, 0x74, 0x54,
	0x6f, 0x74, 0x61, 0x6c, 0x22, 0x61, 0x0a, 0x23, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73,
	0x74, 0x53, 0x75, 0x62, 0x47, 0x61, 0x6d, 0x65, 0x44, 0x61, 0x74, 0x61, 0x49, 0x74, 0x65, 0x6d,
	0x4d, 0x61, 0x69, 0x6e, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x65, 0x6e, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x27, 0x0a, 0x11, 0x56, 0x61, 0x6c, 0x69, 0x64,
	0x53, 0x74, 0x61, 0x6b, 0x65, 0x43, 0x72, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65,
	0x22, 0x42, 0x0a, 0x12, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x43, 0x72,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x22, 0x2b, 0x0a, 0x15, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x53, 0x74, 0x61,
	0x6b, 0x65, 0x57, 0x65, 0x65, 0x6b, 0x43, 0x72, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x65, 0x22, 0x46, 0x0a, 0x16, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x57,
	0x65, 0x65, 0x6b, 0x43, 0x72, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x2c, 0x0a, 0x16, 0x56, 0x61, 0x6c,
	0x69, 0x64, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x43, 0x72, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x22, 0x47, 0x0a, 0x17, 0x56, 0x61, 0x6c, 0x69, 0x64,
	0x53, 0x74, 0x61, 0x6b, 0x65, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x43, 0x72, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x22, 0x1d, 0x0a, 0x1b, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x6c, 0x79, 0x52, 0x65, 0x64, 0x75, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x43, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x22,
	0x4c, 0x0a, 0x1c, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x6c, 0x79, 0x52, 0x65, 0x64, 0x75, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x43, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x17, 0x0a,
	0x15, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x47, 0x61, 0x6d, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x22, 0x7b, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c,
	0x47, 0x61, 0x6d, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x3b, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72,
	0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x6c, 0x6f,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x22, 0x8c, 0x01, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x47, 0x61,
	0x6d, 0x65, 0x53, 0x6c, 0x6f, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63,
	0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x22,
	0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x22, 0xf8, 0x03, 0x0a, 0x14, 0x47, 0x61, 0x6d, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x55, 0x72, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6c,
	0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c,
	0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x65, 0x61, 0x67, 0x75,
	0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6c, 0x65,
	0x61, 0x67, 0x75, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x61, 0x74, 0x63,
	0x68, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6d, 0x61,
	0x74, 0x63, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x68, 0x6f, 0x6d, 0x65, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x6f, 0x6d, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x68, 0x6f, 0x6d, 0x65, 0x5f, 0x69, 0x63, 0x6f,
	0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x6f, 0x6d, 0x65, 0x49, 0x63, 0x6f,
	0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x76, 0x69, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x76, 0x69, 0x73, 0x69, 0x74, 0x6f, 0x72,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x76, 0x69, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x5f,
	0x69, 0x63, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x76, 0x69, 0x73, 0x69,
	0x74, 0x6f, 0x72, 0x49, 0x63, 0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x10, 0x67, 0x61, 0x6d, 0x65, 0x5f,
	0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0e, 0x67, 0x61, 0x6d, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09,
	0x6c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x6c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x1d,
	0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x10, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x22, 0xee, 0x02,
	0x0a, 0x16, 0x41, 0x64, 0x64, 0x47, 0x61, 0x6d, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x55, 0x72, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67,
	0x75, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67,
	0x75, 0x61, 0x67, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6c, 0x65, 0x61, 0x67, 0x75,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6d, 0x61, 0x74, 0x63, 0x68,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x68, 0x6f, 0x6d, 0x65, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x6f, 0x6d, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x1b, 0x0a, 0x09, 0x68, 0x6f, 0x6d, 0x65, 0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x6f, 0x6d, 0x65, 0x49, 0x63, 0x6f, 0x6e, 0x12, 0x21,
	0x0a, 0x0c, 0x76, 0x69, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x76, 0x69, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x21, 0x0a, 0x0c, 0x76, 0x69, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x63, 0x6f,
	0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x76, 0x69, 0x73, 0x69, 0x74, 0x6f, 0x72,
	0x49, 0x63, 0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x10, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x70, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e,
	0x67, 0x61, 0x6d, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x19,
	0x0a, 0x08, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x65, 0x61,
	0x67, 0x75, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x65,
	0x61, 0x67, 0x75, 0x65, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x53,
	0x0a, 0x17, 0x41, 0x64, 0x64, 0x47, 0x61, 0x6d, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x55, 0x72, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12,
	0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x22, 0x28, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x47, 0x61, 0x6d, 0x65, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x72, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x53, 0x0a,
	0x17, 0x44, 0x65, 0x6c, 0x47, 0x61, 0x6d, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x55, 0x72, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x12,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x22, 0x81, 0x03, 0x0a, 0x19, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x61, 0x6d,
	0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x72, 0x6c, 0x52, 0x65, 0x71,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x1f, 0x0a, 0x0b,
	0x6c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x6c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x09, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09,
	0x68, 0x6f, 0x6d, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x68, 0x6f, 0x6d, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x68, 0x6f, 0x6d,
	0x65, 0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x6f,
	0x6d, 0x65, 0x49, 0x63, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x76, 0x69, 0x73, 0x69, 0x74, 0x6f,
	0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x76, 0x69,
	0x73, 0x69, 0x74, 0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x76, 0x69, 0x73,
	0x69, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x76, 0x69, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x49, 0x63, 0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x10,
	0x67, 0x61, 0x6d, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x67, 0x61, 0x6d, 0x65, 0x50, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f,
	0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x49,
	0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x49, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x56, 0x0a, 0x1a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x47, 0x61, 0x6d, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x72, 0x6c,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x34,
	0x0a, 0x22, 0x47, 0x65, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x72, 0x6c, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x02, 0x69, 0x64, 0x22, 0x82, 0x01, 0x0a, 0x23, 0x47, 0x65, 0x74, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55,
	0x72, 0x6c, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d,
	0x73, 0x67, 0x12, 0x35, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x21, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x47,
	0x61, 0x6d, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x72, 0x6c, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xac, 0x01, 0x0a, 0x1e, 0x47, 0x61,
	0x6d, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x72, 0x6c, 0x4c, 0x69,
	0x73, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1a, 0x0a, 0x08,
	0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x61, 0x74, 0x63,
	0x68, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x61, 0x74, 0x63,
	0x68, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x49, 0x64,
	0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xc3, 0x01, 0x0a, 0x1a, 0x47, 0x65, 0x74,
	0x47, 0x61, 0x6d, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x72, 0x6c,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x3f, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x70,
	0x63, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55,
	0x72, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x6f, 0x72, 0x74, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x73, 0x6f, 0x72, 0x74, 0x46,
	0x69, 0x65, 0x6c, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x4b, 0x65, 0x79, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x4b, 0x65, 0x79, 0x22, 0xd4,
	0x01, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x55, 0x72, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6d, 0x73, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x70, 0x61, 0x67, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x70,
	0x61, 0x67, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x35,
	0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x7a,
	0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x72, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x5e, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x53, 0x70, 0x6f, 0x72,
	0x74, 0x48, 0x6f, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12,
	0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x67,
	0x61, 0x6d, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x67, 0x61, 0x6d, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x49, 0x64, 0x22, 0x76, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x53, 0x70, 0x6f, 0x72,
	0x74, 0x48, 0x6f, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x35, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72,
	0x70, 0x63, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x55, 0x72, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0xe4, 0x02,
	0x0a, 0x14, 0x53, 0x74, 0x61, 0x72, 0x74, 0x53, 0x70, 0x6f, 0x72, 0x74, 0x48, 0x6f, 0x74, 0x47,
	0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x70, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6d, 0x6f, 0x64,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x4d, 0x6f, 0x64,
	0x65, 0x12, 0x24, 0x0a, 0x0d, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c,
	0x61, 0x6e, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x68, 0x65, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x74, 0x68, 0x65, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x77, 0x65, 0x62,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x77, 0x65, 0x62,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x12, 0x26, 0x0a, 0x0e,
	0x67, 0x61, 0x6d, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x67, 0x61, 0x6d, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x12, 0x67, 0x61, 0x6d, 0x65, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x72, 0x6c, 0x49, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x12, 0x67, 0x61, 0x6d, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55,
	0x72, 0x6c, 0x49, 0x64, 0x22, 0x58, 0x0a, 0x15, 0x53, 0x74, 0x61, 0x72, 0x74, 0x53, 0x70, 0x6f,
	0x72, 0x74, 0x48, 0x6f, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6d, 0x73, 0x67, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x61, 0x6d, 0x65, 0x55, 0x72, 0x6c, 0x22, 0x6b,
	0x0a, 0x1a, 0x41, 0x64, 0x64, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69,
	0x66, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x43, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x12, 0x4d, 0x0a, 0x0b,
	0x69, 0x6e, 0x66, 0x6f, 0x43, 0x6d, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x2b, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e,
	0x41, 0x64, 0x64, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x79,
	0x49, 0x6e, 0x66, 0x6f, 0x43, 0x6d, 0x73, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x52, 0x0b,
	0x69, 0x6e, 0x66, 0x6f, 0x43, 0x6d, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x22, 0xde, 0x03, 0x0a, 0x1e,
	0x41, 0x64, 0x64, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x79,
	0x49, 0x6e, 0x66, 0x6f, 0x43, 0x6d, 0x73, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x12, 0x14,
	0x0a, 0x05, 0x63, 0x68, 0x6f, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x63,
	0x68, 0x6f, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x49, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x66, 0x61, 0x76, 0x6f, 0x72, 0x69,
	0x74, 0x65, 0x53, 0x74, 0x61, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x66, 0x61,
	0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x53, 0x74, 0x61, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x67, 0x61,
	0x6d, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0b, 0x67, 0x61, 0x6d, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x67, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x67, 0x61,
	0x6d, 0x65, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x68, 0x6f, 0x74, 0x53, 0x74, 0x61, 0x72, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x68, 0x6f, 0x74, 0x53, 0x74, 0x61, 0x72, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03,
	0x69, 0x6d, 0x67, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x69, 0x6d, 0x67, 0x12, 0x14,
	0x0a, 0x05, 0x69, 0x73, 0x4e, 0x65, 0x77, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x69,
	0x73, 0x4e, 0x65, 0x77, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x6c, 0x61, 0x74,
	0x49, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x70, 0x6c, 0x61, 0x74, 0x49, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6c, 0x6f, 0x74,
	0x49, 0x64, 0x18, 0x10, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x6c, 0x6f, 0x74, 0x49, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x11, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04,
	0x73, 0x6f, 0x72, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x12,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x57, 0x0a, 0x1b,
	0x41, 0x64, 0x64, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x79,
	0x49, 0x6e, 0x66, 0x6f, 0x43, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73,
	0x67, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x8f, 0x01, 0x0a, 0x1c, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x43,
	0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x79, 0x47, 0x61, 0x6d, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x50,
	0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04,
	0x73, 0x69, 0x7a, 0x65, 0x12, 0x41, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63,
	0x2e, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x79, 0x47, 0x61,
	0x6d, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x50, 0x61, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65,
	0x71, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x3c, 0x0a, 0x20, 0x46, 0x72, 0x6f, 0x6e, 0x74,
	0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x79, 0x47, 0x61, 0x6d, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x50, 0x61, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x63,
	0x6c, 0x61, 0x73, 0x73, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x6c,
	0x61, 0x73, 0x73, 0x49, 0x64, 0x22, 0x89, 0x01, 0x0a, 0x1d, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x43,
	0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x79, 0x47, 0x61, 0x6d, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x50,
	0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d,
	0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x42, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x7a, 0x65,
	0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x43,
	0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x79, 0x47, 0x61, 0x6d, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x50,
	0x61, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x22, 0xc1, 0x01, 0x0a, 0x21, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x43, 0x6c, 0x61, 0x73, 0x73,
	0x69, 0x66, 0x79, 0x47, 0x61, 0x6d, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x50, 0x61, 0x67, 0x65, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x70, 0x61, 0x67, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x12, 0x42, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x2e, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x46, 0x72,
	0x6f, 0x6e, 0x74, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x79, 0x47, 0x61, 0x6d, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x50, 0x61, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x49, 0x74, 0x65, 0x6d, 0x52,
	0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0xc1, 0x02, 0x0a, 0x21, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x43,
	0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x79, 0x47, 0x61, 0x6d, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x50,
	0x61, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x6c, 0x6f, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6c, 0x6f,
	0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x61, 0x6d, 0x65, 0x49,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x67, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x12,
	0x20, 0x0a, 0x0b, 0x67, 0x61, 0x6d, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x67, 0x61, 0x6d, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x6c, 0x61, 0x74, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x70, 0x6c, 0x61, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x22, 0xb5, 0x01, 0x0a, 0x13, 0x47, 0x65,
	0x74, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x50, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73,
	0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x4b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x4b, 0x65, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x6f, 0x72,
	0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x73, 0x6f,
	0x72, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x38, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65,
	0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x50, 0x61, 0x67, 0x65,
	0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x22, 0x97, 0x02, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x50, 0x61,
	0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a,
	0x07, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x73, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x70, 0x6f, 0x72, 0x74,
	0x49, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x03, 0x52, 0x08, 0x73, 0x70, 0x6f, 0x72, 0x74,
	0x49, 0x64, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x49, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x49, 0x64, 0x12,
	0x1c, 0x0a, 0x09, 0x6c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x49, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x03, 0x52, 0x09, 0x6c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x49, 0x64, 0x73, 0x12, 0x1c, 0x0a,
	0x09, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x54, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x62,
	0x65, 0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x62, 0x65, 0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x49, 0x64, 0x73, 0x18,
	0x08, 0x20, 0x03, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x49, 0x64, 0x73, 0x12,
	0x1a, 0x0a, 0x08, 0x6f, 0x64, 0x64, 0x73, 0x54, 0x79, 0x70, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x6f, 0x64, 0x64, 0x73, 0x54, 0x79, 0x70, 0x65, 0x22, 0x77, 0x0a, 0x14, 0x47,
	0x65, 0x74, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x50, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x39, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61,
	0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x50, 0x61,
	0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x22, 0xaf, 0x01, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x74, 0x63,
	0x68, 0x50, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x70,
	0x61, 0x67, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x61, 0x67, 0x65,
	0x73, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x39, 0x0a, 0x04, 0x6c,
	0x69, 0x73, 0x74, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x7a, 0x65, 0x72, 0x6f,
	0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x74, 0x63, 0x68,
	0x50, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x49, 0x74, 0x65, 0x6d,
	0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0xbe, 0x06, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x4d, 0x61,
	0x74, 0x63, 0x68, 0x50, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x49,
	0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x49, 0x64, 0x12, 0x1c, 0x0a,
	0x09, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6d,
	0x61, 0x74, 0x63, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x6d, 0x61, 0x74, 0x63, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x6d, 0x61, 0x74,
	0x63, 0x68, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b,
	0x6d, 0x61, 0x74, 0x63, 0x68, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x73,
	0x70, 0x6f, 0x72, 0x74, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x73, 0x70,
	0x6f, 0x72, 0x74, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x6d, 0x61, 0x72, 0x6b,
	0x65, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x65, 0x75, 0x74, 0x72,
	0x61, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6e, 0x65, 0x75, 0x74, 0x72, 0x61,
	0x6c, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6f, 0x64, 0x64,
	0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6f, 0x64, 0x64, 0x73, 0x12, 0x1e, 0x0a,
	0x0a, 0x6c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x6c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1a, 0x0a,
	0x08, 0x74, 0x65, 0x61, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x74, 0x65, 0x61, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x61, 0x74,
	0x63, 0x68, 0x43, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d,
	0x61, 0x74, 0x63, 0x68, 0x43, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x61, 0x72,
	0x6b, 0x65, 0x74, 0x54, 0x61, 0x67, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d,
	0x61, 0x72, 0x6b, 0x65, 0x74, 0x54, 0x61, 0x67, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x6d, 0x61, 0x74,
	0x63, 0x68, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x49, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0d, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x49, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x6c, 0x69, 0x76, 0x65, 0x55, 0x72, 0x6c, 0x73, 0x18, 0x10, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x6c, 0x69, 0x76, 0x65, 0x55, 0x72, 0x6c, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x69, 0x64, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x69, 0x64, 0x65, 0x12, 0x1e, 0x0a,
	0x0a, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x50, 0x68, 0x61, 0x73, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x50, 0x68, 0x61, 0x73, 0x65, 0x12, 0x24, 0x0a,
	0x0d, 0x73, 0x65, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x13,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x73, 0x65, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x75, 0x62, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x73, 0x75, 0x62, 0x4d, 0x61,
	0x74, 0x63, 0x68, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x61, 0x74, 0x63, 0x68,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6d, 0x61, 0x74, 0x63,
	0x68, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18,
	0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x1e, 0x0a,
	0x0a, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x18, 0x17, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x69, 0x73, 0x49, 0x6e, 0x50, 0x6c, 0x61, 0x79, 0x18, 0x18, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x69, 0x73, 0x49, 0x6e, 0x50, 0x6c, 0x61, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x19, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x46, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x6d, 0x61, 0x74, 0x63,
	0x68, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x22, 0x7e, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x52, 0x65,
	0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x61, 0x6e, 0x64, 0x6f,
	0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x12,
	0x1a, 0x0a, 0x08, 0x73, 0x6f, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x73, 0x6f, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6f,
	0x64, 0x64, 0x73, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6f,
	0x64, 0x64, 0x73, 0x54, 0x79, 0x70, 0x65, 0x22, 0x81, 0x01, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x52,
	0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x3e, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x7a, 0x65, 0x72, 0x6f,
	0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x64, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x65, 0x73, 0x70, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xbb, 0x03, 0x0a, 0x1d,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x4d, 0x61, 0x74, 0x63,
	0x68, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x0e, 0x0a,
	0x02, 0x6e, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x6e, 0x6d, 0x12, 0x0e, 0x0a,
	0x02, 0x62, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x62, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x6d, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x6d, 0x73, 0x12, 0x10, 0x0a,
	0x03, 0x66, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x66, 0x69, 0x64, 0x12,
	0x10, 0x0a, 0x03, 0x66, 0x6d, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x66, 0x6d,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x73, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x73,
	0x73, 0x12, 0x0e, 0x0a, 0x02, 0x6e, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x6e,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x69, 0x76, 0x65, 0x55, 0x72, 0x6c, 0x73, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x69, 0x76, 0x65, 0x55, 0x72, 0x6c, 0x73, 0x12, 0x10, 0x0a,
	0x03, 0x73, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x73, 0x69, 0x64, 0x12,
	0x10, 0x0a, 0x03, 0x73, 0x73, 0x69, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x73, 0x73,
	0x69, 0x12, 0x0e, 0x0a, 0x02, 0x6d, 0x70, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x6d,
	0x70, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x6d, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03,
	0x73, 0x6d, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x79, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x74, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x79, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x79, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x73, 0x62, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x73, 0x62, 0x12, 0x0e, 0x0a, 0x02, 0x70, 0x6c, 0x18, 0x11, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x70, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x73, 0x67, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6e, 0x73, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x6d, 0x67, 0x18, 0x13, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x6d, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x6d, 0x73, 0x18, 0x14, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x03, 0x74, 0x6d, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x70, 0x73, 0x18, 0x15,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x74, 0x70, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x6c, 0x67, 0x18,
	0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x6c, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x73, 0x18,
	0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x74, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x6d, 0x63, 0x18,
	0x18, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x6d, 0x63, 0x22, 0x7b, 0x0a, 0x1b, 0x47, 0x65, 0x74,
	0x52, 0x65, 0x63, 0x6f, 0x6d, 0x65, 0x6e, 0x64, 0x50, 0x6c, 0x61, 0x79, 0x4d, 0x61, 0x74, 0x63,
	0x68, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x61, 0x74, 0x63,
	0x68, 0x49, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x61, 0x74, 0x63,
	0x68, 0x49, 0x64, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x6f, 0x6e, 0x6c, 0x79, 0x4f, 0x6e, 0x65, 0x4d,
	0x61, 0x72, 0x6b, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x6f, 0x6e, 0x6c,
	0x79, 0x4f, 0x6e, 0x65, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x64,
	0x64, 0x73, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6f, 0x64,
	0x64, 0x73, 0x54, 0x79, 0x70, 0x65, 0x22, 0x87, 0x01, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x52, 0x65,
	0x63, 0x6f, 0x6d, 0x65, 0x6e, 0x64, 0x50, 0x6c, 0x61, 0x79, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d,
	0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x41, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x7a, 0x65,
	0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63,
	0x6f, 0x6d, 0x65, 0x6e, 0x64, 0x50, 0x6c, 0x61, 0x79, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x4c, 0x69,
	0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x22, 0x96, 0x01, 0x0a, 0x20, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x65, 0x6e, 0x64,
	0x50, 0x6c, 0x61, 0x79, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x65, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x03, 0x6d, 0x69, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x6e, 0x6d, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x6e, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x62, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x62, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x6d, 0x73, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x6d, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6f, 0x70, 0x73, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6f, 0x70, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x73, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x74, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x6c, 0x67, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x6c, 0x67, 0x22, 0x46, 0x0a, 0x16, 0x47, 0x65, 0x74,
	0x46, 0x75, 0x74, 0x75, 0x72, 0x65, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x64, 0x61, 0x79, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x64, 0x61, 0x79,
	0x73, 0x22, 0x7d, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x46, 0x75, 0x74, 0x75, 0x72, 0x65, 0x4d, 0x61,
	0x74, 0x63, 0x68, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d,
	0x73, 0x67, 0x12, 0x3c, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x28, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x47,
	0x65, 0x74, 0x46, 0x75, 0x74, 0x75, 0x72, 0x65, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x22, 0x49, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x46, 0x75, 0x74, 0x75, 0x72, 0x65, 0x4d, 0x61, 0x74,
	0x63, 0x68, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x0c, 0x0a, 0x01, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x01, 0x64, 0x12, 0x0e, 0x0a,
	0x02, 0x64, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x64, 0x6c, 0x12, 0x0c, 0x0a,
	0x01, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x01, 0x6f, 0x22, 0x60, 0x0a, 0x16, 0x47,
	0x65, 0x74, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x49, 0x64, 0x12,
	0x10, 0x0a, 0x03, 0x74, 0x61, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x74, 0x61,
	0x67, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x64, 0x64, 0x73, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x6f, 0x64, 0x64, 0x73, 0x54, 0x79, 0x70, 0x65, 0x22, 0x7d, 0x0a,
	0x17, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x3c,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x7a,
	0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x61,
	0x74, 0x63, 0x68, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x85, 0x01, 0x0a,
	0x1b, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03,
	0x6d, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6d, 0x69, 0x64, 0x12, 0x10,
	0x0a, 0x03, 0x6d, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6d, 0x74, 0x79,
	0x12, 0x0e, 0x0a, 0x02, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x70, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x6d, 0x6b, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d,
	0x6b, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x70, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x74, 0x70, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x6e, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x6e, 0x6d, 0x22, 0xc6, 0x01, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x74, 0x63,
	0x68, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x12,
	0x1a, 0x0a, 0x08, 0x6c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x6c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x61,
	0x6c, 0x6c, 0x4c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09,
	0x61, 0x6c, 0x6c, 0x4c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x74, 0x79, 0x70,
	0x65, 0x46, 0x6f, 0x72, 0x4c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x53, 0x74, 0x61, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x74, 0x79, 0x70, 0x65, 0x46, 0x6f, 0x72, 0x4c, 0x65, 0x61,
	0x67, 0x75, 0x65, 0x53, 0x74, 0x61, 0x74, 0x12, 0x44, 0x0a, 0x07, 0x6d, 0x61, 0x72, 0x6b, 0x65,
	0x74, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67,
	0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x53,
	0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74,
	0x73, 0x52, 0x65, 0x71, 0x52, 0x07, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x73, 0x22, 0x76, 0x0a,
	0x1d, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74,
	0x69, 0x63, 0x61, 0x6c, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x73, 0x52, 0x65, 0x71, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x45,
	0x0a, 0x07, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x2b, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65,
	0x74, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x61,
	0x6c, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x73, 0x32, 0x52, 0x65, 0x71, 0x52, 0x07, 0x6d, 0x61,
	0x72, 0x6b, 0x65, 0x74, 0x73, 0x22, 0x58, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x74, 0x63,
	0x68, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x4d, 0x61, 0x72, 0x6b,
	0x65, 0x74, 0x73, 0x32, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x61, 0x72, 0x6b, 0x65,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6d, 0x61, 0x72,
	0x6b, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x65, 0x72, 0x69, 0x6f,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x22,
	0x7d, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x53, 0x74, 0x61, 0x74, 0x69,
	0x73, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67,
	0x12, 0x3c, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28,
	0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74,
	0x4d, 0x61, 0x74, 0x63, 0x68, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x61, 0x6c,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x71,
	0x0a, 0x1b, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73,
	0x74, 0x69, 0x63, 0x61, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x12, 0x0e, 0x0a,
	0x02, 0x74, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x74, 0x63, 0x12, 0x0e, 0x0a,
	0x02, 0x73, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x73, 0x6c, 0x12, 0x0e, 0x0a,
	0x02, 0x68, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x68, 0x74, 0x12, 0x10, 0x0a,
	0x03, 0x68, 0x6c, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x68, 0x6c, 0x73, 0x12,
	0x10, 0x0a, 0x03, 0x6d, 0x74, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x74,
	0x73, 0x22, 0x49, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x49, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x64, 0x64, 0x73, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x6f, 0x64, 0x64, 0x73, 0x54, 0x79, 0x70, 0x65, 0x22, 0x73, 0x0a, 0x12,
	0x47, 0x65, 0x74, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x37, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d,
	0x65, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x22, 0xb4, 0x03, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03,
	0x6e, 0x73, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6e, 0x73, 0x67, 0x12, 0x0e,
	0x0a, 0x02, 0x6d, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x6d, 0x67, 0x12, 0x10,
	0x0a, 0x03, 0x74, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x74, 0x6d, 0x73,
	0x12, 0x10, 0x0a, 0x03, 0x74, 0x70, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x74,
	0x70, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x6c, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x6c, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x74, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x6d, 0x63, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x6d, 0x63, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x62, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x62, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x6d, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x6d, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x66, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x03, 0x66, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x66, 0x6d, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x03, 0x66, 0x6d, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x73, 0x73, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x73, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x6e, 0x65, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x6e, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x69, 0x76, 0x65, 0x55, 0x72,
	0x6c, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x69, 0x76, 0x65, 0x55, 0x72,
	0x6c, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x69, 0x64, 0x18, 0x10, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x03, 0x73, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x73, 0x69, 0x18, 0x11, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x03, 0x73, 0x73, 0x69, 0x12, 0x0e, 0x0a, 0x02, 0x6d, 0x70, 0x18, 0x12, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x6d, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x6d, 0x74, 0x18, 0x13, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x03, 0x73, 0x6d, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x79, 0x18, 0x14,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x74, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x79, 0x65, 0x18, 0x15,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x79, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x6e, 0x6d, 0x18, 0x16,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x6e, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x73, 0x62, 0x18, 0x17,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x73, 0x62, 0x12, 0x0e, 0x0a, 0x02, 0x70, 0x6c, 0x18, 0x18,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x70, 0x6c, 0x22, 0xac, 0x01, 0x0a, 0x16, 0x47, 0x65, 0x74,
	0x4d, 0x61, 0x74, 0x63, 0x68, 0x4c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x73, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x03, 0x52,
	0x08, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x64, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x6d, 0x61, 0x74,
	0x63, 0x68, 0x50, 0x6c, 0x61, 0x79, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0d, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x50, 0x6c, 0x61, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x7d, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x4d, 0x61,
	0x74, 0x63, 0x68, 0x4c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x3c, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d,
	0x65, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x4c, 0x65, 0x61,
	0x67, 0x75, 0x65, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xe5, 0x01, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x4d, 0x61,
	0x74, 0x63, 0x68, 0x4c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x6e, 0x61, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x6e, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x6d, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x6d, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x12, 0x0a, 0x04,
	0x6c, 0x75, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x75, 0x72, 0x6c,
	0x12, 0x10, 0x0a, 0x03, 0x73, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x73,
	0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x03, 0x72, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x6e, 0x6d, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x72, 0x6e, 0x6d, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x6c, 0x67, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x72, 0x6c, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x68, 0x6f, 0x74, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x03, 0x68, 0x6f, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6c,
	0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x6c, 0x69, 0x64, 0x22, 0xc1,
	0x01, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x50, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x6f,
	0x72, 0x74, 0x4b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x6f, 0x72,
	0x74, 0x4b, 0x65, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x6f, 0x72, 0x74, 0x46, 0x69, 0x65, 0x6c,
	0x64, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x73, 0x6f, 0x72, 0x74, 0x46, 0x69, 0x65,
	0x6c, 0x64, 0x12, 0x3e, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2a, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x47,
	0x65, 0x74, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x50, 0x61, 0x67,
	0x65, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x22, 0xad, 0x01, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x50, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x64, 0x12, 0x1c,
	0x0a, 0x09, 0x6c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x49, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x03, 0x52, 0x09, 0x6c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x49, 0x64, 0x73, 0x12, 0x1c, 0x0a, 0x09,
	0x62, 0x65, 0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e,
	0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x6e, 0x64,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x54, 0x79,
	0x70, 0x65, 0x22, 0x83, 0x01, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x50, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x3f, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65,
	0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x50, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65,
	0x73, 0x70, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xbb, 0x01, 0x0a, 0x1e, 0x47, 0x65, 0x74,
	0x4d, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x50, 0x61, 0x67, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x65, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x61, 0x67, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x73,
	0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x3f, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x05, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x70,
	0x63, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x50, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x49, 0x74, 0x65, 0x6d,
	0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0xda, 0x01, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x4d, 0x61,
	0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x50, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x44, 0x61, 0x74, 0x61, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x62, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x62, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x6d, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x6d, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x66, 0x69, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x66, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x66,
	0x6d, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x66, 0x6d, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x6e, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x6e, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x73, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x73, 0x69, 0x64, 0x12,
	0x0e, 0x0a, 0x02, 0x6c, 0x67, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x6c, 0x67, 0x12,
	0x0e, 0x0a, 0x02, 0x74, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x74, 0x73, 0x12,
	0x10, 0x0a, 0x03, 0x6e, 0x73, 0x67, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6e, 0x73,
	0x67, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x67, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6d, 0x67, 0x73, 0x22, 0x31, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x61, 0x74, 0x63, 0x68, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6d,
	0x61, 0x74, 0x63, 0x68, 0x49, 0x64, 0x22, 0x7b, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x74,
	0x63, 0x68, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x3b, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72,
	0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x22, 0xd6, 0x01, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x74, 0x63, 0x68,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x62, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x62, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x6d, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x66, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x03, 0x66, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x66, 0x6d, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x03, 0x66, 0x6d, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x6e, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x6e, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x69, 0x64, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x03, 0x73, 0x69, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x6c, 0x67, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x6c, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x73, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x74, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x73, 0x67, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6e, 0x73, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x67,
	0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x67, 0x73, 0x22, 0x6c, 0x0a, 0x16,
	0x47, 0x65, 0x74, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x42, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x63, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x64, 0x64, 0x73, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6f, 0x64, 0x64, 0x73, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x22, 0x7d, 0x0a, 0x17, 0x47, 0x65,
	0x74, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x42, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x3c, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x7a, 0x65, 0x72, 0x6f,
	0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x74, 0x63, 0x68,
	0x42, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x65, 0x73, 0x70, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xb9, 0x03, 0x0a, 0x1b, 0x47, 0x65,
	0x74, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x42, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x64, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x73, 0x67,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6e, 0x73, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x6d,
	0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x6d, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x74,
	0x6d, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x74, 0x6d, 0x73, 0x12, 0x10, 0x0a,
	0x03, 0x74, 0x70, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x74, 0x70, 0x73, 0x12,
	0x0e, 0x0a, 0x02, 0x6c, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x6c, 0x67, 0x12,
	0x0e, 0x0a, 0x02, 0x74, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x74, 0x73, 0x12,
	0x0e, 0x0a, 0x02, 0x6d, 0x63, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x6d, 0x63, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x0e, 0x0a, 0x02, 0x62, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x62, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x6d, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x6d, 0x73, 0x12,
	0x10, 0x0a, 0x03, 0x66, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x66, 0x69,
	0x64, 0x12, 0x10, 0x0a, 0x03, 0x66, 0x6d, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03,
	0x66, 0x6d, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x73, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x73, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x6e, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x6e, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x69, 0x76, 0x65, 0x55, 0x72, 0x6c, 0x73, 0x18,
	0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x69, 0x76, 0x65, 0x55, 0x72, 0x6c, 0x73, 0x12,
	0x10, 0x0a, 0x03, 0x73, 0x69, 0x64, 0x18, 0x10, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x73, 0x69,
	0x64, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x73, 0x69, 0x18, 0x11, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03,
	0x73, 0x73, 0x69, 0x12, 0x0e, 0x0a, 0x02, 0x6d, 0x70, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x6d, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x6d, 0x74, 0x18, 0x13, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x03, 0x73, 0x6d, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x79, 0x18, 0x14, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x74, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x79, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x79, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x6e, 0x6d, 0x18, 0x16, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x6e, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x73, 0x62, 0x18, 0x17, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x73, 0x62, 0x12, 0x0e, 0x0a, 0x02, 0x70, 0x6c, 0x18, 0x18, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x70, 0x6c, 0x22, 0x2f, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x74, 0x63,
	0x68, 0x4c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x73, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x75, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x03, 0x6e, 0x75, 0x6d, 0x22, 0x87, 0x01, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x4d, 0x61,
	0x74, 0x63, 0x68, 0x4c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x73, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d,
	0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x41, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x7a, 0x65,
	0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x74,
	0x63, 0x68, 0x4c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x73, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x22, 0xd4, 0x01, 0x0a, 0x20, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x4c, 0x65, 0x61,
	0x67, 0x75, 0x65, 0x73, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x65, 0x73, 0x70, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x49, 0x64,
	0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x6c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x49, 0x64, 0x12, 0x1f, 0x0a,
	0x0b, 0x6c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x6c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f,
	0x0a, 0x0b, 0x6c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x6c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x1f, 0x0a, 0x0b, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x15, 0x0a, 0x06, 0x69, 0x73, 0x5f, 0x68, 0x6f, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x69, 0x73, 0x48, 0x6f, 0x74, 0x22, 0x2b, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x4d, 0x61,
	0x74, 0x63, 0x68, 0x54, 0x6f, 0x70, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x75, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x03, 0x6e, 0x75, 0x6d, 0x22, 0x7f, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x74, 0x63, 0x68,
	0x54, 0x6f, 0x70, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x3d, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72,
	0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x54, 0x6f, 0x70, 0x52, 0x65,
	0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x75, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x74, 0x63,
	0x68, 0x54, 0x6f, 0x70, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x65, 0x73, 0x70, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x49, 0x64,
	0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x1b, 0x0a, 0x09, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x74, 0x65, 0x61, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x34, 0x0a, 0x18,
	0x47, 0x65, 0x74, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x4d, 0x61, 0x69,
	0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x54, 0x69, 0x6d, 0x65,
	0x44, 0x61, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x54, 0x69, 0x6d, 0x65, 0x44,
	0x61, 0x79, 0x22, 0x81, 0x01, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x4d, 0x61, 0x69, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x3e, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72,
	0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x4d, 0x61, 0x69, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x87, 0x01, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x4d, 0x61,
	0x74, 0x63, 0x68, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x4d, 0x61, 0x69, 0x6e, 0x4c, 0x69, 0x73, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x12, 0x22, 0x0a, 0x0c, 0x55, 0x6e, 0x4d, 0x61,
	0x74, 0x63, 0x68, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c,
	0x55, 0x6e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x42, 0x0a, 0x04,
	0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x7a, 0x65, 0x72,
	0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x74, 0x63,
	0x68, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x4d, 0x61, 0x69, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61,
	0x74, 0x61, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74,
	0x22, 0x7a, 0x0a, 0x21, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x4d, 0x61, 0x69, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x49, 0x74, 0x65,
	0x6d, 0x52, 0x65, 0x73, 0x70, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x49, 0x64,
	0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x1b, 0x0a, 0x09, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x74, 0x65, 0x61, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x55, 0x0a, 0x17,
	0x47, 0x65, 0x74, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x4d, 0x61, 0x72,
	0x6b, 0x65, 0x74, 0x73, 0x52, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x70, 0x6f, 0x72, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x73, 0x70, 0x6f, 0x72, 0x74,
	0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x22, 0x7f, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x3d, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x70,
	0x63, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x4d,
	0x61, 0x72, 0x6b, 0x65, 0x74, 0x73, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x22, 0x4d, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x74, 0x63, 0x68,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x73, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x49, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x22, 0x15, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x55, 0x72, 0x6c, 0x52, 0x65, 0x71, 0x22, 0x77, 0x0a, 0x14, 0x47, 0x65,
	0x74, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x55, 0x72, 0x6c, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x39, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d,
	0x65, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x55, 0x72, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x22, 0x6c, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x55, 0x72, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x1c, 0x0a, 0x09, 0x50, 0x63, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x50, 0x63, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1c, 0x0a,
	0x09, 0x48, 0x35, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x48, 0x35, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x22, 0x83, 0x02, 0x0a, 0x11, 0x53, 0x61, 0x76, 0x65, 0x4c, 0x69, 0x76, 0x65, 0x41, 0x6e,
	0x63, 0x68, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x6e, 0x63, 0x68, 0x6f, 0x72, 0x5f, 0x6e, 0x69, 0x63, 0x6b, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x6e, 0x63, 0x68, 0x6f, 0x72, 0x4e, 0x69, 0x63,
	0x6b, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x6f, 0x6f, 0x6d, 0x5f,
	0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x72, 0x6f,
	0x6f, 0x6d, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x1f,
	0x0a, 0x0b, 0x61, 0x6e, 0x63, 0x68, 0x6f, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x61, 0x6e, 0x63, 0x68, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x66, 0x61, 0x6e, 0x73, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x66, 0x61, 0x6e, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x17,
	0x0a, 0x07, 0x69, 0x73, 0x5f, 0x6c, 0x69, 0x76, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x69, 0x73, 0x4c, 0x69, 0x76, 0x65, 0x22, 0x4e, 0x0a, 0x12, 0x53, 0x61, 0x76, 0x65, 0x4c,
	0x69, 0x76, 0x65, 0x41, 0x6e, 0x63, 0x68, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6d, 0x73, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x25, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x4c, 0x69, 0x76, 0x65, 0x41, 0x6e, 0x63, 0x68, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x50,
	0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x69, 0x76, 0x65, 0x41, 0x6e, 0x63, 0x68,
	0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73,
	0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x12, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x22, 0xb7, 0x01, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x76, 0x65, 0x41, 0x6e, 0x63, 0x68,
	0x6f, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x4b,
	0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x4b, 0x65,
	0x79, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x6f, 0x72, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x73, 0x6f, 0x72, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12,
	0x39, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e,
	0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x4c,
	0x69, 0x76, 0x65, 0x41, 0x6e, 0x63, 0x68, 0x6f, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x65, 0x71, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x9b, 0x01, 0x0a, 0x18, 0x47,
	0x65, 0x74, 0x4c, 0x69, 0x76, 0x65, 0x41, 0x6e, 0x63, 0x68, 0x6f, 0x72, 0x4c, 0x69, 0x73, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x6e, 0x63, 0x68, 0x6f,
	0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x61, 0x6e,
	0x63, 0x68, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x6e, 0x63, 0x68,
	0x6f, 0x72, 0x5f, 0x6e, 0x69, 0x63, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61,
	0x6e, 0x63, 0x68, 0x6f, 0x72, 0x4e, 0x69, 0x63, 0x6b, 0x12, 0x27, 0x0a, 0x0f, 0x61, 0x6e, 0x63,
	0x68, 0x6f, 0x72, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x61, 0x6e, 0x63, 0x68, 0x6f, 0x72, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x22, 0x79, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x4c,
	0x69, 0x76, 0x65, 0x41, 0x6e, 0x63, 0x68, 0x6f, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x3a, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65,
	0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x76, 0x65, 0x41, 0x6e, 0x63, 0x68, 0x6f,
	0x72, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x22, 0xb5, 0x01, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x76, 0x65, 0x41,
	0x6e, 0x63, 0x68, 0x6f, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x70,
	0x61, 0x67, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x61, 0x67, 0x65,
	0x73, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x3e, 0x0a, 0x04, 0x6c,
	0x69, 0x73, 0x74, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x7a, 0x65, 0x72, 0x6f,
	0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x76, 0x65, 0x41,
	0x6e, 0x63, 0x68, 0x6f, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x49, 0x74, 0x65,
	0x6d, 0x52, 0x65, 0x73, 0x70, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0xf7, 0x02, 0x0a, 0x1d,
	0x47, 0x65, 0x74, 0x4c, 0x69, 0x76, 0x65, 0x41, 0x6e, 0x63, 0x68, 0x6f, 0x72, 0x4c, 0x69, 0x73,
	0x74, 0x44, 0x61, 0x74, 0x61, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a,
	0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x6e, 0x63, 0x68, 0x6f, 0x72,
	0x5f, 0x6e, 0x69, 0x63, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x6e, 0x63,
	0x68, 0x6f, 0x72, 0x4e, 0x69, 0x63, 0x6b, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x61, 0x76, 0x61,
	0x74, 0x61, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x41,
	0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x72,
	0x6f, 0x6f, 0x6d, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x72, 0x6f, 0x6f, 0x6d, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05,
	0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6d, 0x61,
	0x67, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x6e, 0x63, 0x68, 0x6f, 0x72, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x61, 0x6e, 0x63, 0x68, 0x6f, 0x72, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x61, 0x6e, 0x63, 0x68, 0x6f, 0x72, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x61,
	0x6e, 0x63, 0x68, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x66, 0x61, 0x6e, 0x73, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x66, 0x61, 0x6e, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x17, 0x0a, 0x07,
	0x69, 0x73, 0x5f, 0x6c, 0x69, 0x76, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x69,
	0x73, 0x4c, 0x69, 0x76, 0x65, 0x22, 0xb1, 0x01, 0x0a, 0x0f, 0x53, 0x61, 0x76, 0x65, 0x4c, 0x69,
	0x76, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x6f, 0x6f,
	0x6d, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x6f,
	0x6f, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x6e, 0x63, 0x68, 0x6f, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x61, 0x6e, 0x63, 0x68, 0x6f,
	0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x6d, 0x61,
	0x67, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x49, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x4c, 0x0a, 0x10, 0x53, 0x61, 0x76,
	0x65, 0x4c, 0x69, 0x76, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6d, 0x73, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x23, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x4c, 0x69, 0x76, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x4e, 0x0a, 0x12,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x69, 0x76, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x21, 0x0a, 0x0f,
	0x44, 0x6f, 0x77, 0x6e, 0x4c, 0x69, 0x76, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x71, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22,
	0x4c, 0x0a, 0x10, 0x44, 0x6f, 0x77, 0x6e, 0x4c, 0x69, 0x76, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xb3, 0x01,
	0x0a, 0x12, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x76, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69,
	0x7a, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x4b, 0x65, 0x79, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x4b, 0x65, 0x79, 0x12, 0x1c, 0x0a, 0x09,
	0x73, 0x6f, 0x72, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x09, 0x73, 0x6f, 0x72, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x37, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67,
	0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x76, 0x65, 0x52, 0x6f,
	0x6f, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x22, 0xf1, 0x01, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x76, 0x65, 0x52,
	0x6f, 0x6f, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x12, 0x1d,
	0x0a, 0x0a, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a,
	0x0b, 0x6c, 0x69, 0x76, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0a, 0x6c, 0x69, 0x76, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x19,
	0x0a, 0x08, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x6f, 0x6f,
	0x6d, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x6f,
	0x6f, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x61, 0x6e, 0x63, 0x68, 0x6f, 0x72,
	0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x61, 0x6e, 0x63, 0x68, 0x6f, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08,
	0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x75, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x4c, 0x69,
	0x76, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6d, 0x73, 0x67, 0x12, 0x38, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x24, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63,
	0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x76, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x4c, 0x69, 0x73, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xb1,
	0x01, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x76, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x4c, 0x69,
	0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x65, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x61, 0x67, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69,
	0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x12, 0x3c, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x28, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63,
	0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x76, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x4c, 0x69, 0x73, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x52, 0x04, 0x6c, 0x69,
	0x73, 0x74, 0x22, 0xef, 0x04, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x76, 0x65, 0x52, 0x6f,
	0x6f, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x6f, 0x6f, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x1f, 0x0a, 0x0b, 0x61, 0x6e, 0x63, 0x68, 0x6f, 0x72, 0x5f, 0x6e, 0x69, 0x63, 0x6b, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x6e, 0x63, 0x68, 0x6f, 0x72, 0x4e, 0x69, 0x63, 0x6b,
	0x12, 0x19, 0x0a, 0x08, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x07, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x6d,
	0x61, 0x74, 0x63, 0x68, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x6e, 0x64,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x69, 0x76, 0x65, 0x5f, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6c, 0x69, 0x76, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x75, 0x73, 0x68, 0x5f, 0x75, 0x72,
	0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x75, 0x73, 0x68, 0x55, 0x72, 0x6c,
	0x12, 0x19, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x70, 0x6c, 0x61, 0x79, 0x55, 0x72, 0x6c, 0x12, 0x25, 0x0a, 0x0e, 0x61,
	0x6e, 0x63, 0x68, 0x6f, 0x72, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x6e, 0x63, 0x68, 0x6f, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x68, 0x6f, 0x6d, 0x65, 0x5f, 0x74, 0x65, 0x61, 0x6d,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x6f, 0x6d, 0x65, 0x54, 0x65, 0x61, 0x6d,
	0x12, 0x1b, 0x0a, 0x09, 0x61, 0x77, 0x61, 0x79, 0x5f, 0x74, 0x65, 0x61, 0x6d, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x77, 0x61, 0x79, 0x54, 0x65, 0x61, 0x6d, 0x12, 0x1b, 0x0a,
	0x09, 0x68, 0x6f, 0x6d, 0x65, 0x5f, 0x6c, 0x6f, 0x67, 0x6f, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x68, 0x6f, 0x6d, 0x65, 0x4c, 0x6f, 0x67, 0x6f, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x77,
	0x61, 0x79, 0x5f, 0x6c, 0x6f, 0x67, 0x6f, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61,
	0x77, 0x61, 0x79, 0x4c, 0x6f, 0x67, 0x6f, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x6e, 0x63, 0x68, 0x6f,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x11, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x61, 0x6e, 0x63, 0x68,
	0x6f, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x69, 0x6d, 0x61,
	0x67, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x6d,
	0x61, 0x67, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x6e, 0x63, 0x68, 0x6f, 0x72, 0x5f, 0x61, 0x76,
	0x61, 0x74, 0x61, 0x72, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x6e, 0x63, 0x68,
	0x6f, 0x72, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x14, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0xbd, 0x01, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x76, 0x65,
	0x52, 0x6f, 0x6f, 0x6d, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x12, 0x18, 0x0a, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69,
	0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x4b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x73, 0x6f, 0x72, 0x74, 0x4b, 0x65, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x6f, 0x72, 0x74,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x73, 0x6f, 0x72,
	0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x3c, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72,
	0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x76, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x4d, 0x61,
	0x74, 0x63, 0x68, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x22, 0x9d, 0x02, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x76, 0x65,
	0x52, 0x6f, 0x6f, 0x6d, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x73,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x63, 0x6f, 0x6d, 0x70, 0x65, 0x74, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63,
	0x6f, 0x6d, 0x70, 0x65, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22,
	0x0a, 0x0c, 0x68, 0x6f, 0x6d, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x68, 0x6f, 0x6d, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x77, 0x61, 0x79, 0x54, 0x65, 0x61, 0x6d, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x77, 0x61, 0x79, 0x54, 0x65,
	0x61, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x49,
	0x44, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x49, 0x44,
	0x12, 0x1a, 0x0a, 0x08, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x49, 0x44, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e,
	0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x6e, 0x64,
	0x54, 0x69, 0x6d, 0x65, 0x22, 0x7f, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x76, 0x65, 0x52,
	0x6f, 0x6f, 0x6d, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x3d, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72,
	0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x76, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x4d, 0x61,
	0x74, 0x63, 0x68, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xbb, 0x01, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x76,
	0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x70, 0x61, 0x67, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x12, 0x41, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d,
	0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74,
	0x4c, 0x69, 0x76, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x4c, 0x69, 0x73,
	0x74, 0x44, 0x61, 0x74, 0x61, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x52, 0x04, 0x6c,
	0x69, 0x73, 0x74, 0x22, 0x8a, 0x02, 0x0a, 0x20, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x76, 0x65, 0x52,
	0x6f, 0x6f, 0x6d, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61,
	0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x63, 0x6f, 0x6d, 0x70,
	0x65, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0f, 0x63, 0x6f, 0x6d, 0x70, 0x65, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x22, 0x0a, 0x0c, 0x68, 0x6f, 0x6d, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x68, 0x6f, 0x6d, 0x65, 0x54, 0x65, 0x61, 0x6d,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x68, 0x6f, 0x6d, 0x65, 0x54, 0x65, 0x61, 0x6d,
	0x4c, 0x6f, 0x67, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x68, 0x6f, 0x6d, 0x65,
	0x54, 0x65, 0x61, 0x6d, 0x4c, 0x6f, 0x67, 0x6f, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x77, 0x61, 0x79,
	0x54, 0x65, 0x61, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x61, 0x77, 0x61, 0x79, 0x54, 0x65, 0x61, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c,
	0x61, 0x77, 0x61, 0x79, 0x54, 0x65, 0x61, 0x6d, 0x4c, 0x6f, 0x67, 0x6f, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x61, 0x77, 0x61, 0x79, 0x54, 0x65, 0x61, 0x6d, 0x4c, 0x6f, 0x67, 0x6f,
	0x22, 0x5a, 0x0a, 0x0c, 0x46, 0x62, 0x54, 0x6f, 0x75, 0x72, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x12, 0x16, 0x0a, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x61, 0x74, 0x63,
	0x68, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6d, 0x61, 0x74, 0x63, 0x68,
	0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x64, 0x22, 0x49, 0x0a, 0x0d,
	0x46, 0x62, 0x54, 0x6f, 0x75, 0x72, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6d, 0x73, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xe9, 0x01, 0x0a, 0x13, 0x4c, 0x69, 0x76, 0x65,
	0x52, 0x6f, 0x6f, 0x6d, 0x43, 0x61, 0x6c, 0x6c, 0x42, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x12,
	0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x70, 0x70, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x61, 0x70, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x70, 0x70,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x70, 0x70, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x6f, 0x64, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74,
	0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x75, 0x73, 0x72, 0x61, 0x72, 0x67, 0x73, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x75, 0x73, 0x72, 0x61, 0x72, 0x67, 0x73, 0x12, 0x14, 0x0a,
	0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x77, 0x69,
	0x64, 0x74, 0x68, 0x22, 0x50, 0x0a, 0x14, 0x4c, 0x69, 0x76, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x43,
	0x61, 0x6c, 0x6c, 0x42, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73,
	0x67, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xcf, 0x01, 0x0a, 0x20, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x4c, 0x69, 0x76, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x4d, 0x61,
	0x74, 0x63, 0x68, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x6f, 0x72, 0x74,
	0x4b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x4b,
	0x65, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x6f, 0x72, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x73, 0x6f, 0x72, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x12, 0x45, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31,
	0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74,
	0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x4c, 0x69, 0x76, 0x65, 0x52, 0x6f, 0x6f,
	0x6d, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x4c, 0x69, 0x73, 0x44, 0x61, 0x74, 0x61, 0x74, 0x52, 0x65,
	0x71, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x46, 0x0a, 0x24, 0x47, 0x65, 0x74, 0x52, 0x65,
	0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x4c, 0x69, 0x76, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x4d,
	0x61, 0x74, 0x63, 0x68, 0x4c, 0x69, 0x73, 0x44, 0x61, 0x74, 0x61, 0x74, 0x52, 0x65, 0x71, 0x12,
	0x1e, 0x0a, 0x0a, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x54, 0x79, 0x70, 0x65, 0x22,
	0x91, 0x01, 0x0a, 0x21, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64,
	0x4c, 0x69, 0x76, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x46, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x7a, 0x65, 0x72, 0x6f,
	0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x64, 0x4c, 0x69, 0x76, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x4d, 0x61, 0x74, 0x63,
	0x68, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x22, 0xcd, 0x01, 0x0a, 0x25, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x64, 0x4c, 0x69, 0x76, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x4d, 0x61, 0x74, 0x63,
	0x68, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x12, 0x18, 0x0a,
	0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x65, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x61, 0x67, 0x65, 0x73, 0x12, 0x12, 0x0a,
	0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x69, 0x7a,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x4a, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65,
	0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64,
	0x4c, 0x69, 0x76, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x4c, 0x69, 0x73,
	0x74, 0x44, 0x61, 0x74, 0x61, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x52, 0x04, 0x6c,
	0x69, 0x73, 0x74, 0x22, 0xf9, 0x04, 0x0a, 0x29, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x64, 0x4c, 0x69, 0x76, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x4d, 0x61, 0x74, 0x63,
	0x68, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x07, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x72,
	0x6f, 0x6f, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72,
	0x6f, 0x6f, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x63, 0x6f, 0x6d, 0x70, 0x65,
	0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0f, 0x63, 0x6f, 0x6d, 0x70, 0x65, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x22, 0x0a, 0x0c, 0x68, 0x6f, 0x6d, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x68, 0x6f, 0x6d, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x68, 0x6f, 0x6d, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x4c,
	0x6f, 0x67, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x68, 0x6f, 0x6d, 0x65, 0x54,
	0x65, 0x61, 0x6d, 0x4c, 0x6f, 0x67, 0x6f, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x77, 0x61, 0x79, 0x54,
	0x65, 0x61, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61,
	0x77, 0x61, 0x79, 0x54, 0x65, 0x61, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x61,
	0x77, 0x61, 0x79, 0x54, 0x65, 0x61, 0x6d, 0x4c, 0x6f, 0x67, 0x6f, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x61, 0x77, 0x61, 0x79, 0x54, 0x65, 0x61, 0x6d, 0x4c, 0x6f, 0x67, 0x6f, 0x12,
	0x24, 0x0a, 0x0d, 0x68, 0x6f, 0x6d, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x53, 0x63, 0x6f, 0x72, 0x65,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x68, 0x6f, 0x6d, 0x65, 0x54, 0x65, 0x61, 0x6d,
	0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x61, 0x77, 0x61, 0x79, 0x54, 0x65, 0x61,
	0x6d, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x61, 0x77,
	0x61, 0x79, 0x54, 0x65, 0x61, 0x6d, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x6d,
	0x61, 0x74, 0x63, 0x68, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0b, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1e, 0x0a,
	0x0a, 0x6c, 0x69, 0x76, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x6c, 0x69, 0x76, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a,
	0x07, 0x70, 0x6c, 0x61, 0x79, 0x55, 0x72, 0x6c, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x70, 0x6c, 0x61, 0x79, 0x55, 0x72, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x64, 0x18, 0x0f,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x64, 0x12, 0x1c, 0x0a,
	0x09, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x72,
	0x6e, 0x63, 0x68, 0x6f, 0x72, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x11, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x72, 0x6e, 0x63, 0x68, 0x6f, 0x72, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12,
	0x1e, 0x0a, 0x0a, 0x72, 0x6e, 0x63, 0x68, 0x6f, 0x72, 0x4e, 0x69, 0x63, 0x6b, 0x18, 0x12, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x6e, 0x63, 0x68, 0x6f, 0x72, 0x4e, 0x69, 0x63, 0x6b, 0x22,
	0x80, 0x01, 0x0a, 0x28, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x4c, 0x69, 0x76, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x61, 0x74, 0x63, 0x68, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6d,
	0x61, 0x74, 0x63, 0x68, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61,
	0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6c, 0x61,
	0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x22, 0xc5, 0x01, 0x0a, 0x29, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x4c, 0x69, 0x76, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x4d, 0x61, 0x74, 0x63, 0x68,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x4e, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72,
	0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4c,
	0x69, 0x76, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x74, 0x61, 0x72, 0x74, 0x47,
	0x61, 0x6d, 0x65, 0x55, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x55, 0x72, 0x6c, 0x22, 0xb5, 0x01, 0x0a, 0x2d, 0x47,
	0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x76, 0x65, 0x52,
	0x6f, 0x6f, 0x6d, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03,
	0x6d, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6d, 0x74, 0x79, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x74, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x74, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x58, 0x0a, 0x07, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3e, 0x2e, 0x7a, 0x65, 0x72, 0x6f,
	0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x76, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x4d, 0x61, 0x74, 0x63,
	0x68, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74,
	0x61, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x52, 0x07, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x22, 0x6b, 0x0a, 0x31, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x4c, 0x69, 0x76, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x49,
	0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x74, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x79, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x0e, 0x0a, 0x02, 0x6f, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x02, 0x6f, 0x64, 0x22,
	0x62, 0x0a, 0x22, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4c,
	0x69, 0x76, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x49, 0x64, 0x12,
	0x22, 0x0a, 0x0c, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x22, 0x95, 0x01, 0x0a, 0x23, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x76, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x4d, 0x61, 0x74, 0x63,
	0x68, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73,
	0x67, 0x12, 0x48, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x34, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65,
	0x74, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x76, 0x65, 0x52, 0x6f,
	0x6f, 0x6d, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x65, 0x73, 0x70, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x75, 0x0a, 0x27, 0x47,
	0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x76, 0x65, 0x52,
	0x6f, 0x6f, 0x6d, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x12, 0x24, 0x0a, 0x0d, 0x68, 0x6f, 0x6d, 0x65, 0x54, 0x65,
	0x61, 0x6d, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x68,
	0x6f, 0x6d, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x24, 0x0a, 0x0d,
	0x61, 0x77, 0x61, 0x79, 0x54, 0x65, 0x61, 0x6d, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0d, 0x61, 0x77, 0x61, 0x79, 0x54, 0x65, 0x61, 0x6d, 0x53, 0x63, 0x6f,
	0x72, 0x65, 0x22, 0x6e, 0x0a, 0x0e, 0x53, 0x61, 0x42, 0x61, 0x54, 0x6f, 0x75, 0x72, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x65, 0x6e, 0x75, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x65, 0x6e, 0x75, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x61, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x61,
	0x63, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x44, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x22, 0x4b, 0x0a, 0x0f, 0x53, 0x61, 0x42, 0x61, 0x54, 0x6f, 0x75, 0x72, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22,
	0x35, 0x0a, 0x13, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x47, 0x61, 0x6d, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x67, 0x61, 0x6d, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x67, 0x61, 0x6d, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x22, 0x73, 0x0a, 0x14, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x47, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6d, 0x73, 0x67, 0x12, 0x35, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x21, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63,
	0x2e, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x47, 0x61, 0x6d, 0x65, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x65, 0x73, 0x70, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x94, 0x02, 0x0a, 0x14,
	0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x47, 0x61, 0x6d, 0x65, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x67, 0x61, 0x6d, 0x65,
	0x50, 0x61, 0x67, 0x63, 0x6f, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c,
	0x67, 0x61, 0x6d, 0x65, 0x50, 0x61, 0x67, 0x63, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0e,
	0x67, 0x61, 0x6d, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x67, 0x61, 0x6d, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x67, 0x61, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x67, 0x61, 0x6d, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x1e,
	0x0a, 0x0a, 0x70, 0x61, 0x67, 0x63, 0x6f, 0x72, 0x52, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x63, 0x6f, 0x72, 0x52, 0x61, 0x74, 0x65, 0x12, 0x22,
	0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x61, 0x74, 0x65, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x61,
	0x74, 0x65, 0x22, 0xb5, 0x01, 0x0a, 0x13, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x50,
	0x6c, 0x61, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x6f, 0x72, 0x74,
	0x4b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x4b,
	0x65, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x6f, 0x72, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x73, 0x6f, 0x72, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x12, 0x38, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24,
	0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x50, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x50, 0x6c, 0x61, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x65, 0x71, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x59, 0x0a, 0x17, 0x50, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x50, 0x6c, 0x61, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x77, 0x0a, 0x14, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x50, 0x6c, 0x61, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6d, 0x73, 0x67, 0x12, 0x39, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x25, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e,
	0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x50, 0x6c, 0x61, 0x74, 0x4c, 0x69, 0x73, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xb3,
	0x01, 0x0a, 0x18, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x50, 0x6c, 0x61, 0x74, 0x4c,
	0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x65, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x61, 0x67, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x73,
	0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x3d, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x05, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x70,
	0x63, 0x2e, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x50, 0x6c, 0x61, 0x74, 0x4c, 0x69,
	0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x52, 0x04,
	0x6c, 0x69, 0x73, 0x74, 0x22, 0xdc, 0x03, 0x0a, 0x1c, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x50, 0x6c, 0x61, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x49, 0x74, 0x65,
	0x6d, 0x52, 0x65, 0x73, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x67, 0x61, 0x6d, 0x65, 0x50, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x67,
	0x61, 0x6d, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2a, 0x0a,
	0x10, 0x67, 0x61, 0x6d, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x67, 0x61, 0x6d, 0x65, 0x50, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x67, 0x61, 0x6d,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x67,
	0x61, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x67, 0x61, 0x6d,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x67, 0x61, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x6d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x6d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x12,
	0x22, 0x0a, 0x0c, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52,
	0x61, 0x74, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x52, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72,
	0x6b, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12,
	0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73,
	0x6f, 0x72, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x20, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x55, 0x73, 0x65, 0x72,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x55,
	0x73, 0x65, 0x72, 0x22, 0x17, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x73, 0x42,
	0x79, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x22, 0x7b, 0x0a, 0x16,
	0x47, 0x65, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x73, 0x42, 0x79, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73,
	0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x3b, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x7a, 0x65, 0x72,
	0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x61, 0x6d, 0x65,
	0x73, 0x42, 0x79, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x65, 0x73, 0x70, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x9a, 0x02, 0x0a, 0x1a, 0x47, 0x65,
	0x74, 0x47, 0x61, 0x6d, 0x65, 0x73, 0x42, 0x79, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c,
	0x67, 0x61, 0x6d, 0x65, 0x50, 0x61, 0x67, 0x63, 0x6f, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0c, 0x67, 0x61, 0x6d, 0x65, 0x50, 0x61, 0x67, 0x63, 0x6f, 0x72, 0x49, 0x64,
	0x12, 0x26, 0x0a, 0x0e, 0x67, 0x61, 0x6d, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x67, 0x61, 0x6d, 0x65, 0x50, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x67, 0x61, 0x6d, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x67, 0x61,
	0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x63, 0x6f, 0x72, 0x52, 0x61, 0x74, 0x65,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x63, 0x6f, 0x72, 0x52, 0x61,
	0x74, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x61,
	0x74, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x52, 0x61, 0x74, 0x65, 0x22, 0x13, 0x0a, 0x11, 0x47, 0x61, 0x6d, 0x65, 0x50, 0x61,
	0x67, 0x63, 0x6f, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x22, 0x73, 0x0a, 0x12, 0x47,
	0x61, 0x6d, 0x65, 0x50, 0x61, 0x67, 0x63, 0x6f, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x37, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65,
	0x72, 0x70, 0x63, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x50, 0x61, 0x67, 0x63, 0x6f, 0x72, 0x4c, 0x69,
	0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x22, 0x54, 0x0a, 0x16, 0x47, 0x61, 0x6d, 0x65, 0x50, 0x61, 0x67, 0x63, 0x6f, 0x72, 0x4c, 0x69,
	0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x15, 0x0a, 0x13, 0x47, 0x61, 0x6d, 0x65, 0x50, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x22, 0x77, 0x0a,
	0x14, 0x47, 0x61, 0x6d, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x39, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x7a, 0x65, 0x72, 0x6f,
	0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x50, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x6a, 0x0a, 0x18, 0x47, 0x61, 0x6d, 0x65, 0x50, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x22, 0x80, 0x01, 0x0a, 0x16, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x55, 0x73, 0x65, 0x72,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x68, 0x61, 0x72, 0x74, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65,
	0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x6e,
	0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x7d, 0x0a, 0x17, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x55, 0x73,
	0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x68, 0x61, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x3c, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72,
	0x70, 0x63, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x43, 0x68, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x22, 0x47, 0x0a, 0x1b, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x55, 0x73, 0x65,
	0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x68, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x2e, 0x0a,
	0x0e, 0x42, 0x65, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12,
	0x1c, 0x0a, 0x09, 0x67, 0x61, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x03, 0x52, 0x09, 0x67, 0x61, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x73, 0x22, 0x6d, 0x0a,
	0x0f, 0x42, 0x65, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x34, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72,
	0x70, 0x63, 0x2e, 0x42, 0x65, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x93, 0x02, 0x0a,
	0x13, 0x42, 0x65, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x67, 0x61, 0x6d, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x67, 0x61,
	0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x63, 0x6f, 0x72, 0x52, 0x61, 0x74, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x63, 0x6f, 0x72, 0x52, 0x61,
	0x74, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x61,
	0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x52, 0x61, 0x74, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x67, 0x61, 0x6d, 0x65, 0x50, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e,
	0x67, 0x61, 0x6d, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x22,
	0x0a, 0x0c, 0x67, 0x61, 0x6d, 0x65, 0x50, 0x61, 0x67, 0x63, 0x6f, 0x72, 0x49, 0x64, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x67, 0x61, 0x6d, 0x65, 0x50, 0x61, 0x67, 0x63, 0x6f, 0x72,
	0x49, 0x64, 0x22, 0x1e, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x43, 0x61, 0x73, 0x63, 0x61, 0x64, 0x65,
	0x42, 0x79, 0x47, 0x61, 0x6d, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x22, 0x89, 0x01, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x43, 0x61, 0x73, 0x63, 0x61, 0x64,
	0x65, 0x42, 0x79, 0x47, 0x61, 0x6d, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x42, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67,
	0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x61, 0x73, 0x63, 0x61, 0x64,
	0x65, 0x42, 0x79, 0x47, 0x61, 0x6d, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4c, 0x69, 0x73, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x67,
	0x0a, 0x21, 0x47, 0x65, 0x74, 0x43, 0x61, 0x73, 0x63, 0x61, 0x64, 0x65, 0x42, 0x79, 0x47, 0x61,
	0x6d, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x1e, 0x0a, 0x0a, 0x67, 0x61, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x67, 0x61, 0x6d, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x67, 0x61, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x67, 0x61, 0x6d, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x11, 0x0a, 0x0f, 0x4c, 0x69, 0x76, 0x65, 0x47,
	0x61, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x22, 0x6b, 0x0a, 0x10, 0x4c, 0x69,
	0x76, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6d, 0x73, 0x67, 0x12, 0x31, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63,
	0x2e, 0x4c, 0x69, 0x76, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x9a, 0x06, 0x0a, 0x10, 0x4c, 0x69, 0x76, 0x65,
	0x47, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09,
	0x6d, 0x61, 0x74, 0x63, 0x68, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x61,
	0x74, 0x63, 0x68, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6d, 0x61, 0x74,
	0x63, 0x68, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x4e, 0x61, 0x6d, 0x65, 0x45,
	0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x4e, 0x61,
	0x6d, 0x65, 0x45, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x49, 0x64,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x49, 0x64,
	0x12, 0x1e, 0x0a, 0x0a, 0x6c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x22, 0x0a, 0x0c, 0x6c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x45, 0x6e,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x45, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x49, 0x6d, 0x61,
	0x67, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x6f, 0x6d, 0x65, 0x54, 0x65, 0x61, 0x6d,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x6f, 0x6d, 0x65, 0x54, 0x65, 0x61, 0x6d,
	0x12, 0x1e, 0x0a, 0x0a, 0x68, 0x6f, 0x6d, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x45, 0x6e, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x68, 0x6f, 0x6d, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x45, 0x6e,
	0x12, 0x1a, 0x0a, 0x08, 0x61, 0x77, 0x61, 0x79, 0x54, 0x65, 0x61, 0x6d, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x61, 0x77, 0x61, 0x79, 0x54, 0x65, 0x61, 0x6d, 0x12, 0x1e, 0x0a, 0x0a,
	0x61, 0x77, 0x61, 0x79, 0x54, 0x65, 0x61, 0x6d, 0x45, 0x6e, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x61, 0x77, 0x61, 0x79, 0x54, 0x65, 0x61, 0x6d, 0x45, 0x6e, 0x12, 0x20, 0x0a, 0x0b,
	0x6d, 0x61, 0x74, 0x63, 0x68, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0b, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c,
	0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65,
	0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x6f, 0x6d, 0x65, 0x4c, 0x6f,
	0x67, 0x6f, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x6f, 0x6d, 0x65, 0x4c, 0x6f,
	0x67, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x77, 0x61, 0x79, 0x4c, 0x6f, 0x67, 0x6f, 0x18, 0x12,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x77, 0x61, 0x79, 0x4c, 0x6f, 0x67, 0x6f, 0x12, 0x1e,
	0x0a, 0x0a, 0x6c, 0x69, 0x76, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x13, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0a, 0x6c, 0x69, 0x76, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18,
	0x0a, 0x07, 0x70, 0x75, 0x73, 0x68, 0x55, 0x72, 0x6c, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x70, 0x75, 0x73, 0x68, 0x55, 0x72, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x6c, 0x61, 0x79,
	0x55, 0x72, 0x6c, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x6c, 0x61, 0x79, 0x55,
	0x72, 0x6c, 0x12, 0x20, 0x0a, 0x0b, 0x6c, 0x69, 0x76, 0x65, 0x41, 0x70, 0x70, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6c, 0x69, 0x76, 0x65, 0x41, 0x70, 0x70,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x6c, 0x69, 0x76, 0x65, 0x53, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6c, 0x69,
	0x76, 0x65, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x18, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x19, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x32, 0x98, 0x40, 0x0a, 0x0b, 0x5a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d,
	0x65, 0x72, 0x70, 0x63, 0x12, 0x42, 0x0a, 0x09, 0x46, 0x62, 0x54, 0x6f, 0x75, 0x72, 0x69, 0x73,
	0x74, 0x12, 0x19, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e,
	0x46, 0x62, 0x54, 0x6f, 0x75, 0x72, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x7a,
	0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x46, 0x62, 0x54, 0x6f, 0x75,
	0x72, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3f, 0x0a, 0x08, 0x47, 0x61, 0x6d, 0x65,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x18, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72,
	0x70, 0x63, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x19,
	0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x61, 0x6d,
	0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x48, 0x0a, 0x0b, 0x47, 0x61, 0x6d,
	0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x1b, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67,
	0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65,
	0x72, 0x70, 0x63, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x42, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x47, 0x61, 0x6d, 0x65,
	0x12, 0x19, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x7a, 0x65,
	0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x47,
	0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x6f, 0x0a, 0x18, 0x6f, 0x75, 0x74, 0x47, 0x61,
	0x6d, 0x65, 0x46, 0x6f, 0x72, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x57, 0x61, 0x6c,
	0x6c, 0x65, 0x74, 0x12, 0x28, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x70,
	0x63, 0x2e, 0x4f, 0x75, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x46, 0x6f, 0x72, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x66, 0x65, 0x72, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x29, 0x2e,
	0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x4f, 0x75, 0x74, 0x47,
	0x61, 0x6d, 0x65, 0x46, 0x6f, 0x72, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x57, 0x61,
	0x6c, 0x6c, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3b, 0x0a, 0x07, 0x70, 0x6f, 0x73, 0x74,
	0x46, 0x72, 0x62, 0x12, 0x17, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x70,
	0x63, 0x2e, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x65, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x7a,
	0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x42, 0x6f, 0x6e, 0x75, 0x73,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x12, 0x4b, 0x0a, 0x0c, 0x73, 0x6c, 0x6f, 0x74, 0x47, 0x61, 0x6d,
	0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1c, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65,
	0x72, 0x70, 0x63, 0x2e, 0x53, 0x6c, 0x6f, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x70,
	0x63, 0x2e, 0x53, 0x6c, 0x6f, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x3c, 0x0a, 0x07, 0x62, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x17, 0x2e,
	0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x42, 0x65, 0x74, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d,
	0x65, 0x72, 0x70, 0x63, 0x2e, 0x42, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x4e, 0x0a, 0x0d, 0x62, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63,
	0x73, 0x12, 0x1d, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e,
	0x42, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x52, 0x65, 0x71,
	0x1a, 0x1e, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x42,
	0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x4b, 0x0a, 0x0c, 0x67, 0x61, 0x6d, 0x65, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65,
	0x12, 0x1c, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x47,
	0x61, 0x6d, 0x65, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1d,
	0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x61, 0x6d,
	0x65, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x48, 0x0a,
	0x0b, 0x67, 0x65, 0x74, 0x52, 0x61, 0x6e, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1b, 0x2e, 0x7a,
	0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x61,
	0x6e, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x7a, 0x65, 0x72, 0x6f,
	0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x61, 0x6e, 0x6b, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x5a, 0x0a, 0x11, 0x67, 0x65, 0x74, 0x50, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x12, 0x21, 0x2e, 0x7a,
	0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x52, 0x65, 0x71, 0x1a,
	0x22, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65,
	0x74, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x66, 0x0a, 0x15, 0x67, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x25, 0x2e, 0x7a,
	0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x1a, 0x26, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x70,
	0x63, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x50, 0x72, 0x6f,
	0x66, 0x69, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x75, 0x0a, 0x1a, 0x70,
	0x6c, 0x61, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x41, 0x6e, 0x64, 0x42, 0x65, 0x74, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x43, 0x68, 0x61, 0x72, 0x74, 0x12, 0x2a, 0x2e, 0x7a, 0x65, 0x72, 0x6f,
	0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x50, 0x6c, 0x61, 0x74, 0x50, 0x72, 0x6f, 0x66,
	0x69, 0x74, 0x41, 0x6e, 0x64, 0x42, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x68, 0x61,
	0x72, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x2b, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65,
	0x72, 0x70, 0x63, 0x2e, 0x50, 0x6c, 0x61, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x41, 0x6e,
	0x64, 0x42, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x68, 0x61, 0x72, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x48, 0x0a, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72,
	0x79, 0x12, 0x1b, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x1c,
	0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x12, 0x5a, 0x0a, 0x11,
	0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x21, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e,
	0x54, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x1a, 0x22, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72,
	0x70, 0x63, 0x2e, 0x54, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x5a, 0x0a, 0x11, 0x73, 0x74, 0x61, 0x74,
	0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x54, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x21, 0x2e,
	0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x74, 0x61, 0x74,
	0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x54, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71,
	0x1a, 0x22, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x53,
	0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x54, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x5d, 0x0a, 0x12, 0x66, 0x72, 0x65, 0x65, 0x47, 0x61, 0x6d, 0x65,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x22, 0x2e, 0x7a, 0x65, 0x72,
	0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x46, 0x72, 0x65, 0x65, 0x47, 0x61, 0x6d,
	0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x23,
	0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x46, 0x72, 0x65,
	0x65, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x51, 0x0a, 0x0e, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x72, 0x65,
	0x65, 0x47, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65,
	0x72, 0x70, 0x63, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x72, 0x65, 0x65, 0x47, 0x61,
	0x6d, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65,
	0x72, 0x70, 0x63, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x72, 0x65, 0x65, 0x47, 0x61,
	0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x51, 0x0a, 0x0e, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x46, 0x72, 0x65, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67,
	0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x72, 0x65,
	0x65, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67,
	0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x72, 0x65,
	0x65, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4e, 0x0a, 0x0d, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x53, 0x75, 0x62, 0x47, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x2e, 0x7a, 0x65, 0x72,
	0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53,
	0x75, 0x62, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x7a, 0x65, 0x72, 0x6f,
	0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x75,
	0x62, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x45, 0x0a, 0x0a, 0x41, 0x64, 0x64,
	0x53, 0x75, 0x62, 0x47, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61,
	0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x64, 0x64, 0x53, 0x75, 0x62, 0x47, 0x61, 0x6d, 0x65,
	0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x70,
	0x63, 0x2e, 0x41, 0x64, 0x64, 0x53, 0x75, 0x62, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x48, 0x0a, 0x0b, 0x6c, 0x69, 0x73, 0x74, 0x53, 0x75, 0x62, 0x47, 0x61, 0x6d, 0x65, 0x12,
	0x1b, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x53, 0x75, 0x62, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x7a,
	0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53,
	0x75, 0x62, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x5d, 0x0a, 0x12, 0x47, 0x65,
	0x74, 0x41, 0x6c, 0x6c, 0x47, 0x61, 0x6d, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x12, 0x22, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x47,
	0x65, 0x74, 0x41, 0x6c, 0x6c, 0x47, 0x61, 0x6d, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x1a, 0x23, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72,
	0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x47, 0x61, 0x6d, 0x65, 0x50, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x51, 0x0a, 0x0e, 0x73, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x47, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1e, 0x2e, 0x7a, 0x65,
	0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x47, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x7a, 0x65,
	0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x47, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x65, 0x0a, 0x12,
	0x41, 0x64, 0x6d, 0x69, 0x6e, 0x42, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69,
	0x63, 0x73, 0x12, 0x26, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63,
	0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x42, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74,
	0x69, 0x63, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x7a, 0x65, 0x72,
	0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x42, 0x65,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x07, 0x42, 0x65, 0x74, 0x50, 0x61, 0x67, 0x65, 0x12, 0x1b,
	0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x42, 0x65, 0x74,
	0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x7a, 0x65,
	0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x42, 0x65, 0x74, 0x50, 0x61, 0x67,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4d, 0x0a, 0x0a, 0x42, 0x65, 0x74,
	0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x1e, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61,
	0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x42, 0x65, 0x74, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61,
	0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x42, 0x65, 0x74, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5c, 0x0a, 0x0f, 0x41, 0x67, 0x65, 0x6e,
	0x74, 0x42, 0x65, 0x74, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x23, 0x2e, 0x7a, 0x65,
	0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x42,
	0x65, 0x74, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x24, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x41,
	0x67, 0x65, 0x6e, 0x74, 0x42, 0x65, 0x74, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x53, 0x0a, 0x0c, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x42,
	0x65, 0x74, 0x50, 0x61, 0x67, 0x65, 0x12, 0x20, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d,
	0x65, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x42, 0x65, 0x74, 0x50, 0x61, 0x67,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67,
	0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x42, 0x65, 0x74, 0x50,
	0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x65, 0x0a, 0x12, 0x41,
	0x67, 0x65, 0x6e, 0x74, 0x42, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63,
	0x73, 0x12, 0x26, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e,
	0x41, 0x67, 0x65, 0x6e, 0x74, 0x42, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69,
	0x63, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x7a, 0x65, 0x72, 0x6f,
	0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x42, 0x65, 0x74,
	0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x4e, 0x0a, 0x0d, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x1d, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x70,
	0x63, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63,
	0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x6c, 0x0a, 0x17, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x47, 0x65, 0x74, 0x47, 0x61,
	0x6d, 0x65, 0x73, 0x42, 0x79, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x27, 0x2e,
	0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x67, 0x65, 0x6e,
	0x74, 0x47, 0x65, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x73, 0x42, 0x79, 0x43, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x28, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d,
	0x65, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x47, 0x65, 0x74, 0x47, 0x61, 0x6d,
	0x65, 0x73, 0x42, 0x79, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x60, 0x0a, 0x13, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x50, 0x61, 0x67,
	0x63, 0x6f, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x23, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61,
	0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x50,
	0x61, 0x67, 0x63, 0x6f, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x24, 0x2e, 0x7a,
	0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74,
	0x47, 0x61, 0x6d, 0x65, 0x50, 0x61, 0x67, 0x63, 0x6f, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x57, 0x0a, 0x10, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x53,
	0x75, 0x62, 0x47, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d,
	0x65, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x75,
	0x62, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x21, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67,
	0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74,
	0x53, 0x75, 0x62, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x7e, 0x0a, 0x1d, 0x44,
	0x61, 0x69, 0x6c, 0x79, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73,
	0x74, 0x69, 0x63, 0x73, 0x50, 0x6c, 0x61, 0x74, 0x43, 0x6f, 0x69, 0x6e, 0x12, 0x2d, 0x2e, 0x7a,
	0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x44, 0x61, 0x69, 0x6c, 0x79,
	0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73,
	0x50, 0x6c, 0x61, 0x74, 0x43, 0x6f, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x2e, 0x2e, 0x7a, 0x65,
	0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x52,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x50,
	0x6c, 0x61, 0x74, 0x43, 0x6f, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x57, 0x0a, 0x10, 0x41,
	0x64, 0x6d, 0x69, 0x6e, 0x42, 0x65, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x20, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x64,
	0x6d, 0x69, 0x6e, 0x42, 0x65, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x1a, 0x21, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e,
	0x41, 0x64, 0x6d, 0x69, 0x6e, 0x42, 0x65, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x60, 0x0a, 0x13, 0x61, 0x64, 0x64, 0x47, 0x61, 0x6d, 0x65, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x72, 0x6c, 0x12, 0x23, 0x2e, 0x7a, 0x65,
	0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x64, 0x64, 0x47, 0x61, 0x6d,
	0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x72, 0x6c, 0x52, 0x65, 0x71,
	0x1a, 0x24, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x41,
	0x64, 0x64, 0x47, 0x61, 0x6d, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55,
	0x72, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x60, 0x0a, 0x13, 0x64, 0x65, 0x6c, 0x47, 0x61, 0x6d,
	0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x72, 0x6c, 0x12, 0x23, 0x2e,
	0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x44, 0x65, 0x6c, 0x47,
	0x61, 0x6d, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x72, 0x6c, 0x52,
	0x65, 0x71, 0x1a, 0x24, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63,
	0x2e, 0x44, 0x65, 0x6c, 0x47, 0x61, 0x6d, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x55, 0x72, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x69, 0x0a, 0x16, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55,
	0x72, 0x6c, 0x12, 0x26, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x55, 0x72, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x27, 0x2e, 0x7a, 0x65, 0x72,
	0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47,
	0x61, 0x6d, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x72, 0x6c, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x84, 0x01, 0x0a, 0x1f, 0x67, 0x65, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x47, 0x61, 0x6d, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x72,
	0x6c, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x2f, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61,
	0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47,
	0x61, 0x6d, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x72, 0x6c, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x30, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67,
	0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x47, 0x61, 0x6d, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x72, 0x6c,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x6c, 0x0a, 0x17, 0x67, 0x65,
	0x74, 0x47, 0x61, 0x6d, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x72,
	0x6c, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x27, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65,
	0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x55, 0x72, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x28,
	0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74,
	0x47, 0x61, 0x6d, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x72, 0x6c,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x60, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x53,
	0x70, 0x6f, 0x72, 0x74, 0x48, 0x6f, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x23, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65,
	0x74, 0x53, 0x70, 0x6f, 0x72, 0x74, 0x48, 0x6f, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x1a, 0x24, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72,
	0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x70, 0x6f, 0x72, 0x74, 0x48, 0x6f, 0x74, 0x47, 0x61,
	0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x5a, 0x0a, 0x11, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x53, 0x70, 0x6f, 0x72, 0x74, 0x48, 0x6f, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x12,
	0x21, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x53, 0x70, 0x6f, 0x72, 0x74, 0x48, 0x6f, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x52,
	0x65, 0x71, 0x1a, 0x22, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63,
	0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x53, 0x70, 0x6f, 0x72, 0x74, 0x48, 0x6f, 0x74, 0x47, 0x61,
	0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x6c, 0x0a, 0x17, 0x41, 0x64, 0x64, 0x46, 0x72, 0x6f,
	0x6e, 0x74, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x43, 0x6d,
	0x73, 0x12, 0x27, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e,
	0x41, 0x64, 0x64, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x79,
	0x49, 0x6e, 0x66, 0x6f, 0x43, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x28, 0x2e, 0x7a, 0x65, 0x72,
	0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x64, 0x64, 0x46, 0x72, 0x6f, 0x6e,
	0x74, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x43, 0x6d, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x72, 0x0a, 0x19, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x43, 0x6c, 0x61,
	0x73, 0x73, 0x69, 0x66, 0x79, 0x47, 0x61, 0x6d, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x50, 0x61, 0x67,
	0x65, 0x12, 0x29, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e,
	0x46, 0x72, 0x6f, 0x6e, 0x74, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x79, 0x47, 0x61, 0x6d,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x2a, 0x2e, 0x7a,
	0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x46, 0x72, 0x6f, 0x6e, 0x74,
	0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x79, 0x47, 0x61, 0x6d, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x51, 0x0a, 0x0e, 0x56, 0x61, 0x6c, 0x69,
	0x64, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x43, 0x72, 0x6f, 0x6e, 0x12, 0x1e, 0x2e, 0x7a, 0x65, 0x72,
	0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x53, 0x74,
	0x61, 0x6b, 0x65, 0x43, 0x72, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x7a, 0x65, 0x72,
	0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x53, 0x74,
	0x61, 0x6b, 0x65, 0x43, 0x72, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x5d, 0x0a, 0x12, 0x56,
	0x61, 0x6c, 0x69, 0x64, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x57, 0x65, 0x65, 0x6b, 0x43, 0x72, 0x6f,
	0x6e, 0x12, 0x22, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e,
	0x56, 0x61, 0x6c, 0x69, 0x64, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x57, 0x65, 0x65, 0x6b, 0x43, 0x72,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x23, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65,
	0x72, 0x70, 0x63, 0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x57, 0x65,
	0x65, 0x6b, 0x43, 0x72, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x60, 0x0a, 0x13, 0x56, 0x61,
	0x6c, 0x69, 0x64, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x43, 0x72, 0x6f,
	0x6e, 0x12, 0x23, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e,
	0x56, 0x61, 0x6c, 0x69, 0x64, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x43,
	0x72, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x24, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d,
	0x65, 0x72, 0x70, 0x63, 0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x4d,
	0x6f, 0x6e, 0x74, 0x68, 0x43, 0x72, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x6f, 0x0a, 0x18,
	0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x6c, 0x79, 0x52, 0x65, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x6e, 0x43, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x28, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67,
	0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x6c, 0x79, 0x52, 0x65,
	0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x43, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x52,
	0x65, 0x71, 0x1a, 0x29, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63,
	0x2e, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x6c, 0x79, 0x52, 0x65, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x6e, 0x43, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x12, 0x57, 0x0a,
	0x10, 0x67, 0x65, 0x74, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x50, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x20, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e,
	0x47, 0x65, 0x74, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x50, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x1a, 0x21, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x70,
	0x63, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x50, 0x61, 0x67, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x66, 0x0a, 0x15, 0x67, 0x65, 0x74, 0x52, 0x65, 0x63,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x25, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65,
	0x74, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x26, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d,
	0x65, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x64, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x6f,
	0x0a, 0x18, 0x67, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x65, 0x6e, 0x64, 0x50, 0x6c, 0x61,
	0x79, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x28, 0x2e, 0x7a, 0x65, 0x72,
	0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f,
	0x6d, 0x65, 0x6e, 0x64, 0x50, 0x6c, 0x61, 0x79, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x1a, 0x29, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72,
	0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x65, 0x6e, 0x64, 0x50, 0x6c,
	0x61, 0x79, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x60, 0x0a, 0x13, 0x67, 0x65, 0x74, 0x46, 0x75, 0x74, 0x75, 0x72, 0x65, 0x4d, 0x61, 0x74, 0x63,
	0x68, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x23, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d,
	0x65, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x75, 0x74, 0x75, 0x72, 0x65, 0x4d, 0x61,
	0x74, 0x63, 0x68, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x24, 0x2e, 0x7a, 0x65,
	0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x75, 0x74,
	0x75, 0x72, 0x65, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x60, 0x0a, 0x13, 0x67, 0x65, 0x74, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x4d, 0x61, 0x72,
	0x6b, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x23, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67,
	0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x4d,
	0x61, 0x72, 0x6b, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x1a, 0x24, 0x2e,
	0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x4d,
	0x61, 0x74, 0x63, 0x68, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x60, 0x0a, 0x13, 0x67, 0x65, 0x74, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x53,
	0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x12, 0x23, 0x2e, 0x7a, 0x65, 0x72,
	0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x74, 0x63,
	0x68, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x1a,
	0x24, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65,
	0x74, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x61,
	0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x51, 0x0a, 0x0e, 0x67, 0x65, 0x74, 0x4d, 0x61, 0x74, 0x63,
	0x68, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x1e, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61,
	0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61,
	0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x60, 0x0a, 0x13, 0x67, 0x65, 0x74, 0x4d,
	0x61, 0x74, 0x63, 0x68, 0x4c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x23, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65,
	0x74, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x4c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x73, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x1a, 0x24, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72,
	0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x4c, 0x65, 0x61, 0x67, 0x75,
	0x65, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x69, 0x0a, 0x16, 0x67, 0x65,
	0x74, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x50, 0x61, 0x67, 0x65,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x26, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72,
	0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x50, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x27, 0x2e, 0x7a,
	0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x61,
	0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x50, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x5d, 0x0a, 0x12, 0x67, 0x65, 0x74, 0x4d, 0x61, 0x74, 0x63,
	0x68, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x22, 0x2e, 0x7a, 0x65,
	0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x74,
	0x63, 0x68, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a,
	0x23, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65,
	0x74, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x60, 0x0a, 0x13, 0x67, 0x65, 0x74, 0x4d, 0x61, 0x74, 0x63, 0x68,
	0x42, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x12, 0x23, 0x2e, 0x7a, 0x65,
	0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x74,
	0x63, 0x68, 0x42, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71,
	0x1a, 0x24, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x47,
	0x65, 0x74, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x42, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x6f, 0x0a, 0x18, 0x67, 0x65, 0x74, 0x4d, 0x61, 0x74,
	0x63, 0x68, 0x4c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x73, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x12, 0x28, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63,
	0x2e, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x4c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x73,
	0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x29, 0x2e, 0x7a,
	0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x61,
	0x74, 0x63, 0x68, 0x4c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x73, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x63, 0x0a, 0x14, 0x67, 0x65, 0x74, 0x4d, 0x61,
	0x74, 0x63, 0x68, 0x54, 0x6f, 0x70, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12,
	0x24, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65,
	0x74, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x54, 0x6f, 0x70, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x25, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65,
	0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x54, 0x6f, 0x70, 0x52,
	0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x66, 0x0a, 0x15,
	0x67, 0x65, 0x74, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x4d, 0x61, 0x69,
	0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x25, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65,
	0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x4d, 0x61, 0x69, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x26, 0x2e, 0x7a,
	0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x61,
	0x74, 0x63, 0x68, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x4d, 0x61, 0x69, 0x6e, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x63, 0x0a, 0x14, 0x67, 0x65, 0x74, 0x4d, 0x61, 0x74, 0x63, 0x68,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x73, 0x12, 0x24, 0x2e, 0x7a,
	0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x61,
	0x74, 0x63, 0x68, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x73, 0x52,
	0x65, 0x71, 0x1a, 0x25, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63,
	0x2e, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x4d, 0x61,
	0x72, 0x6b, 0x65, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x57, 0x0a, 0x10, 0x67, 0x65, 0x74,
	0x4d, 0x61, 0x74, 0x63, 0x68, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x55, 0x72, 0x6c, 0x12, 0x20, 0x2e,
	0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x4d,
	0x61, 0x74, 0x63, 0x68, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x55, 0x72, 0x6c, 0x52, 0x65, 0x71, 0x1a,
	0x21, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65,
	0x74, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x55, 0x72, 0x6c, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x51, 0x0a, 0x0e, 0x73, 0x61, 0x76, 0x65, 0x4c, 0x69, 0x76, 0x65, 0x41, 0x6e,
	0x63, 0x68, 0x6f, 0x72, 0x12, 0x1e, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72,
	0x70, 0x63, 0x2e, 0x53, 0x61, 0x76, 0x65, 0x4c, 0x69, 0x76, 0x65, 0x41, 0x6e, 0x63, 0x68, 0x6f,
	0x72, 0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72,
	0x70, 0x63, 0x2e, 0x53, 0x61, 0x76, 0x65, 0x4c, 0x69, 0x76, 0x65, 0x41, 0x6e, 0x63, 0x68, 0x6f,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x57, 0x0a, 0x10, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c,
	0x69, 0x76, 0x65, 0x41, 0x6e, 0x63, 0x68, 0x6f, 0x72, 0x12, 0x20, 0x2e, 0x7a, 0x65, 0x72, 0x6f,
	0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x69,
	0x76, 0x65, 0x41, 0x6e, 0x63, 0x68, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x21, 0x2e, 0x7a, 0x65,
	0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x4c, 0x69, 0x76, 0x65, 0x41, 0x6e, 0x63, 0x68, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x5a,
	0x0a, 0x11, 0x67, 0x65, 0x74, 0x4c, 0x69, 0x76, 0x65, 0x41, 0x6e, 0x63, 0x68, 0x6f, 0x72, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x21, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x70,
	0x63, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x76, 0x65, 0x41, 0x6e, 0x63, 0x68, 0x6f, 0x72, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x22, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d,
	0x65, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x76, 0x65, 0x41, 0x6e, 0x63, 0x68,
	0x6f, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4b, 0x0a, 0x0c, 0x73, 0x61,
	0x76, 0x65, 0x4c, 0x69, 0x76, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x12, 0x1c, 0x2e, 0x7a, 0x65, 0x72,
	0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x61, 0x76, 0x65, 0x4c, 0x69, 0x76,
	0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67,
	0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x61, 0x76, 0x65, 0x4c, 0x69, 0x76, 0x65, 0x52,
	0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x12, 0x51, 0x0a, 0x0e, 0x64, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x4c, 0x69, 0x76, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x12, 0x1e, 0x2e, 0x7a, 0x65, 0x72, 0x6f,
	0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x69,
	0x76, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x7a, 0x65, 0x72, 0x6f,
	0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x69,
	0x76, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4b, 0x0a, 0x0c, 0x64, 0x6f,
	0x77, 0x6e, 0x4c, 0x69, 0x76, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x12, 0x1c, 0x2e, 0x7a, 0x65, 0x72,
	0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x44, 0x6f, 0x77, 0x6e, 0x4c, 0x69, 0x76,
	0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67,
	0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x44, 0x6f, 0x77, 0x6e, 0x4c, 0x69, 0x76, 0x65, 0x52,
	0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x12, 0x54, 0x0a, 0x0f, 0x67, 0x65, 0x74, 0x4c, 0x69,
	0x76, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1f, 0x2e, 0x7a, 0x65, 0x72,
	0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x76, 0x65,
	0x52, 0x6f, 0x6f, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e, 0x7a, 0x65,
	0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x76,
	0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x63, 0x0a,
	0x14, 0x67, 0x65, 0x74, 0x4c, 0x69, 0x76, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x4d, 0x61, 0x74, 0x63,
	0x68, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x24, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65,
	0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x76, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x4d,
	0x61, 0x74, 0x63, 0x68, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x25, 0x2e, 0x7a, 0x65,
	0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x76,
	0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x57, 0x0a, 0x10, 0x6c, 0x69, 0x76, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x43, 0x61,
	0x6c, 0x6c, 0x42, 0x61, 0x63, 0x6b, 0x12, 0x20, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d,
	0x65, 0x72, 0x70, 0x63, 0x2e, 0x4c, 0x69, 0x76, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x43, 0x61, 0x6c,
	0x6c, 0x42, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x1a, 0x21, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67,
	0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x4c, 0x69, 0x76, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x43,
	0x61, 0x6c, 0x6c, 0x42, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x12, 0x7e, 0x0a, 0x1d, 0x67,
	0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x4c, 0x69, 0x76, 0x65, 0x52,
	0x6f, 0x6f, 0x6d, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2d, 0x2e, 0x7a,
	0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65,
	0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x4c, 0x69, 0x76, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x4d,
	0x61, 0x74, 0x63, 0x68, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x2e, 0x2e, 0x7a, 0x65,
	0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x4c, 0x69, 0x76, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x4d, 0x61,
	0x74, 0x63, 0x68, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x96, 0x01, 0x0a, 0x25,
	0x67, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x76, 0x65,
	0x52, 0x6f, 0x6f, 0x6d, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x35, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65,
	0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x4c, 0x69, 0x76, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x36, 0x2e, 0x7a,
	0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65,
	0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x76, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x4d,
	0x61, 0x74, 0x63, 0x68, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x84, 0x01, 0x0a, 0x1f, 0x67, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x76, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x4d, 0x61, 0x74,
	0x63, 0x68, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x2f, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67,
	0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x4c, 0x69, 0x76, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x4d, 0x61, 0x74, 0x63, 0x68,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x30, 0x2e, 0x7a, 0x65, 0x72, 0x6f,
	0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x76, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x4d, 0x61, 0x74, 0x63,
	0x68, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x48, 0x0a, 0x0b, 0x53,
	0x61, 0x42, 0x61, 0x54, 0x6f, 0x75, 0x72, 0x69, 0x73, 0x74, 0x12, 0x1b, 0x2e, 0x7a, 0x65, 0x72,
	0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x61, 0x42, 0x61, 0x54, 0x6f, 0x75,
	0x72, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61,
	0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x61, 0x42, 0x61, 0x54, 0x6f, 0x75, 0x72, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x57, 0x0a, 0x10, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x47, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x20, 0x2e, 0x7a, 0x65, 0x72, 0x6f,
	0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x47, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x21, 0x2e, 0x7a, 0x65,
	0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x47, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x57,
	0x0a, 0x10, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x50, 0x6c, 0x61, 0x74, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x20, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63,
	0x2e, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x50, 0x6c, 0x61, 0x74, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x1a, 0x21, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72,
	0x70, 0x63, 0x2e, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x50, 0x6c, 0x61, 0x74, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x5d, 0x0a, 0x12, 0x67, 0x65, 0x74, 0x47, 0x61,
	0x6d, 0x65, 0x73, 0x42, 0x79, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x22, 0x2e,
	0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x47,
	0x61, 0x6d, 0x65, 0x73, 0x42, 0x79, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65,
	0x71, 0x1a, 0x23, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e,
	0x47, 0x65, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x73, 0x42, 0x79, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x12, 0x51, 0x0a, 0x0e, 0x67, 0x61, 0x6d, 0x65, 0x50, 0x61,
	0x67, 0x63, 0x6f, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1e, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67,
	0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x50, 0x61, 0x67, 0x63, 0x6f,
	0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67,
	0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x50, 0x61, 0x67, 0x63, 0x6f,
	0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x57, 0x0a, 0x10, 0x67, 0x61, 0x6d,
	0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x20, 0x2e,
	0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x61, 0x6d, 0x65,
	0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a,
	0x21, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x61,
	0x6d, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x60, 0x0a, 0x13, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x43, 0x68, 0x61, 0x72, 0x74, 0x12, 0x23, 0x2e, 0x7a, 0x65, 0x72, 0x6f,
	0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x55, 0x73, 0x65,
	0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x68, 0x61, 0x72, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x24,
	0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x4c, 0x6f, 0x67,
	0x69, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x68, 0x61, 0x72, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x48, 0x0a, 0x0b, 0x62, 0x65, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x1b, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x70,
	0x63, 0x2e, 0x42, 0x65, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x1a, 0x1c, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x42,
	0x65, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x72,
	0x0a, 0x19, 0x67, 0x65, 0x74, 0x43, 0x61, 0x73, 0x63, 0x61, 0x64, 0x65, 0x42, 0x79, 0x47, 0x61,
	0x6d, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x29, 0x2e, 0x7a, 0x65,
	0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x61, 0x73,
	0x63, 0x61, 0x64, 0x65, 0x42, 0x79, 0x47, 0x61, 0x6d, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x2a, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d,
	0x65, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x61, 0x73, 0x63, 0x61, 0x64, 0x65, 0x42,
	0x79, 0x47, 0x61, 0x6d, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x4b, 0x0a, 0x0c, 0x6c, 0x69, 0x76, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x1c, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63,
	0x2e, 0x4c, 0x69, 0x76, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x1a, 0x1d, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x4c,
	0x69, 0x76, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x42,
	0x0f, 0x5a, 0x0d, 0x2e, 0x2f, 0x7a, 0x65, 0x72, 0x6f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x70, 0x63,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_zerogamerpc_proto_rawDescOnce sync.Once
	file_zerogamerpc_proto_rawDescData = file_zerogamerpc_proto_rawDesc
)

func file_zerogamerpc_proto_rawDescGZIP() []byte {
	file_zerogamerpc_proto_rawDescOnce.Do(func() {
		file_zerogamerpc_proto_rawDescData = protoimpl.X.CompressGZIP(file_zerogamerpc_proto_rawDescData)
	})
	return file_zerogamerpc_proto_rawDescData
}

var file_zerogamerpc_proto_msgTypes = make([]protoimpl.MessageInfo, 293)
var file_zerogamerpc_proto_goTypes = []interface{}{
	(*BonusesReq)(nil),                                        // 0: zerogamerpc.BonusesReq
	(*BonusesData)(nil),                                       // 1: zerogamerpc.BonusesData
	(*BonusesRes)(nil),                                        // 2: zerogamerpc.BonusesRes
	(*StartGameReq)(nil),                                      // 3: zerogamerpc.StartGameReq
	(*StartGameResp)(nil),                                     // 4: zerogamerpc.StartGameResp
	(*OutGameForTransferWalletResp)(nil),                      // 5: zerogamerpc.OutGameForTransferWalletResp
	(*OutGameForTransferWalletReq)(nil),                       // 6: zerogamerpc.OutGameForTransferWalletReq
	(*SlotGameListReq)(nil),                                   // 7: zerogamerpc.SlotGameListReq
	(*SlotGameListDataReq)(nil),                               // 8: zerogamerpc.SlotGameListDataReq
	(*SlotGameListResp)(nil),                                  // 9: zerogamerpc.SlotGameListResp
	(*SlotGameData)(nil),                                      // 10: zerogamerpc.SlotGameData
	(*SlotGameListDataResp)(nil),                              // 11: zerogamerpc.SlotGameListDataResp
	(*GameStartParam)(nil),                                    // 12: zerogamerpc.GameStartParam
	(*GameListReq)(nil),                                       // 13: zerogamerpc.GameListReq
	(*GameListResp)(nil),                                      // 14: zerogamerpc.GameListResp
	(*GameListDataResp)(nil),                                  // 15: zerogamerpc.GameListDataResp
	(*AgentGameListReq)(nil),                                  // 16: zerogamerpc.AgentGameListReq
	(*AgentGameListResp)(nil),                                 // 17: zerogamerpc.AgentGameListResp
	(*AgentGameListDataResp)(nil),                             // 18: zerogamerpc.AgentGameListDataResp
	(*AgentGetGamesByCategoryReq)(nil),                        // 19: zerogamerpc.AgentGetGamesByCategoryReq
	(*AgentGetGamesByCategoryResp)(nil),                       // 20: zerogamerpc.AgentGetGamesByCategoryResp
	(*AgentGetGamesByCategoryData)(nil),                       // 21: zerogamerpc.AgentGetGamesByCategoryData
	(*AgentGamePagcorListReq)(nil),                            // 22: zerogamerpc.AgentGamePagcorListReq
	(*AgentGamePagcorListResp)(nil),                           // 23: zerogamerpc.AgentGamePagcorListResp
	(*AgentGamePagcorListData)(nil),                           // 24: zerogamerpc.AgentGamePagcorListData
	(*GameDetailsReq)(nil),                                    // 25: zerogamerpc.GameDetailsReq
	(*GameDetailsResp)(nil),                                   // 26: zerogamerpc.GameDetailsResp
	(*GameDetailsDataResp)(nil),                               // 27: zerogamerpc.GameDetailsDataResp
	(*BetListReq)(nil),                                        // 28: zerogamerpc.BetListReq
	(*BetListDataReq)(nil),                                    // 29: zerogamerpc.BetListDataReq
	(*BetListResp)(nil),                                       // 30: zerogamerpc.BetListResp
	(*BetListData)(nil),                                       // 31: zerogamerpc.BetListData
	(*BetListDataItem)(nil),                                   // 32: zerogamerpc.BetListDataItem
	(*BetStatisticsReq)(nil),                                  // 33: zerogamerpc.BetStatisticsReq
	(*BetStatisticsResp)(nil),                                 // 34: zerogamerpc.BetStatisticsResp
	(*BetStatisticsData)(nil),                                 // 35: zerogamerpc.BetStatisticsData
	(*GameFavoriteReq)(nil),                                   // 36: zerogamerpc.GameFavoriteReq
	(*GameFavoriteResp)(nil),                                  // 37: zerogamerpc.GameFavoriteResp
	(*GetRankListReq)(nil),                                    // 38: zerogamerpc.GetRankListReq
	(*GetRankListResp)(nil),                                   // 39: zerogamerpc.GetRankListResp
	(*RankListData)(nil),                                      // 40: zerogamerpc.RankListData
	(*GetPlatformProfitReq)(nil),                              // 41: zerogamerpc.GetPlatformProfitReq
	(*GetPlatformProfitResp)(nil),                             // 42: zerogamerpc.GetPlatformProfitResp
	(*GetPlatformProfitData)(nil),                             // 43: zerogamerpc.GetPlatformProfitData
	(*GetPlatformProfitListReq)(nil),                          // 44: zerogamerpc.GetPlatformProfitListReq
	(*GetPlatformProfitListDataReq)(nil),                      // 45: zerogamerpc.GetPlatformProfitListDataReq
	(*GetPlatformProfitListResp)(nil),                         // 46: zerogamerpc.GetPlatformProfitListResp
	(*GetPlatformProfitListData)(nil),                         // 47: zerogamerpc.GetPlatformProfitListData
	(*GetPlatformProfitListItem)(nil),                         // 48: zerogamerpc.GetPlatformProfitListItem
	(*PlatProfitAndBetCountChartReq)(nil),                     // 49: zerogamerpc.PlatProfitAndBetCountChartReq
	(*PlatProfitAndBetCountChartResp)(nil),                    // 50: zerogamerpc.PlatProfitAndBetCountChartResp
	(*PlatProfitAndBetCountChartData)(nil),                    // 51: zerogamerpc.PlatProfitAndBetCountChartData
	(*ListChart)(nil),                                         // 52: zerogamerpc.ListChart
	(*ListCoinChart)(nil),                                     // 53: zerogamerpc.ListCoinChart
	(*UserSummaryReq)(nil),                                    // 54: zerogamerpc.UserSummaryReq
	(*UserSummaryResp)(nil),                                   // 55: zerogamerpc.UserSummaryResp
	(*UserSummaryData)(nil),                                   // 56: zerogamerpc.UserSummaryData
	(*FreeGameRecordListReq)(nil),                             // 57: zerogamerpc.FreeGameRecordListReq
	(*FreeGameRecordListDataReq)(nil),                         // 58: zerogamerpc.FreeGameRecordListDataReq
	(*FreeGameRecordListResp)(nil),                            // 59: zerogamerpc.FreeGameRecordListResp
	(*FreeGameRecordListData)(nil),                            // 60: zerogamerpc.FreeGameRecordListData
	(*FreeGameRecordListDataItem)(nil),                        // 61: zerogamerpc.FreeGameRecordListDataItem
	(*CreateFreeGameReq)(nil),                                 // 62: zerogamerpc.CreateFreeGameReq
	(*CreateFreeGameUserReq)(nil),                             // 63: zerogamerpc.CreateFreeGameUserReq
	(*CreateFreeGameDataReq)(nil),                             // 64: zerogamerpc.CreateFreeGameDataReq
	(*CreateFreeGameResp)(nil),                                // 65: zerogamerpc.CreateFreeGameResp
	(*DeleteFreeGameReq)(nil),                                 // 66: zerogamerpc.DeleteFreeGameReq
	(*DeleteFreeGameResp)(nil),                                // 67: zerogamerpc.DeleteFreeGameResp
	(*TradingManageListReq)(nil),                              // 68: zerogamerpc.TradingManageListReq
	(*TradingManageListDataReq)(nil),                          // 69: zerogamerpc.TradingManageListDataReq
	(*TradingManageListResp)(nil),                             // 70: zerogamerpc.TradingManageListResp
	(*TradingManageListDataResp)(nil),                         // 71: zerogamerpc.TradingManageListDataResp
	(*TradingManageListDataItem)(nil),                         // 72: zerogamerpc.TradingManageListDataItem
	(*StatisticsTradingReq)(nil),                              // 73: zerogamerpc.StatisticsTradingReq
	(*StatisticsTradingResp)(nil),                             // 74: zerogamerpc.StatisticsTradingResp
	(*StatisticsTradingData)(nil),                             // 75: zerogamerpc.StatisticsTradingData
	(*UpdateSubGameReq)(nil),                                  // 76: zerogamerpc.UpdateSubGameReq
	(*UpdateSubGameResp)(nil),                                 // 77: zerogamerpc.UpdateSubGameResp
	(*AddSubGameReq)(nil),                                     // 78: zerogamerpc.AddSubGameReq
	(*AddSubGameResp)(nil),                                    // 79: zerogamerpc.AddSubGameResp
	(*ListSubGameReq)(nil),                                    // 80: zerogamerpc.ListSubGameReq
	(*ListSubGameDataReq)(nil),                                // 81: zerogamerpc.ListSubGameDataReq
	(*ListSubGameResp)(nil),                                   // 82: zerogamerpc.ListSubGameResp
	(*ListSubGameDataResp)(nil),                               // 83: zerogamerpc.ListSubGameDataResp
	(*ListSubGameDataItem)(nil),                               // 84: zerogamerpc.ListSubGameDataItem
	(*ListSubGameDataItemMainTenance)(nil),                    // 85: zerogamerpc.ListSubGameDataItemMainTenance
	(*SearchGameListReq)(nil),                                 // 86: zerogamerpc.SearchGameListReq
	(*SearchGameListDataReq)(nil),                             // 87: zerogamerpc.SearchGameListDataReq
	(*SearchGameListResp)(nil),                                // 88: zerogamerpc.SearchGameListResp
	(*SearchGameListData)(nil),                                // 89: zerogamerpc.SearchGameListData
	(*SearchGameListDataItem)(nil),                            // 90: zerogamerpc.SearchGameListDataItem
	(*AdminBetStatisticsRequest)(nil),                         // 91: zerogamerpc.AdminBetStatisticsRequest
	(*AdminBetStatisticsResponse)(nil),                        // 92: zerogamerpc.AdminBetStatisticsResponse
	(*AdminBetStatisticsItem)(nil),                            // 93: zerogamerpc.AdminBetStatisticsItem
	(*BetPageRequest)(nil),                                    // 94: zerogamerpc.BetPageRequest
	(*AgentBetStatisticsRequest)(nil),                         // 95: zerogamerpc.AgentBetStatisticsRequest
	(*AgentBetStatisticsResponse)(nil),                        // 96: zerogamerpc.AgentBetStatisticsResponse
	(*AgentBetStatisticsItem)(nil),                            // 97: zerogamerpc.AgentBetStatisticsItem
	(*BetPageRequestData)(nil),                                // 98: zerogamerpc.BetPageRequestData
	(*BetPageResponse)(nil),                                   // 99: zerogamerpc.BetPageResponse
	(*BetPageResponseData)(nil),                               // 100: zerogamerpc.BetPageResponseData
	(*BetPageResponseDataItem)(nil),                           // 101: zerogamerpc.BetPageResponseDataItem
	(*AgentBetPageRequest)(nil),                               // 102: zerogamerpc.AgentBetPageRequest
	(*AgentBetPageRequestData)(nil),                           // 103: zerogamerpc.AgentBetPageRequestData
	(*AgentBetPageResponse)(nil),                              // 104: zerogamerpc.AgentBetPageResponse
	(*AgentBetPageResponseData)(nil),                          // 105: zerogamerpc.AgentBetPageResponseData
	(*AgentBetPageResponseDataItem)(nil),                      // 106: zerogamerpc.AgentBetPageResponseDataItem
	(*BetPageResult)(nil),                                     // 107: zerogamerpc.BetPageResult
	(*BetPageTransferAmt)(nil),                                // 108: zerogamerpc.BetPageTransferAmt
	(*BetPageInfo)(nil),                                       // 109: zerogamerpc.BetPageInfo
	(*BetPageBetInfo)(nil),                                    // 110: zerogamerpc.BetPageBetInfo
	(*BetPageWinInfo)(nil),                                    // 111: zerogamerpc.BetPageWinInfo
	(*BetPageFlowCategoryType)(nil),                           // 112: zerogamerpc.BetPageFlowCategoryType
	(*BetSummaryRequest)(nil),                                 // 113: zerogamerpc.BetSummaryRequest
	(*BetSummaryResponse)(nil),                                // 114: zerogamerpc.BetSummaryResponse
	(*BetSummaryDataItem)(nil),                                // 115: zerogamerpc.BetSummaryDataItem
	(*AgentBetSummaryRequest)(nil),                            // 116: zerogamerpc.AgentBetSummaryRequest
	(*AgentBetSummaryResponse)(nil),                           // 117: zerogamerpc.AgentBetSummaryResponse
	(*AgentBetSummaryDataItem)(nil),                           // 118: zerogamerpc.AgentBetSummaryDataItem
	(*DailyReportStatisticsPlatCoinReq)(nil),                  // 119: zerogamerpc.DailyReportStatisticsPlatCoinReq
	(*DailyReportStatisticsPlatCoinResp)(nil),                 // 120: zerogamerpc.DailyReportStatisticsPlatCoinResp
	(*DailyReportStatisticsPlatCoinData)(nil),                 // 121: zerogamerpc.DailyReportStatisticsPlatCoinData
	(*AdminBetGameListReq)(nil),                               // 122: zerogamerpc.AdminBetGameListReq
	(*AdminBetGameListResp)(nil),                              // 123: zerogamerpc.AdminBetGameListResp
	(*AdminBetGameListData)(nil),                              // 124: zerogamerpc.AdminBetGameListData
	(*AgentListSubGameReq)(nil),                               // 125: zerogamerpc.AgentListSubGameReq
	(*AgentListSubGameDataReq)(nil),                           // 126: zerogamerpc.AgentListSubGameDataReq
	(*AgentListSubGameResp)(nil),                              // 127: zerogamerpc.AgentListSubGameResp
	(*AgentListSubGameDataResp)(nil),                          // 128: zerogamerpc.AgentListSubGameDataResp
	(*AgentListSubGameDataItem)(nil),                          // 129: zerogamerpc.AgentListSubGameDataItem
	(*AgentListSubGameDataItemMainTenance)(nil),               // 130: zerogamerpc.AgentListSubGameDataItemMainTenance
	(*ValidStakeCronReq)(nil),                                 // 131: zerogamerpc.ValidStakeCronReq
	(*ValidStakeCronResp)(nil),                                // 132: zerogamerpc.ValidStakeCronResp
	(*ValidStakeWeekCronReq)(nil),                             // 133: zerogamerpc.ValidStakeWeekCronReq
	(*ValidStakeWeekCronResp)(nil),                            // 134: zerogamerpc.ValidStakeWeekCronResp
	(*ValidStakeMonthCronReq)(nil),                            // 135: zerogamerpc.ValidStakeMonthCronReq
	(*ValidStakeMonthCronResp)(nil),                           // 136: zerogamerpc.ValidStakeMonthCronResp
	(*MonthlyReductionInCodingReq)(nil),                       // 137: zerogamerpc.MonthlyReductionInCodingReq
	(*MonthlyReductionInCodingResp)(nil),                      // 138: zerogamerpc.MonthlyReductionInCodingResp
	(*GetAllGameProviderReq)(nil),                             // 139: zerogamerpc.GetAllGameProviderReq
	(*GetAllGameProviderResp)(nil),                            // 140: zerogamerpc.GetAllGameProviderResp
	(*GetAllGameSlotResponseData)(nil),                        // 141: zerogamerpc.GetAllGameSlotResponseData
	(*GameOperationUrlData)(nil),                              // 142: zerogamerpc.GameOperationUrlData
	(*AddGameOperationUrlReq)(nil),                            // 143: zerogamerpc.AddGameOperationUrlReq
	(*AddGameOperationUrlResp)(nil),                           // 144: zerogamerpc.AddGameOperationUrlResp
	(*DelGameOperationUrlReq)(nil),                            // 145: zerogamerpc.DelGameOperationUrlReq
	(*DelGameOperationUrlResp)(nil),                           // 146: zerogamerpc.DelGameOperationUrlResp
	(*UpdateGameOperationUrlReq)(nil),                         // 147: zerogamerpc.UpdateGameOperationUrlReq
	(*UpdateGameOperationUrlResp)(nil),                        // 148: zerogamerpc.UpdateGameOperationUrlResp
	(*GetUpdateGameOperationUrlDetailReq)(nil),                // 149: zerogamerpc.GetUpdateGameOperationUrlDetailReq
	(*GetUpdateGameOperationUrlDetailResp)(nil),               // 150: zerogamerpc.GetUpdateGameOperationUrlDetailResp
	(*GameOperationUrlListFilterData)(nil),                    // 151: zerogamerpc.GameOperationUrlListFilterData
	(*GetGameOperationUrlListReq)(nil),                        // 152: zerogamerpc.GetGameOperationUrlListReq
	(*GetGameOperationUrlListResp)(nil),                       // 153: zerogamerpc.GetGameOperationUrlListResp
	(*GetSportHotGameListReq)(nil),                            // 154: zerogamerpc.GetSportHotGameListReq
	(*GetSportHotGameListResp)(nil),                           // 155: zerogamerpc.GetSportHotGameListResp
	(*StartSportHotGameReq)(nil),                              // 156: zerogamerpc.StartSportHotGameReq
	(*StartSportHotGameResp)(nil),                             // 157: zerogamerpc.StartSportHotGameResp
	(*AddFrontClassifyInfoCmsReq)(nil),                        // 158: zerogamerpc.AddFrontClassifyInfoCmsReq
	(*AddFrontClassifyInfoCmsDataReq)(nil),                    // 159: zerogamerpc.AddFrontClassifyInfoCmsDataReq
	(*AddFrontClassifyInfoCmsResp)(nil),                       // 160: zerogamerpc.AddFrontClassifyInfoCmsResp
	(*FrontClassifyGameInfoPageReq)(nil),                      // 161: zerogamerpc.FrontClassifyGameInfoPageReq
	(*FrontClassifyGameInfoPageDataReq)(nil),                  // 162: zerogamerpc.FrontClassifyGameInfoPageDataReq
	(*FrontClassifyGameInfoPageResp)(nil),                     // 163: zerogamerpc.FrontClassifyGameInfoPageResp
	(*FrontClassifyGameInfoPageDataResp)(nil),                 // 164: zerogamerpc.FrontClassifyGameInfoPageDataResp
	(*FrontClassifyGameInfoPageDataItem)(nil),                 // 165: zerogamerpc.FrontClassifyGameInfoPageDataItem
	(*GetMatchPageListReq)(nil),                               // 166: zerogamerpc.GetMatchPageListReq
	(*GetMatchPageListDataReq)(nil),                           // 167: zerogamerpc.GetMatchPageListDataReq
	(*GetMatchPageListResp)(nil),                              // 168: zerogamerpc.GetMatchPageListResp
	(*GetMatchPageListDataResp)(nil),                          // 169: zerogamerpc.GetMatchPageListDataResp
	(*GetMatchPageListDataItem)(nil),                          // 170: zerogamerpc.GetMatchPageListDataItem
	(*GetRecommendMatchListReq)(nil),                          // 171: zerogamerpc.GetRecommendMatchListReq
	(*GetRecommendMatchListResp)(nil),                         // 172: zerogamerpc.GetRecommendMatchListResp
	(*GetRecommendMatchListDataResp)(nil),                     // 173: zerogamerpc.GetRecommendMatchListDataResp
	(*GetRecomendPlayMatchListReq)(nil),                       // 174: zerogamerpc.GetRecomendPlayMatchListReq
	(*GetRecomendPlayMatchListResp)(nil),                      // 175: zerogamerpc.GetRecomendPlayMatchListResp
	(*GetRecomendPlayMatchListDataResp)(nil),                  // 176: zerogamerpc.GetRecomendPlayMatchListDataResp
	(*GetFutureMatchCountReq)(nil),                            // 177: zerogamerpc.GetFutureMatchCountReq
	(*GetFutureMatchCountResp)(nil),                           // 178: zerogamerpc.GetFutureMatchCountResp
	(*GetFutureMatchCountDataResp)(nil),                       // 179: zerogamerpc.GetFutureMatchCountDataResp
	(*GetMatchMarketGroupReq)(nil),                            // 180: zerogamerpc.GetMatchMarketGroupReq
	(*GetMatchMarketGroupResp)(nil),                           // 181: zerogamerpc.GetMatchMarketGroupResp
	(*GetMatchMarketGroupDataResp)(nil),                       // 182: zerogamerpc.GetMatchMarketGroupDataResp
	(*GetMatchStatisticalReq)(nil),                            // 183: zerogamerpc.GetMatchStatisticalReq
	(*GetMatchStatisticalMarketsReq)(nil),                     // 184: zerogamerpc.GetMatchStatisticalMarketsReq
	(*GetMatchStatisticalMarkets2Req)(nil),                    // 185: zerogamerpc.GetMatchStatisticalMarkets2Req
	(*GetMatchStatisticalResp)(nil),                           // 186: zerogamerpc.GetMatchStatisticalResp
	(*GetMatchStatisticalDataResp)(nil),                       // 187: zerogamerpc.GetMatchStatisticalDataResp
	(*GetMatchDetailReq)(nil),                                 // 188: zerogamerpc.GetMatchDetailReq
	(*GetMatchDetailResp)(nil),                                // 189: zerogamerpc.GetMatchDetailResp
	(*GetMatchDetailDataResp)(nil),                            // 190: zerogamerpc.GetMatchDetailDataResp
	(*GetMatchLeaguesListReq)(nil),                            // 191: zerogamerpc.GetMatchLeaguesListReq
	(*GetMatchLeaguesListResp)(nil),                           // 192: zerogamerpc.GetMatchLeaguesListResp
	(*GetMatchLeaguesListDataResp)(nil),                       // 193: zerogamerpc.GetMatchLeaguesListDataResp
	(*GetMatchResultPageListReq)(nil),                         // 194: zerogamerpc.GetMatchResultPageListReq
	(*GetMatchResultPageListDataReq)(nil),                     // 195: zerogamerpc.GetMatchResultPageListDataReq
	(*GetMatchResultPageListResp)(nil),                        // 196: zerogamerpc.GetMatchResultPageListResp
	(*GetMatchResultPageListDataResp)(nil),                    // 197: zerogamerpc.GetMatchResultPageListDataResp
	(*GetMatchResultPageListDataItem)(nil),                    // 198: zerogamerpc.GetMatchResultPageListDataItem
	(*GetMatchResultInfoReq)(nil),                             // 199: zerogamerpc.GetMatchResultInfoReq
	(*GetMatchResultInfoResp)(nil),                            // 200: zerogamerpc.GetMatchResultInfoResp
	(*GetMatchResultInfoDataResp)(nil),                        // 201: zerogamerpc.GetMatchResultInfoDataResp
	(*GetMatchByRecommendReq)(nil),                            // 202: zerogamerpc.GetMatchByRecommendReq
	(*GetMatchByRecommendResp)(nil),                           // 203: zerogamerpc.GetMatchByRecommendResp
	(*GetMatchByRecommendDataResp)(nil),                       // 204: zerogamerpc.GetMatchByRecommendDataResp
	(*GetMatchLeaguesRecommentReq)(nil),                       // 205: zerogamerpc.GetMatchLeaguesRecommentReq
	(*GetMatchLeaguesRecommentResp)(nil),                      // 206: zerogamerpc.GetMatchLeaguesRecommentResp
	(*GetMatchLeaguesRecommentDataResp)(nil),                  // 207: zerogamerpc.GetMatchLeaguesRecommentDataResp
	(*GetMatchTopRecommentReq)(nil),                           // 208: zerogamerpc.GetMatchTopRecommentReq
	(*GetMatchTopRecommentResp)(nil),                          // 209: zerogamerpc.GetMatchTopRecommentResp
	(*GetMatchTopRecommentDataResp)(nil),                      // 210: zerogamerpc.GetMatchTopRecommentDataResp
	(*GetMatchIndexMainListReq)(nil),                          // 211: zerogamerpc.GetMatchIndexMainListReq
	(*GetMatchIndexMainListResp)(nil),                         // 212: zerogamerpc.GetMatchIndexMainListResp
	(*GetMatchIndexMainListDataResp)(nil),                     // 213: zerogamerpc.GetMatchIndexMainListDataResp
	(*GetMatchIndexMainListDataItemResp)(nil),                 // 214: zerogamerpc.GetMatchIndexMainListDataItemResp
	(*GetMatchIndexMarketsReq)(nil),                           // 215: zerogamerpc.GetMatchIndexMarketsReq
	(*GetMatchIndexMarketsResp)(nil),                          // 216: zerogamerpc.GetMatchIndexMarketsResp
	(*GetMatchIndexMarketsDataResp)(nil),                      // 217: zerogamerpc.GetMatchIndexMarketsDataResp
	(*GetMatchIndexUrlReq)(nil),                               // 218: zerogamerpc.GetMatchIndexUrlReq
	(*GetMatchIndexUrlResp)(nil),                              // 219: zerogamerpc.GetMatchIndexUrlResp
	(*GetMatchIndexUrlDataResp)(nil),                          // 220: zerogamerpc.GetMatchIndexUrlDataResp
	(*SaveLiveAnchorReq)(nil),                                 // 221: zerogamerpc.SaveLiveAnchorReq
	(*SaveLiveAnchorResp)(nil),                                // 222: zerogamerpc.SaveLiveAnchorResp
	(*DeleteLiveAnchorReq)(nil),                               // 223: zerogamerpc.DeleteLiveAnchorReq
	(*DeleteLiveAnchorResp)(nil),                              // 224: zerogamerpc.DeleteLiveAnchorResp
	(*GetLiveAnchorListReq)(nil),                              // 225: zerogamerpc.GetLiveAnchorListReq
	(*GetLiveAnchorListDataReq)(nil),                          // 226: zerogamerpc.GetLiveAnchorListDataReq
	(*GetLiveAnchorListResp)(nil),                             // 227: zerogamerpc.GetLiveAnchorListResp
	(*GetLiveAnchorListDataResp)(nil),                         // 228: zerogamerpc.GetLiveAnchorListDataResp
	(*GetLiveAnchorListDataItemResp)(nil),                     // 229: zerogamerpc.GetLiveAnchorListDataItemResp
	(*SaveLiveRoomReq)(nil),                                   // 230: zerogamerpc.SaveLiveRoomReq
	(*SaveLiveRoomResp)(nil),                                  // 231: zerogamerpc.SaveLiveRoomResp
	(*DeleteLiveRoomReq)(nil),                                 // 232: zerogamerpc.DeleteLiveRoomReq
	(*DeleteLiveRoomResp)(nil),                                // 233: zerogamerpc.DeleteLiveRoomResp
	(*DownLiveRoomReq)(nil),                                   // 234: zerogamerpc.DownLiveRoomReq
	(*DownLiveRoomResp)(nil),                                  // 235: zerogamerpc.DownLiveRoomResp
	(*GetLiveRoomListReq)(nil),                                // 236: zerogamerpc.GetLiveRoomListReq
	(*GetLiveRoomListDataReq)(nil),                            // 237: zerogamerpc.GetLiveRoomListDataReq
	(*GetLiveRoomListResp)(nil),                               // 238: zerogamerpc.GetLiveRoomListResp
	(*GetLiveRoomListDataResp)(nil),                           // 239: zerogamerpc.GetLiveRoomListDataResp
	(*GetLiveRoomListDataItemResp)(nil),                       // 240: zerogamerpc.GetLiveRoomListDataItemResp
	(*GetLiveRoomMatchListReq)(nil),                           // 241: zerogamerpc.GetLiveRoomMatchListReq
	(*GetLiveRoomMatchListDataReq)(nil),                       // 242: zerogamerpc.GetLiveRoomMatchListDataReq
	(*GetLiveRoomMatchListResp)(nil),                          // 243: zerogamerpc.GetLiveRoomMatchListResp
	(*GetLiveRoomMatchListDataResp)(nil),                      // 244: zerogamerpc.GetLiveRoomMatchListDataResp
	(*GetLiveRoomMatchListDataItemResp)(nil),                  // 245: zerogamerpc.GetLiveRoomMatchListDataItemResp
	(*FbTouristReq)(nil),                                      // 246: zerogamerpc.FbTouristReq
	(*FbTouristResp)(nil),                                     // 247: zerogamerpc.FbTouristResp
	(*LiveRoomCallBackReq)(nil),                               // 248: zerogamerpc.LiveRoomCallBackReq
	(*LiveRoomCallBackResp)(nil),                              // 249: zerogamerpc.LiveRoomCallBackResp
	(*GetRecommendLiveRoomMatchListReq)(nil),                  // 250: zerogamerpc.GetRecommendLiveRoomMatchListReq
	(*GetRecommendLiveRoomMatchLisDatatReq)(nil),              // 251: zerogamerpc.GetRecommendLiveRoomMatchLisDatatReq
	(*GetRecommendLiveRoomMatchListResp)(nil),                 // 252: zerogamerpc.GetRecommendLiveRoomMatchListResp
	(*GetRecommendLiveRoomMatchListDataResp)(nil),             // 253: zerogamerpc.GetRecommendLiveRoomMatchListDataResp
	(*GetRecommendLiveRoomMatchListDataItemResp)(nil),         // 254: zerogamerpc.GetRecommendLiveRoomMatchListDataItemResp
	(*GetRecommentLiveRoomMatchDetailOptionReq)(nil),          // 255: zerogamerpc.GetRecommentLiveRoomMatchDetailOptionReq
	(*GetRecommentLiveRoomMatchDetailOptionResp)(nil),         // 256: zerogamerpc.GetRecommentLiveRoomMatchDetailOptionResp
	(*GetRecommentLiveRoomMatchDetailOptionDataResp)(nil),     // 257: zerogamerpc.GetRecommentLiveRoomMatchDetailOptionDataResp
	(*GetRecommentLiveRoomMatchDetailOptionDataItemResp)(nil), // 258: zerogamerpc.GetRecommentLiveRoomMatchDetailOptionDataItemResp
	(*GetRecommentLiveRoomMatchResultReq)(nil),                // 259: zerogamerpc.GetRecommentLiveRoomMatchResultReq
	(*GetRecommentLiveRoomMatchResultResp)(nil),               // 260: zerogamerpc.GetRecommentLiveRoomMatchResultResp
	(*GetRecommentLiveRoomMatchResultDataResp)(nil),           // 261: zerogamerpc.GetRecommentLiveRoomMatchResultDataResp
	(*SaBaTouristReq)(nil),                                    // 262: zerogamerpc.SaBaTouristReq
	(*SaBaTouristResp)(nil),                                   // 263: zerogamerpc.SaBaTouristResp
	(*PlatformGameListReq)(nil),                               // 264: zerogamerpc.PlatformGameListReq
	(*PlatformGameListResp)(nil),                              // 265: zerogamerpc.PlatformGameListResp
	(*PlatformGameDataResp)(nil),                              // 266: zerogamerpc.PlatformGameDataResp
	(*PlatformPlatListReq)(nil),                               // 267: zerogamerpc.PlatformPlatListReq
	(*PlatformPlatListDataReq)(nil),                           // 268: zerogamerpc.PlatformPlatListDataReq
	(*PlatformPlatListResp)(nil),                              // 269: zerogamerpc.PlatformPlatListResp
	(*PlatformPlatListDataResp)(nil),                          // 270: zerogamerpc.PlatformPlatListDataResp
	(*PlatformPlatListDataItemResp)(nil),                      // 271: zerogamerpc.PlatformPlatListDataItemResp
	(*GetGamesByCategoryReq)(nil),                             // 272: zerogamerpc.GetGamesByCategoryReq
	(*GetGamesByCategoryResp)(nil),                            // 273: zerogamerpc.GetGamesByCategoryResp
	(*GetGamesByCategoryDataResp)(nil),                        // 274: zerogamerpc.GetGamesByCategoryDataResp
	(*GamePagcorListReq)(nil),                                 // 275: zerogamerpc.GamePagcorListReq
	(*GamePagcorListResp)(nil),                                // 276: zerogamerpc.GamePagcorListResp
	(*GamePagcorListDataResp)(nil),                            // 277: zerogamerpc.GamePagcorListDataResp
	(*GameProviderListReq)(nil),                               // 278: zerogamerpc.GameProviderListReq
	(*GameProviderListResp)(nil),                              // 279: zerogamerpc.GameProviderListResp
	(*GameProviderListDataResp)(nil),                          // 280: zerogamerpc.GameProviderListDataResp
	(*LoginUserCountChartReq)(nil),                            // 281: zerogamerpc.LoginUserCountChartReq
	(*LoginUserCountChartResp)(nil),                           // 282: zerogamerpc.LoginUserCountChartResp
	(*LoginUserCountChartDataResp)(nil),                       // 283: zerogamerpc.LoginUserCountChartDataResp
	(*BetGameListReq)(nil),                                    // 284: zerogamerpc.BetGameListReq
	(*BetGameListResp)(nil),                                   // 285: zerogamerpc.BetGameListResp
	(*BetGameListDataResp)(nil),                               // 286: zerogamerpc.BetGameListDataResp
	(*GetCascadeByGameGroupListReq)(nil),                      // 287: zerogamerpc.GetCascadeByGameGroupListReq
	(*GetCascadeByGameGroupListResp)(nil),                     // 288: zerogamerpc.GetCascadeByGameGroupListResp
	(*GetCascadeByGameGroupListDataResp)(nil),                 // 289: zerogamerpc.GetCascadeByGameGroupListDataResp
	(*LiveGameListReq)(nil),                                   // 290: zerogamerpc.LiveGameListReq
	(*LiveGameListResp)(nil),                                  // 291: zerogamerpc.LiveGameListResp
	(*LiveGameListData)(nil),                                  // 292: zerogamerpc.LiveGameListData
}
var file_zerogamerpc_proto_depIdxs = []int32{
	1,   // 0: zerogamerpc.BonusesRes.Bonuses:type_name -> zerogamerpc.BonusesData
	8,   // 1: zerogamerpc.SlotGameListReq.data:type_name -> zerogamerpc.SlotGameListDataReq
	10,  // 2: zerogamerpc.SlotGameListResp.data:type_name -> zerogamerpc.SlotGameData
	11,  // 3: zerogamerpc.SlotGameData.list:type_name -> zerogamerpc.SlotGameListDataResp
	12,  // 4: zerogamerpc.SlotGameListDataResp.gameStartParam:type_name -> zerogamerpc.GameStartParam
	15,  // 5: zerogamerpc.GameListResp.list:type_name -> zerogamerpc.GameListDataResp
	18,  // 6: zerogamerpc.AgentGameListResp.list:type_name -> zerogamerpc.AgentGameListDataResp
	21,  // 7: zerogamerpc.AgentGetGamesByCategoryResp.data:type_name -> zerogamerpc.AgentGetGamesByCategoryData
	24,  // 8: zerogamerpc.AgentGamePagcorListResp.list:type_name -> zerogamerpc.AgentGamePagcorListData
	27,  // 9: zerogamerpc.GameDetailsResp.data:type_name -> zerogamerpc.GameDetailsDataResp
	29,  // 10: zerogamerpc.BetListReq.data:type_name -> zerogamerpc.BetListDataReq
	31,  // 11: zerogamerpc.BetListResp.data:type_name -> zerogamerpc.BetListData
	32,  // 12: zerogamerpc.BetListData.list:type_name -> zerogamerpc.BetListDataItem
	35,  // 13: zerogamerpc.BetStatisticsResp.data:type_name -> zerogamerpc.BetStatisticsData
	40,  // 14: zerogamerpc.GetRankListResp.data:type_name -> zerogamerpc.RankListData
	43,  // 15: zerogamerpc.GetPlatformProfitResp.data:type_name -> zerogamerpc.GetPlatformProfitData
	45,  // 16: zerogamerpc.GetPlatformProfitListReq.data:type_name -> zerogamerpc.GetPlatformProfitListDataReq
	47,  // 17: zerogamerpc.GetPlatformProfitListResp.data:type_name -> zerogamerpc.GetPlatformProfitListData
	48,  // 18: zerogamerpc.GetPlatformProfitListData.list:type_name -> zerogamerpc.GetPlatformProfitListItem
	51,  // 19: zerogamerpc.PlatProfitAndBetCountChartResp.data:type_name -> zerogamerpc.PlatProfitAndBetCountChartData
	52,  // 20: zerogamerpc.PlatProfitAndBetCountChartData.betCountList:type_name -> zerogamerpc.ListChart
	52,  // 21: zerogamerpc.PlatProfitAndBetCountChartData.betUserCountList:type_name -> zerogamerpc.ListChart
	53,  // 22: zerogamerpc.PlatProfitAndBetCountChartData.profitList:type_name -> zerogamerpc.ListCoinChart
	56,  // 23: zerogamerpc.UserSummaryResp.data:type_name -> zerogamerpc.UserSummaryData
	58,  // 24: zerogamerpc.FreeGameRecordListReq.data:type_name -> zerogamerpc.FreeGameRecordListDataReq
	60,  // 25: zerogamerpc.FreeGameRecordListResp.data:type_name -> zerogamerpc.FreeGameRecordListData
	61,  // 26: zerogamerpc.FreeGameRecordListData.list:type_name -> zerogamerpc.FreeGameRecordListDataItem
	63,  // 27: zerogamerpc.CreateFreeGameReq.userData:type_name -> zerogamerpc.CreateFreeGameUserReq
	64,  // 28: zerogamerpc.CreateFreeGameReq.gameData:type_name -> zerogamerpc.CreateFreeGameDataReq
	69,  // 29: zerogamerpc.TradingManageListReq.data:type_name -> zerogamerpc.TradingManageListDataReq
	71,  // 30: zerogamerpc.TradingManageListResp.data:type_name -> zerogamerpc.TradingManageListDataResp
	72,  // 31: zerogamerpc.TradingManageListDataResp.list:type_name -> zerogamerpc.TradingManageListDataItem
	75,  // 32: zerogamerpc.StatisticsTradingResp.data:type_name -> zerogamerpc.StatisticsTradingData
	81,  // 33: zerogamerpc.ListSubGameReq.data:type_name -> zerogamerpc.ListSubGameDataReq
	83,  // 34: zerogamerpc.ListSubGameResp.data:type_name -> zerogamerpc.ListSubGameDataResp
	84,  // 35: zerogamerpc.ListSubGameDataResp.list:type_name -> zerogamerpc.ListSubGameDataItem
	85,  // 36: zerogamerpc.ListSubGameDataItem.maintenance:type_name -> zerogamerpc.ListSubGameDataItemMainTenance
	87,  // 37: zerogamerpc.SearchGameListReq.data:type_name -> zerogamerpc.SearchGameListDataReq
	89,  // 38: zerogamerpc.SearchGameListResp.data:type_name -> zerogamerpc.SearchGameListData
	90,  // 39: zerogamerpc.SearchGameListData.list:type_name -> zerogamerpc.SearchGameListDataItem
	93,  // 40: zerogamerpc.AdminBetStatisticsResponse.data:type_name -> zerogamerpc.AdminBetStatisticsItem
	98,  // 41: zerogamerpc.BetPageRequest.data:type_name -> zerogamerpc.BetPageRequestData
	97,  // 42: zerogamerpc.AgentBetStatisticsResponse.data:type_name -> zerogamerpc.AgentBetStatisticsItem
	100, // 43: zerogamerpc.BetPageResponse.data:type_name -> zerogamerpc.BetPageResponseData
	101, // 44: zerogamerpc.BetPageResponseData.list:type_name -> zerogamerpc.BetPageResponseDataItem
	107, // 45: zerogamerpc.BetPageResponseDataItem.result:type_name -> zerogamerpc.BetPageResult
	108, // 46: zerogamerpc.BetPageResponseDataItem.transferAmt:type_name -> zerogamerpc.BetPageTransferAmt
	109, // 47: zerogamerpc.BetPageResponseDataItem.info:type_name -> zerogamerpc.BetPageInfo
	110, // 48: zerogamerpc.BetPageResponseDataItem.betInfo:type_name -> zerogamerpc.BetPageBetInfo
	111, // 49: zerogamerpc.BetPageResponseDataItem.winInfo:type_name -> zerogamerpc.BetPageWinInfo
	112, // 50: zerogamerpc.BetPageResponseDataItem.flowCategoryType:type_name -> zerogamerpc.BetPageFlowCategoryType
	103, // 51: zerogamerpc.AgentBetPageRequest.data:type_name -> zerogamerpc.AgentBetPageRequestData
	105, // 52: zerogamerpc.AgentBetPageResponse.data:type_name -> zerogamerpc.AgentBetPageResponseData
	106, // 53: zerogamerpc.AgentBetPageResponseData.list:type_name -> zerogamerpc.AgentBetPageResponseDataItem
	107, // 54: zerogamerpc.AgentBetPageResponseDataItem.result:type_name -> zerogamerpc.BetPageResult
	108, // 55: zerogamerpc.AgentBetPageResponseDataItem.transferAmt:type_name -> zerogamerpc.BetPageTransferAmt
	109, // 56: zerogamerpc.AgentBetPageResponseDataItem.info:type_name -> zerogamerpc.BetPageInfo
	110, // 57: zerogamerpc.AgentBetPageResponseDataItem.betInfo:type_name -> zerogamerpc.BetPageBetInfo
	111, // 58: zerogamerpc.AgentBetPageResponseDataItem.winInfo:type_name -> zerogamerpc.BetPageWinInfo
	112, // 59: zerogamerpc.AgentBetPageResponseDataItem.flowCategoryType:type_name -> zerogamerpc.BetPageFlowCategoryType
	115, // 60: zerogamerpc.BetSummaryResponse.data:type_name -> zerogamerpc.BetSummaryDataItem
	118, // 61: zerogamerpc.AgentBetSummaryResponse.data:type_name -> zerogamerpc.AgentBetSummaryDataItem
	121, // 62: zerogamerpc.DailyReportStatisticsPlatCoinResp.data:type_name -> zerogamerpc.DailyReportStatisticsPlatCoinData
	124, // 63: zerogamerpc.AdminBetGameListResp.data:type_name -> zerogamerpc.AdminBetGameListData
	126, // 64: zerogamerpc.AgentListSubGameReq.data:type_name -> zerogamerpc.AgentListSubGameDataReq
	128, // 65: zerogamerpc.AgentListSubGameResp.data:type_name -> zerogamerpc.AgentListSubGameDataResp
	129, // 66: zerogamerpc.AgentListSubGameDataResp.list:type_name -> zerogamerpc.AgentListSubGameDataItem
	130, // 67: zerogamerpc.AgentListSubGameDataItem.maintenance:type_name -> zerogamerpc.AgentListSubGameDataItemMainTenance
	141, // 68: zerogamerpc.GetAllGameProviderResp.data:type_name -> zerogamerpc.GetAllGameSlotResponseData
	142, // 69: zerogamerpc.GetUpdateGameOperationUrlDetailResp.data:type_name -> zerogamerpc.GameOperationUrlData
	151, // 70: zerogamerpc.GetGameOperationUrlListReq.data:type_name -> zerogamerpc.GameOperationUrlListFilterData
	142, // 71: zerogamerpc.GetGameOperationUrlListResp.list:type_name -> zerogamerpc.GameOperationUrlData
	142, // 72: zerogamerpc.GetSportHotGameListResp.list:type_name -> zerogamerpc.GameOperationUrlData
	159, // 73: zerogamerpc.AddFrontClassifyInfoCmsReq.infoCmsList:type_name -> zerogamerpc.AddFrontClassifyInfoCmsDataReq
	162, // 74: zerogamerpc.FrontClassifyGameInfoPageReq.data:type_name -> zerogamerpc.FrontClassifyGameInfoPageDataReq
	164, // 75: zerogamerpc.FrontClassifyGameInfoPageResp.data:type_name -> zerogamerpc.FrontClassifyGameInfoPageDataResp
	165, // 76: zerogamerpc.FrontClassifyGameInfoPageDataResp.list:type_name -> zerogamerpc.FrontClassifyGameInfoPageDataItem
	167, // 77: zerogamerpc.GetMatchPageListReq.data:type_name -> zerogamerpc.GetMatchPageListDataReq
	169, // 78: zerogamerpc.GetMatchPageListResp.data:type_name -> zerogamerpc.GetMatchPageListDataResp
	170, // 79: zerogamerpc.GetMatchPageListDataResp.list:type_name -> zerogamerpc.GetMatchPageListDataItem
	173, // 80: zerogamerpc.GetRecommendMatchListResp.data:type_name -> zerogamerpc.GetRecommendMatchListDataResp
	176, // 81: zerogamerpc.GetRecomendPlayMatchListResp.data:type_name -> zerogamerpc.GetRecomendPlayMatchListDataResp
	179, // 82: zerogamerpc.GetFutureMatchCountResp.data:type_name -> zerogamerpc.GetFutureMatchCountDataResp
	182, // 83: zerogamerpc.GetMatchMarketGroupResp.data:type_name -> zerogamerpc.GetMatchMarketGroupDataResp
	184, // 84: zerogamerpc.GetMatchStatisticalReq.markets:type_name -> zerogamerpc.GetMatchStatisticalMarketsReq
	185, // 85: zerogamerpc.GetMatchStatisticalMarketsReq.markets:type_name -> zerogamerpc.GetMatchStatisticalMarkets2Req
	187, // 86: zerogamerpc.GetMatchStatisticalResp.data:type_name -> zerogamerpc.GetMatchStatisticalDataResp
	190, // 87: zerogamerpc.GetMatchDetailResp.data:type_name -> zerogamerpc.GetMatchDetailDataResp
	193, // 88: zerogamerpc.GetMatchLeaguesListResp.data:type_name -> zerogamerpc.GetMatchLeaguesListDataResp
	195, // 89: zerogamerpc.GetMatchResultPageListReq.data:type_name -> zerogamerpc.GetMatchResultPageListDataReq
	197, // 90: zerogamerpc.GetMatchResultPageListResp.data:type_name -> zerogamerpc.GetMatchResultPageListDataResp
	198, // 91: zerogamerpc.GetMatchResultPageListDataResp.list:type_name -> zerogamerpc.GetMatchResultPageListDataItem
	201, // 92: zerogamerpc.GetMatchResultInfoResp.data:type_name -> zerogamerpc.GetMatchResultInfoDataResp
	204, // 93: zerogamerpc.GetMatchByRecommendResp.data:type_name -> zerogamerpc.GetMatchByRecommendDataResp
	207, // 94: zerogamerpc.GetMatchLeaguesRecommentResp.data:type_name -> zerogamerpc.GetMatchLeaguesRecommentDataResp
	210, // 95: zerogamerpc.GetMatchTopRecommentResp.data:type_name -> zerogamerpc.GetMatchTopRecommentDataResp
	213, // 96: zerogamerpc.GetMatchIndexMainListResp.data:type_name -> zerogamerpc.GetMatchIndexMainListDataResp
	214, // 97: zerogamerpc.GetMatchIndexMainListDataResp.list:type_name -> zerogamerpc.GetMatchIndexMainListDataItemResp
	217, // 98: zerogamerpc.GetMatchIndexMarketsResp.data:type_name -> zerogamerpc.GetMatchIndexMarketsDataResp
	220, // 99: zerogamerpc.GetMatchIndexUrlResp.data:type_name -> zerogamerpc.GetMatchIndexUrlDataResp
	226, // 100: zerogamerpc.GetLiveAnchorListReq.data:type_name -> zerogamerpc.GetLiveAnchorListDataReq
	228, // 101: zerogamerpc.GetLiveAnchorListResp.data:type_name -> zerogamerpc.GetLiveAnchorListDataResp
	229, // 102: zerogamerpc.GetLiveAnchorListDataResp.list:type_name -> zerogamerpc.GetLiveAnchorListDataItemResp
	237, // 103: zerogamerpc.GetLiveRoomListReq.data:type_name -> zerogamerpc.GetLiveRoomListDataReq
	239, // 104: zerogamerpc.GetLiveRoomListResp.data:type_name -> zerogamerpc.GetLiveRoomListDataResp
	240, // 105: zerogamerpc.GetLiveRoomListDataResp.list:type_name -> zerogamerpc.GetLiveRoomListDataItemResp
	242, // 106: zerogamerpc.GetLiveRoomMatchListReq.data:type_name -> zerogamerpc.GetLiveRoomMatchListDataReq
	244, // 107: zerogamerpc.GetLiveRoomMatchListResp.data:type_name -> zerogamerpc.GetLiveRoomMatchListDataResp
	245, // 108: zerogamerpc.GetLiveRoomMatchListDataResp.list:type_name -> zerogamerpc.GetLiveRoomMatchListDataItemResp
	251, // 109: zerogamerpc.GetRecommendLiveRoomMatchListReq.data:type_name -> zerogamerpc.GetRecommendLiveRoomMatchLisDatatReq
	253, // 110: zerogamerpc.GetRecommendLiveRoomMatchListResp.data:type_name -> zerogamerpc.GetRecommendLiveRoomMatchListDataResp
	254, // 111: zerogamerpc.GetRecommendLiveRoomMatchListDataResp.list:type_name -> zerogamerpc.GetRecommendLiveRoomMatchListDataItemResp
	257, // 112: zerogamerpc.GetRecommentLiveRoomMatchDetailOptionResp.data:type_name -> zerogamerpc.GetRecommentLiveRoomMatchDetailOptionDataResp
	258, // 113: zerogamerpc.GetRecommentLiveRoomMatchDetailOptionDataResp.Options:type_name -> zerogamerpc.GetRecommentLiveRoomMatchDetailOptionDataItemResp
	261, // 114: zerogamerpc.GetRecommentLiveRoomMatchResultResp.data:type_name -> zerogamerpc.GetRecommentLiveRoomMatchResultDataResp
	266, // 115: zerogamerpc.PlatformGameListResp.data:type_name -> zerogamerpc.PlatformGameDataResp
	268, // 116: zerogamerpc.PlatformPlatListReq.data:type_name -> zerogamerpc.PlatformPlatListDataReq
	270, // 117: zerogamerpc.PlatformPlatListResp.data:type_name -> zerogamerpc.PlatformPlatListDataResp
	271, // 118: zerogamerpc.PlatformPlatListDataResp.list:type_name -> zerogamerpc.PlatformPlatListDataItemResp
	274, // 119: zerogamerpc.GetGamesByCategoryResp.data:type_name -> zerogamerpc.GetGamesByCategoryDataResp
	277, // 120: zerogamerpc.GamePagcorListResp.data:type_name -> zerogamerpc.GamePagcorListDataResp
	280, // 121: zerogamerpc.GameProviderListResp.data:type_name -> zerogamerpc.GameProviderListDataResp
	283, // 122: zerogamerpc.LoginUserCountChartResp.data:type_name -> zerogamerpc.LoginUserCountChartDataResp
	286, // 123: zerogamerpc.BetGameListResp.data:type_name -> zerogamerpc.BetGameListDataResp
	289, // 124: zerogamerpc.GetCascadeByGameGroupListResp.data:type_name -> zerogamerpc.GetCascadeByGameGroupListDataResp
	292, // 125: zerogamerpc.LiveGameListResp.data:type_name -> zerogamerpc.LiveGameListData
	246, // 126: zerogamerpc.Zerogamerpc.FbTourist:input_type -> zerogamerpc.FbTouristReq
	13,  // 127: zerogamerpc.Zerogamerpc.GameList:input_type -> zerogamerpc.GameListReq
	25,  // 128: zerogamerpc.Zerogamerpc.GameDetails:input_type -> zerogamerpc.GameDetailsReq
	3,   // 129: zerogamerpc.Zerogamerpc.startGame:input_type -> zerogamerpc.StartGameReq
	6,   // 130: zerogamerpc.Zerogamerpc.outGameForTransferWallet:input_type -> zerogamerpc.OutGameForTransferWalletReq
	0,   // 131: zerogamerpc.Zerogamerpc.postFrb:input_type -> zerogamerpc.BonusesReq
	7,   // 132: zerogamerpc.Zerogamerpc.slotGameList:input_type -> zerogamerpc.SlotGameListReq
	28,  // 133: zerogamerpc.Zerogamerpc.betList:input_type -> zerogamerpc.BetListReq
	33,  // 134: zerogamerpc.Zerogamerpc.betStatistics:input_type -> zerogamerpc.BetStatisticsReq
	36,  // 135: zerogamerpc.Zerogamerpc.gameFavorite:input_type -> zerogamerpc.GameFavoriteReq
	38,  // 136: zerogamerpc.Zerogamerpc.getRankList:input_type -> zerogamerpc.GetRankListReq
	41,  // 137: zerogamerpc.Zerogamerpc.getPlatformProfit:input_type -> zerogamerpc.GetPlatformProfitReq
	44,  // 138: zerogamerpc.Zerogamerpc.getPlatformProfitList:input_type -> zerogamerpc.GetPlatformProfitListReq
	49,  // 139: zerogamerpc.Zerogamerpc.platProfitAndBetCountChart:input_type -> zerogamerpc.PlatProfitAndBetCountChartReq
	54,  // 140: zerogamerpc.Zerogamerpc.userSummary:input_type -> zerogamerpc.UserSummaryReq
	68,  // 141: zerogamerpc.Zerogamerpc.tradingManageList:input_type -> zerogamerpc.TradingManageListReq
	73,  // 142: zerogamerpc.Zerogamerpc.statisticsTrading:input_type -> zerogamerpc.StatisticsTradingReq
	57,  // 143: zerogamerpc.Zerogamerpc.freeGameRecordList:input_type -> zerogamerpc.FreeGameRecordListReq
	62,  // 144: zerogamerpc.Zerogamerpc.createFreeGame:input_type -> zerogamerpc.CreateFreeGameReq
	66,  // 145: zerogamerpc.Zerogamerpc.deleteFreeGame:input_type -> zerogamerpc.DeleteFreeGameReq
	76,  // 146: zerogamerpc.Zerogamerpc.UpdateSubGame:input_type -> zerogamerpc.UpdateSubGameReq
	78,  // 147: zerogamerpc.Zerogamerpc.AddSubGame:input_type -> zerogamerpc.AddSubGameReq
	80,  // 148: zerogamerpc.Zerogamerpc.listSubGame:input_type -> zerogamerpc.ListSubGameReq
	139, // 149: zerogamerpc.Zerogamerpc.GetAllGameProvider:input_type -> zerogamerpc.GetAllGameProviderReq
	86,  // 150: zerogamerpc.Zerogamerpc.searchGameList:input_type -> zerogamerpc.SearchGameListReq
	91,  // 151: zerogamerpc.Zerogamerpc.AdminBetStatistics:input_type -> zerogamerpc.AdminBetStatisticsRequest
	94,  // 152: zerogamerpc.Zerogamerpc.BetPage:input_type -> zerogamerpc.BetPageRequest
	113, // 153: zerogamerpc.Zerogamerpc.BetSummary:input_type -> zerogamerpc.BetSummaryRequest
	116, // 154: zerogamerpc.Zerogamerpc.AgentBetSummary:input_type -> zerogamerpc.AgentBetSummaryRequest
	102, // 155: zerogamerpc.Zerogamerpc.AgentBetPage:input_type -> zerogamerpc.AgentBetPageRequest
	95,  // 156: zerogamerpc.Zerogamerpc.AgentBetStatistics:input_type -> zerogamerpc.AgentBetStatisticsRequest
	16,  // 157: zerogamerpc.Zerogamerpc.AgentGameList:input_type -> zerogamerpc.AgentGameListReq
	19,  // 158: zerogamerpc.Zerogamerpc.AgentGetGamesByCategory:input_type -> zerogamerpc.AgentGetGamesByCategoryReq
	22,  // 159: zerogamerpc.Zerogamerpc.AgentGamePagcorList:input_type -> zerogamerpc.AgentGamePagcorListReq
	125, // 160: zerogamerpc.Zerogamerpc.AgentListSubGame:input_type -> zerogamerpc.AgentListSubGameReq
	119, // 161: zerogamerpc.Zerogamerpc.DailyReportStatisticsPlatCoin:input_type -> zerogamerpc.DailyReportStatisticsPlatCoinReq
	122, // 162: zerogamerpc.Zerogamerpc.AdminBetGameList:input_type -> zerogamerpc.AdminBetGameListReq
	143, // 163: zerogamerpc.Zerogamerpc.addGameOperationUrl:input_type -> zerogamerpc.AddGameOperationUrlReq
	145, // 164: zerogamerpc.Zerogamerpc.delGameOperationUrl:input_type -> zerogamerpc.DelGameOperationUrlReq
	147, // 165: zerogamerpc.Zerogamerpc.updateGameOperationUrl:input_type -> zerogamerpc.UpdateGameOperationUrlReq
	149, // 166: zerogamerpc.Zerogamerpc.getUpdateGameOperationUrlDetail:input_type -> zerogamerpc.GetUpdateGameOperationUrlDetailReq
	152, // 167: zerogamerpc.Zerogamerpc.getGameOperationUrlList:input_type -> zerogamerpc.GetGameOperationUrlListReq
	154, // 168: zerogamerpc.Zerogamerpc.GetSportHotGameList:input_type -> zerogamerpc.GetSportHotGameListReq
	156, // 169: zerogamerpc.Zerogamerpc.startSportHotGame:input_type -> zerogamerpc.StartSportHotGameReq
	158, // 170: zerogamerpc.Zerogamerpc.AddFrontClassifyInfoCms:input_type -> zerogamerpc.AddFrontClassifyInfoCmsReq
	161, // 171: zerogamerpc.Zerogamerpc.frontClassifyGameInfoPage:input_type -> zerogamerpc.FrontClassifyGameInfoPageReq
	131, // 172: zerogamerpc.Zerogamerpc.ValidStakeCron:input_type -> zerogamerpc.ValidStakeCronReq
	133, // 173: zerogamerpc.Zerogamerpc.ValidStakeWeekCron:input_type -> zerogamerpc.ValidStakeWeekCronReq
	135, // 174: zerogamerpc.Zerogamerpc.ValidStakeMonthCron:input_type -> zerogamerpc.ValidStakeMonthCronReq
	137, // 175: zerogamerpc.Zerogamerpc.MonthlyReductionInCoding:input_type -> zerogamerpc.MonthlyReductionInCodingReq
	166, // 176: zerogamerpc.Zerogamerpc.getMatchPageList:input_type -> zerogamerpc.GetMatchPageListReq
	171, // 177: zerogamerpc.Zerogamerpc.getRecommendMatchList:input_type -> zerogamerpc.GetRecommendMatchListReq
	174, // 178: zerogamerpc.Zerogamerpc.getRecomendPlayMatchList:input_type -> zerogamerpc.GetRecomendPlayMatchListReq
	177, // 179: zerogamerpc.Zerogamerpc.getFutureMatchCount:input_type -> zerogamerpc.GetFutureMatchCountReq
	180, // 180: zerogamerpc.Zerogamerpc.getMatchMarketGroup:input_type -> zerogamerpc.GetMatchMarketGroupReq
	183, // 181: zerogamerpc.Zerogamerpc.getMatchStatistical:input_type -> zerogamerpc.GetMatchStatisticalReq
	188, // 182: zerogamerpc.Zerogamerpc.getMatchDetail:input_type -> zerogamerpc.GetMatchDetailReq
	191, // 183: zerogamerpc.Zerogamerpc.getMatchLeaguesList:input_type -> zerogamerpc.GetMatchLeaguesListReq
	194, // 184: zerogamerpc.Zerogamerpc.getMatchResultPageList:input_type -> zerogamerpc.GetMatchResultPageListReq
	199, // 185: zerogamerpc.Zerogamerpc.getMatchResultInfo:input_type -> zerogamerpc.GetMatchResultInfoReq
	202, // 186: zerogamerpc.Zerogamerpc.getMatchByRecommend:input_type -> zerogamerpc.GetMatchByRecommendReq
	205, // 187: zerogamerpc.Zerogamerpc.getMatchLeaguesRecomment:input_type -> zerogamerpc.GetMatchLeaguesRecommentReq
	208, // 188: zerogamerpc.Zerogamerpc.getMatchTopRecomment:input_type -> zerogamerpc.GetMatchTopRecommentReq
	211, // 189: zerogamerpc.Zerogamerpc.getMatchIndexMainList:input_type -> zerogamerpc.GetMatchIndexMainListReq
	215, // 190: zerogamerpc.Zerogamerpc.getMatchIndexMarkets:input_type -> zerogamerpc.GetMatchIndexMarketsReq
	218, // 191: zerogamerpc.Zerogamerpc.getMatchIndexUrl:input_type -> zerogamerpc.GetMatchIndexUrlReq
	221, // 192: zerogamerpc.Zerogamerpc.saveLiveAnchor:input_type -> zerogamerpc.SaveLiveAnchorReq
	223, // 193: zerogamerpc.Zerogamerpc.deleteLiveAnchor:input_type -> zerogamerpc.DeleteLiveAnchorReq
	225, // 194: zerogamerpc.Zerogamerpc.getLiveAnchorList:input_type -> zerogamerpc.GetLiveAnchorListReq
	230, // 195: zerogamerpc.Zerogamerpc.saveLiveRoom:input_type -> zerogamerpc.SaveLiveRoomReq
	232, // 196: zerogamerpc.Zerogamerpc.deleteLiveRoom:input_type -> zerogamerpc.DeleteLiveRoomReq
	234, // 197: zerogamerpc.Zerogamerpc.downLiveRoom:input_type -> zerogamerpc.DownLiveRoomReq
	236, // 198: zerogamerpc.Zerogamerpc.getLiveRoomList:input_type -> zerogamerpc.GetLiveRoomListReq
	241, // 199: zerogamerpc.Zerogamerpc.getLiveRoomMatchList:input_type -> zerogamerpc.GetLiveRoomMatchListReq
	248, // 200: zerogamerpc.Zerogamerpc.liveRoomCallBack:input_type -> zerogamerpc.LiveRoomCallBackReq
	250, // 201: zerogamerpc.Zerogamerpc.getRecommendLiveRoomMatchList:input_type -> zerogamerpc.GetRecommendLiveRoomMatchListReq
	255, // 202: zerogamerpc.Zerogamerpc.getRecommentLiveRoomMatchDetailOption:input_type -> zerogamerpc.GetRecommentLiveRoomMatchDetailOptionReq
	259, // 203: zerogamerpc.Zerogamerpc.getRecommentLiveRoomMatchResult:input_type -> zerogamerpc.GetRecommentLiveRoomMatchResultReq
	262, // 204: zerogamerpc.Zerogamerpc.SaBaTourist:input_type -> zerogamerpc.SaBaTouristReq
	264, // 205: zerogamerpc.Zerogamerpc.platformGameList:input_type -> zerogamerpc.PlatformGameListReq
	267, // 206: zerogamerpc.Zerogamerpc.platformPlatList:input_type -> zerogamerpc.PlatformPlatListReq
	272, // 207: zerogamerpc.Zerogamerpc.getGamesByCategory:input_type -> zerogamerpc.GetGamesByCategoryReq
	275, // 208: zerogamerpc.Zerogamerpc.gamePagcorList:input_type -> zerogamerpc.GamePagcorListReq
	278, // 209: zerogamerpc.Zerogamerpc.gameProviderList:input_type -> zerogamerpc.GameProviderListReq
	281, // 210: zerogamerpc.Zerogamerpc.loginUserCountChart:input_type -> zerogamerpc.LoginUserCountChartReq
	284, // 211: zerogamerpc.Zerogamerpc.betGameList:input_type -> zerogamerpc.BetGameListReq
	287, // 212: zerogamerpc.Zerogamerpc.getCascadeByGameGroupList:input_type -> zerogamerpc.GetCascadeByGameGroupListReq
	290, // 213: zerogamerpc.Zerogamerpc.liveGameList:input_type -> zerogamerpc.LiveGameListReq
	247, // 214: zerogamerpc.Zerogamerpc.FbTourist:output_type -> zerogamerpc.FbTouristResp
	14,  // 215: zerogamerpc.Zerogamerpc.GameList:output_type -> zerogamerpc.GameListResp
	26,  // 216: zerogamerpc.Zerogamerpc.GameDetails:output_type -> zerogamerpc.GameDetailsResp
	4,   // 217: zerogamerpc.Zerogamerpc.startGame:output_type -> zerogamerpc.StartGameResp
	5,   // 218: zerogamerpc.Zerogamerpc.outGameForTransferWallet:output_type -> zerogamerpc.OutGameForTransferWalletResp
	2,   // 219: zerogamerpc.Zerogamerpc.postFrb:output_type -> zerogamerpc.BonusesRes
	9,   // 220: zerogamerpc.Zerogamerpc.slotGameList:output_type -> zerogamerpc.SlotGameListResp
	30,  // 221: zerogamerpc.Zerogamerpc.betList:output_type -> zerogamerpc.BetListResp
	34,  // 222: zerogamerpc.Zerogamerpc.betStatistics:output_type -> zerogamerpc.BetStatisticsResp
	37,  // 223: zerogamerpc.Zerogamerpc.gameFavorite:output_type -> zerogamerpc.GameFavoriteResp
	39,  // 224: zerogamerpc.Zerogamerpc.getRankList:output_type -> zerogamerpc.GetRankListResp
	42,  // 225: zerogamerpc.Zerogamerpc.getPlatformProfit:output_type -> zerogamerpc.GetPlatformProfitResp
	46,  // 226: zerogamerpc.Zerogamerpc.getPlatformProfitList:output_type -> zerogamerpc.GetPlatformProfitListResp
	50,  // 227: zerogamerpc.Zerogamerpc.platProfitAndBetCountChart:output_type -> zerogamerpc.PlatProfitAndBetCountChartResp
	55,  // 228: zerogamerpc.Zerogamerpc.userSummary:output_type -> zerogamerpc.UserSummaryResp
	70,  // 229: zerogamerpc.Zerogamerpc.tradingManageList:output_type -> zerogamerpc.TradingManageListResp
	74,  // 230: zerogamerpc.Zerogamerpc.statisticsTrading:output_type -> zerogamerpc.StatisticsTradingResp
	59,  // 231: zerogamerpc.Zerogamerpc.freeGameRecordList:output_type -> zerogamerpc.FreeGameRecordListResp
	65,  // 232: zerogamerpc.Zerogamerpc.createFreeGame:output_type -> zerogamerpc.CreateFreeGameResp
	67,  // 233: zerogamerpc.Zerogamerpc.deleteFreeGame:output_type -> zerogamerpc.DeleteFreeGameResp
	77,  // 234: zerogamerpc.Zerogamerpc.UpdateSubGame:output_type -> zerogamerpc.UpdateSubGameResp
	79,  // 235: zerogamerpc.Zerogamerpc.AddSubGame:output_type -> zerogamerpc.AddSubGameResp
	82,  // 236: zerogamerpc.Zerogamerpc.listSubGame:output_type -> zerogamerpc.ListSubGameResp
	140, // 237: zerogamerpc.Zerogamerpc.GetAllGameProvider:output_type -> zerogamerpc.GetAllGameProviderResp
	88,  // 238: zerogamerpc.Zerogamerpc.searchGameList:output_type -> zerogamerpc.SearchGameListResp
	92,  // 239: zerogamerpc.Zerogamerpc.AdminBetStatistics:output_type -> zerogamerpc.AdminBetStatisticsResponse
	99,  // 240: zerogamerpc.Zerogamerpc.BetPage:output_type -> zerogamerpc.BetPageResponse
	114, // 241: zerogamerpc.Zerogamerpc.BetSummary:output_type -> zerogamerpc.BetSummaryResponse
	117, // 242: zerogamerpc.Zerogamerpc.AgentBetSummary:output_type -> zerogamerpc.AgentBetSummaryResponse
	104, // 243: zerogamerpc.Zerogamerpc.AgentBetPage:output_type -> zerogamerpc.AgentBetPageResponse
	96,  // 244: zerogamerpc.Zerogamerpc.AgentBetStatistics:output_type -> zerogamerpc.AgentBetStatisticsResponse
	17,  // 245: zerogamerpc.Zerogamerpc.AgentGameList:output_type -> zerogamerpc.AgentGameListResp
	20,  // 246: zerogamerpc.Zerogamerpc.AgentGetGamesByCategory:output_type -> zerogamerpc.AgentGetGamesByCategoryResp
	23,  // 247: zerogamerpc.Zerogamerpc.AgentGamePagcorList:output_type -> zerogamerpc.AgentGamePagcorListResp
	127, // 248: zerogamerpc.Zerogamerpc.AgentListSubGame:output_type -> zerogamerpc.AgentListSubGameResp
	120, // 249: zerogamerpc.Zerogamerpc.DailyReportStatisticsPlatCoin:output_type -> zerogamerpc.DailyReportStatisticsPlatCoinResp
	123, // 250: zerogamerpc.Zerogamerpc.AdminBetGameList:output_type -> zerogamerpc.AdminBetGameListResp
	144, // 251: zerogamerpc.Zerogamerpc.addGameOperationUrl:output_type -> zerogamerpc.AddGameOperationUrlResp
	146, // 252: zerogamerpc.Zerogamerpc.delGameOperationUrl:output_type -> zerogamerpc.DelGameOperationUrlResp
	148, // 253: zerogamerpc.Zerogamerpc.updateGameOperationUrl:output_type -> zerogamerpc.UpdateGameOperationUrlResp
	150, // 254: zerogamerpc.Zerogamerpc.getUpdateGameOperationUrlDetail:output_type -> zerogamerpc.GetUpdateGameOperationUrlDetailResp
	153, // 255: zerogamerpc.Zerogamerpc.getGameOperationUrlList:output_type -> zerogamerpc.GetGameOperationUrlListResp
	155, // 256: zerogamerpc.Zerogamerpc.GetSportHotGameList:output_type -> zerogamerpc.GetSportHotGameListResp
	157, // 257: zerogamerpc.Zerogamerpc.startSportHotGame:output_type -> zerogamerpc.StartSportHotGameResp
	160, // 258: zerogamerpc.Zerogamerpc.AddFrontClassifyInfoCms:output_type -> zerogamerpc.AddFrontClassifyInfoCmsResp
	163, // 259: zerogamerpc.Zerogamerpc.frontClassifyGameInfoPage:output_type -> zerogamerpc.FrontClassifyGameInfoPageResp
	132, // 260: zerogamerpc.Zerogamerpc.ValidStakeCron:output_type -> zerogamerpc.ValidStakeCronResp
	134, // 261: zerogamerpc.Zerogamerpc.ValidStakeWeekCron:output_type -> zerogamerpc.ValidStakeWeekCronResp
	136, // 262: zerogamerpc.Zerogamerpc.ValidStakeMonthCron:output_type -> zerogamerpc.ValidStakeMonthCronResp
	138, // 263: zerogamerpc.Zerogamerpc.MonthlyReductionInCoding:output_type -> zerogamerpc.MonthlyReductionInCodingResp
	168, // 264: zerogamerpc.Zerogamerpc.getMatchPageList:output_type -> zerogamerpc.GetMatchPageListResp
	172, // 265: zerogamerpc.Zerogamerpc.getRecommendMatchList:output_type -> zerogamerpc.GetRecommendMatchListResp
	175, // 266: zerogamerpc.Zerogamerpc.getRecomendPlayMatchList:output_type -> zerogamerpc.GetRecomendPlayMatchListResp
	178, // 267: zerogamerpc.Zerogamerpc.getFutureMatchCount:output_type -> zerogamerpc.GetFutureMatchCountResp
	181, // 268: zerogamerpc.Zerogamerpc.getMatchMarketGroup:output_type -> zerogamerpc.GetMatchMarketGroupResp
	186, // 269: zerogamerpc.Zerogamerpc.getMatchStatistical:output_type -> zerogamerpc.GetMatchStatisticalResp
	189, // 270: zerogamerpc.Zerogamerpc.getMatchDetail:output_type -> zerogamerpc.GetMatchDetailResp
	192, // 271: zerogamerpc.Zerogamerpc.getMatchLeaguesList:output_type -> zerogamerpc.GetMatchLeaguesListResp
	196, // 272: zerogamerpc.Zerogamerpc.getMatchResultPageList:output_type -> zerogamerpc.GetMatchResultPageListResp
	200, // 273: zerogamerpc.Zerogamerpc.getMatchResultInfo:output_type -> zerogamerpc.GetMatchResultInfoResp
	203, // 274: zerogamerpc.Zerogamerpc.getMatchByRecommend:output_type -> zerogamerpc.GetMatchByRecommendResp
	206, // 275: zerogamerpc.Zerogamerpc.getMatchLeaguesRecomment:output_type -> zerogamerpc.GetMatchLeaguesRecommentResp
	209, // 276: zerogamerpc.Zerogamerpc.getMatchTopRecomment:output_type -> zerogamerpc.GetMatchTopRecommentResp
	212, // 277: zerogamerpc.Zerogamerpc.getMatchIndexMainList:output_type -> zerogamerpc.GetMatchIndexMainListResp
	216, // 278: zerogamerpc.Zerogamerpc.getMatchIndexMarkets:output_type -> zerogamerpc.GetMatchIndexMarketsResp
	219, // 279: zerogamerpc.Zerogamerpc.getMatchIndexUrl:output_type -> zerogamerpc.GetMatchIndexUrlResp
	222, // 280: zerogamerpc.Zerogamerpc.saveLiveAnchor:output_type -> zerogamerpc.SaveLiveAnchorResp
	224, // 281: zerogamerpc.Zerogamerpc.deleteLiveAnchor:output_type -> zerogamerpc.DeleteLiveAnchorResp
	227, // 282: zerogamerpc.Zerogamerpc.getLiveAnchorList:output_type -> zerogamerpc.GetLiveAnchorListResp
	231, // 283: zerogamerpc.Zerogamerpc.saveLiveRoom:output_type -> zerogamerpc.SaveLiveRoomResp
	233, // 284: zerogamerpc.Zerogamerpc.deleteLiveRoom:output_type -> zerogamerpc.DeleteLiveRoomResp
	235, // 285: zerogamerpc.Zerogamerpc.downLiveRoom:output_type -> zerogamerpc.DownLiveRoomResp
	238, // 286: zerogamerpc.Zerogamerpc.getLiveRoomList:output_type -> zerogamerpc.GetLiveRoomListResp
	243, // 287: zerogamerpc.Zerogamerpc.getLiveRoomMatchList:output_type -> zerogamerpc.GetLiveRoomMatchListResp
	249, // 288: zerogamerpc.Zerogamerpc.liveRoomCallBack:output_type -> zerogamerpc.LiveRoomCallBackResp
	252, // 289: zerogamerpc.Zerogamerpc.getRecommendLiveRoomMatchList:output_type -> zerogamerpc.GetRecommendLiveRoomMatchListResp
	256, // 290: zerogamerpc.Zerogamerpc.getRecommentLiveRoomMatchDetailOption:output_type -> zerogamerpc.GetRecommentLiveRoomMatchDetailOptionResp
	260, // 291: zerogamerpc.Zerogamerpc.getRecommentLiveRoomMatchResult:output_type -> zerogamerpc.GetRecommentLiveRoomMatchResultResp
	263, // 292: zerogamerpc.Zerogamerpc.SaBaTourist:output_type -> zerogamerpc.SaBaTouristResp
	265, // 293: zerogamerpc.Zerogamerpc.platformGameList:output_type -> zerogamerpc.PlatformGameListResp
	269, // 294: zerogamerpc.Zerogamerpc.platformPlatList:output_type -> zerogamerpc.PlatformPlatListResp
	273, // 295: zerogamerpc.Zerogamerpc.getGamesByCategory:output_type -> zerogamerpc.GetGamesByCategoryResp
	276, // 296: zerogamerpc.Zerogamerpc.gamePagcorList:output_type -> zerogamerpc.GamePagcorListResp
	279, // 297: zerogamerpc.Zerogamerpc.gameProviderList:output_type -> zerogamerpc.GameProviderListResp
	282, // 298: zerogamerpc.Zerogamerpc.loginUserCountChart:output_type -> zerogamerpc.LoginUserCountChartResp
	285, // 299: zerogamerpc.Zerogamerpc.betGameList:output_type -> zerogamerpc.BetGameListResp
	288, // 300: zerogamerpc.Zerogamerpc.getCascadeByGameGroupList:output_type -> zerogamerpc.GetCascadeByGameGroupListResp
	291, // 301: zerogamerpc.Zerogamerpc.liveGameList:output_type -> zerogamerpc.LiveGameListResp
	214, // [214:302] is the sub-list for method output_type
	126, // [126:214] is the sub-list for method input_type
	126, // [126:126] is the sub-list for extension type_name
	126, // [126:126] is the sub-list for extension extendee
	0,   // [0:126] is the sub-list for field type_name
}

func init() { file_zerogamerpc_proto_init() }
func file_zerogamerpc_proto_init() {
	if File_zerogamerpc_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_zerogamerpc_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BonusesReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BonusesData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BonusesRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartGameReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartGameResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OutGameForTransferWalletResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OutGameForTransferWalletReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SlotGameListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SlotGameListDataReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SlotGameListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SlotGameData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SlotGameListDataResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameStartParam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameListDataResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentGameListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentGameListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentGameListDataResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentGetGamesByCategoryReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentGetGamesByCategoryResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentGetGamesByCategoryData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentGamePagcorListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentGamePagcorListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentGamePagcorListData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameDetailsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameDetailsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameDetailsDataResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BetListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BetListDataReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BetListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BetListData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BetListDataItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BetStatisticsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BetStatisticsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BetStatisticsData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameFavoriteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameFavoriteResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRankListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRankListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RankListData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPlatformProfitReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPlatformProfitResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPlatformProfitData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPlatformProfitListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPlatformProfitListDataReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPlatformProfitListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPlatformProfitListData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPlatformProfitListItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlatProfitAndBetCountChartReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlatProfitAndBetCountChartResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlatProfitAndBetCountChartData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListChart); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCoinChart); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserSummaryReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserSummaryResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserSummaryData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FreeGameRecordListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FreeGameRecordListDataReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FreeGameRecordListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FreeGameRecordListData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FreeGameRecordListDataItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateFreeGameReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateFreeGameUserReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateFreeGameDataReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateFreeGameResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteFreeGameReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteFreeGameResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TradingManageListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TradingManageListDataReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TradingManageListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TradingManageListDataResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TradingManageListDataItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatisticsTradingReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatisticsTradingResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatisticsTradingData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[76].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateSubGameReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[77].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateSubGameResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[78].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddSubGameReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[79].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddSubGameResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[80].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSubGameReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[81].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSubGameDataReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[82].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSubGameResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[83].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSubGameDataResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[84].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSubGameDataItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[85].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSubGameDataItemMainTenance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[86].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchGameListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[87].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchGameListDataReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[88].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchGameListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[89].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchGameListData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[90].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchGameListDataItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[91].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminBetStatisticsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[92].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminBetStatisticsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[93].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminBetStatisticsItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[94].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BetPageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[95].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentBetStatisticsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[96].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentBetStatisticsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[97].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentBetStatisticsItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[98].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BetPageRequestData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[99].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BetPageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[100].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BetPageResponseData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[101].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BetPageResponseDataItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[102].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentBetPageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[103].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentBetPageRequestData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[104].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentBetPageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[105].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentBetPageResponseData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[106].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentBetPageResponseDataItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[107].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BetPageResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[108].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BetPageTransferAmt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[109].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BetPageInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[110].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BetPageBetInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[111].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BetPageWinInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[112].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BetPageFlowCategoryType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[113].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BetSummaryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[114].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BetSummaryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[115].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BetSummaryDataItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[116].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentBetSummaryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[117].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentBetSummaryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[118].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentBetSummaryDataItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[119].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DailyReportStatisticsPlatCoinReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[120].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DailyReportStatisticsPlatCoinResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[121].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DailyReportStatisticsPlatCoinData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[122].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminBetGameListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[123].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminBetGameListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[124].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminBetGameListData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[125].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentListSubGameReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[126].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentListSubGameDataReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[127].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentListSubGameResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[128].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentListSubGameDataResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[129].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentListSubGameDataItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[130].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentListSubGameDataItemMainTenance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[131].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidStakeCronReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[132].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidStakeCronResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[133].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidStakeWeekCronReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[134].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidStakeWeekCronResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[135].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidStakeMonthCronReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[136].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidStakeMonthCronResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[137].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MonthlyReductionInCodingReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[138].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MonthlyReductionInCodingResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[139].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllGameProviderReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[140].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllGameProviderResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[141].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllGameSlotResponseData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[142].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameOperationUrlData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[143].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddGameOperationUrlReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[144].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddGameOperationUrlResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[145].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelGameOperationUrlReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[146].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelGameOperationUrlResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[147].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateGameOperationUrlReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[148].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateGameOperationUrlResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[149].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUpdateGameOperationUrlDetailReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[150].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUpdateGameOperationUrlDetailResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[151].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameOperationUrlListFilterData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[152].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGameOperationUrlListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[153].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGameOperationUrlListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[154].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSportHotGameListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[155].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSportHotGameListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[156].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartSportHotGameReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[157].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartSportHotGameResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[158].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddFrontClassifyInfoCmsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[159].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddFrontClassifyInfoCmsDataReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[160].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddFrontClassifyInfoCmsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[161].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FrontClassifyGameInfoPageReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[162].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FrontClassifyGameInfoPageDataReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[163].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FrontClassifyGameInfoPageResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[164].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FrontClassifyGameInfoPageDataResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[165].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FrontClassifyGameInfoPageDataItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[166].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMatchPageListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[167].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMatchPageListDataReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[168].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMatchPageListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[169].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMatchPageListDataResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[170].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMatchPageListDataItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[171].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRecommendMatchListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[172].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRecommendMatchListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[173].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRecommendMatchListDataResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[174].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRecomendPlayMatchListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[175].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRecomendPlayMatchListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[176].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRecomendPlayMatchListDataResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[177].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFutureMatchCountReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[178].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFutureMatchCountResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[179].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFutureMatchCountDataResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[180].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMatchMarketGroupReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[181].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMatchMarketGroupResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[182].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMatchMarketGroupDataResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[183].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMatchStatisticalReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[184].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMatchStatisticalMarketsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[185].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMatchStatisticalMarkets2Req); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[186].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMatchStatisticalResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[187].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMatchStatisticalDataResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[188].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMatchDetailReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[189].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMatchDetailResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[190].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMatchDetailDataResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[191].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMatchLeaguesListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[192].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMatchLeaguesListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[193].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMatchLeaguesListDataResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[194].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMatchResultPageListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[195].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMatchResultPageListDataReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[196].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMatchResultPageListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[197].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMatchResultPageListDataResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[198].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMatchResultPageListDataItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[199].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMatchResultInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[200].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMatchResultInfoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[201].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMatchResultInfoDataResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[202].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMatchByRecommendReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[203].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMatchByRecommendResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[204].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMatchByRecommendDataResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[205].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMatchLeaguesRecommentReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[206].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMatchLeaguesRecommentResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[207].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMatchLeaguesRecommentDataResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[208].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMatchTopRecommentReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[209].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMatchTopRecommentResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[210].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMatchTopRecommentDataResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[211].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMatchIndexMainListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[212].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMatchIndexMainListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[213].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMatchIndexMainListDataResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[214].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMatchIndexMainListDataItemResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[215].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMatchIndexMarketsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[216].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMatchIndexMarketsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[217].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMatchIndexMarketsDataResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[218].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMatchIndexUrlReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[219].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMatchIndexUrlResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[220].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMatchIndexUrlDataResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[221].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaveLiveAnchorReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[222].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaveLiveAnchorResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[223].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteLiveAnchorReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[224].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteLiveAnchorResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[225].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLiveAnchorListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[226].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLiveAnchorListDataReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[227].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLiveAnchorListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[228].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLiveAnchorListDataResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[229].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLiveAnchorListDataItemResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[230].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaveLiveRoomReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[231].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaveLiveRoomResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[232].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteLiveRoomReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[233].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteLiveRoomResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[234].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DownLiveRoomReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[235].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DownLiveRoomResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[236].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLiveRoomListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[237].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLiveRoomListDataReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[238].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLiveRoomListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[239].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLiveRoomListDataResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[240].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLiveRoomListDataItemResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[241].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLiveRoomMatchListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[242].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLiveRoomMatchListDataReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[243].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLiveRoomMatchListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[244].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLiveRoomMatchListDataResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[245].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLiveRoomMatchListDataItemResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[246].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FbTouristReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[247].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FbTouristResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[248].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LiveRoomCallBackReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[249].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LiveRoomCallBackResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[250].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRecommendLiveRoomMatchListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[251].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRecommendLiveRoomMatchLisDatatReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[252].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRecommendLiveRoomMatchListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[253].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRecommendLiveRoomMatchListDataResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[254].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRecommendLiveRoomMatchListDataItemResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[255].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRecommentLiveRoomMatchDetailOptionReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[256].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRecommentLiveRoomMatchDetailOptionResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[257].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRecommentLiveRoomMatchDetailOptionDataResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[258].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRecommentLiveRoomMatchDetailOptionDataItemResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[259].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRecommentLiveRoomMatchResultReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[260].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRecommentLiveRoomMatchResultResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[261].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRecommentLiveRoomMatchResultDataResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[262].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaBaTouristReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[263].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaBaTouristResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[264].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlatformGameListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[265].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlatformGameListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[266].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlatformGameDataResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[267].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlatformPlatListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[268].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlatformPlatListDataReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[269].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlatformPlatListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[270].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlatformPlatListDataResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[271].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlatformPlatListDataItemResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[272].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGamesByCategoryReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[273].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGamesByCategoryResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[274].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGamesByCategoryDataResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[275].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GamePagcorListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[276].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GamePagcorListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[277].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GamePagcorListDataResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[278].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameProviderListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[279].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameProviderListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[280].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameProviderListDataResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[281].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginUserCountChartReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[282].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginUserCountChartResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[283].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginUserCountChartDataResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[284].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BetGameListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[285].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BetGameListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[286].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BetGameListDataResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[287].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCascadeByGameGroupListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[288].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCascadeByGameGroupListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[289].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCascadeByGameGroupListDataResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[290].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LiveGameListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[291].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LiveGameListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zerogamerpc_proto_msgTypes[292].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LiveGameListData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_zerogamerpc_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   293,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_zerogamerpc_proto_goTypes,
		DependencyIndexes: file_zerogamerpc_proto_depIdxs,
		MessageInfos:      file_zerogamerpc_proto_msgTypes,
	}.Build()
	File_zerogamerpc_proto = out.File
	file_zerogamerpc_proto_rawDesc = nil
	file_zerogamerpc_proto_goTypes = nil
	file_zerogamerpc_proto_depIdxs = nil
}
