// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.1
// 	protoc        v3.19.4
// source: cmsrpc.proto

package cmsrpc

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type BannerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32                 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string                `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data []*BannerResponseItem `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *BannerResponse) Reset() {
	*x = BannerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BannerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BannerResponse) ProtoMessage() {}

func (x *BannerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BannerResponse.ProtoReflect.Descriptor instead.
func (*BannerResponse) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{0}
}

func (x *BannerResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *BannerResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *BannerResponse) GetData() []*BannerResponseItem {
	if x != nil {
		return x.Data
	}
	return nil
}

type GameResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32           `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string          `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data []*GameCategory `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *GameResponse) Reset() {
	*x = GameResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameResponse) ProtoMessage() {}

func (x *GameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameResponse.ProtoReflect.Descriptor instead.
func (*GameResponse) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{1}
}

func (x *GameResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GameResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GameResponse) GetData() []*GameCategory {
	if x != nil {
		return x.Data
	}
	return nil
}

type GameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sign bool `protobuf:"varint,1,opt,name=sign,proto3" json:"sign,omitempty"`
}

func (x *GameRequest) Reset() {
	*x = GameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameRequest) ProtoMessage() {}

func (x *GameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameRequest.ProtoReflect.Descriptor instead.
func (*GameRequest) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{2}
}

func (x *GameRequest) GetSign() bool {
	if x != nil {
		return x.Sign
	}
	return false
}

type PromotionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32             `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string            `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data []*PromotionsData `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *PromotionsResponse) Reset() {
	*x = PromotionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PromotionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PromotionsResponse) ProtoMessage() {}

func (x *PromotionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PromotionsResponse.ProtoReflect.Descriptor instead.
func (*PromotionsResponse) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{3}
}

func (x *PromotionsResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *PromotionsResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *PromotionsResponse) GetData() []*PromotionsData {
	if x != nil {
		return x.Data
	}
	return nil
}

// help center pageHelpType
type HelpRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current int32 `protobuf:"varint,1,opt,name=current,proto3" json:"current,omitempty"`
	Size    int32 `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	Sign    bool  `protobuf:"varint,3,opt,name=sign,proto3" json:"sign,omitempty"`
}

func (x *HelpRequest) Reset() {
	*x = HelpRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HelpRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HelpRequest) ProtoMessage() {}

func (x *HelpRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HelpRequest.ProtoReflect.Descriptor instead.
func (*HelpRequest) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{4}
}

func (x *HelpRequest) GetCurrent() int32 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *HelpRequest) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *HelpRequest) GetSign() bool {
	if x != nil {
		return x.Sign
	}
	return false
}

type SaveHelpTypeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Language string `protobuf:"bytes,1,opt,name=language,proto3" json:"language,omitempty"`
	TypeName string `protobuf:"bytes,2,opt,name=typeName,proto3" json:"typeName,omitempty"`
	ImageUrl string `protobuf:"bytes,3,opt,name=imageUrl,proto3" json:"imageUrl,omitempty"`
	Sort     int64  `protobuf:"varint,4,opt,name=sort,proto3" json:"sort,omitempty"`
	Status   int64  `protobuf:"varint,5,opt,name=status,proto3" json:"status,omitempty"`
	Id       int64  `protobuf:"varint,6,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *SaveHelpTypeRequest) Reset() {
	*x = SaveHelpTypeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveHelpTypeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveHelpTypeRequest) ProtoMessage() {}

func (x *SaveHelpTypeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveHelpTypeRequest.ProtoReflect.Descriptor instead.
func (*SaveHelpTypeRequest) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{5}
}

func (x *SaveHelpTypeRequest) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *SaveHelpTypeRequest) GetTypeName() string {
	if x != nil {
		return x.TypeName
	}
	return ""
}

func (x *SaveHelpTypeRequest) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

func (x *SaveHelpTypeRequest) GetSort() int64 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *SaveHelpTypeRequest) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *SaveHelpTypeRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type SaveHelpTypeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data bool   `protobuf:"varint,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *SaveHelpTypeResponse) Reset() {
	*x = SaveHelpTypeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveHelpTypeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveHelpTypeResponse) ProtoMessage() {}

func (x *SaveHelpTypeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveHelpTypeResponse.ProtoReflect.Descriptor instead.
func (*SaveHelpTypeResponse) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{6}
}

func (x *SaveHelpTypeResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *SaveHelpTypeResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *SaveHelpTypeResponse) GetData() bool {
	if x != nil {
		return x.Data
	}
	return false
}

type GetHelpTypeListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetHelpTypeListRequest) Reset() {
	*x = GetHelpTypeListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetHelpTypeListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHelpTypeListRequest) ProtoMessage() {}

func (x *GetHelpTypeListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHelpTypeListRequest.ProtoReflect.Descriptor instead.
func (*GetHelpTypeListRequest) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{7}
}

type GetHelpTypeListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32                          `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string                         `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data []*GetHelpTypeListItemResponse `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *GetHelpTypeListResponse) Reset() {
	*x = GetHelpTypeListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetHelpTypeListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHelpTypeListResponse) ProtoMessage() {}

func (x *GetHelpTypeListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHelpTypeListResponse.ProtoReflect.Descriptor instead.
func (*GetHelpTypeListResponse) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{8}
}

func (x *GetHelpTypeListResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetHelpTypeListResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GetHelpTypeListResponse) GetData() []*GetHelpTypeListItemResponse {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetHelpTypeListItemResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Language string `protobuf:"bytes,1,opt,name=language,proto3" json:"language,omitempty"`
	TypeName string `protobuf:"bytes,2,opt,name=typeName,proto3" json:"typeName,omitempty"`
	ImageUrl string `protobuf:"bytes,3,opt,name=imageUrl,proto3" json:"imageUrl,omitempty"`
	Sort     int64  `protobuf:"varint,4,opt,name=sort,proto3" json:"sort,omitempty"`
	Status   int64  `protobuf:"varint,5,opt,name=status,proto3" json:"status,omitempty"`
	Id       int64  `protobuf:"varint,6,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetHelpTypeListItemResponse) Reset() {
	*x = GetHelpTypeListItemResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetHelpTypeListItemResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHelpTypeListItemResponse) ProtoMessage() {}

func (x *GetHelpTypeListItemResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHelpTypeListItemResponse.ProtoReflect.Descriptor instead.
func (*GetHelpTypeListItemResponse) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{9}
}

func (x *GetHelpTypeListItemResponse) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *GetHelpTypeListItemResponse) GetTypeName() string {
	if x != nil {
		return x.TypeName
	}
	return ""
}

func (x *GetHelpTypeListItemResponse) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

func (x *GetHelpTypeListItemResponse) GetSort() int64 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *GetHelpTypeListItemResponse) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *GetHelpTypeListItemResponse) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type AddHelpTypeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Language string `protobuf:"bytes,1,opt,name=language,proto3" json:"language,omitempty"`
	TypeName string `protobuf:"bytes,2,opt,name=typeName,proto3" json:"typeName,omitempty"`
	ImageUrl string `protobuf:"bytes,3,opt,name=imageUrl,proto3" json:"imageUrl,omitempty"`
	Sort     int64  `protobuf:"varint,4,opt,name=sort,proto3" json:"sort,omitempty"`
	Status   int64  `protobuf:"varint,5,opt,name=status,proto3" json:"status,omitempty"`
	Id       int64  `protobuf:"varint,6,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *AddHelpTypeRequest) Reset() {
	*x = AddHelpTypeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddHelpTypeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddHelpTypeRequest) ProtoMessage() {}

func (x *AddHelpTypeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddHelpTypeRequest.ProtoReflect.Descriptor instead.
func (*AddHelpTypeRequest) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{10}
}

func (x *AddHelpTypeRequest) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *AddHelpTypeRequest) GetTypeName() string {
	if x != nil {
		return x.TypeName
	}
	return ""
}

func (x *AddHelpTypeRequest) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

func (x *AddHelpTypeRequest) GetSort() int64 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *AddHelpTypeRequest) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *AddHelpTypeRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type AddHelpTypeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data bool   `protobuf:"varint,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *AddHelpTypeResponse) Reset() {
	*x = AddHelpTypeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddHelpTypeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddHelpTypeResponse) ProtoMessage() {}

func (x *AddHelpTypeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddHelpTypeResponse.ProtoReflect.Descriptor instead.
func (*AddHelpTypeResponse) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{11}
}

func (x *AddHelpTypeResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *AddHelpTypeResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *AddHelpTypeResponse) GetData() bool {
	if x != nil {
		return x.Data
	}
	return false
}

type EditHelpTypeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Language string `protobuf:"bytes,2,opt,name=language,proto3" json:"language,omitempty"`
	TypeName string `protobuf:"bytes,3,opt,name=typeName,proto3" json:"typeName,omitempty"`
	ImageUrl string `protobuf:"bytes,4,opt,name=imageUrl,proto3" json:"imageUrl,omitempty"`
	Sort     int64  `protobuf:"varint,5,opt,name=sort,proto3" json:"sort,omitempty"`
	Status   int64  `protobuf:"varint,6,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *EditHelpTypeRequest) Reset() {
	*x = EditHelpTypeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EditHelpTypeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditHelpTypeRequest) ProtoMessage() {}

func (x *EditHelpTypeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditHelpTypeRequest.ProtoReflect.Descriptor instead.
func (*EditHelpTypeRequest) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{12}
}

func (x *EditHelpTypeRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *EditHelpTypeRequest) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *EditHelpTypeRequest) GetTypeName() string {
	if x != nil {
		return x.TypeName
	}
	return ""
}

func (x *EditHelpTypeRequest) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

func (x *EditHelpTypeRequest) GetSort() int64 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *EditHelpTypeRequest) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

type EditHelpTypeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data bool   `protobuf:"varint,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *EditHelpTypeResponse) Reset() {
	*x = EditHelpTypeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EditHelpTypeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditHelpTypeResponse) ProtoMessage() {}

func (x *EditHelpTypeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditHelpTypeResponse.ProtoReflect.Descriptor instead.
func (*EditHelpTypeResponse) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{13}
}

func (x *EditHelpTypeResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *EditHelpTypeResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *EditHelpTypeResponse) GetData() bool {
	if x != nil {
		return x.Data
	}
	return false
}

type DelFrontClassifyInfoCmsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []int64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
}

func (x *DelFrontClassifyInfoCmsRequest) Reset() {
	*x = DelFrontClassifyInfoCmsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelFrontClassifyInfoCmsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelFrontClassifyInfoCmsRequest) ProtoMessage() {}

func (x *DelFrontClassifyInfoCmsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelFrontClassifyInfoCmsRequest.ProtoReflect.Descriptor instead.
func (*DelFrontClassifyInfoCmsRequest) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{14}
}

func (x *DelFrontClassifyInfoCmsRequest) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type DelFrontClassifyInfoCmsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data bool   `protobuf:"varint,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *DelFrontClassifyInfoCmsResponse) Reset() {
	*x = DelFrontClassifyInfoCmsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelFrontClassifyInfoCmsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelFrontClassifyInfoCmsResponse) ProtoMessage() {}

func (x *DelFrontClassifyInfoCmsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelFrontClassifyInfoCmsResponse.ProtoReflect.Descriptor instead.
func (*DelFrontClassifyInfoCmsResponse) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{15}
}

func (x *DelFrontClassifyInfoCmsResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *DelFrontClassifyInfoCmsResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *DelFrontClassifyInfoCmsResponse) GetData() bool {
	if x != nil {
		return x.Data
	}
	return false
}

type BannerInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Language     string `protobuf:"bytes,2,opt,name=language,proto3" json:"language,omitempty"`
	Device       string `protobuf:"bytes,3,opt,name=device,proto3" json:"device,omitempty"`
	Img          string `protobuf:"bytes,4,opt,name=img,proto3" json:"img,omitempty"`
	Href         string `protobuf:"bytes,5,opt,name=href,proto3" json:"href,omitempty"`
	Sort         int32  `protobuf:"varint,6,opt,name=sort,proto3" json:"sort,omitempty"`
	Status       int32  `protobuf:"varint,7,opt,name=status,proto3" json:"status,omitempty"`
	CreatedAt    int64  `protobuf:"varint,8,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt    int64  `protobuf:"varint,9,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	CreatedBy    string `protobuf:"bytes,10,opt,name=createdBy,proto3" json:"createdBy,omitempty"`
	OperatorName string `protobuf:"bytes,11,opt,name=operatorName,proto3" json:"operatorName,omitempty"`
	SlotId       string `protobuf:"bytes,12,opt,name=slotId,proto3" json:"slotId,omitempty"`
	GameId       int32  `protobuf:"varint,13,opt,name=gameId,proto3" json:"gameId,omitempty"`
	GameGroupId  int32  `protobuf:"varint,14,opt,name=gameGroupId,proto3" json:"gameGroupId,omitempty"`
	PlatId       int32  `protobuf:"varint,15,opt,name=platId,proto3" json:"platId,omitempty"`
	JumpType     int32  `protobuf:"varint,16,opt,name=jumpType,proto3" json:"jumpType,omitempty"`
}

func (x *BannerInfo) Reset() {
	*x = BannerInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BannerInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BannerInfo) ProtoMessage() {}

func (x *BannerInfo) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BannerInfo.ProtoReflect.Descriptor instead.
func (*BannerInfo) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{16}
}

func (x *BannerInfo) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *BannerInfo) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *BannerInfo) GetDevice() string {
	if x != nil {
		return x.Device
	}
	return ""
}

func (x *BannerInfo) GetImg() string {
	if x != nil {
		return x.Img
	}
	return ""
}

func (x *BannerInfo) GetHref() string {
	if x != nil {
		return x.Href
	}
	return ""
}

func (x *BannerInfo) GetSort() int32 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *BannerInfo) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *BannerInfo) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *BannerInfo) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *BannerInfo) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

func (x *BannerInfo) GetOperatorName() string {
	if x != nil {
		return x.OperatorName
	}
	return ""
}

func (x *BannerInfo) GetSlotId() string {
	if x != nil {
		return x.SlotId
	}
	return ""
}

func (x *BannerInfo) GetGameId() int32 {
	if x != nil {
		return x.GameId
	}
	return 0
}

func (x *BannerInfo) GetGameGroupId() int32 {
	if x != nil {
		return x.GameGroupId
	}
	return 0
}

func (x *BannerInfo) GetPlatId() int32 {
	if x != nil {
		return x.PlatId
	}
	return 0
}

func (x *BannerInfo) GetJumpType() int32 {
	if x != nil {
		return x.JumpType
	}
	return 0
}

type PromotionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameType int64 `protobuf:"varint,1,opt,name=gameType,proto3" json:"gameType,omitempty"`
	Id       int64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *PromotionsRequest) Reset() {
	*x = PromotionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PromotionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PromotionsRequest) ProtoMessage() {}

func (x *PromotionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PromotionsRequest.ProtoReflect.Descriptor instead.
func (*PromotionsRequest) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{17}
}

func (x *PromotionsRequest) GetGameType() int64 {
	if x != nil {
		return x.GameType
	}
	return 0
}

func (x *PromotionsRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type LadderListData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Value       string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	IsActivated int32  `protobuf:"varint,3,opt,name=is_activated,json=isActivated,proto3" json:"is_activated,omitempty"`
}

func (x *LadderListData) Reset() {
	*x = LadderListData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LadderListData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LadderListData) ProtoMessage() {}

func (x *LadderListData) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LadderListData.ProtoReflect.Descriptor instead.
func (*LadderListData) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{18}
}

func (x *LadderListData) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *LadderListData) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *LadderListData) GetIsActivated() int32 {
	if x != nil {
		return x.IsActivated
	}
	return 0
}

type DeleteActivityResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data bool   `protobuf:"varint,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *DeleteActivityResponse) Reset() {
	*x = DeleteActivityResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteActivityResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteActivityResponse) ProtoMessage() {}

func (x *DeleteActivityResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteActivityResponse.ProtoReflect.Descriptor instead.
func (*DeleteActivityResponse) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{19}
}

func (x *DeleteActivityResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *DeleteActivityResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *DeleteActivityResponse) GetData() bool {
	if x != nil {
		return x.Data
	}
	return false
}

type BlogInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Lang      string `protobuf:"bytes,2,opt,name=lang,proto3" json:"lang,omitempty"`
	Category  string `protobuf:"bytes,3,opt,name=category,proto3" json:"category,omitempty"`
	Image     string `protobuf:"bytes,4,opt,name=image,proto3" json:"image,omitempty"`
	Title     string `protobuf:"bytes,5,opt,name=title,proto3" json:"title,omitempty"`
	TitleSub  string `protobuf:"bytes,6,opt,name=title_sub,json=titleSub,proto3" json:"title_sub,omitempty"`
	Content   string `protobuf:"bytes,7,opt,name=content,proto3" json:"content,omitempty"`
	Recommend bool   `protobuf:"varint,8,opt,name=recommend,proto3" json:"recommend,omitempty"`
	Status    int32  `protobuf:"varint,9,opt,name=status,proto3" json:"status,omitempty"`
	Sort      int32  `protobuf:"varint,10,opt,name=sort,proto3" json:"sort,omitempty"`
	CreateBy  string `protobuf:"bytes,11,opt,name=create_by,json=createBy,proto3" json:"create_by,omitempty"`
	UpdateBy  string `protobuf:"bytes,12,opt,name=update_by,json=updateBy,proto3" json:"update_by,omitempty"`
	CreatedAt int64  `protobuf:"varint,13,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt int64  `protobuf:"varint,14,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *BlogInfo) Reset() {
	*x = BlogInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlogInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlogInfo) ProtoMessage() {}

func (x *BlogInfo) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlogInfo.ProtoReflect.Descriptor instead.
func (*BlogInfo) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{20}
}

func (x *BlogInfo) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *BlogInfo) GetLang() string {
	if x != nil {
		return x.Lang
	}
	return ""
}

func (x *BlogInfo) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *BlogInfo) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *BlogInfo) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *BlogInfo) GetTitleSub() string {
	if x != nil {
		return x.TitleSub
	}
	return ""
}

func (x *BlogInfo) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *BlogInfo) GetRecommend() bool {
	if x != nil {
		return x.Recommend
	}
	return false
}

func (x *BlogInfo) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *BlogInfo) GetSort() int32 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *BlogInfo) GetCreateBy() string {
	if x != nil {
		return x.CreateBy
	}
	return ""
}

func (x *BlogInfo) GetUpdateBy() string {
	if x != nil {
		return x.UpdateBy
	}
	return ""
}

func (x *BlogInfo) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *BlogInfo) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

type FrontClassifyCmsPageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,5,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *Data  `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *FrontClassifyCmsPageResponse) Reset() {
	*x = FrontClassifyCmsPageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FrontClassifyCmsPageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FrontClassifyCmsPageResponse) ProtoMessage() {}

func (x *FrontClassifyCmsPageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FrontClassifyCmsPageResponse.ProtoReflect.Descriptor instead.
func (*FrontClassifyCmsPageResponse) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{21}
}

func (x *FrontClassifyCmsPageResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *FrontClassifyCmsPageResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *FrontClassifyCmsPageResponse) GetData() *Data {
	if x != nil {
		return x.Data
	}
	return nil
}

type AddFrontClassifyCmsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data bool   `protobuf:"varint,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *AddFrontClassifyCmsResponse) Reset() {
	*x = AddFrontClassifyCmsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddFrontClassifyCmsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddFrontClassifyCmsResponse) ProtoMessage() {}

func (x *AddFrontClassifyCmsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddFrontClassifyCmsResponse.ProtoReflect.Descriptor instead.
func (*AddFrontClassifyCmsResponse) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{22}
}

func (x *AddFrontClassifyCmsResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *AddFrontClassifyCmsResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *AddFrontClassifyCmsResponse) GetData() bool {
	if x != nil {
		return x.Data
	}
	return false
}

type HelpInfoData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current   string      `protobuf:"bytes,1,opt,name=current,proto3" json:"current,omitempty"`
	Size      string      `protobuf:"bytes,2,opt,name=size,proto3" json:"size,omitempty"`
	List      []*HelpInfo `protobuf:"bytes,3,rep,name=list,proto3" json:"list,omitempty"`
	Total     string      `protobuf:"bytes,4,opt,name=total,proto3" json:"total,omitempty"`
	Pages     string      `protobuf:"bytes,5,opt,name=pages,proto3" json:"pages,omitempty"`
	ScrollId  string      `protobuf:"bytes,6,opt,name=scrollId,proto3" json:"scrollId,omitempty"`
	SortValue string      `protobuf:"bytes,7,opt,name=sortValue,proto3" json:"sortValue,omitempty"`
	SortId    string      `protobuf:"bytes,8,opt,name=sortId,proto3" json:"sortId,omitempty"`
}

func (x *HelpInfoData) Reset() {
	*x = HelpInfoData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HelpInfoData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HelpInfoData) ProtoMessage() {}

func (x *HelpInfoData) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HelpInfoData.ProtoReflect.Descriptor instead.
func (*HelpInfoData) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{23}
}

func (x *HelpInfoData) GetCurrent() string {
	if x != nil {
		return x.Current
	}
	return ""
}

func (x *HelpInfoData) GetSize() string {
	if x != nil {
		return x.Size
	}
	return ""
}

func (x *HelpInfoData) GetList() []*HelpInfo {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *HelpInfoData) GetTotal() string {
	if x != nil {
		return x.Total
	}
	return ""
}

func (x *HelpInfoData) GetPages() string {
	if x != nil {
		return x.Pages
	}
	return ""
}

func (x *HelpInfoData) GetScrollId() string {
	if x != nil {
		return x.ScrollId
	}
	return ""
}

func (x *HelpInfoData) GetSortValue() string {
	if x != nil {
		return x.SortValue
	}
	return ""
}

func (x *HelpInfoData) GetSortId() string {
	if x != nil {
		return x.SortId
	}
	return ""
}

type NoticeData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Category int32  `protobuf:"varint,1,opt,name=category,proto3" json:"category,omitempty"`
	Status   int32  `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	Title    string `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Lang     string `protobuf:"bytes,4,opt,name=lang,proto3" json:"lang,omitempty"`
}

func (x *NoticeData) Reset() {
	*x = NoticeData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NoticeData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NoticeData) ProtoMessage() {}

func (x *NoticeData) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NoticeData.ProtoReflect.Descriptor instead.
func (*NoticeData) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{24}
}

func (x *NoticeData) GetCategory() int32 {
	if x != nil {
		return x.Category
	}
	return 0
}

func (x *NoticeData) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *NoticeData) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *NoticeData) GetLang() string {
	if x != nil {
		return x.Lang
	}
	return ""
}

type AddBannerListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data bool   `protobuf:"varint,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *AddBannerListResponse) Reset() {
	*x = AddBannerListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddBannerListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddBannerListResponse) ProtoMessage() {}

func (x *AddBannerListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddBannerListResponse.ProtoReflect.Descriptor instead.
func (*AddBannerListResponse) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{25}
}

func (x *AddBannerListResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *AddBannerListResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *AddBannerListResponse) GetData() bool {
	if x != nil {
		return x.Data
	}
	return false
}

type NoticeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32           `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string          `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *NoticeDataList `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *NoticeResponse) Reset() {
	*x = NoticeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NoticeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NoticeResponse) ProtoMessage() {}

func (x *NoticeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NoticeResponse.ProtoReflect.Descriptor instead.
func (*NoticeResponse) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{26}
}

func (x *NoticeResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *NoticeResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *NoticeResponse) GetData() *NoticeDataList {
	if x != nil {
		return x.Data
	}
	return nil
}

type DelBannerListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Type int32 `protobuf:"varint,2,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *DelBannerListRequest) Reset() {
	*x = DelBannerListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelBannerListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelBannerListRequest) ProtoMessage() {}

func (x *DelBannerListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelBannerListRequest.ProtoReflect.Descriptor instead.
func (*DelBannerListRequest) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{27}
}

func (x *DelBannerListRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DelBannerListRequest) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

type EditFrontClassifyCmsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data bool   `protobuf:"varint,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *EditFrontClassifyCmsResponse) Reset() {
	*x = EditFrontClassifyCmsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EditFrontClassifyCmsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditFrontClassifyCmsResponse) ProtoMessage() {}

func (x *EditFrontClassifyCmsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditFrontClassifyCmsResponse.ProtoReflect.Descriptor instead.
func (*EditFrontClassifyCmsResponse) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{28}
}

func (x *EditFrontClassifyCmsResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *EditFrontClassifyCmsResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *EditFrontClassifyCmsResponse) GetData() bool {
	if x != nil {
		return x.Data
	}
	return false
}

type HelpTypeInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int32       `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	TypeName     string      `protobuf:"bytes,2,opt,name=typeName,proto3" json:"typeName,omitempty"`
	ImageUrl     string      `protobuf:"bytes,3,opt,name=imageUrl,proto3" json:"imageUrl,omitempty"`
	ListHelpInfo []*HelpInfo `protobuf:"bytes,4,rep,name=listHelpInfo,proto3" json:"listHelpInfo,omitempty"`
}

func (x *HelpTypeInfo) Reset() {
	*x = HelpTypeInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HelpTypeInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HelpTypeInfo) ProtoMessage() {}

func (x *HelpTypeInfo) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HelpTypeInfo.ProtoReflect.Descriptor instead.
func (*HelpTypeInfo) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{29}
}

func (x *HelpTypeInfo) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *HelpTypeInfo) GetTypeName() string {
	if x != nil {
		return x.TypeName
	}
	return ""
}

func (x *HelpTypeInfo) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

func (x *HelpTypeInfo) GetListHelpInfo() []*HelpInfo {
	if x != nil {
		return x.ListHelpInfo
	}
	return nil
}

type MsgRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current int32           `protobuf:"varint,1,opt,name=current,proto3" json:"current,omitempty"`
	Size    int32           `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	Data    *MsgRequestData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	Sign    bool            `protobuf:"varint,4,opt,name=sign,proto3" json:"sign,omitempty"`
}

func (x *MsgRequest) Reset() {
	*x = MsgRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgRequest) ProtoMessage() {}

func (x *MsgRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgRequest.ProtoReflect.Descriptor instead.
func (*MsgRequest) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{30}
}

func (x *MsgRequest) GetCurrent() int32 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *MsgRequest) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *MsgRequest) GetData() *MsgRequestData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *MsgRequest) GetSign() bool {
	if x != nil {
		return x.Sign
	}
	return false
}

type UpdateMsgRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Sign     bool   `protobuf:"varint,2,opt,name=sign,proto3" json:"sign,omitempty"`
	Category string `protobuf:"bytes,3,opt,name=category,proto3" json:"category,omitempty"`
}

func (x *UpdateMsgRequest) Reset() {
	*x = UpdateMsgRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMsgRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMsgRequest) ProtoMessage() {}

func (x *UpdateMsgRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMsgRequest.ProtoReflect.Descriptor instead.
func (*UpdateMsgRequest) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{31}
}

func (x *UpdateMsgRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateMsgRequest) GetSign() bool {
	if x != nil {
		return x.Sign
	}
	return false
}

func (x *UpdateMsgRequest) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

type UpdateBannerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data bool   `protobuf:"varint,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *UpdateBannerResponse) Reset() {
	*x = UpdateBannerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateBannerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateBannerResponse) ProtoMessage() {}

func (x *UpdateBannerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateBannerResponse.ProtoReflect.Descriptor instead.
func (*UpdateBannerResponse) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{32}
}

func (x *UpdateBannerResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *UpdateBannerResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *UpdateBannerResponse) GetData() bool {
	if x != nil {
		return x.Data
	}
	return false
}

type AddActivityRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsPopUp       int32  `protobuf:"varint,1,opt,name=isPopUp,proto3" json:"isPopUp,omitempty"`
	IsAuto        int32  `protobuf:"varint,2,opt,name=isAuto,proto3" json:"isAuto,omitempty"`
	Lang          string `protobuf:"bytes,3,opt,name=lang,proto3" json:"lang,omitempty"`
	Category      string `protobuf:"bytes,4,opt,name=category,proto3" json:"category,omitempty"`
	Code          string `protobuf:"bytes,5,opt,name=code,proto3" json:"code,omitempty"`
	GameType      string `protobuf:"bytes,6,opt,name=gameType,proto3" json:"gameType,omitempty"`
	StartTime     int64  `protobuf:"varint,7,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime       int64  `protobuf:"varint,8,opt,name=endTime,proto3" json:"endTime,omitempty"`
	FlowClaim     int32  `protobuf:"varint,9,opt,name=flowClaim,proto3" json:"flowClaim,omitempty"`
	Rate          int32  `protobuf:"varint,10,opt,name=rate,proto3" json:"rate,omitempty"`
	MaxCoin       int32  `protobuf:"varint,11,opt,name=maxCoin,proto3" json:"maxCoin,omitempty"`
	Sort          int32  `protobuf:"varint,12,opt,name=sort,proto3" json:"sort,omitempty"`
	Status        string `protobuf:"bytes,13,opt,name=status,proto3" json:"status,omitempty"`
	CodeZh        string `protobuf:"bytes,14,opt,name=codeZh,proto3" json:"codeZh,omitempty"`
	Img           string `protobuf:"bytes,15,opt,name=img,proto3" json:"img,omitempty"`
	Description   string `protobuf:"bytes,16,opt,name=description,proto3" json:"description,omitempty"`
	Ladder        string `protobuf:"bytes,17,opt,name=ladder,proto3" json:"ladder,omitempty"`
	Id            int32  `protobuf:"varint,18,opt,name=id,proto3" json:"id,omitempty"`
	BonusConfig   string `protobuf:"bytes,19,opt,name=bonusConfig,proto3" json:"bonusConfig,omitempty"`
	DescriptionZh string `protobuf:"bytes,20,opt,name=descriptionZh,proto3" json:"descriptionZh,omitempty"`
}

func (x *AddActivityRequest) Reset() {
	*x = AddActivityRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddActivityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddActivityRequest) ProtoMessage() {}

func (x *AddActivityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddActivityRequest.ProtoReflect.Descriptor instead.
func (*AddActivityRequest) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{33}
}

func (x *AddActivityRequest) GetIsPopUp() int32 {
	if x != nil {
		return x.IsPopUp
	}
	return 0
}

func (x *AddActivityRequest) GetIsAuto() int32 {
	if x != nil {
		return x.IsAuto
	}
	return 0
}

func (x *AddActivityRequest) GetLang() string {
	if x != nil {
		return x.Lang
	}
	return ""
}

func (x *AddActivityRequest) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *AddActivityRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *AddActivityRequest) GetGameType() string {
	if x != nil {
		return x.GameType
	}
	return ""
}

func (x *AddActivityRequest) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *AddActivityRequest) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *AddActivityRequest) GetFlowClaim() int32 {
	if x != nil {
		return x.FlowClaim
	}
	return 0
}

func (x *AddActivityRequest) GetRate() int32 {
	if x != nil {
		return x.Rate
	}
	return 0
}

func (x *AddActivityRequest) GetMaxCoin() int32 {
	if x != nil {
		return x.MaxCoin
	}
	return 0
}

func (x *AddActivityRequest) GetSort() int32 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *AddActivityRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *AddActivityRequest) GetCodeZh() string {
	if x != nil {
		return x.CodeZh
	}
	return ""
}

func (x *AddActivityRequest) GetImg() string {
	if x != nil {
		return x.Img
	}
	return ""
}

func (x *AddActivityRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *AddActivityRequest) GetLadder() string {
	if x != nil {
		return x.Ladder
	}
	return ""
}

func (x *AddActivityRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AddActivityRequest) GetBonusConfig() string {
	if x != nil {
		return x.BonusConfig
	}
	return ""
}

func (x *AddActivityRequest) GetDescriptionZh() string {
	if x != nil {
		return x.DescriptionZh
	}
	return ""
}

type BlogListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32     `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string    `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *BlogData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *BlogListResponse) Reset() {
	*x = BlogListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlogListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlogListResponse) ProtoMessage() {}

func (x *BlogListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlogListResponse.ProtoReflect.Descriptor instead.
func (*BlogListResponse) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{34}
}

func (x *BlogListResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *BlogListResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *BlogListResponse) GetData() *BlogData {
	if x != nil {
		return x.Data
	}
	return nil
}

type HelpInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32         `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string        `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *HelpInfoData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *HelpInfoResponse) Reset() {
	*x = HelpInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HelpInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HelpInfoResponse) ProtoMessage() {}

func (x *HelpInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HelpInfoResponse.ProtoReflect.Descriptor instead.
func (*HelpInfoResponse) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{35}
}

func (x *HelpInfoResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *HelpInfoResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *HelpInfoResponse) GetData() *HelpInfoData {
	if x != nil {
		return x.Data
	}
	return nil
}

type RomoveHelpInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data bool   `protobuf:"varint,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *RomoveHelpInfoResponse) Reset() {
	*x = RomoveHelpInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RomoveHelpInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RomoveHelpInfoResponse) ProtoMessage() {}

func (x *RomoveHelpInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RomoveHelpInfoResponse.ProtoReflect.Descriptor instead.
func (*RomoveHelpInfoResponse) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{36}
}

func (x *RomoveHelpInfoResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *RomoveHelpInfoResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *RomoveHelpInfoResponse) GetData() bool {
	if x != nil {
		return x.Data
	}
	return false
}

type NoticeCountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32              `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string             `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data []*NoticeCountList `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *NoticeCountResponse) Reset() {
	*x = NoticeCountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NoticeCountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NoticeCountResponse) ProtoMessage() {}

func (x *NoticeCountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NoticeCountResponse.ProtoReflect.Descriptor instead.
func (*NoticeCountResponse) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{37}
}

func (x *NoticeCountResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *NoticeCountResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *NoticeCountResponse) GetData() []*NoticeCountList {
	if x != nil {
		return x.Data
	}
	return nil
}

type NoticeDataList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current   string        `protobuf:"bytes,1,opt,name=current,proto3" json:"current,omitempty"`
	Size      string        `protobuf:"bytes,2,opt,name=size,proto3" json:"size,omitempty"`
	List      []*NoticeItem `protobuf:"bytes,3,rep,name=list,proto3" json:"list,omitempty"`
	Total     string        `protobuf:"bytes,4,opt,name=total,proto3" json:"total,omitempty"`
	Pages     string        `protobuf:"bytes,5,opt,name=pages,proto3" json:"pages,omitempty"`
	ScrollId  string        `protobuf:"bytes,6,opt,name=scrollId,proto3" json:"scrollId,omitempty"`
	SortValue string        `protobuf:"bytes,7,opt,name=sortValue,proto3" json:"sortValue,omitempty"`
	SortId    string        `protobuf:"bytes,8,opt,name=sortId,proto3" json:"sortId,omitempty"`
}

func (x *NoticeDataList) Reset() {
	*x = NoticeDataList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NoticeDataList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NoticeDataList) ProtoMessage() {}

func (x *NoticeDataList) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NoticeDataList.ProtoReflect.Descriptor instead.
func (*NoticeDataList) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{38}
}

func (x *NoticeDataList) GetCurrent() string {
	if x != nil {
		return x.Current
	}
	return ""
}

func (x *NoticeDataList) GetSize() string {
	if x != nil {
		return x.Size
	}
	return ""
}

func (x *NoticeDataList) GetList() []*NoticeItem {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *NoticeDataList) GetTotal() string {
	if x != nil {
		return x.Total
	}
	return ""
}

func (x *NoticeDataList) GetPages() string {
	if x != nil {
		return x.Pages
	}
	return ""
}

func (x *NoticeDataList) GetScrollId() string {
	if x != nil {
		return x.ScrollId
	}
	return ""
}

func (x *NoticeDataList) GetSortValue() string {
	if x != nil {
		return x.SortValue
	}
	return ""
}

func (x *NoticeDataList) GetSortId() string {
	if x != nil {
		return x.SortId
	}
	return ""
}

// delete
type DeleteNoticeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteNoticeRequest) Reset() {
	*x = DeleteNoticeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteNoticeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteNoticeRequest) ProtoMessage() {}

func (x *DeleteNoticeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteNoticeRequest.ProtoReflect.Descriptor instead.
func (*DeleteNoticeRequest) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{39}
}

func (x *DeleteNoticeRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type PromotionsData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64             `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Category    string            `protobuf:"bytes,2,opt,name=category,proto3" json:"category,omitempty"`
	CodeZh      string            `protobuf:"bytes,3,opt,name=code_zh,json=codeZh,proto3" json:"code_zh,omitempty"`
	Img         string            `protobuf:"bytes,4,opt,name=img,proto3" json:"img,omitempty"`
	LadderList  []*LadderListData `protobuf:"bytes,5,rep,name=ladderList,proto3" json:"ladderList,omitempty"`
	Descript    string            `protobuf:"bytes,6,opt,name=descript,proto3" json:"descript,omitempty"`
	StartedAt   int64             `protobuf:"varint,7,opt,name=started_at,json=startedAt,proto3" json:"started_at,omitempty"`
	EndedAt     int64             `protobuf:"varint,8,opt,name=ended_at,json=endedAt,proto3" json:"ended_at,omitempty"`
	IsActivated int64             `protobuf:"varint,9,opt,name=is_activated,json=isActivated,proto3" json:"is_activated,omitempty"`
}

func (x *PromotionsData) Reset() {
	*x = PromotionsData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PromotionsData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PromotionsData) ProtoMessage() {}

func (x *PromotionsData) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PromotionsData.ProtoReflect.Descriptor instead.
func (*PromotionsData) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{40}
}

func (x *PromotionsData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PromotionsData) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *PromotionsData) GetCodeZh() string {
	if x != nil {
		return x.CodeZh
	}
	return ""
}

func (x *PromotionsData) GetImg() string {
	if x != nil {
		return x.Img
	}
	return ""
}

func (x *PromotionsData) GetLadderList() []*LadderListData {
	if x != nil {
		return x.LadderList
	}
	return nil
}

func (x *PromotionsData) GetDescript() string {
	if x != nil {
		return x.Descript
	}
	return ""
}

func (x *PromotionsData) GetStartedAt() int64 {
	if x != nil {
		return x.StartedAt
	}
	return 0
}

func (x *PromotionsData) GetEndedAt() int64 {
	if x != nil {
		return x.EndedAt
	}
	return 0
}

func (x *PromotionsData) GetIsActivated() int64 {
	if x != nil {
		return x.IsActivated
	}
	return 0
}

type ActivityData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Category  string `protobuf:"bytes,1,opt,name=category,proto3" json:"category,omitempty"`
	Status    string `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	CodeZh    string `protobuf:"bytes,3,opt,name=codeZh,proto3" json:"codeZh,omitempty"`
	Lang      string `protobuf:"bytes,4,opt,name=lang,proto3" json:"lang,omitempty"`
	StartTime int64  `protobuf:"varint,5,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime   int64  `protobuf:"varint,6,opt,name=endTime,proto3" json:"endTime,omitempty"`
}

func (x *ActivityData) Reset() {
	*x = ActivityData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivityData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivityData) ProtoMessage() {}

func (x *ActivityData) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivityData.ProtoReflect.Descriptor instead.
func (*ActivityData) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{41}
}

func (x *ActivityData) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *ActivityData) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ActivityData) GetCodeZh() string {
	if x != nil {
		return x.CodeZh
	}
	return ""
}

func (x *ActivityData) GetLang() string {
	if x != nil {
		return x.Lang
	}
	return ""
}

func (x *ActivityData) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *ActivityData) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

type Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current   string      `protobuf:"bytes,1,opt,name=current,proto3" json:"current,omitempty"`
	Size      string      `protobuf:"bytes,2,opt,name=size,proto3" json:"size,omitempty"`
	List      []*GameInfo `protobuf:"bytes,3,rep,name=list,proto3" json:"list,omitempty"`
	Total     string      `protobuf:"bytes,4,opt,name=total,proto3" json:"total,omitempty"`
	Pages     string      `protobuf:"bytes,5,opt,name=pages,proto3" json:"pages,omitempty"`
	ScrollId  string      `protobuf:"bytes,6,opt,name=scrollId,proto3" json:"scrollId,omitempty"`
	SortValue string      `protobuf:"bytes,7,opt,name=sortValue,proto3" json:"sortValue,omitempty"`
	SortId    string      `protobuf:"bytes,8,opt,name=sortId,proto3" json:"sortId,omitempty"`
}

func (x *Data) Reset() {
	*x = Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Data) ProtoMessage() {}

func (x *Data) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Data.ProtoReflect.Descriptor instead.
func (*Data) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{42}
}

func (x *Data) GetCurrent() string {
	if x != nil {
		return x.Current
	}
	return ""
}

func (x *Data) GetSize() string {
	if x != nil {
		return x.Size
	}
	return ""
}

func (x *Data) GetList() []*GameInfo {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *Data) GetTotal() string {
	if x != nil {
		return x.Total
	}
	return ""
}

func (x *Data) GetPages() string {
	if x != nil {
		return x.Pages
	}
	return ""
}

func (x *Data) GetScrollId() string {
	if x != nil {
		return x.ScrollId
	}
	return ""
}

func (x *Data) GetSortValue() string {
	if x != nil {
		return x.SortValue
	}
	return ""
}

func (x *Data) GetSortId() string {
	if x != nil {
		return x.SortId
	}
	return ""
}

// update
type EditFrontClassifyCmsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Sort       int32  `protobuf:"varint,2,opt,name=sort,proto3" json:"sort,omitempty"`
	LogoUrl    string `protobuf:"bytes,3,opt,name=logoUrl,proto3" json:"logoUrl,omitempty"`
	Enable     int32  `protobuf:"varint,4,opt,name=enable,proto3" json:"enable,omitempty"`
	GameCount  int32  `protobuf:"varint,5,opt,name=gameCount,proto3" json:"gameCount,omitempty"`
	CreatedAt  string `protobuf:"bytes,6,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	CreateUser string `protobuf:"bytes,7,opt,name=createUser,proto3" json:"createUser,omitempty"`
	UpdatedAt  int64  `protobuf:"varint,8,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	UpdateUser string `protobuf:"bytes,9,opt,name=updateUser,proto3" json:"updateUser,omitempty"`
	Cname      string `protobuf:"bytes,10,opt,name=cname,proto3" json:"cname,omitempty"`
	ClassName  string `protobuf:"bytes,11,opt,name=className,proto3" json:"className,omitempty"`
	Lang       string `protobuf:"bytes,12,opt,name=lang,proto3" json:"lang,omitempty"`
}

func (x *EditFrontClassifyCmsRequest) Reset() {
	*x = EditFrontClassifyCmsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EditFrontClassifyCmsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditFrontClassifyCmsRequest) ProtoMessage() {}

func (x *EditFrontClassifyCmsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditFrontClassifyCmsRequest.ProtoReflect.Descriptor instead.
func (*EditFrontClassifyCmsRequest) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{43}
}

func (x *EditFrontClassifyCmsRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *EditFrontClassifyCmsRequest) GetSort() int32 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *EditFrontClassifyCmsRequest) GetLogoUrl() string {
	if x != nil {
		return x.LogoUrl
	}
	return ""
}

func (x *EditFrontClassifyCmsRequest) GetEnable() int32 {
	if x != nil {
		return x.Enable
	}
	return 0
}

func (x *EditFrontClassifyCmsRequest) GetGameCount() int32 {
	if x != nil {
		return x.GameCount
	}
	return 0
}

func (x *EditFrontClassifyCmsRequest) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *EditFrontClassifyCmsRequest) GetCreateUser() string {
	if x != nil {
		return x.CreateUser
	}
	return ""
}

func (x *EditFrontClassifyCmsRequest) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *EditFrontClassifyCmsRequest) GetUpdateUser() string {
	if x != nil {
		return x.UpdateUser
	}
	return ""
}

func (x *EditFrontClassifyCmsRequest) GetCname() string {
	if x != nil {
		return x.Cname
	}
	return ""
}

func (x *EditFrontClassifyCmsRequest) GetClassName() string {
	if x != nil {
		return x.ClassName
	}
	return ""
}

func (x *EditFrontClassifyCmsRequest) GetLang() string {
	if x != nil {
		return x.Lang
	}
	return ""
}

type AddNoticeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data string `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *AddNoticeResponse) Reset() {
	*x = AddNoticeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddNoticeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddNoticeResponse) ProtoMessage() {}

func (x *AddNoticeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddNoticeResponse.ProtoReflect.Descriptor instead.
func (*AddNoticeResponse) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{44}
}

func (x *AddNoticeResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *AddNoticeResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *AddNoticeResponse) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

type BlogListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current int32             `protobuf:"varint,1,opt,name=current,proto3" json:"current,omitempty"`
	Size    int32             `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	Data    map[string]string `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Sign    bool              `protobuf:"varint,4,opt,name=sign,proto3" json:"sign,omitempty"`
}

func (x *BlogListRequest) Reset() {
	*x = BlogListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlogListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlogListRequest) ProtoMessage() {}

func (x *BlogListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlogListRequest.ProtoReflect.Descriptor instead.
func (*BlogListRequest) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{45}
}

func (x *BlogListRequest) GetCurrent() int32 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *BlogListRequest) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *BlogListRequest) GetData() map[string]string {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *BlogListRequest) GetSign() bool {
	if x != nil {
		return x.Sign
	}
	return false
}

type ActivityItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Code             string `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	CodeZh           string `protobuf:"bytes,3,opt,name=codeZh,proto3" json:"codeZh,omitempty"`
	Img              string `protobuf:"bytes,4,opt,name=img,proto3" json:"img,omitempty"`
	Category         string `protobuf:"bytes,5,opt,name=category,proto3" json:"category,omitempty"`
	Description      string `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`
	StartedAt        int64  `protobuf:"varint,7,opt,name=startedAt,proto3" json:"startedAt,omitempty"`
	EndedAt          int64  `protobuf:"varint,8,opt,name=endedAt,proto3" json:"endedAt,omitempty"`
	Status           int32  `protobuf:"varint,9,opt,name=status,proto3" json:"status,omitempty"`
	Ladder           string `protobuf:"bytes,10,opt,name=ladder,proto3" json:"ladder,omitempty"`
	FlowClaim        int32  `protobuf:"varint,11,opt,name=flowClaim,proto3" json:"flowClaim,omitempty"`
	MinCoin          string `protobuf:"bytes,12,opt,name=minCoin,proto3" json:"minCoin,omitempty"`
	MaxCoin          string `protobuf:"bytes,13,opt,name=maxCoin,proto3" json:"maxCoin,omitempty"`
	Rate             string `protobuf:"bytes,14,opt,name=rate,proto3" json:"rate,omitempty"`
	DepositNums      int32  `protobuf:"varint,15,opt,name=depositNums,proto3" json:"depositNums,omitempty"`
	SubCategory      int32  `protobuf:"varint,16,opt,name=subCategory,proto3" json:"subCategory,omitempty"`
	Weekdays         string `protobuf:"bytes,17,opt,name=weekdays,proto3" json:"weekdays,omitempty"`
	IsAuto           bool   `protobuf:"varint,18,opt,name=isAuto,proto3" json:"isAuto,omitempty"`
	ClearCodeMixCoin int32  `protobuf:"varint,19,opt,name=clearCodeMixCoin,proto3" json:"clearCodeMixCoin,omitempty"`
	Sort             int32  `protobuf:"varint,20,opt,name=sort,proto3" json:"sort,omitempty"`
	GameType         int32  `protobuf:"varint,21,opt,name=gameType,proto3" json:"gameType,omitempty"`
	UpdatedAt        int64  `protobuf:"varint,22,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	OperatorName     string `protobuf:"bytes,23,opt,name=operatorName,proto3" json:"operatorName,omitempty"`
	Lang             string `protobuf:"bytes,24,opt,name=lang,proto3" json:"lang,omitempty"`
}

func (x *ActivityItem) Reset() {
	*x = ActivityItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivityItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivityItem) ProtoMessage() {}

func (x *ActivityItem) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivityItem.ProtoReflect.Descriptor instead.
func (*ActivityItem) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{46}
}

func (x *ActivityItem) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ActivityItem) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *ActivityItem) GetCodeZh() string {
	if x != nil {
		return x.CodeZh
	}
	return ""
}

func (x *ActivityItem) GetImg() string {
	if x != nil {
		return x.Img
	}
	return ""
}

func (x *ActivityItem) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *ActivityItem) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ActivityItem) GetStartedAt() int64 {
	if x != nil {
		return x.StartedAt
	}
	return 0
}

func (x *ActivityItem) GetEndedAt() int64 {
	if x != nil {
		return x.EndedAt
	}
	return 0
}

func (x *ActivityItem) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *ActivityItem) GetLadder() string {
	if x != nil {
		return x.Ladder
	}
	return ""
}

func (x *ActivityItem) GetFlowClaim() int32 {
	if x != nil {
		return x.FlowClaim
	}
	return 0
}

func (x *ActivityItem) GetMinCoin() string {
	if x != nil {
		return x.MinCoin
	}
	return ""
}

func (x *ActivityItem) GetMaxCoin() string {
	if x != nil {
		return x.MaxCoin
	}
	return ""
}

func (x *ActivityItem) GetRate() string {
	if x != nil {
		return x.Rate
	}
	return ""
}

func (x *ActivityItem) GetDepositNums() int32 {
	if x != nil {
		return x.DepositNums
	}
	return 0
}

func (x *ActivityItem) GetSubCategory() int32 {
	if x != nil {
		return x.SubCategory
	}
	return 0
}

func (x *ActivityItem) GetWeekdays() string {
	if x != nil {
		return x.Weekdays
	}
	return ""
}

func (x *ActivityItem) GetIsAuto() bool {
	if x != nil {
		return x.IsAuto
	}
	return false
}

func (x *ActivityItem) GetClearCodeMixCoin() int32 {
	if x != nil {
		return x.ClearCodeMixCoin
	}
	return 0
}

func (x *ActivityItem) GetSort() int32 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *ActivityItem) GetGameType() int32 {
	if x != nil {
		return x.GameType
	}
	return 0
}

func (x *ActivityItem) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *ActivityItem) GetOperatorName() string {
	if x != nil {
		return x.OperatorName
	}
	return ""
}

func (x *ActivityItem) GetLang() string {
	if x != nil {
		return x.Lang
	}
	return ""
}

type AddActivityResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data string `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *AddActivityResponse) Reset() {
	*x = AddActivityResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddActivityResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddActivityResponse) ProtoMessage() {}

func (x *AddActivityResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddActivityResponse.ProtoReflect.Descriptor instead.
func (*AddActivityResponse) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{47}
}

func (x *AddActivityResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *AddActivityResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *AddActivityResponse) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

type DelBannerListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data bool   `protobuf:"varint,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *DelBannerListResponse) Reset() {
	*x = DelBannerListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelBannerListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelBannerListResponse) ProtoMessage() {}

func (x *DelBannerListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelBannerListResponse.ProtoReflect.Descriptor instead.
func (*DelBannerListResponse) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{48}
}

func (x *DelBannerListResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *DelBannerListResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *DelBannerListResponse) GetData() bool {
	if x != nil {
		return x.Data
	}
	return false
}

// add
type AddNoticeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Category int32  `protobuf:"varint,1,opt,name=category,proto3" json:"category,omitempty"`
	Title    string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Content  string `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	Status   int32  `protobuf:"varint,4,opt,name=status,proto3" json:"status,omitempty"`
	Lang     string `protobuf:"bytes,5,opt,name=lang,proto3" json:"lang,omitempty"`
	Uids     string `protobuf:"bytes,6,opt,name=uids,proto3" json:"uids,omitempty"`
}

func (x *AddNoticeRequest) Reset() {
	*x = AddNoticeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddNoticeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddNoticeRequest) ProtoMessage() {}

func (x *AddNoticeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddNoticeRequest.ProtoReflect.Descriptor instead.
func (*AddNoticeRequest) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{49}
}

func (x *AddNoticeRequest) GetCategory() int32 {
	if x != nil {
		return x.Category
	}
	return 0
}

func (x *AddNoticeRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *AddNoticeRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *AddNoticeRequest) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *AddNoticeRequest) GetLang() string {
	if x != nil {
		return x.Lang
	}
	return ""
}

func (x *AddNoticeRequest) GetUids() string {
	if x != nil {
		return x.Uids
	}
	return ""
}

type ActivityDataList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current   string          `protobuf:"bytes,1,opt,name=current,proto3" json:"current,omitempty"`
	Size      string          `protobuf:"bytes,2,opt,name=size,proto3" json:"size,omitempty"`
	List      []*ActivityItem `protobuf:"bytes,3,rep,name=list,proto3" json:"list,omitempty"`
	Total     string          `protobuf:"bytes,4,opt,name=total,proto3" json:"total,omitempty"`
	Pages     string          `protobuf:"bytes,5,opt,name=pages,proto3" json:"pages,omitempty"`
	ScrollId  string          `protobuf:"bytes,6,opt,name=scrollId,proto3" json:"scrollId,omitempty"`
	SortValue string          `protobuf:"bytes,7,opt,name=sortValue,proto3" json:"sortValue,omitempty"`
	SortId    string          `protobuf:"bytes,8,opt,name=sortId,proto3" json:"sortId,omitempty"`
}

func (x *ActivityDataList) Reset() {
	*x = ActivityDataList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivityDataList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivityDataList) ProtoMessage() {}

func (x *ActivityDataList) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivityDataList.ProtoReflect.Descriptor instead.
func (*ActivityDataList) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{50}
}

func (x *ActivityDataList) GetCurrent() string {
	if x != nil {
		return x.Current
	}
	return ""
}

func (x *ActivityDataList) GetSize() string {
	if x != nil {
		return x.Size
	}
	return ""
}

func (x *ActivityDataList) GetList() []*ActivityItem {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *ActivityDataList) GetTotal() string {
	if x != nil {
		return x.Total
	}
	return ""
}

func (x *ActivityDataList) GetPages() string {
	if x != nil {
		return x.Pages
	}
	return ""
}

func (x *ActivityDataList) GetScrollId() string {
	if x != nil {
		return x.ScrollId
	}
	return ""
}

func (x *ActivityDataList) GetSortValue() string {
	if x != nil {
		return x.SortValue
	}
	return ""
}

func (x *ActivityDataList) GetSortId() string {
	if x != nil {
		return x.SortId
	}
	return ""
}

type HelpData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current   string          `protobuf:"bytes,1,opt,name=current,proto3" json:"current,omitempty"`
	Size      string          `protobuf:"bytes,2,opt,name=size,proto3" json:"size,omitempty"`
	List      []*HelpTypeInfo `protobuf:"bytes,3,rep,name=list,proto3" json:"list,omitempty"`
	Total     string          `protobuf:"bytes,4,opt,name=total,proto3" json:"total,omitempty"`
	Pages     string          `protobuf:"bytes,5,opt,name=pages,proto3" json:"pages,omitempty"`
	ScrollId  string          `protobuf:"bytes,6,opt,name=scrollId,proto3" json:"scrollId,omitempty"`
	SortValue string          `protobuf:"bytes,7,opt,name=sortValue,proto3" json:"sortValue,omitempty"`
	SortId    string          `protobuf:"bytes,8,opt,name=sortId,proto3" json:"sortId,omitempty"`
}

func (x *HelpData) Reset() {
	*x = HelpData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HelpData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HelpData) ProtoMessage() {}

func (x *HelpData) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HelpData.ProtoReflect.Descriptor instead.
func (*HelpData) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{51}
}

func (x *HelpData) GetCurrent() string {
	if x != nil {
		return x.Current
	}
	return ""
}

func (x *HelpData) GetSize() string {
	if x != nil {
		return x.Size
	}
	return ""
}

func (x *HelpData) GetList() []*HelpTypeInfo {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *HelpData) GetTotal() string {
	if x != nil {
		return x.Total
	}
	return ""
}

func (x *HelpData) GetPages() string {
	if x != nil {
		return x.Pages
	}
	return ""
}

func (x *HelpData) GetScrollId() string {
	if x != nil {
		return x.ScrollId
	}
	return ""
}

func (x *HelpData) GetSortValue() string {
	if x != nil {
		return x.SortValue
	}
	return ""
}

func (x *HelpData) GetSortId() string {
	if x != nil {
		return x.SortId
	}
	return ""
}

type LampResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32       `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string      `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data []*LampList `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *LampResponse) Reset() {
	*x = LampResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LampResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LampResponse) ProtoMessage() {}

func (x *LampResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LampResponse.ProtoReflect.Descriptor instead.
func (*LampResponse) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{52}
}

func (x *LampResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *LampResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *LampResponse) GetData() []*LampList {
	if x != nil {
		return x.Data
	}
	return nil
}

type MsgListItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	NoticeId  string `protobuf:"bytes,2,opt,name=noticeId,proto3" json:"noticeId,omitempty"`
	Title     string `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Content   string `protobuf:"bytes,4,opt,name=content,proto3" json:"content,omitempty"`
	IsRead    bool   `protobuf:"varint,5,opt,name=isRead,proto3" json:"isRead,omitempty"`
	Category  int32  `protobuf:"varint,6,opt,name=category,proto3" json:"category,omitempty"`
	CreatedAt int64  `protobuf:"varint,7,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	Read      bool   `protobuf:"varint,8,opt,name=read,proto3" json:"read,omitempty"`
}

func (x *MsgListItem) Reset() {
	*x = MsgListItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgListItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgListItem) ProtoMessage() {}

func (x *MsgListItem) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgListItem.ProtoReflect.Descriptor instead.
func (*MsgListItem) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{53}
}

func (x *MsgListItem) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MsgListItem) GetNoticeId() string {
	if x != nil {
		return x.NoticeId
	}
	return ""
}

func (x *MsgListItem) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *MsgListItem) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *MsgListItem) GetIsRead() bool {
	if x != nil {
		return x.IsRead
	}
	return false
}

func (x *MsgListItem) GetCategory() int32 {
	if x != nil {
		return x.Category
	}
	return 0
}

func (x *MsgListItem) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *MsgListItem) GetRead() bool {
	if x != nil {
		return x.Read
	}
	return false
}

// update
type UpdateNoticeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	NoticeId     string `protobuf:"bytes,2,opt,name=noticeId,proto3" json:"noticeId,omitempty"`
	Title        string `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Content      string `protobuf:"bytes,4,opt,name=content,proto3" json:"content,omitempty"`
	Category     int32  `protobuf:"varint,5,opt,name=category,proto3" json:"category,omitempty"`
	Status       int32  `protobuf:"varint,6,opt,name=status,proto3" json:"status,omitempty"`
	CreatedAt    int64  `protobuf:"varint,7,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	Uids         string `protobuf:"bytes,8,opt,name=uids,proto3" json:"uids,omitempty"`
	UpdatedAt    int64  `protobuf:"varint,9,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	OperatorName string `protobuf:"bytes,10,opt,name=operatorName,proto3" json:"operatorName,omitempty"`
	Key          string `protobuf:"bytes,11,opt,name=key,proto3" json:"key,omitempty"`
	Lang         string `protobuf:"bytes,12,opt,name=lang,proto3" json:"lang,omitempty"`
}

func (x *UpdateNoticeRequest) Reset() {
	*x = UpdateNoticeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateNoticeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateNoticeRequest) ProtoMessage() {}

func (x *UpdateNoticeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateNoticeRequest.ProtoReflect.Descriptor instead.
func (*UpdateNoticeRequest) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{54}
}

func (x *UpdateNoticeRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateNoticeRequest) GetNoticeId() string {
	if x != nil {
		return x.NoticeId
	}
	return ""
}

func (x *UpdateNoticeRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *UpdateNoticeRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *UpdateNoticeRequest) GetCategory() int32 {
	if x != nil {
		return x.Category
	}
	return 0
}

func (x *UpdateNoticeRequest) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *UpdateNoticeRequest) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *UpdateNoticeRequest) GetUids() string {
	if x != nil {
		return x.Uids
	}
	return ""
}

func (x *UpdateNoticeRequest) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *UpdateNoticeRequest) GetOperatorName() string {
	if x != nil {
		return x.OperatorName
	}
	return ""
}

func (x *UpdateNoticeRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *UpdateNoticeRequest) GetLang() string {
	if x != nil {
		return x.Lang
	}
	return ""
}

// delete
type DelFrontClassifyCmsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []int32 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
}

func (x *DelFrontClassifyCmsRequest) Reset() {
	*x = DelFrontClassifyCmsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelFrontClassifyCmsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelFrontClassifyCmsRequest) ProtoMessage() {}

func (x *DelFrontClassifyCmsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelFrontClassifyCmsRequest.ProtoReflect.Descriptor instead.
func (*DelFrontClassifyCmsRequest) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{55}
}

func (x *DelFrontClassifyCmsRequest) GetIds() []int32 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type SportBetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32           `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string          `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data []*SportBetData `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *SportBetResponse) Reset() {
	*x = SportBetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SportBetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SportBetResponse) ProtoMessage() {}

func (x *SportBetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SportBetResponse.ProtoReflect.Descriptor instead.
func (*SportBetResponse) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{56}
}

func (x *SportBetResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *SportBetResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *SportBetResponse) GetData() []*SportBetData {
	if x != nil {
		return x.Data
	}
	return nil
}

type HelpInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	HelpTypeId   int32  `protobuf:"varint,2,opt,name=helpTypeId,proto3" json:"helpTypeId,omitempty"`
	Language     string `protobuf:"bytes,3,opt,name=language,proto3" json:"language,omitempty"`
	Title        string `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`
	Sort         int32  `protobuf:"varint,5,opt,name=sort,proto3" json:"sort,omitempty"`
	Status       int32  `protobuf:"varint,6,opt,name=status,proto3" json:"status,omitempty"`
	Content      string `protobuf:"bytes,7,opt,name=content,proto3" json:"content,omitempty"`
	CreateBy     string `protobuf:"bytes,8,opt,name=createBy,proto3" json:"createBy,omitempty"`
	CreatedAt    int64  `protobuf:"varint,9,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdateBy     string `protobuf:"bytes,10,opt,name=updateBy,proto3" json:"updateBy,omitempty"`
	UpdatedAt    int64  `protobuf:"varint,11,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	HelpTypeName string `protobuf:"bytes,12,opt,name=helpTypeName,proto3" json:"helpTypeName,omitempty"`
}

func (x *HelpInfo) Reset() {
	*x = HelpInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HelpInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HelpInfo) ProtoMessage() {}

func (x *HelpInfo) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HelpInfo.ProtoReflect.Descriptor instead.
func (*HelpInfo) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{57}
}

func (x *HelpInfo) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *HelpInfo) GetHelpTypeId() int32 {
	if x != nil {
		return x.HelpTypeId
	}
	return 0
}

func (x *HelpInfo) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *HelpInfo) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *HelpInfo) GetSort() int32 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *HelpInfo) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *HelpInfo) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *HelpInfo) GetCreateBy() string {
	if x != nil {
		return x.CreateBy
	}
	return ""
}

func (x *HelpInfo) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *HelpInfo) GetUpdateBy() string {
	if x != nil {
		return x.UpdateBy
	}
	return ""
}

func (x *HelpInfo) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *HelpInfo) GetHelpTypeName() string {
	if x != nil {
		return x.HelpTypeName
	}
	return ""
}

type GameCategory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Sort           int32   `protobuf:"varint,2,opt,name=sort,proto3" json:"sort,omitempty"`
	ClassName      string  `protobuf:"bytes,3,opt,name=className,proto3" json:"className,omitempty"`
	LogoUrl        string  `protobuf:"bytes,4,opt,name=logoUrl,proto3" json:"logoUrl,omitempty"`
	GameResDtoList []*Game `protobuf:"bytes,5,rep,name=gameResDtoList,proto3" json:"gameResDtoList,omitempty"`
}

func (x *GameCategory) Reset() {
	*x = GameCategory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameCategory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameCategory) ProtoMessage() {}

func (x *GameCategory) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameCategory.ProtoReflect.Descriptor instead.
func (*GameCategory) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{58}
}

func (x *GameCategory) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GameCategory) GetSort() int32 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *GameCategory) GetClassName() string {
	if x != nil {
		return x.ClassName
	}
	return ""
}

func (x *GameCategory) GetLogoUrl() string {
	if x != nil {
		return x.LogoUrl
	}
	return ""
}

func (x *GameCategory) GetGameResDtoList() []*Game {
	if x != nil {
		return x.GameResDtoList
	}
	return nil
}

type MsgResponseData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current   string         `protobuf:"bytes,1,opt,name=current,proto3" json:"current,omitempty"`
	Size      string         `protobuf:"bytes,2,opt,name=size,proto3" json:"size,omitempty"`
	List      []*MsgListItem `protobuf:"bytes,3,rep,name=list,proto3" json:"list,omitempty"`
	Total     string         `protobuf:"bytes,4,opt,name=total,proto3" json:"total,omitempty"`
	Pages     string         `protobuf:"bytes,5,opt,name=pages,proto3" json:"pages,omitempty"`
	ScrollId  string         `protobuf:"bytes,6,opt,name=scrollId,proto3" json:"scrollId,omitempty"`
	SortValue string         `protobuf:"bytes,7,opt,name=sortValue,proto3" json:"sortValue,omitempty"`
	SortId    string         `protobuf:"bytes,8,opt,name=sortId,proto3" json:"sortId,omitempty"`
}

func (x *MsgResponseData) Reset() {
	*x = MsgResponseData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgResponseData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgResponseData) ProtoMessage() {}

func (x *MsgResponseData) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgResponseData.ProtoReflect.Descriptor instead.
func (*MsgResponseData) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{59}
}

func (x *MsgResponseData) GetCurrent() string {
	if x != nil {
		return x.Current
	}
	return ""
}

func (x *MsgResponseData) GetSize() string {
	if x != nil {
		return x.Size
	}
	return ""
}

func (x *MsgResponseData) GetList() []*MsgListItem {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *MsgResponseData) GetTotal() string {
	if x != nil {
		return x.Total
	}
	return ""
}

func (x *MsgResponseData) GetPages() string {
	if x != nil {
		return x.Pages
	}
	return ""
}

func (x *MsgResponseData) GetScrollId() string {
	if x != nil {
		return x.ScrollId
	}
	return ""
}

func (x *MsgResponseData) GetSortValue() string {
	if x != nil {
		return x.SortValue
	}
	return ""
}

func (x *MsgResponseData) GetSortId() string {
	if x != nil {
		return x.SortId
	}
	return ""
}

type AddBannerListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Device      string `protobuf:"bytes,1,opt,name=device,proto3" json:"device,omitempty"`
	Sort        string `protobuf:"bytes,2,opt,name=sort,proto3" json:"sort,omitempty"`
	Status      string `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	Language    string `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	Img         string `protobuf:"bytes,5,opt,name=img,proto3" json:"img,omitempty"`
	JumpType    int32  `protobuf:"varint,6,opt,name=jumpType,proto3" json:"jumpType,omitempty"`
	Href        string `protobuf:"bytes,7,opt,name=href,proto3" json:"href,omitempty"`
	Type        int64  `protobuf:"varint,8,opt,name=type,proto3" json:"type,omitempty"`
	GameId      string `protobuf:"bytes,9,opt,name=gameId,proto3" json:"gameId,omitempty"`
	GameGroupId string `protobuf:"bytes,10,opt,name=gameGroupId,proto3" json:"gameGroupId,omitempty"`
	PlatId      string `protobuf:"bytes,11,opt,name=platId,proto3" json:"platId,omitempty"`
	SlotId      string `protobuf:"bytes,12,opt,name=slotId,proto3" json:"slotId,omitempty"`
}

func (x *AddBannerListRequest) Reset() {
	*x = AddBannerListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddBannerListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddBannerListRequest) ProtoMessage() {}

func (x *AddBannerListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddBannerListRequest.ProtoReflect.Descriptor instead.
func (*AddBannerListRequest) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{60}
}

func (x *AddBannerListRequest) GetDevice() string {
	if x != nil {
		return x.Device
	}
	return ""
}

func (x *AddBannerListRequest) GetSort() string {
	if x != nil {
		return x.Sort
	}
	return ""
}

func (x *AddBannerListRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *AddBannerListRequest) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *AddBannerListRequest) GetImg() string {
	if x != nil {
		return x.Img
	}
	return ""
}

func (x *AddBannerListRequest) GetJumpType() int32 {
	if x != nil {
		return x.JumpType
	}
	return 0
}

func (x *AddBannerListRequest) GetHref() string {
	if x != nil {
		return x.Href
	}
	return ""
}

func (x *AddBannerListRequest) GetType() int64 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *AddBannerListRequest) GetGameId() string {
	if x != nil {
		return x.GameId
	}
	return ""
}

func (x *AddBannerListRequest) GetGameGroupId() string {
	if x != nil {
		return x.GameGroupId
	}
	return ""
}

func (x *AddBannerListRequest) GetPlatId() string {
	if x != nil {
		return x.PlatId
	}
	return ""
}

func (x *AddBannerListRequest) GetSlotId() string {
	if x != nil {
		return x.SlotId
	}
	return ""
}

type UpdateBannerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Device      string `protobuf:"bytes,2,opt,name=device,proto3" json:"device,omitempty"`
	Sort        string `protobuf:"bytes,3,opt,name=sort,proto3" json:"sort,omitempty"`
	Status      string `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`
	Language    string `protobuf:"bytes,5,opt,name=language,proto3" json:"language,omitempty"`
	Img         string `protobuf:"bytes,6,opt,name=img,proto3" json:"img,omitempty"`
	JumpType    int32  `protobuf:"varint,7,opt,name=jumpType,proto3" json:"jumpType,omitempty"`
	Href        string `protobuf:"bytes,8,opt,name=href,proto3" json:"href,omitempty"`
	Type        int64  `protobuf:"varint,9,opt,name=type,proto3" json:"type,omitempty"`
	GameId      string `protobuf:"bytes,10,opt,name=gameId,proto3" json:"gameId,omitempty"`
	GameGroupId string `protobuf:"bytes,11,opt,name=gameGroupId,proto3" json:"gameGroupId,omitempty"`
	PlatId      string `protobuf:"bytes,12,opt,name=platId,proto3" json:"platId,omitempty"`
	SlotId      string `protobuf:"bytes,13,opt,name=slotId,proto3" json:"slotId,omitempty"`
}

func (x *UpdateBannerRequest) Reset() {
	*x = UpdateBannerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateBannerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateBannerRequest) ProtoMessage() {}

func (x *UpdateBannerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateBannerRequest.ProtoReflect.Descriptor instead.
func (*UpdateBannerRequest) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{61}
}

func (x *UpdateBannerRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateBannerRequest) GetDevice() string {
	if x != nil {
		return x.Device
	}
	return ""
}

func (x *UpdateBannerRequest) GetSort() string {
	if x != nil {
		return x.Sort
	}
	return ""
}

func (x *UpdateBannerRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *UpdateBannerRequest) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *UpdateBannerRequest) GetImg() string {
	if x != nil {
		return x.Img
	}
	return ""
}

func (x *UpdateBannerRequest) GetJumpType() int32 {
	if x != nil {
		return x.JumpType
	}
	return 0
}

func (x *UpdateBannerRequest) GetHref() string {
	if x != nil {
		return x.Href
	}
	return ""
}

func (x *UpdateBannerRequest) GetType() int64 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *UpdateBannerRequest) GetGameId() string {
	if x != nil {
		return x.GameId
	}
	return ""
}

func (x *UpdateBannerRequest) GetGameGroupId() string {
	if x != nil {
		return x.GameGroupId
	}
	return ""
}

func (x *UpdateBannerRequest) GetPlatId() string {
	if x != nil {
		return x.PlatId
	}
	return ""
}

func (x *UpdateBannerRequest) GetSlotId() string {
	if x != nil {
		return x.SlotId
	}
	return ""
}

// read
type GameInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Sort       int32  `protobuf:"varint,2,opt,name=sort,proto3" json:"sort,omitempty"`
	LogoUrl    string `protobuf:"bytes,3,opt,name=logoUrl,proto3" json:"logoUrl,omitempty"`
	Enable     int32  `protobuf:"varint,4,opt,name=enable,proto3" json:"enable,omitempty"`
	GameCount  int32  `protobuf:"varint,5,opt,name=gameCount,proto3" json:"gameCount,omitempty"`
	CreatedAt  string `protobuf:"bytes,6,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	CreateUser string `protobuf:"bytes,7,opt,name=createUser,proto3" json:"createUser,omitempty"`
	UpdatedAt  string `protobuf:"bytes,8,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	UpdateUser string `protobuf:"bytes,9,opt,name=updateUser,proto3" json:"updateUser,omitempty"`
	Cname      string `protobuf:"bytes,10,opt,name=cname,proto3" json:"cname,omitempty"`
	Lang       string `protobuf:"bytes,11,opt,name=lang,proto3" json:"lang,omitempty"`
}

func (x *GameInfo) Reset() {
	*x = GameInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameInfo) ProtoMessage() {}

func (x *GameInfo) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameInfo.ProtoReflect.Descriptor instead.
func (*GameInfo) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{62}
}

func (x *GameInfo) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GameInfo) GetSort() int32 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *GameInfo) GetLogoUrl() string {
	if x != nil {
		return x.LogoUrl
	}
	return ""
}

func (x *GameInfo) GetEnable() int32 {
	if x != nil {
		return x.Enable
	}
	return 0
}

func (x *GameInfo) GetGameCount() int32 {
	if x != nil {
		return x.GameCount
	}
	return 0
}

func (x *GameInfo) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *GameInfo) GetCreateUser() string {
	if x != nil {
		return x.CreateUser
	}
	return ""
}

func (x *GameInfo) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *GameInfo) GetUpdateUser() string {
	if x != nil {
		return x.UpdateUser
	}
	return ""
}

func (x *GameInfo) GetCname() string {
	if x != nil {
		return x.Cname
	}
	return ""
}

func (x *GameInfo) GetLang() string {
	if x != nil {
		return x.Lang
	}
	return ""
}

// create
type AddFrontClassifyCmsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClassName string `protobuf:"bytes,1,opt,name=className,proto3" json:"className,omitempty"`
	Enable    int32  `protobuf:"varint,2,opt,name=enable,proto3" json:"enable,omitempty"`
	LogoUrl   string `protobuf:"bytes,3,opt,name=logoUrl,proto3" json:"logoUrl,omitempty"`
	Sort      string `protobuf:"bytes,4,opt,name=sort,proto3" json:"sort,omitempty"`
	Lang      string `protobuf:"bytes,5,opt,name=lang,proto3" json:"lang,omitempty"`
}

func (x *AddFrontClassifyCmsRequest) Reset() {
	*x = AddFrontClassifyCmsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddFrontClassifyCmsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddFrontClassifyCmsRequest) ProtoMessage() {}

func (x *AddFrontClassifyCmsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddFrontClassifyCmsRequest.ProtoReflect.Descriptor instead.
func (*AddFrontClassifyCmsRequest) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{63}
}

func (x *AddFrontClassifyCmsRequest) GetClassName() string {
	if x != nil {
		return x.ClassName
	}
	return ""
}

func (x *AddFrontClassifyCmsRequest) GetEnable() int32 {
	if x != nil {
		return x.Enable
	}
	return 0
}

func (x *AddFrontClassifyCmsRequest) GetLogoUrl() string {
	if x != nil {
		return x.LogoUrl
	}
	return ""
}

func (x *AddFrontClassifyCmsRequest) GetSort() string {
	if x != nil {
		return x.Sort
	}
	return ""
}

func (x *AddFrontClassifyCmsRequest) GetLang() string {
	if x != nil {
		return x.Lang
	}
	return ""
}

type NoticeCountList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Category int32  `protobuf:"varint,1,opt,name=category,proto3" json:"category,omitempty"`
	Count    string `protobuf:"bytes,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *NoticeCountList) Reset() {
	*x = NoticeCountList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NoticeCountList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NoticeCountList) ProtoMessage() {}

func (x *NoticeCountList) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NoticeCountList.ProtoReflect.Descriptor instead.
func (*NoticeCountList) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{64}
}

func (x *NoticeCountList) GetCategory() int32 {
	if x != nil {
		return x.Category
	}
	return 0
}

func (x *NoticeCountList) GetCount() string {
	if x != nil {
		return x.Count
	}
	return ""
}

// read
type NoticeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current   int32       `protobuf:"varint,1,opt,name=current,proto3" json:"current,omitempty"`
	Size      int32       `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	Data      *NoticeData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	SortField []string    `protobuf:"bytes,4,rep,name=sortField,proto3" json:"sortField,omitempty"`
	SortKey   string      `protobuf:"bytes,5,opt,name=sortKey,proto3" json:"sortKey,omitempty"`
}

func (x *NoticeRequest) Reset() {
	*x = NoticeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NoticeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NoticeRequest) ProtoMessage() {}

func (x *NoticeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NoticeRequest.ProtoReflect.Descriptor instead.
func (*NoticeRequest) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{65}
}

func (x *NoticeRequest) GetCurrent() int32 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *NoticeRequest) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *NoticeRequest) GetData() *NoticeData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *NoticeRequest) GetSortField() []string {
	if x != nil {
		return x.SortField
	}
	return nil
}

func (x *NoticeRequest) GetSortKey() string {
	if x != nil {
		return x.SortKey
	}
	return ""
}

type UpdateNoticeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data string `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *UpdateNoticeResponse) Reset() {
	*x = UpdateNoticeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateNoticeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateNoticeResponse) ProtoMessage() {}

func (x *UpdateNoticeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateNoticeResponse.ProtoReflect.Descriptor instead.
func (*UpdateNoticeResponse) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{66}
}

func (x *UpdateNoticeResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *UpdateNoticeResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *UpdateNoticeResponse) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

type DemoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int64  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg     string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	GameUrl string `protobuf:"bytes,3,opt,name=game_url,json=gameUrl,proto3" json:"game_url,omitempty"`
}

func (x *DemoResp) Reset() {
	*x = DemoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DemoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DemoResp) ProtoMessage() {}

func (x *DemoResp) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DemoResp.ProtoReflect.Descriptor instead.
func (*DemoResp) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{67}
}

func (x *DemoResp) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *DemoResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *DemoResp) GetGameUrl() string {
	if x != nil {
		return x.GameUrl
	}
	return ""
}

type DeleteActivityRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteActivityRequest) Reset() {
	*x = DeleteActivityRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteActivityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteActivityRequest) ProtoMessage() {}

func (x *DeleteActivityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteActivityRequest.ProtoReflect.Descriptor instead.
func (*DeleteActivityRequest) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{68}
}

func (x *DeleteActivityRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

// lamplist
type LampRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sign bool `protobuf:"varint,1,opt,name=sign,proto3" json:"sign,omitempty"`
}

func (x *LampRequest) Reset() {
	*x = LampRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LampRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LampRequest) ProtoMessage() {}

func (x *LampRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LampRequest.ProtoReflect.Descriptor instead.
func (*LampRequest) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{69}
}

func (x *LampRequest) GetSign() bool {
	if x != nil {
		return x.Sign
	}
	return false
}

type NoticeCountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sign bool `protobuf:"varint,1,opt,name=sign,proto3" json:"sign,omitempty"`
}

func (x *NoticeCountRequest) Reset() {
	*x = NoticeCountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NoticeCountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NoticeCountRequest) ProtoMessage() {}

func (x *NoticeCountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NoticeCountRequest.ProtoReflect.Descriptor instead.
func (*NoticeCountRequest) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{70}
}

func (x *NoticeCountRequest) GetSign() bool {
	if x != nil {
		return x.Sign
	}
	return false
}

type MsgResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32            `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string           `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *MsgResponseData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *MsgResponse) Reset() {
	*x = MsgResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgResponse) ProtoMessage() {}

func (x *MsgResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgResponse.ProtoReflect.Descriptor instead.
func (*MsgResponse) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{71}
}

func (x *MsgResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *MsgResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *MsgResponse) GetData() *MsgResponseData {
	if x != nil {
		return x.Data
	}
	return nil
}

type FrontClassifyCmsPageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current int32             `protobuf:"varint,1,opt,name=current,proto3" json:"current,omitempty"`
	Size    int32             `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	Data    map[string]string `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *FrontClassifyCmsPageRequest) Reset() {
	*x = FrontClassifyCmsPageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FrontClassifyCmsPageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FrontClassifyCmsPageRequest) ProtoMessage() {}

func (x *FrontClassifyCmsPageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FrontClassifyCmsPageRequest.ProtoReflect.Descriptor instead.
func (*FrontClassifyCmsPageRequest) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{72}
}

func (x *FrontClassifyCmsPageRequest) GetCurrent() int32 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *FrontClassifyCmsPageRequest) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *FrontClassifyCmsPageRequest) GetData() map[string]string {
	if x != nil {
		return x.Data
	}
	return nil
}

type HelpInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current int32           `protobuf:"varint,1,opt,name=current,proto3" json:"current,omitempty"`
	Size    int32           `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	SortKey string          `protobuf:"bytes,3,opt,name=sortKey,proto3" json:"sortKey,omitempty"`
	Sign    bool            `protobuf:"varint,4,opt,name=sign,proto3" json:"sign,omitempty"`
	Data    *HelpInfoParams `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *HelpInfoRequest) Reset() {
	*x = HelpInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HelpInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HelpInfoRequest) ProtoMessage() {}

func (x *HelpInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HelpInfoRequest.ProtoReflect.Descriptor instead.
func (*HelpInfoRequest) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{73}
}

func (x *HelpInfoRequest) GetCurrent() int32 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *HelpInfoRequest) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *HelpInfoRequest) GetSortKey() string {
	if x != nil {
		return x.SortKey
	}
	return ""
}

func (x *HelpInfoRequest) GetSign() bool {
	if x != nil {
		return x.Sign
	}
	return false
}

func (x *HelpInfoRequest) GetData() *HelpInfoParams {
	if x != nil {
		return x.Data
	}
	return nil
}

type RomoveHelpInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ListId []int64 `protobuf:"varint,1,rep,packed,name=listId,proto3" json:"listId,omitempty"`
}

func (x *RomoveHelpInfoRequest) Reset() {
	*x = RomoveHelpInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RomoveHelpInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RomoveHelpInfoRequest) ProtoMessage() {}

func (x *RomoveHelpInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RomoveHelpInfoRequest.ProtoReflect.Descriptor instead.
func (*RomoveHelpInfoRequest) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{74}
}

func (x *RomoveHelpInfoRequest) GetListId() []int64 {
	if x != nil {
		return x.ListId
	}
	return nil
}

type EditHelpInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	HelpTypeId int64  `protobuf:"varint,2,opt,name=helpTypeId,proto3" json:"helpTypeId,omitempty"`
	Language   string `protobuf:"bytes,3,opt,name=language,proto3" json:"language,omitempty"`
	Title      string `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`
	Sort       int64  `protobuf:"varint,5,opt,name=sort,proto3" json:"sort,omitempty"`
	Status     int64  `protobuf:"varint,6,opt,name=status,proto3" json:"status,omitempty"` //状态(0开启，1关闭
	Content    string `protobuf:"bytes,7,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *EditHelpInfoRequest) Reset() {
	*x = EditHelpInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EditHelpInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditHelpInfoRequest) ProtoMessage() {}

func (x *EditHelpInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditHelpInfoRequest.ProtoReflect.Descriptor instead.
func (*EditHelpInfoRequest) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{75}
}

func (x *EditHelpInfoRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *EditHelpInfoRequest) GetHelpTypeId() int64 {
	if x != nil {
		return x.HelpTypeId
	}
	return 0
}

func (x *EditHelpInfoRequest) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *EditHelpInfoRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *EditHelpInfoRequest) GetSort() int64 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *EditHelpInfoRequest) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *EditHelpInfoRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type EditHelpInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data bool   `protobuf:"varint,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *EditHelpInfoResponse) Reset() {
	*x = EditHelpInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EditHelpInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditHelpInfoResponse) ProtoMessage() {}

func (x *EditHelpInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditHelpInfoResponse.ProtoReflect.Descriptor instead.
func (*EditHelpInfoResponse) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{76}
}

func (x *EditHelpInfoResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *EditHelpInfoResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *EditHelpInfoResponse) GetData() bool {
	if x != nil {
		return x.Data
	}
	return false
}

type AddHelpInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	HelpTypeId int64  `protobuf:"varint,2,opt,name=helpTypeId,proto3" json:"helpTypeId,omitempty"`
	Language   string `protobuf:"bytes,3,opt,name=language,proto3" json:"language,omitempty"`
	Title      string `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`
	Sort       int64  `protobuf:"varint,5,opt,name=sort,proto3" json:"sort,omitempty"`
	Status     int64  `protobuf:"varint,6,opt,name=status,proto3" json:"status,omitempty"` //状态(0开启，1关闭
	Content    string `protobuf:"bytes,7,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *AddHelpInfoRequest) Reset() {
	*x = AddHelpInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddHelpInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddHelpInfoRequest) ProtoMessage() {}

func (x *AddHelpInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddHelpInfoRequest.ProtoReflect.Descriptor instead.
func (*AddHelpInfoRequest) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{77}
}

func (x *AddHelpInfoRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AddHelpInfoRequest) GetHelpTypeId() int64 {
	if x != nil {
		return x.HelpTypeId
	}
	return 0
}

func (x *AddHelpInfoRequest) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *AddHelpInfoRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *AddHelpInfoRequest) GetSort() int64 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *AddHelpInfoRequest) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *AddHelpInfoRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type AddHelpInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data bool   `protobuf:"varint,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *AddHelpInfoResponse) Reset() {
	*x = AddHelpInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddHelpInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddHelpInfoResponse) ProtoMessage() {}

func (x *AddHelpInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddHelpInfoResponse.ProtoReflect.Descriptor instead.
func (*AddHelpInfoResponse) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{78}
}

func (x *AddHelpInfoResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *AddHelpInfoResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *AddHelpInfoResponse) GetData() bool {
	if x != nil {
		return x.Data
	}
	return false
}

type DelMsgRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Sign     bool   `protobuf:"varint,2,opt,name=sign,proto3" json:"sign,omitempty"`
	Category string `protobuf:"bytes,3,opt,name=category,proto3" json:"category,omitempty"`
}

func (x *DelMsgRequest) Reset() {
	*x = DelMsgRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelMsgRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelMsgRequest) ProtoMessage() {}

func (x *DelMsgRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelMsgRequest.ProtoReflect.Descriptor instead.
func (*DelMsgRequest) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{79}
}

func (x *DelMsgRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DelMsgRequest) GetSign() bool {
	if x != nil {
		return x.Sign
	}
	return false
}

func (x *DelMsgRequest) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

type DeleteNoticeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data string `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *DeleteNoticeResponse) Reset() {
	*x = DeleteNoticeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteNoticeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteNoticeResponse) ProtoMessage() {}

func (x *DeleteNoticeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteNoticeResponse.ProtoReflect.Descriptor instead.
func (*DeleteNoticeResponse) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{80}
}

func (x *DeleteNoticeResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *DeleteNoticeResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *DeleteNoticeResponse) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

type ActivityRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current   int32         `protobuf:"varint,1,opt,name=current,proto3" json:"current,omitempty"`
	Size      int32         `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	Data      *ActivityData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	SortField []string      `protobuf:"bytes,4,rep,name=sortField,proto3" json:"sortField,omitempty"`
	SortKey   string        `protobuf:"bytes,5,opt,name=sortKey,proto3" json:"sortKey,omitempty"`
}

func (x *ActivityRequest) Reset() {
	*x = ActivityRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivityRequest) ProtoMessage() {}

func (x *ActivityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivityRequest.ProtoReflect.Descriptor instead.
func (*ActivityRequest) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{81}
}

func (x *ActivityRequest) GetCurrent() int32 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *ActivityRequest) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *ActivityRequest) GetData() *ActivityData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ActivityRequest) GetSortField() []string {
	if x != nil {
		return x.SortField
	}
	return nil
}

func (x *ActivityRequest) GetSortKey() string {
	if x != nil {
		return x.SortKey
	}
	return ""
}

type ActivityDetailReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ActivityDetailReq) Reset() {
	*x = ActivityDetailReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[82]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivityDetailReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivityDetailReq) ProtoMessage() {}

func (x *ActivityDetailReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[82]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivityDetailReq.ProtoReflect.Descriptor instead.
func (*ActivityDetailReq) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{82}
}

func (x *ActivityDetailReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type ActivityDetailResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32               `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string              `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *ActivityDetailData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *ActivityDetailResp) Reset() {
	*x = ActivityDetailResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[83]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivityDetailResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivityDetailResp) ProtoMessage() {}

func (x *ActivityDetailResp) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[83]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivityDetailResp.ProtoReflect.Descriptor instead.
func (*ActivityDetailResp) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{83}
}

func (x *ActivityDetailResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ActivityDetailResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *ActivityDetailResp) GetData() *ActivityDetailData {
	if x != nil {
		return x.Data
	}
	return nil
}

type ActivityDetailData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Code             string `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	CodeZh           string `protobuf:"bytes,3,opt,name=codeZh,proto3" json:"codeZh,omitempty"`
	Img              string `protobuf:"bytes,4,opt,name=img,proto3" json:"img,omitempty"`
	Category         string `protobuf:"bytes,5,opt,name=category,proto3" json:"category,omitempty"`
	Description      string `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`
	StartedAt        int64  `protobuf:"varint,7,opt,name=startedAt,proto3" json:"startedAt,omitempty"`
	EndedAt          int64  `protobuf:"varint,8,opt,name=endedAt,proto3" json:"endedAt,omitempty"`
	Status           int64  `protobuf:"varint,9,opt,name=status,proto3" json:"status,omitempty"`
	Ladder           string `protobuf:"bytes,10,opt,name=ladder,proto3" json:"ladder,omitempty"`
	FlowClaim        int64  `protobuf:"varint,11,opt,name=flowClaim,proto3" json:"flowClaim,omitempty"`
	MinCoin          string `protobuf:"bytes,12,opt,name=minCoin,proto3" json:"minCoin,omitempty"`
	MaxCoin          string `protobuf:"bytes,13,opt,name=maxCoin,proto3" json:"maxCoin,omitempty"`
	Rate             string `protobuf:"bytes,14,opt,name=rate,proto3" json:"rate,omitempty"`
	DepositNums      int64  `protobuf:"varint,15,opt,name=depositNums,proto3" json:"depositNums,omitempty"`
	SubCategory      int64  `protobuf:"varint,16,opt,name=subCategory,proto3" json:"subCategory,omitempty"`
	Weekdays         string `protobuf:"bytes,17,opt,name=weekdays,proto3" json:"weekdays,omitempty"`
	IsAuto           bool   `protobuf:"varint,18,opt,name=isAuto,proto3" json:"isAuto,omitempty"`
	ClearCodeMixCoin int64  `protobuf:"varint,19,opt,name=clearCodeMixCoin,proto3" json:"clearCodeMixCoin,omitempty"`
	Sort             int64  `protobuf:"varint,20,opt,name=sort,proto3" json:"sort,omitempty"`
	GameType         int64  `protobuf:"varint,21,opt,name=gameType,proto3" json:"gameType,omitempty"`
	UpdatedAt        int64  `protobuf:"varint,22,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	OperatorName     string `protobuf:"bytes,23,opt,name=operatorName,proto3" json:"operatorName,omitempty"`
	Lang             string `protobuf:"bytes,24,opt,name=lang,proto3" json:"lang,omitempty"`
}

func (x *ActivityDetailData) Reset() {
	*x = ActivityDetailData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[84]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivityDetailData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivityDetailData) ProtoMessage() {}

func (x *ActivityDetailData) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[84]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivityDetailData.ProtoReflect.Descriptor instead.
func (*ActivityDetailData) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{84}
}

func (x *ActivityDetailData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ActivityDetailData) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *ActivityDetailData) GetCodeZh() string {
	if x != nil {
		return x.CodeZh
	}
	return ""
}

func (x *ActivityDetailData) GetImg() string {
	if x != nil {
		return x.Img
	}
	return ""
}

func (x *ActivityDetailData) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *ActivityDetailData) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ActivityDetailData) GetStartedAt() int64 {
	if x != nil {
		return x.StartedAt
	}
	return 0
}

func (x *ActivityDetailData) GetEndedAt() int64 {
	if x != nil {
		return x.EndedAt
	}
	return 0
}

func (x *ActivityDetailData) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *ActivityDetailData) GetLadder() string {
	if x != nil {
		return x.Ladder
	}
	return ""
}

func (x *ActivityDetailData) GetFlowClaim() int64 {
	if x != nil {
		return x.FlowClaim
	}
	return 0
}

func (x *ActivityDetailData) GetMinCoin() string {
	if x != nil {
		return x.MinCoin
	}
	return ""
}

func (x *ActivityDetailData) GetMaxCoin() string {
	if x != nil {
		return x.MaxCoin
	}
	return ""
}

func (x *ActivityDetailData) GetRate() string {
	if x != nil {
		return x.Rate
	}
	return ""
}

func (x *ActivityDetailData) GetDepositNums() int64 {
	if x != nil {
		return x.DepositNums
	}
	return 0
}

func (x *ActivityDetailData) GetSubCategory() int64 {
	if x != nil {
		return x.SubCategory
	}
	return 0
}

func (x *ActivityDetailData) GetWeekdays() string {
	if x != nil {
		return x.Weekdays
	}
	return ""
}

func (x *ActivityDetailData) GetIsAuto() bool {
	if x != nil {
		return x.IsAuto
	}
	return false
}

func (x *ActivityDetailData) GetClearCodeMixCoin() int64 {
	if x != nil {
		return x.ClearCodeMixCoin
	}
	return 0
}

func (x *ActivityDetailData) GetSort() int64 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *ActivityDetailData) GetGameType() int64 {
	if x != nil {
		return x.GameType
	}
	return 0
}

func (x *ActivityDetailData) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *ActivityDetailData) GetOperatorName() string {
	if x != nil {
		return x.OperatorName
	}
	return ""
}

func (x *ActivityDetailData) GetLang() string {
	if x != nil {
		return x.Lang
	}
	return ""
}

type SportBetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id  string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Uid string `protobuf:"bytes,2,opt,name=uid,proto3" json:"uid,omitempty"`
}

func (x *SportBetRequest) Reset() {
	*x = SportBetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[85]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SportBetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SportBetRequest) ProtoMessage() {}

func (x *SportBetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[85]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SportBetRequest.ProtoReflect.Descriptor instead.
func (*SportBetRequest) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{85}
}

func (x *SportBetRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SportBetRequest) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

// pageHelpInfo
type HelpInfoParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HelpTypeId int32 `protobuf:"varint,1,opt,name=helpTypeId,proto3" json:"helpTypeId,omitempty"`
}

func (x *HelpInfoParams) Reset() {
	*x = HelpInfoParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[86]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HelpInfoParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HelpInfoParams) ProtoMessage() {}

func (x *HelpInfoParams) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[86]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HelpInfoParams.ProtoReflect.Descriptor instead.
func (*HelpInfoParams) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{86}
}

func (x *HelpInfoParams) GetHelpTypeId() int32 {
	if x != nil {
		return x.HelpTypeId
	}
	return 0
}

// banner
type BannerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type   int32  `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"`
	Sign   bool   `protobuf:"varint,2,opt,name=sign,proto3" json:"sign,omitempty"`
	Device string `protobuf:"bytes,3,opt,name=device,proto3" json:"device,omitempty"` //设备
}

func (x *BannerRequest) Reset() {
	*x = BannerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[87]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BannerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BannerRequest) ProtoMessage() {}

func (x *BannerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[87]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BannerRequest.ProtoReflect.Descriptor instead.
func (*BannerRequest) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{87}
}

func (x *BannerRequest) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *BannerRequest) GetSign() bool {
	if x != nil {
		return x.Sign
	}
	return false
}

func (x *BannerRequest) GetDevice() string {
	if x != nil {
		return x.Device
	}
	return ""
}

type BannerResponseItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Img         string `protobuf:"bytes,1,opt,name=img,proto3" json:"img,omitempty"`
	Href        string `protobuf:"bytes,2,opt,name=href,proto3" json:"href,omitempty"`
	SlotId      string `protobuf:"bytes,3,opt,name=slotId,proto3" json:"slotId,omitempty"`
	GameId      int32  `protobuf:"varint,4,opt,name=gameId,proto3" json:"gameId,omitempty"`
	GameGroupId int32  `protobuf:"varint,5,opt,name=gameGroupId,proto3" json:"gameGroupId,omitempty"`
	PlatId      int32  `protobuf:"varint,6,opt,name=platId,proto3" json:"platId,omitempty"`
	JumpType    int32  `protobuf:"varint,7,opt,name=jumpType,proto3" json:"jumpType,omitempty"`
	Device      string `protobuf:"bytes,8,opt,name=device,proto3" json:"device,omitempty"`
	Status      int32  `protobuf:"varint,9,opt,name=status,proto3" json:"status,omitempty"`
	Sort        int32  `protobuf:"varint,10,opt,name=sort,proto3" json:"sort,omitempty"` //排序
}

func (x *BannerResponseItem) Reset() {
	*x = BannerResponseItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[88]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BannerResponseItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BannerResponseItem) ProtoMessage() {}

func (x *BannerResponseItem) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[88]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BannerResponseItem.ProtoReflect.Descriptor instead.
func (*BannerResponseItem) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{88}
}

func (x *BannerResponseItem) GetImg() string {
	if x != nil {
		return x.Img
	}
	return ""
}

func (x *BannerResponseItem) GetHref() string {
	if x != nil {
		return x.Href
	}
	return ""
}

func (x *BannerResponseItem) GetSlotId() string {
	if x != nil {
		return x.SlotId
	}
	return ""
}

func (x *BannerResponseItem) GetGameId() int32 {
	if x != nil {
		return x.GameId
	}
	return 0
}

func (x *BannerResponseItem) GetGameGroupId() int32 {
	if x != nil {
		return x.GameGroupId
	}
	return 0
}

func (x *BannerResponseItem) GetPlatId() int32 {
	if x != nil {
		return x.PlatId
	}
	return 0
}

func (x *BannerResponseItem) GetJumpType() int32 {
	if x != nil {
		return x.JumpType
	}
	return 0
}

func (x *BannerResponseItem) GetDevice() string {
	if x != nil {
		return x.Device
	}
	return ""
}

func (x *BannerResponseItem) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *BannerResponseItem) GetSort() int32 {
	if x != nil {
		return x.Sort
	}
	return 0
}

// message
type MsgRequestData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Category string `protobuf:"bytes,1,opt,name=category,proto3" json:"category,omitempty"`
}

func (x *MsgRequestData) Reset() {
	*x = MsgRequestData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[89]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgRequestData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgRequestData) ProtoMessage() {}

func (x *MsgRequestData) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[89]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgRequestData.ProtoReflect.Descriptor instead.
func (*MsgRequestData) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{89}
}

func (x *MsgRequestData) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

type NoticeItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	NoticeId     string `protobuf:"bytes,2,opt,name=noticeId,proto3" json:"noticeId,omitempty"`
	Title        string `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Content      string `protobuf:"bytes,4,opt,name=content,proto3" json:"content,omitempty"`
	Category     int32  `protobuf:"varint,5,opt,name=category,proto3" json:"category,omitempty"`
	Status       int32  `protobuf:"varint,6,opt,name=status,proto3" json:"status,omitempty"`
	CreatedAt    int32  `protobuf:"varint,7,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	Uids         string `protobuf:"bytes,8,opt,name=uids,proto3" json:"uids,omitempty"`
	UpdatedAt    int32  `protobuf:"varint,9,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	OperatorName string `protobuf:"bytes,10,opt,name=operatorName,proto3" json:"operatorName,omitempty"`
	Lang         string `protobuf:"bytes,11,opt,name=lang,proto3" json:"lang,omitempty"`
}

func (x *NoticeItem) Reset() {
	*x = NoticeItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[90]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NoticeItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NoticeItem) ProtoMessage() {}

func (x *NoticeItem) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[90]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NoticeItem.ProtoReflect.Descriptor instead.
func (*NoticeItem) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{90}
}

func (x *NoticeItem) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *NoticeItem) GetNoticeId() string {
	if x != nil {
		return x.NoticeId
	}
	return ""
}

func (x *NoticeItem) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *NoticeItem) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *NoticeItem) GetCategory() int32 {
	if x != nil {
		return x.Category
	}
	return 0
}

func (x *NoticeItem) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *NoticeItem) GetCreatedAt() int32 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *NoticeItem) GetUids() string {
	if x != nil {
		return x.Uids
	}
	return ""
}

func (x *NoticeItem) GetUpdatedAt() int32 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *NoticeItem) GetOperatorName() string {
	if x != nil {
		return x.OperatorName
	}
	return ""
}

func (x *NoticeItem) GetLang() string {
	if x != nil {
		return x.Lang
	}
	return ""
}

type BannerListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32       `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string      `protobuf:"bytes,5,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *BannerData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *BannerListResponse) Reset() {
	*x = BannerListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[91]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BannerListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BannerListResponse) ProtoMessage() {}

func (x *BannerListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[91]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BannerListResponse.ProtoReflect.Descriptor instead.
func (*BannerListResponse) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{91}
}

func (x *BannerListResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *BannerListResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *BannerListResponse) GetData() *BannerData {
	if x != nil {
		return x.Data
	}
	return nil
}

type BannerData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current   string        `protobuf:"bytes,1,opt,name=current,proto3" json:"current,omitempty"`
	Size      string        `protobuf:"bytes,2,opt,name=size,proto3" json:"size,omitempty"`
	List      []*BannerInfo `protobuf:"bytes,3,rep,name=list,proto3" json:"list,omitempty"`
	Total     string        `protobuf:"bytes,4,opt,name=total,proto3" json:"total,omitempty"`
	Pages     string        `protobuf:"bytes,5,opt,name=pages,proto3" json:"pages,omitempty"`
	ScrollId  string        `protobuf:"bytes,6,opt,name=scrollId,proto3" json:"scrollId,omitempty"`
	SortValue string        `protobuf:"bytes,7,opt,name=sortValue,proto3" json:"sortValue,omitempty"`
	SortId    string        `protobuf:"bytes,8,opt,name=sortId,proto3" json:"sortId,omitempty"`
}

func (x *BannerData) Reset() {
	*x = BannerData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[92]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BannerData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BannerData) ProtoMessage() {}

func (x *BannerData) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[92]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BannerData.ProtoReflect.Descriptor instead.
func (*BannerData) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{92}
}

func (x *BannerData) GetCurrent() string {
	if x != nil {
		return x.Current
	}
	return ""
}

func (x *BannerData) GetSize() string {
	if x != nil {
		return x.Size
	}
	return ""
}

func (x *BannerData) GetList() []*BannerInfo {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *BannerData) GetTotal() string {
	if x != nil {
		return x.Total
	}
	return ""
}

func (x *BannerData) GetPages() string {
	if x != nil {
		return x.Pages
	}
	return ""
}

func (x *BannerData) GetScrollId() string {
	if x != nil {
		return x.ScrollId
	}
	return ""
}

func (x *BannerData) GetSortValue() string {
	if x != nil {
		return x.SortValue
	}
	return ""
}

func (x *BannerData) GetSortId() string {
	if x != nil {
		return x.SortId
	}
	return ""
}

type DelFrontClassifyCmsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data bool   `protobuf:"varint,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *DelFrontClassifyCmsResponse) Reset() {
	*x = DelFrontClassifyCmsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[93]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelFrontClassifyCmsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelFrontClassifyCmsResponse) ProtoMessage() {}

func (x *DelFrontClassifyCmsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[93]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelFrontClassifyCmsResponse.ProtoReflect.Descriptor instead.
func (*DelFrontClassifyCmsResponse) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{93}
}

func (x *DelFrontClassifyCmsResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *DelFrontClassifyCmsResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *DelFrontClassifyCmsResponse) GetData() bool {
	if x != nil {
		return x.Data
	}
	return false
}

// gameClassifyList
type Game struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                    string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	GameProviderSubtypeId int32  `protobuf:"varint,2,opt,name=gameProviderSubtypeId,proto3" json:"gameProviderSubtypeId,omitempty"`
	GameProviderId        int32  `protobuf:"varint,3,opt,name=gameProviderId,proto3" json:"gameProviderId,omitempty"`
	GameProviderName      string `protobuf:"bytes,4,opt,name=gameProviderName,proto3" json:"gameProviderName,omitempty"`
	Name                  string `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
	OriginalIcon          string `protobuf:"bytes,6,opt,name=originalIcon,proto3" json:"originalIcon,omitempty"`
	LatestIcon            string `protobuf:"bytes,7,opt,name=latestIcon,proto3" json:"latestIcon,omitempty"`
	IsNew                 int32  `protobuf:"varint,8,opt,name=isNew,proto3" json:"isNew,omitempty"`
	FavoriteStar          int32  `protobuf:"varint,9,opt,name=favoriteStar,proto3" json:"favoriteStar,omitempty"`
	HotStar               int32  `protobuf:"varint,10,opt,name=hotStar,proto3" json:"hotStar,omitempty"`
	IsFavorite            int32  `protobuf:"varint,11,opt,name=isFavorite,proto3" json:"isFavorite,omitempty"`
	Status                int32  `protobuf:"varint,12,opt,name=status,proto3" json:"status,omitempty"`
	Maintenance           string `protobuf:"bytes,13,opt,name=maintenance,proto3" json:"maintenance,omitempty"`
	GameTypeId            int32  `protobuf:"varint,14,opt,name=gameTypeId,proto3" json:"gameTypeId,omitempty"`
	Sort                  int32  `protobuf:"varint,15,opt,name=sort,proto3" json:"sort,omitempty"`
	UpdateAt              string `protobuf:"bytes,16,opt,name=updateAt,proto3" json:"updateAt,omitempty"`
	Code                  string `protobuf:"bytes,17,opt,name=code,proto3" json:"code,omitempty"`
	IsRotated             int64  `protobuf:"varint,18,opt,name=isRotated,proto3" json:"isRotated,omitempty"`
}

func (x *Game) Reset() {
	*x = Game{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[94]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Game) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Game) ProtoMessage() {}

func (x *Game) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[94]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Game.ProtoReflect.Descriptor instead.
func (*Game) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{94}
}

func (x *Game) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Game) GetGameProviderSubtypeId() int32 {
	if x != nil {
		return x.GameProviderSubtypeId
	}
	return 0
}

func (x *Game) GetGameProviderId() int32 {
	if x != nil {
		return x.GameProviderId
	}
	return 0
}

func (x *Game) GetGameProviderName() string {
	if x != nil {
		return x.GameProviderName
	}
	return ""
}

func (x *Game) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Game) GetOriginalIcon() string {
	if x != nil {
		return x.OriginalIcon
	}
	return ""
}

func (x *Game) GetLatestIcon() string {
	if x != nil {
		return x.LatestIcon
	}
	return ""
}

func (x *Game) GetIsNew() int32 {
	if x != nil {
		return x.IsNew
	}
	return 0
}

func (x *Game) GetFavoriteStar() int32 {
	if x != nil {
		return x.FavoriteStar
	}
	return 0
}

func (x *Game) GetHotStar() int32 {
	if x != nil {
		return x.HotStar
	}
	return 0
}

func (x *Game) GetIsFavorite() int32 {
	if x != nil {
		return x.IsFavorite
	}
	return 0
}

func (x *Game) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *Game) GetMaintenance() string {
	if x != nil {
		return x.Maintenance
	}
	return ""
}

func (x *Game) GetGameTypeId() int32 {
	if x != nil {
		return x.GameTypeId
	}
	return 0
}

func (x *Game) GetSort() int32 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *Game) GetUpdateAt() string {
	if x != nil {
		return x.UpdateAt
	}
	return ""
}

func (x *Game) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *Game) GetIsRotated() int64 {
	if x != nil {
		return x.IsRotated
	}
	return 0
}

type DemoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameId                string `protobuf:"bytes,1,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`
	Uid                   int32  `protobuf:"varint,2,opt,name=uid,proto3" json:"uid,omitempty"`
	Username              string `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`
	Ip                    string `protobuf:"bytes,4,opt,name=ip,proto3" json:"ip,omitempty"`
	PlayMode              int32  `protobuf:"varint,5,opt,name=play_mode,json=playMode,proto3" json:"play_mode,omitempty"`
	Authorization         string `protobuf:"bytes,6,opt,name=authorization,proto3" json:"authorization,omitempty"`
	Device                string `protobuf:"bytes,7,opt,name=device,proto3" json:"device,omitempty"`
	Lang                  string `protobuf:"bytes,8,opt,name=lang,proto3" json:"lang,omitempty"`
	Theme                 string `protobuf:"bytes,9,opt,name=theme,proto3" json:"theme,omitempty"`
	WebType               string `protobuf:"bytes,10,opt,name=web_type,json=webType,proto3" json:"web_type,omitempty"`
	Origin                string `protobuf:"bytes,11,opt,name=origin,proto3" json:"origin,omitempty"`
	GameProviderSubtypeId int64  `protobuf:"varint,12,opt,name=gameProviderSubtypeId,proto3" json:"gameProviderSubtypeId,omitempty"`
}

func (x *DemoReq) Reset() {
	*x = DemoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[95]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DemoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DemoReq) ProtoMessage() {}

func (x *DemoReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[95]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DemoReq.ProtoReflect.Descriptor instead.
func (*DemoReq) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{95}
}

func (x *DemoReq) GetGameId() string {
	if x != nil {
		return x.GameId
	}
	return ""
}

func (x *DemoReq) GetUid() int32 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *DemoReq) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *DemoReq) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *DemoReq) GetPlayMode() int32 {
	if x != nil {
		return x.PlayMode
	}
	return 0
}

func (x *DemoReq) GetAuthorization() string {
	if x != nil {
		return x.Authorization
	}
	return ""
}

func (x *DemoReq) GetDevice() string {
	if x != nil {
		return x.Device
	}
	return ""
}

func (x *DemoReq) GetLang() string {
	if x != nil {
		return x.Lang
	}
	return ""
}

func (x *DemoReq) GetTheme() string {
	if x != nil {
		return x.Theme
	}
	return ""
}

func (x *DemoReq) GetWebType() string {
	if x != nil {
		return x.WebType
	}
	return ""
}

func (x *DemoReq) GetOrigin() string {
	if x != nil {
		return x.Origin
	}
	return ""
}

func (x *DemoReq) GetGameProviderSubtypeId() int64 {
	if x != nil {
		return x.GameProviderSubtypeId
	}
	return 0
}

type ActivityResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32             `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string            `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *ActivityDataList `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *ActivityResponse) Reset() {
	*x = ActivityResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[96]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivityResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivityResponse) ProtoMessage() {}

func (x *ActivityResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[96]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivityResponse.ProtoReflect.Descriptor instead.
func (*ActivityResponse) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{96}
}

func (x *ActivityResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ActivityResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *ActivityResponse) GetData() *ActivityDataList {
	if x != nil {
		return x.Data
	}
	return nil
}

type BlogData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current   string      `protobuf:"bytes,1,opt,name=current,proto3" json:"current,omitempty"`
	Size      string      `protobuf:"bytes,2,opt,name=size,proto3" json:"size,omitempty"`
	List      []*BlogInfo `protobuf:"bytes,3,rep,name=list,proto3" json:"list,omitempty"`
	Total     string      `protobuf:"bytes,4,opt,name=total,proto3" json:"total,omitempty"`
	Pages     string      `protobuf:"bytes,5,opt,name=pages,proto3" json:"pages,omitempty"`
	ScrollId  string      `protobuf:"bytes,6,opt,name=scrollId,proto3" json:"scrollId,omitempty"`
	SortValue string      `protobuf:"bytes,7,opt,name=sortValue,proto3" json:"sortValue,omitempty"`
	SortId    string      `protobuf:"bytes,8,opt,name=sortId,proto3" json:"sortId,omitempty"`
}

func (x *BlogData) Reset() {
	*x = BlogData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[97]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlogData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlogData) ProtoMessage() {}

func (x *BlogData) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[97]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlogData.ProtoReflect.Descriptor instead.
func (*BlogData) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{97}
}

func (x *BlogData) GetCurrent() string {
	if x != nil {
		return x.Current
	}
	return ""
}

func (x *BlogData) GetSize() string {
	if x != nil {
		return x.Size
	}
	return ""
}

func (x *BlogData) GetList() []*BlogInfo {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *BlogData) GetTotal() string {
	if x != nil {
		return x.Total
	}
	return ""
}

func (x *BlogData) GetPages() string {
	if x != nil {
		return x.Pages
	}
	return ""
}

func (x *BlogData) GetScrollId() string {
	if x != nil {
		return x.ScrollId
	}
	return ""
}

func (x *BlogData) GetSortValue() string {
	if x != nil {
		return x.SortValue
	}
	return ""
}

func (x *BlogData) GetSortId() string {
	if x != nil {
		return x.SortId
	}
	return ""
}

type SportBetData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BetId          string `protobuf:"bytes,1,opt,name=betId,proto3" json:"betId,omitempty"`
	MarketName     string `protobuf:"bytes,2,opt,name=marketName,proto3" json:"marketName,omitempty"`
	MatchName      string `protobuf:"bytes,3,opt,name=matchName,proto3" json:"matchName,omitempty"`
	MatchTime      string `protobuf:"bytes,4,opt,name=matchTime,proto3" json:"matchTime,omitempty"`
	Odd            string `protobuf:"bytes,5,opt,name=odd,proto3" json:"odd,omitempty"`
	OptionName     string `protobuf:"bytes,6,opt,name=optionName,proto3" json:"optionName,omitempty"`
	TournamentName string `protobuf:"bytes,7,opt,name=tournamentName,proto3" json:"tournamentName,omitempty"`
}

func (x *SportBetData) Reset() {
	*x = SportBetData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[98]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SportBetData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SportBetData) ProtoMessage() {}

func (x *SportBetData) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[98]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SportBetData.ProtoReflect.Descriptor instead.
func (*SportBetData) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{98}
}

func (x *SportBetData) GetBetId() string {
	if x != nil {
		return x.BetId
	}
	return ""
}

func (x *SportBetData) GetMarketName() string {
	if x != nil {
		return x.MarketName
	}
	return ""
}

func (x *SportBetData) GetMatchName() string {
	if x != nil {
		return x.MatchName
	}
	return ""
}

func (x *SportBetData) GetMatchTime() string {
	if x != nil {
		return x.MatchTime
	}
	return ""
}

func (x *SportBetData) GetOdd() string {
	if x != nil {
		return x.Odd
	}
	return ""
}

func (x *SportBetData) GetOptionName() string {
	if x != nil {
		return x.OptionName
	}
	return ""
}

func (x *SportBetData) GetTournamentName() string {
	if x != nil {
		return x.TournamentName
	}
	return ""
}

type HelpResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32     `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string    `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *HelpData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *HelpResponse) Reset() {
	*x = HelpResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[99]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HelpResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HelpResponse) ProtoMessage() {}

func (x *HelpResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[99]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HelpResponse.ProtoReflect.Descriptor instead.
func (*HelpResponse) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{99}
}

func (x *HelpResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *HelpResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *HelpResponse) GetData() *HelpData {
	if x != nil {
		return x.Data
	}
	return nil
}

type LampList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Content string `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
	Title   string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
}

func (x *LampList) Reset() {
	*x = LampList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[100]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LampList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LampList) ProtoMessage() {}

func (x *LampList) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[100]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LampList.ProtoReflect.Descriptor instead.
func (*LampList) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{100}
}

func (x *LampList) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *LampList) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

type BannerListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current int32             `protobuf:"varint,1,opt,name=current,proto3" json:"current,omitempty"`
	Size    int32             `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	Data    map[string]string `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *BannerListRequest) Reset() {
	*x = BannerListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[101]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BannerListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BannerListRequest) ProtoMessage() {}

func (x *BannerListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[101]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BannerListRequest.ProtoReflect.Descriptor instead.
func (*BannerListRequest) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{101}
}

func (x *BannerListRequest) GetCurrent() int32 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *BannerListRequest) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *BannerListRequest) GetData() map[string]string {
	if x != nil {
		return x.Data
	}
	return nil
}

type BigGameCategoryBannerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sign bool `protobuf:"varint,1,opt,name=sign,proto3" json:"sign,omitempty"`
}

func (x *BigGameCategoryBannerRequest) Reset() {
	*x = BigGameCategoryBannerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[102]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BigGameCategoryBannerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BigGameCategoryBannerRequest) ProtoMessage() {}

func (x *BigGameCategoryBannerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[102]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BigGameCategoryBannerRequest.ProtoReflect.Descriptor instead.
func (*BigGameCategoryBannerRequest) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{102}
}

func (x *BigGameCategoryBannerRequest) GetSign() bool {
	if x != nil {
		return x.Sign
	}
	return false
}

type BigGameCategoryBannerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32                        `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string                       `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data []*BigGameCategoryBannerData `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *BigGameCategoryBannerResponse) Reset() {
	*x = BigGameCategoryBannerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[103]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BigGameCategoryBannerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BigGameCategoryBannerResponse) ProtoMessage() {}

func (x *BigGameCategoryBannerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[103]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BigGameCategoryBannerResponse.ProtoReflect.Descriptor instead.
func (*BigGameCategoryBannerResponse) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{103}
}

func (x *BigGameCategoryBannerResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *BigGameCategoryBannerResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *BigGameCategoryBannerResponse) GetData() []*BigGameCategoryBannerData {
	if x != nil {
		return x.Data
	}
	return nil
}

type BigGameCategoryBannerData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	GameGroupId int32  `protobuf:"varint,3,opt,name=gameGroupId,proto3" json:"gameGroupId,omitempty"`
	Sort        int32  `protobuf:"varint,4,opt,name=sort,proto3" json:"sort,omitempty"`
	Status      int32  `protobuf:"varint,5,opt,name=status,proto3" json:"status,omitempty"`
	PcImg       string `protobuf:"bytes,6,opt,name=pcImg,proto3" json:"pcImg,omitempty"`
	H5Img       string `protobuf:"bytes,7,opt,name=h5Img,proto3" json:"h5Img,omitempty"`
}

func (x *BigGameCategoryBannerData) Reset() {
	*x = BigGameCategoryBannerData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[104]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BigGameCategoryBannerData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BigGameCategoryBannerData) ProtoMessage() {}

func (x *BigGameCategoryBannerData) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[104]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BigGameCategoryBannerData.ProtoReflect.Descriptor instead.
func (*BigGameCategoryBannerData) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{104}
}

func (x *BigGameCategoryBannerData) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *BigGameCategoryBannerData) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *BigGameCategoryBannerData) GetGameGroupId() int32 {
	if x != nil {
		return x.GameGroupId
	}
	return 0
}

func (x *BigGameCategoryBannerData) GetSort() int32 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *BigGameCategoryBannerData) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *BigGameCategoryBannerData) GetPcImg() string {
	if x != nil {
		return x.PcImg
	}
	return ""
}

func (x *BigGameCategoryBannerData) GetH5Img() string {
	if x != nil {
		return x.H5Img
	}
	return ""
}

type GetDictionaryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sign bool `protobuf:"varint,1,opt,name=sign,proto3" json:"sign,omitempty"`
}

func (x *GetDictionaryRequest) Reset() {
	*x = GetDictionaryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[105]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDictionaryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDictionaryRequest) ProtoMessage() {}

func (x *GetDictionaryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[105]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDictionaryRequest.ProtoReflect.Descriptor instead.
func (*GetDictionaryRequest) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{105}
}

func (x *GetDictionaryRequest) GetSign() bool {
	if x != nil {
		return x.Sign
	}
	return false
}

// 定义主消息类型，包含一个映射
type GetDictionaryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data string `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetDictionaryResponse) Reset() {
	*x = GetDictionaryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[106]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDictionaryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDictionaryResponse) ProtoMessage() {}

func (x *GetDictionaryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[106]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDictionaryResponse.ProtoReflect.Descriptor instead.
func (*GetDictionaryResponse) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{106}
}

func (x *GetDictionaryResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetDictionaryResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GetDictionaryResponse) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

type StatusItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code  string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
}

func (x *StatusItem) Reset() {
	*x = StatusItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[107]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatusItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusItem) ProtoMessage() {}

func (x *StatusItem) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[107]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusItem.ProtoReflect.Descriptor instead.
func (*StatusItem) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{107}
}

func (x *StatusItem) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *StatusItem) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

type CurrentActivityRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sign bool `protobuf:"varint,1,opt,name=sign,proto3" json:"sign,omitempty"`
}

func (x *CurrentActivityRequest) Reset() {
	*x = CurrentActivityRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[108]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CurrentActivityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CurrentActivityRequest) ProtoMessage() {}

func (x *CurrentActivityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[108]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CurrentActivityRequest.ProtoReflect.Descriptor instead.
func (*CurrentActivityRequest) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{108}
}

func (x *CurrentActivityRequest) GetSign() bool {
	if x != nil {
		return x.Sign
	}
	return false
}

type CurrentActivityResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32                `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string               `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *CurrentActivityData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *CurrentActivityResponse) Reset() {
	*x = CurrentActivityResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[109]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CurrentActivityResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CurrentActivityResponse) ProtoMessage() {}

func (x *CurrentActivityResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[109]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CurrentActivityResponse.ProtoReflect.Descriptor instead.
func (*CurrentActivityResponse) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{109}
}

func (x *CurrentActivityResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *CurrentActivityResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *CurrentActivityResponse) GetData() *CurrentActivityData {
	if x != nil {
		return x.Data
	}
	return nil
}

type CurrentActivityData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsPopUp            int32             `protobuf:"varint,1,opt,name=isPopUp,proto3" json:"isPopUp,omitempty"`                      // 是否弹窗:1-弹窗 0-不弹窗
	CurrentDay         int32             `protobuf:"varint,2,opt,name=currentDay,proto3" json:"currentDay,omitempty"`                // 当天天数
	CheckInStatus      int32             `protobuf:"varint,3,opt,name=checkInStatus,proto3" json:"checkInStatus,omitempty"`          //  "签到状态：1未充值2未达标3已达标未签到4已达标已签到"
	DepositAmountLeft  float32           `protobuf:"fixed32,4,opt,name=depositAmountLeft,proto3" json:"depositAmountLeft,omitempty"` //  剩余需要充值金额
	CheckInRuleDtoList []*CheckInRuleDto `protobuf:"bytes,5,rep,name=checkInRuleDtoList,proto3" json:"checkInRuleDtoList,omitempty"` // 规则信息
	CheckInInfoDto     *CheckInInfoDto   `protobuf:"bytes,6,opt,name=checkInInfoDto,proto3" json:"checkInInfoDto,omitempty"`         //签到活动语言信息对象
}

func (x *CurrentActivityData) Reset() {
	*x = CurrentActivityData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[110]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CurrentActivityData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CurrentActivityData) ProtoMessage() {}

func (x *CurrentActivityData) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[110]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CurrentActivityData.ProtoReflect.Descriptor instead.
func (*CurrentActivityData) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{110}
}

func (x *CurrentActivityData) GetIsPopUp() int32 {
	if x != nil {
		return x.IsPopUp
	}
	return 0
}

func (x *CurrentActivityData) GetCurrentDay() int32 {
	if x != nil {
		return x.CurrentDay
	}
	return 0
}

func (x *CurrentActivityData) GetCheckInStatus() int32 {
	if x != nil {
		return x.CheckInStatus
	}
	return 0
}

func (x *CurrentActivityData) GetDepositAmountLeft() float32 {
	if x != nil {
		return x.DepositAmountLeft
	}
	return 0
}

func (x *CurrentActivityData) GetCheckInRuleDtoList() []*CheckInRuleDto {
	if x != nil {
		return x.CheckInRuleDtoList
	}
	return nil
}

func (x *CurrentActivityData) GetCheckInInfoDto() *CheckInInfoDto {
	if x != nil {
		return x.CheckInInfoDto
	}
	return nil
}

type CheckInRuleDto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Days        int64   `protobuf:"varint,1,opt,name=days,proto3" json:"days,omitempty"`                // 连续签到天数
	IconImg     string  `protobuf:"bytes,2,opt,name=iconImg,proto3" json:"iconImg,omitempty"`           // 签到图标
	AwardAmount float32 `protobuf:"fixed32,3,opt,name=awardAmount,proto3" json:"awardAmount,omitempty"` // 签到奖励
	AuditTimes  int64   `protobuf:"varint,4,opt,name=auditTimes,proto3" json:"auditTimes,omitempty"`    // 稽核倍数
	IsCheckedIn bool    `protobuf:"varint,5,opt,name=isCheckedIn,proto3" json:"isCheckedIn,omitempty"`  // 是否已签到
}

func (x *CheckInRuleDto) Reset() {
	*x = CheckInRuleDto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[111]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckInRuleDto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckInRuleDto) ProtoMessage() {}

func (x *CheckInRuleDto) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[111]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckInRuleDto.ProtoReflect.Descriptor instead.
func (*CheckInRuleDto) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{111}
}

func (x *CheckInRuleDto) GetDays() int64 {
	if x != nil {
		return x.Days
	}
	return 0
}

func (x *CheckInRuleDto) GetIconImg() string {
	if x != nil {
		return x.IconImg
	}
	return ""
}

func (x *CheckInRuleDto) GetAwardAmount() float32 {
	if x != nil {
		return x.AwardAmount
	}
	return 0
}

func (x *CheckInRuleDto) GetAuditTimes() int64 {
	if x != nil {
		return x.AuditTimes
	}
	return 0
}

func (x *CheckInRuleDto) GetIsCheckedIn() bool {
	if x != nil {
		return x.IsCheckedIn
	}
	return false
}

type CheckInInfoDto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LangCode string `protobuf:"bytes,1,opt,name=langCode,proto3" json:"langCode,omitempty"` // 语言
	Title    string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`       // 标题
	Img      string `protobuf:"bytes,3,opt,name=img,proto3" json:"img,omitempty"`           // 活动图片
	Details  string `protobuf:"bytes,4,opt,name=details,proto3" json:"details,omitempty"`   // 详情
}

func (x *CheckInInfoDto) Reset() {
	*x = CheckInInfoDto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[112]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckInInfoDto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckInInfoDto) ProtoMessage() {}

func (x *CheckInInfoDto) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[112]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckInInfoDto.ProtoReflect.Descriptor instead.
func (*CheckInInfoDto) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{112}
}

func (x *CheckInInfoDto) GetLangCode() string {
	if x != nil {
		return x.LangCode
	}
	return ""
}

func (x *CheckInInfoDto) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CheckInInfoDto) GetImg() string {
	if x != nil {
		return x.Img
	}
	return ""
}

func (x *CheckInInfoDto) GetDetails() string {
	if x != nil {
		return x.Details
	}
	return ""
}

type CurrentActivityBaseInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Code           string  `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`                      // 活动标识
	Category       string  `protobuf:"bytes,3,opt,name=category,proto3" json:"category,omitempty"`              // 活动类型
	StartedAt      int32   `protobuf:"varint,4,opt,name=startedAt,proto3" json:"startedAt,omitempty"`           // 活动开始时间
	EndedAt        int32   `protobuf:"varint,5,opt,name=endedAt,proto3" json:"endedAt,omitempty"`               // 活动结束时间
	DepositType    int32   `protobuf:"varint,6,opt,name=depositType,proto3" json:"depositType,omitempty"`       // 累计存款类型（0周期存款1周存款2月存款3历史存款
	DepositCoin    float32 `protobuf:"fixed32,7,opt,name=depositCoin,proto3" json:"depositCoin,omitempty"`      // 累计存款金额
	PayoutCategory int32   `protobuf:"varint,8,opt,name=payoutCategory,proto3" json:"payoutCategory,omitempty"` // 领取方式（自动/手动）
	Sort           int32   `protobuf:"varint,9,opt,name=sort,proto3" json:"sort,omitempty"`
	Status         int32   `protobuf:"varint,10,opt,name=status,proto3" json:"status,omitempty"`     // 状态:1-启用 0-停用
	IsPopUp        int32   `protobuf:"varint,11,opt,name=isPopUp,proto3" json:"isPopUp,omitempty"`   // 是否弹窗:1-弹窗 0-不弹窗
	GameType       int32   `protobuf:"varint,12,opt,name=gameType,proto3" json:"gameType,omitempty"` // "活动游戏类型，见字典dic_promotion_game_type"
}

func (x *CurrentActivityBaseInfo) Reset() {
	*x = CurrentActivityBaseInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[113]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CurrentActivityBaseInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CurrentActivityBaseInfo) ProtoMessage() {}

func (x *CurrentActivityBaseInfo) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[113]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CurrentActivityBaseInfo.ProtoReflect.Descriptor instead.
func (*CurrentActivityBaseInfo) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{113}
}

func (x *CurrentActivityBaseInfo) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CurrentActivityBaseInfo) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *CurrentActivityBaseInfo) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *CurrentActivityBaseInfo) GetStartedAt() int32 {
	if x != nil {
		return x.StartedAt
	}
	return 0
}

func (x *CurrentActivityBaseInfo) GetEndedAt() int32 {
	if x != nil {
		return x.EndedAt
	}
	return 0
}

func (x *CurrentActivityBaseInfo) GetDepositType() int32 {
	if x != nil {
		return x.DepositType
	}
	return 0
}

func (x *CurrentActivityBaseInfo) GetDepositCoin() float32 {
	if x != nil {
		return x.DepositCoin
	}
	return 0
}

func (x *CurrentActivityBaseInfo) GetPayoutCategory() int32 {
	if x != nil {
		return x.PayoutCategory
	}
	return 0
}

func (x *CurrentActivityBaseInfo) GetSort() int32 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *CurrentActivityBaseInfo) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *CurrentActivityBaseInfo) GetIsPopUp() int32 {
	if x != nil {
		return x.IsPopUp
	}
	return 0
}

func (x *CurrentActivityBaseInfo) GetGameType() int32 {
	if x != nil {
		return x.GameType
	}
	return 0
}

type PromotionInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DepositType     int32   `protobuf:"varint,1,opt,name=depositType,proto3" json:"depositType,omitempty"`
	DepositCoin     float32 `protobuf:"fixed32,2,opt,name=depositCoin,proto3" json:"depositCoin,omitempty"`
	IsPopUp         int32   `protobuf:"varint,3,opt,name=isPopUp,proto3" json:"isPopUp,omitempty"`
	EffectiveStatus int32   `protobuf:"varint,4,opt,name=effectiveStatus,proto3" json:"effectiveStatus,omitempty"`
}

func (x *PromotionInfo) Reset() {
	*x = PromotionInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[114]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PromotionInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PromotionInfo) ProtoMessage() {}

func (x *PromotionInfo) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[114]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PromotionInfo.ProtoReflect.Descriptor instead.
func (*PromotionInfo) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{114}
}

func (x *PromotionInfo) GetDepositType() int32 {
	if x != nil {
		return x.DepositType
	}
	return 0
}

func (x *PromotionInfo) GetDepositCoin() float32 {
	if x != nil {
		return x.DepositCoin
	}
	return 0
}

func (x *PromotionInfo) GetIsPopUp() int32 {
	if x != nil {
		return x.IsPopUp
	}
	return 0
}

func (x *PromotionInfo) GetEffectiveStatus() int32 {
	if x != nil {
		return x.EffectiveStatus
	}
	return 0
}

type CheckInRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sign bool `protobuf:"varint,1,opt,name=sign,proto3" json:"sign,omitempty"`
}

func (x *CheckInRequest) Reset() {
	*x = CheckInRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[115]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckInRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckInRequest) ProtoMessage() {}

func (x *CheckInRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[115]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckInRequest.ProtoReflect.Descriptor instead.
func (*CheckInRequest) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{115}
}

func (x *CheckInRequest) GetSign() bool {
	if x != nil {
		return x.Sign
	}
	return false
}

type CheckInResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *CheckInResponse) Reset() {
	*x = CheckInResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[116]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckInResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckInResponse) ProtoMessage() {}

func (x *CheckInResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[116]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckInResponse.ProtoReflect.Descriptor instead.
func (*CheckInResponse) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{116}
}

func (x *CheckInResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *CheckInResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type GetCommissionRuleReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetCommissionRuleReq) Reset() {
	*x = GetCommissionRuleReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[117]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCommissionRuleReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCommissionRuleReq) ProtoMessage() {}

func (x *GetCommissionRuleReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[117]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCommissionRuleReq.ProtoReflect.Descriptor instead.
func (*GetCommissionRuleReq) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{117}
}

type GetCommissionRuleResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32                  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string                 `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *GetCommissionRuleData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetCommissionRuleResp) Reset() {
	*x = GetCommissionRuleResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[118]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCommissionRuleResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCommissionRuleResp) ProtoMessage() {}

func (x *GetCommissionRuleResp) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[118]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCommissionRuleResp.ProtoReflect.Descriptor instead.
func (*GetCommissionRuleResp) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{118}
}

func (x *GetCommissionRuleResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetCommissionRuleResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GetCommissionRuleResp) GetData() *GetCommissionRuleData {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetCommissionRuleData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommissionRateList         []*CommissionRateList `protobuf:"bytes,1,rep,name=commissionRateList,proto3" json:"commissionRateList,omitempty"`
	MinCoin                    float64               `protobuf:"fixed64,2,opt,name=minCoin,proto3" json:"minCoin,omitempty"`                                   //提款最小值
	MaxCoin                    float64               `protobuf:"fixed64,3,opt,name=maxCoin,proto3" json:"maxCoin,omitempty"`                                   //提款最大值
	FeesType                   int32                 `protobuf:"varint,4,opt,name=feesType,proto3" json:"feesType,omitempty"`                                  //手续费模式
	FeesRate                   float64               `protobuf:"fixed64,5,opt,name=feesRate,proto3" json:"feesRate,omitempty"`                                 //手续费率
	Fees                       float64               `protobuf:"fixed64,6,opt,name=fees,proto3" json:"fees,omitempty"`                                         //手续费金额
	DepositMultiple            float64               `protobuf:"fixed64,7,opt,name=depositMultiple,proto3" json:"depositMultiple,omitempty"`                   //提款倍数
	WithdrawUnFlowMaxBalance   float64               `protobuf:"fixed64,8,opt,name=withdrawUnFlowMaxBalance,proto3" json:"withdrawUnFlowMaxBalance,omitempty"` //用户最多金额免流水
	IsDeposit                  int32                 `protobuf:"varint,9,opt,name=isDeposit,proto3" json:"isDeposit,omitempty"`
	DepositTotalCoin           float64               `protobuf:"fixed64,10,opt,name=depositTotalCoin,proto3" json:"depositTotalCoin,omitempty"`                     //提款最低累计充值
	WithdrawAutoAuditSwitch    int32                 `protobuf:"varint,11,opt,name=withdrawAutoAuditSwitch,proto3" json:"withdrawAutoAuditSwitch,omitempty"`        //提现自动审核
	WithdrawAutoAuditMaxAmount float64               `protobuf:"fixed64,12,opt,name=withdrawAutoAuditMaxAmount,proto3" json:"withdrawAutoAuditMaxAmount,omitempty"` //提现自动审核额度
	TransferMultiple           float64               `protobuf:"fixed64,13,opt,name=transferMultiple,proto3" json:"transferMultiple,omitempty"`                     //转账倍数
	EffectDate                 string                `protobuf:"bytes,14,opt,name=effectDate,proto3" json:"effectDate,omitempty"`
}

func (x *GetCommissionRuleData) Reset() {
	*x = GetCommissionRuleData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[119]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCommissionRuleData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCommissionRuleData) ProtoMessage() {}

func (x *GetCommissionRuleData) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[119]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCommissionRuleData.ProtoReflect.Descriptor instead.
func (*GetCommissionRuleData) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{119}
}

func (x *GetCommissionRuleData) GetCommissionRateList() []*CommissionRateList {
	if x != nil {
		return x.CommissionRateList
	}
	return nil
}

func (x *GetCommissionRuleData) GetMinCoin() float64 {
	if x != nil {
		return x.MinCoin
	}
	return 0
}

func (x *GetCommissionRuleData) GetMaxCoin() float64 {
	if x != nil {
		return x.MaxCoin
	}
	return 0
}

func (x *GetCommissionRuleData) GetFeesType() int32 {
	if x != nil {
		return x.FeesType
	}
	return 0
}

func (x *GetCommissionRuleData) GetFeesRate() float64 {
	if x != nil {
		return x.FeesRate
	}
	return 0
}

func (x *GetCommissionRuleData) GetFees() float64 {
	if x != nil {
		return x.Fees
	}
	return 0
}

func (x *GetCommissionRuleData) GetDepositMultiple() float64 {
	if x != nil {
		return x.DepositMultiple
	}
	return 0
}

func (x *GetCommissionRuleData) GetWithdrawUnFlowMaxBalance() float64 {
	if x != nil {
		return x.WithdrawUnFlowMaxBalance
	}
	return 0
}

func (x *GetCommissionRuleData) GetIsDeposit() int32 {
	if x != nil {
		return x.IsDeposit
	}
	return 0
}

func (x *GetCommissionRuleData) GetDepositTotalCoin() float64 {
	if x != nil {
		return x.DepositTotalCoin
	}
	return 0
}

func (x *GetCommissionRuleData) GetWithdrawAutoAuditSwitch() int32 {
	if x != nil {
		return x.WithdrawAutoAuditSwitch
	}
	return 0
}

func (x *GetCommissionRuleData) GetWithdrawAutoAuditMaxAmount() float64 {
	if x != nil {
		return x.WithdrawAutoAuditMaxAmount
	}
	return 0
}

func (x *GetCommissionRuleData) GetTransferMultiple() float64 {
	if x != nil {
		return x.TransferMultiple
	}
	return 0
}

func (x *GetCommissionRuleData) GetEffectDate() string {
	if x != nil {
		return x.EffectDate
	}
	return ""
}

type UpdateCommissionRuleReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommissionRateList         []*CommissionRateList `protobuf:"bytes,1,rep,name=commissionRateList,proto3" json:"commissionRateList,omitempty"`
	MinCoin                    float64               `protobuf:"fixed64,2,opt,name=minCoin,proto3" json:"minCoin,omitempty"`                                   //提款最小值
	MaxCoin                    float64               `protobuf:"fixed64,3,opt,name=maxCoin,proto3" json:"maxCoin,omitempty"`                                   //提款最大值
	FeesType                   int32                 `protobuf:"varint,4,opt,name=feesType,proto3" json:"feesType,omitempty"`                                  //手续费模式
	FeesRate                   float64               `protobuf:"fixed64,5,opt,name=feesRate,proto3" json:"feesRate,omitempty"`                                 //手续费率
	Fees                       float64               `protobuf:"fixed64,6,opt,name=fees,proto3" json:"fees,omitempty"`                                         //手续费金额
	DepositMultiple            float64               `protobuf:"fixed64,7,opt,name=depositMultiple,proto3" json:"depositMultiple,omitempty"`                   //提款倍数
	WithdrawUnFlowMaxBalance   float64               `protobuf:"fixed64,8,opt,name=withdrawUnFlowMaxBalance,proto3" json:"withdrawUnFlowMaxBalance,omitempty"` //用户最多金额免流水
	IsDeposit                  int32                 `protobuf:"varint,9,opt,name=isDeposit,proto3" json:"isDeposit,omitempty"`
	DepositTotalCoin           float64               `protobuf:"fixed64,10,opt,name=depositTotalCoin,proto3" json:"depositTotalCoin,omitempty"`                     //提款最低累计充值
	WithdrawAutoAuditSwitch    int32                 `protobuf:"varint,11,opt,name=withdrawAutoAuditSwitch,proto3" json:"withdrawAutoAuditSwitch,omitempty"`        //提现自动审核
	WithdrawAutoAuditMaxAmount float64               `protobuf:"fixed64,12,opt,name=withdrawAutoAuditMaxAmount,proto3" json:"withdrawAutoAuditMaxAmount,omitempty"` //提现自动审核额度
	TransferMultiple           float64               `protobuf:"fixed64,13,opt,name=transferMultiple,proto3" json:"transferMultiple,omitempty"`                     //转账倍数
	EffectDate                 string                `protobuf:"bytes,14,opt,name=effectDate,proto3" json:"effectDate,omitempty"`
}

func (x *UpdateCommissionRuleReq) Reset() {
	*x = UpdateCommissionRuleReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[120]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCommissionRuleReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCommissionRuleReq) ProtoMessage() {}

func (x *UpdateCommissionRuleReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[120]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCommissionRuleReq.ProtoReflect.Descriptor instead.
func (*UpdateCommissionRuleReq) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{120}
}

func (x *UpdateCommissionRuleReq) GetCommissionRateList() []*CommissionRateList {
	if x != nil {
		return x.CommissionRateList
	}
	return nil
}

func (x *UpdateCommissionRuleReq) GetMinCoin() float64 {
	if x != nil {
		return x.MinCoin
	}
	return 0
}

func (x *UpdateCommissionRuleReq) GetMaxCoin() float64 {
	if x != nil {
		return x.MaxCoin
	}
	return 0
}

func (x *UpdateCommissionRuleReq) GetFeesType() int32 {
	if x != nil {
		return x.FeesType
	}
	return 0
}

func (x *UpdateCommissionRuleReq) GetFeesRate() float64 {
	if x != nil {
		return x.FeesRate
	}
	return 0
}

func (x *UpdateCommissionRuleReq) GetFees() float64 {
	if x != nil {
		return x.Fees
	}
	return 0
}

func (x *UpdateCommissionRuleReq) GetDepositMultiple() float64 {
	if x != nil {
		return x.DepositMultiple
	}
	return 0
}

func (x *UpdateCommissionRuleReq) GetWithdrawUnFlowMaxBalance() float64 {
	if x != nil {
		return x.WithdrawUnFlowMaxBalance
	}
	return 0
}

func (x *UpdateCommissionRuleReq) GetIsDeposit() int32 {
	if x != nil {
		return x.IsDeposit
	}
	return 0
}

func (x *UpdateCommissionRuleReq) GetDepositTotalCoin() float64 {
	if x != nil {
		return x.DepositTotalCoin
	}
	return 0
}

func (x *UpdateCommissionRuleReq) GetWithdrawAutoAuditSwitch() int32 {
	if x != nil {
		return x.WithdrawAutoAuditSwitch
	}
	return 0
}

func (x *UpdateCommissionRuleReq) GetWithdrawAutoAuditMaxAmount() float64 {
	if x != nil {
		return x.WithdrawAutoAuditMaxAmount
	}
	return 0
}

func (x *UpdateCommissionRuleReq) GetTransferMultiple() float64 {
	if x != nil {
		return x.TransferMultiple
	}
	return 0
}

func (x *UpdateCommissionRuleReq) GetEffectDate() string {
	if x != nil {
		return x.EffectDate
	}
	return ""
}

type UpdateCommissionRuleResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data bool   `protobuf:"varint,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *UpdateCommissionRuleResp) Reset() {
	*x = UpdateCommissionRuleResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[121]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCommissionRuleResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCommissionRuleResp) ProtoMessage() {}

func (x *UpdateCommissionRuleResp) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[121]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCommissionRuleResp.ProtoReflect.Descriptor instead.
func (*UpdateCommissionRuleResp) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{121}
}

func (x *UpdateCommissionRuleResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *UpdateCommissionRuleResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *UpdateCommissionRuleResp) GetData() bool {
	if x != nil {
		return x.Data
	}
	return false
}

type CommissionRateList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AgentLevelRate float64 `protobuf:"fixed64,1,opt,name=agentLevelRate,proto3" json:"agentLevelRate,omitempty"`
	AgentLevel     int64   `protobuf:"varint,2,opt,name=agentLevel,proto3" json:"agentLevel,omitempty"`
}

func (x *CommissionRateList) Reset() {
	*x = CommissionRateList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[122]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommissionRateList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommissionRateList) ProtoMessage() {}

func (x *CommissionRateList) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[122]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommissionRateList.ProtoReflect.Descriptor instead.
func (*CommissionRateList) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{122}
}

func (x *CommissionRateList) GetAgentLevelRate() float64 {
	if x != nil {
		return x.AgentLevelRate
	}
	return 0
}

func (x *CommissionRateList) GetAgentLevel() int64 {
	if x != nil {
		return x.AgentLevel
	}
	return 0
}

type GetHelpLanguageReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetHelpLanguageReq) Reset() {
	*x = GetHelpLanguageReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[123]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetHelpLanguageReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHelpLanguageReq) ProtoMessage() {}

func (x *GetHelpLanguageReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[123]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHelpLanguageReq.ProtoReflect.Descriptor instead.
func (*GetHelpLanguageReq) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{123}
}

type GetHelpLanguageResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32                `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string               `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *GetHelpLanguageData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetHelpLanguageResp) Reset() {
	*x = GetHelpLanguageResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[124]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetHelpLanguageResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHelpLanguageResp) ProtoMessage() {}

func (x *GetHelpLanguageResp) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[124]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHelpLanguageResp.ProtoReflect.Descriptor instead.
func (*GetHelpLanguageResp) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{124}
}

func (x *GetHelpLanguageResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetHelpLanguageResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GetHelpLanguageResp) GetData() *GetHelpLanguageData {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetHelpLanguageData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DicLang []*DicLang `protobuf:"bytes,1,rep,name=dic_lang,json=dicLang,proto3" json:"dic_lang,omitempty"`
}

func (x *GetHelpLanguageData) Reset() {
	*x = GetHelpLanguageData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[125]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetHelpLanguageData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHelpLanguageData) ProtoMessage() {}

func (x *GetHelpLanguageData) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[125]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHelpLanguageData.ProtoReflect.Descriptor instead.
func (*GetHelpLanguageData) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{125}
}

func (x *GetHelpLanguageData) GetDicLang() []*DicLang {
	if x != nil {
		return x.DicLang
	}
	return nil
}

type DicLang struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code  string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
}

func (x *DicLang) Reset() {
	*x = DicLang{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[126]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DicLang) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DicLang) ProtoMessage() {}

func (x *DicLang) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[126]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DicLang.ProtoReflect.Descriptor instead.
func (*DicLang) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{126}
}

func (x *DicLang) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *DicLang) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

type PageHelpTypeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PageHelpTypeReq) Reset() {
	*x = PageHelpTypeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[127]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PageHelpTypeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PageHelpTypeReq) ProtoMessage() {}

func (x *PageHelpTypeReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[127]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PageHelpTypeReq.ProtoReflect.Descriptor instead.
func (*PageHelpTypeReq) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{127}
}

type PageHelpTypeResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32               `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string              `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data []*PageHelpTypeData `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *PageHelpTypeResp) Reset() {
	*x = PageHelpTypeResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[128]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PageHelpTypeResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PageHelpTypeResp) ProtoMessage() {}

func (x *PageHelpTypeResp) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[128]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PageHelpTypeResp.ProtoReflect.Descriptor instead.
func (*PageHelpTypeResp) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{128}
}

func (x *PageHelpTypeResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *PageHelpTypeResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *PageHelpTypeResp) GetData() []*PageHelpTypeData {
	if x != nil {
		return x.Data
	}
	return nil
}

type PageHelpTypeData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	TypeName  string `protobuf:"bytes,2,opt,name=typeName,proto3" json:"typeName,omitempty"`
	Language  string `protobuf:"bytes,3,opt,name=language,proto3" json:"language,omitempty"`
	Status    int64  `protobuf:"varint,4,opt,name=status,proto3" json:"status,omitempty"`
	Sort      int64  `protobuf:"varint,5,opt,name=sort,proto3" json:"sort,omitempty"`
	ImageUrl  string `protobuf:"bytes,6,opt,name=imageUrl,proto3" json:"imageUrl,omitempty"`
	CreateBy  string `protobuf:"bytes,7,opt,name=createBy,proto3" json:"createBy,omitempty"`
	CreatedAt string `protobuf:"bytes,8,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdateBy  string `protobuf:"bytes,9,opt,name=updateBy,proto3" json:"updateBy,omitempty"`
	UpdatedAt string `protobuf:"bytes,10,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
}

func (x *PageHelpTypeData) Reset() {
	*x = PageHelpTypeData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[129]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PageHelpTypeData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PageHelpTypeData) ProtoMessage() {}

func (x *PageHelpTypeData) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[129]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PageHelpTypeData.ProtoReflect.Descriptor instead.
func (*PageHelpTypeData) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{129}
}

func (x *PageHelpTypeData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PageHelpTypeData) GetTypeName() string {
	if x != nil {
		return x.TypeName
	}
	return ""
}

func (x *PageHelpTypeData) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *PageHelpTypeData) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *PageHelpTypeData) GetSort() int64 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *PageHelpTypeData) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

func (x *PageHelpTypeData) GetCreateBy() string {
	if x != nil {
		return x.CreateBy
	}
	return ""
}

func (x *PageHelpTypeData) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *PageHelpTypeData) GetUpdateBy() string {
	if x != nil {
		return x.UpdateBy
	}
	return ""
}

func (x *PageHelpTypeData) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

type PageHelpInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current   int32                `protobuf:"varint,1,opt,name=current,proto3" json:"current,omitempty"`    //
	Size      int32                `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`          //
	SortKey   string               `protobuf:"bytes,3,opt,name=sortKey,proto3" json:"sortKey,omitempty"`     //
	SortField []string             `protobuf:"bytes,4,rep,name=sortField,proto3" json:"sortField,omitempty"` //
	Data      *PageHelpInfoDataReq `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *PageHelpInfoReq) Reset() {
	*x = PageHelpInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[130]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PageHelpInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PageHelpInfoReq) ProtoMessage() {}

func (x *PageHelpInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[130]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PageHelpInfoReq.ProtoReflect.Descriptor instead.
func (*PageHelpInfoReq) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{130}
}

func (x *PageHelpInfoReq) GetCurrent() int32 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *PageHelpInfoReq) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *PageHelpInfoReq) GetSortKey() string {
	if x != nil {
		return x.SortKey
	}
	return ""
}

func (x *PageHelpInfoReq) GetSortField() []string {
	if x != nil {
		return x.SortField
	}
	return nil
}

func (x *PageHelpInfoReq) GetData() *PageHelpInfoDataReq {
	if x != nil {
		return x.Data
	}
	return nil
}

type PageHelpDetailReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *PageHelpDetailReq) Reset() {
	*x = PageHelpDetailReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[131]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PageHelpDetailReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PageHelpDetailReq) ProtoMessage() {}

func (x *PageHelpDetailReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[131]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PageHelpDetailReq.ProtoReflect.Descriptor instead.
func (*PageHelpDetailReq) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{131}
}

func (x *PageHelpDetailReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type PageHelpDetailResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32               `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string              `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *PageHelpDetailData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *PageHelpDetailResp) Reset() {
	*x = PageHelpDetailResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[132]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PageHelpDetailResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PageHelpDetailResp) ProtoMessage() {}

func (x *PageHelpDetailResp) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[132]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PageHelpDetailResp.ProtoReflect.Descriptor instead.
func (*PageHelpDetailResp) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{132}
}

func (x *PageHelpDetailResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *PageHelpDetailResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *PageHelpDetailResp) GetData() *PageHelpDetailData {
	if x != nil {
		return x.Data
	}
	return nil
}

type PageHelpDetailData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	HelpTypeId   int64  `protobuf:"varint,2,opt,name=helpTypeId,proto3" json:"helpTypeId,omitempty"`
	HelpTypeName string `protobuf:"bytes,3,opt,name=helpTypeName,proto3" json:"helpTypeName,omitempty"`
	CreatedAt    int64  `protobuf:"varint,4,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	CreateBy     string `protobuf:"bytes,5,opt,name=createBy,proto3" json:"createBy,omitempty"`
	ImageUrl     string `protobuf:"bytes,6,opt,name=imageUrl,proto3" json:"imageUrl,omitempty"`
	Language     string `protobuf:"bytes,7,opt,name=language,proto3" json:"language,omitempty"`
	Sort         int64  `protobuf:"varint,8,opt,name=sort,proto3" json:"sort,omitempty"`
	Status       int64  `protobuf:"varint,9,opt,name=status,proto3" json:"status,omitempty"`
	Title        string `protobuf:"bytes,10,opt,name=title,proto3" json:"title,omitempty"`
	UpdateBy     string `protobuf:"bytes,11,opt,name=updateBy,proto3" json:"updateBy,omitempty"`
	UpdatedAt    int64  `protobuf:"varint,12,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	Content      string `protobuf:"bytes,13,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *PageHelpDetailData) Reset() {
	*x = PageHelpDetailData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[133]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PageHelpDetailData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PageHelpDetailData) ProtoMessage() {}

func (x *PageHelpDetailData) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[133]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PageHelpDetailData.ProtoReflect.Descriptor instead.
func (*PageHelpDetailData) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{133}
}

func (x *PageHelpDetailData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PageHelpDetailData) GetHelpTypeId() int64 {
	if x != nil {
		return x.HelpTypeId
	}
	return 0
}

func (x *PageHelpDetailData) GetHelpTypeName() string {
	if x != nil {
		return x.HelpTypeName
	}
	return ""
}

func (x *PageHelpDetailData) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *PageHelpDetailData) GetCreateBy() string {
	if x != nil {
		return x.CreateBy
	}
	return ""
}

func (x *PageHelpDetailData) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

func (x *PageHelpDetailData) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *PageHelpDetailData) GetSort() int64 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *PageHelpDetailData) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *PageHelpDetailData) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *PageHelpDetailData) GetUpdateBy() string {
	if x != nil {
		return x.UpdateBy
	}
	return ""
}

func (x *PageHelpDetailData) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *PageHelpDetailData) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type PageHelpInfoDataReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Language   string `protobuf:"bytes,1,opt,name=language,proto3" json:"language,omitempty"`
	HelpTypeId int64  `protobuf:"varint,2,opt,name=helpTypeId,proto3" json:"helpTypeId,omitempty"`
	Status     string `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	UpdateBy   string `protobuf:"bytes,4,opt,name=updateBy,proto3" json:"updateBy,omitempty"`
	StartTime  int64  `protobuf:"varint,5,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime    int64  `protobuf:"varint,6,opt,name=endTime,proto3" json:"endTime,omitempty"`
}

func (x *PageHelpInfoDataReq) Reset() {
	*x = PageHelpInfoDataReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[134]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PageHelpInfoDataReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PageHelpInfoDataReq) ProtoMessage() {}

func (x *PageHelpInfoDataReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[134]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PageHelpInfoDataReq.ProtoReflect.Descriptor instead.
func (*PageHelpInfoDataReq) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{134}
}

func (x *PageHelpInfoDataReq) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *PageHelpInfoDataReq) GetHelpTypeId() int64 {
	if x != nil {
		return x.HelpTypeId
	}
	return 0
}

func (x *PageHelpInfoDataReq) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *PageHelpInfoDataReq) GetUpdateBy() string {
	if x != nil {
		return x.UpdateBy
	}
	return ""
}

func (x *PageHelpInfoDataReq) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *PageHelpInfoDataReq) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

type PageHelpInfoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32             `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string            `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *PageHelpInfoData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *PageHelpInfoResp) Reset() {
	*x = PageHelpInfoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[135]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PageHelpInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PageHelpInfoResp) ProtoMessage() {}

func (x *PageHelpInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[135]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PageHelpInfoResp.ProtoReflect.Descriptor instead.
func (*PageHelpInfoResp) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{135}
}

func (x *PageHelpInfoResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *PageHelpInfoResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *PageHelpInfoResp) GetData() *PageHelpInfoData {
	if x != nil {
		return x.Data
	}
	return nil
}

type PageHelpInfoData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current string                  `protobuf:"bytes,1,opt,name=current,proto3" json:"current,omitempty"`
	Pages   string                  `protobuf:"bytes,2,opt,name=pages,proto3" json:"pages,omitempty"`
	Size    string                  `protobuf:"bytes,3,opt,name=size,proto3" json:"size,omitempty"`
	Total   string                  `protobuf:"bytes,4,opt,name=total,proto3" json:"total,omitempty"`
	List    []*PageHelpInfoDataItem `protobuf:"bytes,5,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *PageHelpInfoData) Reset() {
	*x = PageHelpInfoData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[136]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PageHelpInfoData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PageHelpInfoData) ProtoMessage() {}

func (x *PageHelpInfoData) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[136]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PageHelpInfoData.ProtoReflect.Descriptor instead.
func (*PageHelpInfoData) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{136}
}

func (x *PageHelpInfoData) GetCurrent() string {
	if x != nil {
		return x.Current
	}
	return ""
}

func (x *PageHelpInfoData) GetPages() string {
	if x != nil {
		return x.Pages
	}
	return ""
}

func (x *PageHelpInfoData) GetSize() string {
	if x != nil {
		return x.Size
	}
	return ""
}

func (x *PageHelpInfoData) GetTotal() string {
	if x != nil {
		return x.Total
	}
	return ""
}

func (x *PageHelpInfoData) GetList() []*PageHelpInfoDataItem {
	if x != nil {
		return x.List
	}
	return nil
}

type PageHelpInfoDataItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Language     string `protobuf:"bytes,2,opt,name=language,proto3" json:"language,omitempty"`
	Status       int64  `protobuf:"varint,3,opt,name=status,proto3" json:"status,omitempty"`
	Sort         int64  `protobuf:"varint,4,opt,name=sort,proto3" json:"sort,omitempty"`
	Title        string `protobuf:"bytes,5,opt,name=title,proto3" json:"title,omitempty"`
	ImageUrl     string `protobuf:"bytes,6,opt,name=imageUrl,proto3" json:"imageUrl,omitempty"`
	CreateBy     string `protobuf:"bytes,7,opt,name=createBy,proto3" json:"createBy,omitempty"`
	CreatedAt    int64  `protobuf:"varint,8,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdateBy     string `protobuf:"bytes,9,opt,name=updateBy,proto3" json:"updateBy,omitempty"`
	UpdatedAt    int64  `protobuf:"varint,10,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	HelpTypeId   int64  `protobuf:"varint,11,opt,name=helpTypeId,proto3" json:"helpTypeId,omitempty"`
	HelpTypeName string `protobuf:"bytes,12,opt,name=helpTypeName,proto3" json:"helpTypeName,omitempty"`
}

func (x *PageHelpInfoDataItem) Reset() {
	*x = PageHelpInfoDataItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[137]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PageHelpInfoDataItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PageHelpInfoDataItem) ProtoMessage() {}

func (x *PageHelpInfoDataItem) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[137]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PageHelpInfoDataItem.ProtoReflect.Descriptor instead.
func (*PageHelpInfoDataItem) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{137}
}

func (x *PageHelpInfoDataItem) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PageHelpInfoDataItem) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *PageHelpInfoDataItem) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *PageHelpInfoDataItem) GetSort() int64 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *PageHelpInfoDataItem) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *PageHelpInfoDataItem) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

func (x *PageHelpInfoDataItem) GetCreateBy() string {
	if x != nil {
		return x.CreateBy
	}
	return ""
}

func (x *PageHelpInfoDataItem) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *PageHelpInfoDataItem) GetUpdateBy() string {
	if x != nil {
		return x.UpdateBy
	}
	return ""
}

func (x *PageHelpInfoDataItem) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *PageHelpInfoDataItem) GetHelpTypeId() int64 {
	if x != nil {
		return x.HelpTypeId
	}
	return 0
}

func (x *PageHelpInfoDataItem) GetHelpTypeName() string {
	if x != nil {
		return x.HelpTypeName
	}
	return ""
}

type TaskExportReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current   int32              `protobuf:"varint,1,opt,name=current,proto3" json:"current,omitempty"`    //
	Size      int32              `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`          //
	SortKey   string             `protobuf:"bytes,3,opt,name=sortKey,proto3" json:"sortKey,omitempty"`     //
	SortField []string           `protobuf:"bytes,4,rep,name=sortField,proto3" json:"sortField,omitempty"` //
	Data      *TaskExportDataReq `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *TaskExportReq) Reset() {
	*x = TaskExportReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[138]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskExportReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskExportReq) ProtoMessage() {}

func (x *TaskExportReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[138]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskExportReq.ProtoReflect.Descriptor instead.
func (*TaskExportReq) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{138}
}

func (x *TaskExportReq) GetCurrent() int32 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *TaskExportReq) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *TaskExportReq) GetSortKey() string {
	if x != nil {
		return x.SortKey
	}
	return ""
}

func (x *TaskExportReq) GetSortField() []string {
	if x != nil {
		return x.SortField
	}
	return nil
}

func (x *TaskExportReq) GetData() *TaskExportDataReq {
	if x != nil {
		return x.Data
	}
	return nil
}

type TaskExportDataReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StatusCode int64 `protobuf:"varint,1,opt,name=statusCode,proto3" json:"statusCode,omitempty"`
	StartTime  int64 `protobuf:"varint,2,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime    int64 `protobuf:"varint,3,opt,name=endTime,proto3" json:"endTime,omitempty"`
}

func (x *TaskExportDataReq) Reset() {
	*x = TaskExportDataReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[139]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskExportDataReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskExportDataReq) ProtoMessage() {}

func (x *TaskExportDataReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[139]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskExportDataReq.ProtoReflect.Descriptor instead.
func (*TaskExportDataReq) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{139}
}

func (x *TaskExportDataReq) GetStatusCode() int64 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *TaskExportDataReq) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *TaskExportDataReq) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

type TaskExportResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32               `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string              `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *TaskExportDataResp `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *TaskExportResp) Reset() {
	*x = TaskExportResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[140]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskExportResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskExportResp) ProtoMessage() {}

func (x *TaskExportResp) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[140]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskExportResp.ProtoReflect.Descriptor instead.
func (*TaskExportResp) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{140}
}

func (x *TaskExportResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *TaskExportResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *TaskExportResp) GetData() *TaskExportDataResp {
	if x != nil {
		return x.Data
	}
	return nil
}

type TaskExportDataResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current string                `protobuf:"bytes,1,opt,name=current,proto3" json:"current,omitempty"`
	Pages   string                `protobuf:"bytes,2,opt,name=pages,proto3" json:"pages,omitempty"`
	Size    string                `protobuf:"bytes,3,opt,name=size,proto3" json:"size,omitempty"`
	Total   string                `protobuf:"bytes,4,opt,name=total,proto3" json:"total,omitempty"`
	List    []*TaskExportDataItem `protobuf:"bytes,5,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *TaskExportDataResp) Reset() {
	*x = TaskExportDataResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[141]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskExportDataResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskExportDataResp) ProtoMessage() {}

func (x *TaskExportDataResp) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[141]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskExportDataResp.ProtoReflect.Descriptor instead.
func (*TaskExportDataResp) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{141}
}

func (x *TaskExportDataResp) GetCurrent() string {
	if x != nil {
		return x.Current
	}
	return ""
}

func (x *TaskExportDataResp) GetPages() string {
	if x != nil {
		return x.Pages
	}
	return ""
}

func (x *TaskExportDataResp) GetSize() string {
	if x != nil {
		return x.Size
	}
	return ""
}

func (x *TaskExportDataResp) GetTotal() string {
	if x != nil {
		return x.Total
	}
	return ""
}

func (x *TaskExportDataResp) GetList() []*TaskExportDataItem {
	if x != nil {
		return x.List
	}
	return nil
}

type TaskExportDataItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CreatedAt    int64  `protobuf:"varint,2,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	FilePath     string `protobuf:"bytes,3,opt,name=filePath,proto3" json:"filePath,omitempty"`
	FilePathHash int64  `protobuf:"varint,4,opt,name=filePathHash,proto3" json:"filePathHash,omitempty"`
	Operator     string `protobuf:"bytes,5,opt,name=operator,proto3" json:"operator,omitempty"`
	OperatorId   int64  `protobuf:"varint,6,opt,name=operatorId,proto3" json:"operatorId,omitempty"`
	StatusCode   int64  `protobuf:"varint,7,opt,name=statusCode,proto3" json:"statusCode,omitempty"`
	StatusMess   string `protobuf:"bytes,8,opt,name=statusMess,proto3" json:"statusMess,omitempty"`
	TaskName     string `protobuf:"bytes,9,opt,name=taskName,proto3" json:"taskName,omitempty"`
	TaskParam    string `protobuf:"bytes,10,opt,name=taskParam,proto3" json:"taskParam,omitempty"`
	UpdatedAt    int64  `protobuf:"varint,11,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
}

func (x *TaskExportDataItem) Reset() {
	*x = TaskExportDataItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[142]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskExportDataItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskExportDataItem) ProtoMessage() {}

func (x *TaskExportDataItem) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[142]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskExportDataItem.ProtoReflect.Descriptor instead.
func (*TaskExportDataItem) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{142}
}

func (x *TaskExportDataItem) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *TaskExportDataItem) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *TaskExportDataItem) GetFilePath() string {
	if x != nil {
		return x.FilePath
	}
	return ""
}

func (x *TaskExportDataItem) GetFilePathHash() int64 {
	if x != nil {
		return x.FilePathHash
	}
	return 0
}

func (x *TaskExportDataItem) GetOperator() string {
	if x != nil {
		return x.Operator
	}
	return ""
}

func (x *TaskExportDataItem) GetOperatorId() int64 {
	if x != nil {
		return x.OperatorId
	}
	return 0
}

func (x *TaskExportDataItem) GetStatusCode() int64 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *TaskExportDataItem) GetStatusMess() string {
	if x != nil {
		return x.StatusMess
	}
	return ""
}

func (x *TaskExportDataItem) GetTaskName() string {
	if x != nil {
		return x.TaskName
	}
	return ""
}

func (x *TaskExportDataItem) GetTaskParam() string {
	if x != nil {
		return x.TaskParam
	}
	return ""
}

func (x *TaskExportDataItem) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

type GetVerifyCodeListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current   int32                     `protobuf:"varint,1,opt,name=current,proto3" json:"current,omitempty"`    //
	Size      int32                     `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`          //
	SortKey   string                    `protobuf:"bytes,3,opt,name=sortKey,proto3" json:"sortKey,omitempty"`     //
	SortField []string                  `protobuf:"bytes,4,rep,name=sortField,proto3" json:"sortField,omitempty"` //
	Data      *GetVerifyCodeListDataReq `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetVerifyCodeListReq) Reset() {
	*x = GetVerifyCodeListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[143]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVerifyCodeListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVerifyCodeListReq) ProtoMessage() {}

func (x *GetVerifyCodeListReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[143]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVerifyCodeListReq.ProtoReflect.Descriptor instead.
func (*GetVerifyCodeListReq) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{143}
}

func (x *GetVerifyCodeListReq) GetCurrent() int32 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *GetVerifyCodeListReq) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *GetVerifyCodeListReq) GetSortKey() string {
	if x != nil {
		return x.SortKey
	}
	return ""
}

func (x *GetVerifyCodeListReq) GetSortField() []string {
	if x != nil {
		return x.SortField
	}
	return nil
}

func (x *GetVerifyCodeListReq) GetData() *GetVerifyCodeListDataReq {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetVerifyCodeListDataReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account     string `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
	ChannelCode string `protobuf:"bytes,2,opt,name=channel_code,json=channelCode,proto3" json:"channel_code,omitempty"`
}

func (x *GetVerifyCodeListDataReq) Reset() {
	*x = GetVerifyCodeListDataReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[144]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVerifyCodeListDataReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVerifyCodeListDataReq) ProtoMessage() {}

func (x *GetVerifyCodeListDataReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[144]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVerifyCodeListDataReq.ProtoReflect.Descriptor instead.
func (*GetVerifyCodeListDataReq) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{144}
}

func (x *GetVerifyCodeListDataReq) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *GetVerifyCodeListDataReq) GetChannelCode() string {
	if x != nil {
		return x.ChannelCode
	}
	return ""
}

type GetVerifyCodeListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32                      `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string                     `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *GetVerifyCodeListDataResp `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetVerifyCodeListResp) Reset() {
	*x = GetVerifyCodeListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[145]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVerifyCodeListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVerifyCodeListResp) ProtoMessage() {}

func (x *GetVerifyCodeListResp) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[145]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVerifyCodeListResp.ProtoReflect.Descriptor instead.
func (*GetVerifyCodeListResp) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{145}
}

func (x *GetVerifyCodeListResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetVerifyCodeListResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GetVerifyCodeListResp) GetData() *GetVerifyCodeListDataResp {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetVerifyCodeListDataResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current string                       `protobuf:"bytes,1,opt,name=current,proto3" json:"current,omitempty"`
	Pages   string                       `protobuf:"bytes,2,opt,name=pages,proto3" json:"pages,omitempty"`
	Size    string                       `protobuf:"bytes,3,opt,name=size,proto3" json:"size,omitempty"`
	Total   string                       `protobuf:"bytes,4,opt,name=total,proto3" json:"total,omitempty"`
	List    []*GetVerifyCodeListDataItem `protobuf:"bytes,5,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *GetVerifyCodeListDataResp) Reset() {
	*x = GetVerifyCodeListDataResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[146]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVerifyCodeListDataResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVerifyCodeListDataResp) ProtoMessage() {}

func (x *GetVerifyCodeListDataResp) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[146]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVerifyCodeListDataResp.ProtoReflect.Descriptor instead.
func (*GetVerifyCodeListDataResp) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{146}
}

func (x *GetVerifyCodeListDataResp) GetCurrent() string {
	if x != nil {
		return x.Current
	}
	return ""
}

func (x *GetVerifyCodeListDataResp) GetPages() string {
	if x != nil {
		return x.Pages
	}
	return ""
}

func (x *GetVerifyCodeListDataResp) GetSize() string {
	if x != nil {
		return x.Size
	}
	return ""
}

func (x *GetVerifyCodeListDataResp) GetTotal() string {
	if x != nil {
		return x.Total
	}
	return ""
}

func (x *GetVerifyCodeListDataResp) GetList() []*GetVerifyCodeListDataItem {
	if x != nil {
		return x.List
	}
	return nil
}

type GetVerifyCodeListDataItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Account     string `protobuf:"bytes,2,opt,name=account,proto3" json:"account,omitempty"`
	Code        string `protobuf:"bytes,3,opt,name=code,proto3" json:"code,omitempty"`
	CreatedAt   int64  `protobuf:"varint,4,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	SendSmsType string `protobuf:"bytes,5,opt,name=sendSmsType,proto3" json:"sendSmsType,omitempty"`
	Status      int64  `protobuf:"varint,6,opt,name=status,proto3" json:"status,omitempty"`
	UpdatedAt   int64  `protobuf:"varint,7,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	ChannelCode string `protobuf:"bytes,8,opt,name=ChannelCode,proto3" json:"ChannelCode,omitempty"`
}

func (x *GetVerifyCodeListDataItem) Reset() {
	*x = GetVerifyCodeListDataItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[147]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVerifyCodeListDataItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVerifyCodeListDataItem) ProtoMessage() {}

func (x *GetVerifyCodeListDataItem) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[147]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVerifyCodeListDataItem.ProtoReflect.Descriptor instead.
func (*GetVerifyCodeListDataItem) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{147}
}

func (x *GetVerifyCodeListDataItem) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetVerifyCodeListDataItem) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *GetVerifyCodeListDataItem) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *GetVerifyCodeListDataItem) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *GetVerifyCodeListDataItem) GetSendSmsType() string {
	if x != nil {
		return x.SendSmsType
	}
	return ""
}

func (x *GetVerifyCodeListDataItem) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *GetVerifyCodeListDataItem) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *GetVerifyCodeListDataItem) GetChannelCode() string {
	if x != nil {
		return x.ChannelCode
	}
	return ""
}

type AddCustomerReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CustomerName string `protobuf:"bytes,1,opt,name=customer_name,json=customerName,proto3" json:"customer_name,omitempty"`
	CustomerUrl  string `protobuf:"bytes,2,opt,name=customer_url,json=customerUrl,proto3" json:"customer_url,omitempty"`
	CustomerFace string `protobuf:"bytes,3,opt,name=customer_face,json=customerFace,proto3" json:"customer_face,omitempty"`
	Status       int64  `protobuf:"varint,4,opt,name=status,proto3" json:"status,omitempty"` // 1==禁用 3==正常
	Lang         string `protobuf:"bytes,5,opt,name=lang,proto3" json:"lang,omitempty"`
}

func (x *AddCustomerReq) Reset() {
	*x = AddCustomerReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[148]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddCustomerReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddCustomerReq) ProtoMessage() {}

func (x *AddCustomerReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[148]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddCustomerReq.ProtoReflect.Descriptor instead.
func (*AddCustomerReq) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{148}
}

func (x *AddCustomerReq) GetCustomerName() string {
	if x != nil {
		return x.CustomerName
	}
	return ""
}

func (x *AddCustomerReq) GetCustomerUrl() string {
	if x != nil {
		return x.CustomerUrl
	}
	return ""
}

func (x *AddCustomerReq) GetCustomerFace() string {
	if x != nil {
		return x.CustomerFace
	}
	return ""
}

func (x *AddCustomerReq) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *AddCustomerReq) GetLang() string {
	if x != nil {
		return x.Lang
	}
	return ""
}

type AddCustomerResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data bool   `protobuf:"varint,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *AddCustomerResp) Reset() {
	*x = AddCustomerResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[149]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddCustomerResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddCustomerResp) ProtoMessage() {}

func (x *AddCustomerResp) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[149]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddCustomerResp.ProtoReflect.Descriptor instead.
func (*AddCustomerResp) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{149}
}

func (x *AddCustomerResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *AddCustomerResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *AddCustomerResp) GetData() bool {
	if x != nil {
		return x.Data
	}
	return false
}

type UpdateCustomerReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CustomerName string `protobuf:"bytes,2,opt,name=customer_name,json=customerName,proto3" json:"customer_name,omitempty"`
	CustomerUrl  string `protobuf:"bytes,3,opt,name=customer_url,json=customerUrl,proto3" json:"customer_url,omitempty"`
	CustomerFace string `protobuf:"bytes,4,opt,name=customer_face,json=customerFace,proto3" json:"customer_face,omitempty"`
	Status       int64  `protobuf:"varint,5,opt,name=status,proto3" json:"status,omitempty"` // 1==禁用 3==正常
	Lang         string `protobuf:"bytes,6,opt,name=lang,proto3" json:"lang,omitempty"`
}

func (x *UpdateCustomerReq) Reset() {
	*x = UpdateCustomerReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[150]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCustomerReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCustomerReq) ProtoMessage() {}

func (x *UpdateCustomerReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[150]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCustomerReq.ProtoReflect.Descriptor instead.
func (*UpdateCustomerReq) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{150}
}

func (x *UpdateCustomerReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateCustomerReq) GetCustomerName() string {
	if x != nil {
		return x.CustomerName
	}
	return ""
}

func (x *UpdateCustomerReq) GetCustomerUrl() string {
	if x != nil {
		return x.CustomerUrl
	}
	return ""
}

func (x *UpdateCustomerReq) GetCustomerFace() string {
	if x != nil {
		return x.CustomerFace
	}
	return ""
}

func (x *UpdateCustomerReq) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *UpdateCustomerReq) GetLang() string {
	if x != nil {
		return x.Lang
	}
	return ""
}

type UpdateCustomerResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data bool   `protobuf:"varint,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *UpdateCustomerResp) Reset() {
	*x = UpdateCustomerResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[151]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCustomerResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCustomerResp) ProtoMessage() {}

func (x *UpdateCustomerResp) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[151]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCustomerResp.ProtoReflect.Descriptor instead.
func (*UpdateCustomerResp) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{151}
}

func (x *UpdateCustomerResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *UpdateCustomerResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *UpdateCustomerResp) GetData() bool {
	if x != nil {
		return x.Data
	}
	return false
}

type GetCustomerReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetCustomerReq) Reset() {
	*x = GetCustomerReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[152]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCustomerReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCustomerReq) ProtoMessage() {}

func (x *GetCustomerReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[152]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCustomerReq.ProtoReflect.Descriptor instead.
func (*GetCustomerReq) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{152}
}

func (x *GetCustomerReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetCustomerResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32            `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string           `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *GetCustomerData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetCustomerResp) Reset() {
	*x = GetCustomerResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[153]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCustomerResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCustomerResp) ProtoMessage() {}

func (x *GetCustomerResp) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[153]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCustomerResp.ProtoReflect.Descriptor instead.
func (*GetCustomerResp) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{153}
}

func (x *GetCustomerResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetCustomerResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GetCustomerResp) GetData() *GetCustomerData {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetCustomerData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CustomerName string `protobuf:"bytes,2,opt,name=customer_name,json=customerName,proto3" json:"customer_name,omitempty"`
	CustomerUrl  string `protobuf:"bytes,3,opt,name=customer_url,json=customerUrl,proto3" json:"customer_url,omitempty"`
	CustomerFace string `protobuf:"bytes,4,opt,name=customer_face,json=customerFace,proto3" json:"customer_face,omitempty"`
	Status       int64  `protobuf:"varint,5,opt,name=status,proto3" json:"status,omitempty"` // 1==禁用 3==正常
	Lang         string `protobuf:"bytes,6,opt,name=lang,proto3" json:"lang,omitempty"`
}

func (x *GetCustomerData) Reset() {
	*x = GetCustomerData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[154]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCustomerData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCustomerData) ProtoMessage() {}

func (x *GetCustomerData) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[154]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCustomerData.ProtoReflect.Descriptor instead.
func (*GetCustomerData) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{154}
}

func (x *GetCustomerData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetCustomerData) GetCustomerName() string {
	if x != nil {
		return x.CustomerName
	}
	return ""
}

func (x *GetCustomerData) GetCustomerUrl() string {
	if x != nil {
		return x.CustomerUrl
	}
	return ""
}

func (x *GetCustomerData) GetCustomerFace() string {
	if x != nil {
		return x.CustomerFace
	}
	return ""
}

func (x *GetCustomerData) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *GetCustomerData) GetLang() string {
	if x != nil {
		return x.Lang
	}
	return ""
}

type DeleteCustomerReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteCustomerReq) Reset() {
	*x = DeleteCustomerReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[155]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCustomerReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCustomerReq) ProtoMessage() {}

func (x *DeleteCustomerReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[155]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCustomerReq.ProtoReflect.Descriptor instead.
func (*DeleteCustomerReq) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{155}
}

func (x *DeleteCustomerReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeleteCustomerResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data bool   `protobuf:"varint,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *DeleteCustomerResp) Reset() {
	*x = DeleteCustomerResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[156]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCustomerResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCustomerResp) ProtoMessage() {}

func (x *DeleteCustomerResp) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[156]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCustomerResp.ProtoReflect.Descriptor instead.
func (*DeleteCustomerResp) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{156}
}

func (x *DeleteCustomerResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *DeleteCustomerResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *DeleteCustomerResp) GetData() bool {
	if x != nil {
		return x.Data
	}
	return false
}

type GetCustomerListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current   int32                   `protobuf:"varint,1,opt,name=current,proto3" json:"current,omitempty"`    //
	Size      int32                   `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`          //
	SortKey   string                  `protobuf:"bytes,3,opt,name=sortKey,proto3" json:"sortKey,omitempty"`     //
	SortField []string                `protobuf:"bytes,4,rep,name=sortField,proto3" json:"sortField,omitempty"` //
	Data      *GetCustomerListDataReq `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetCustomerListReq) Reset() {
	*x = GetCustomerListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[157]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCustomerListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCustomerListReq) ProtoMessage() {}

func (x *GetCustomerListReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[157]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCustomerListReq.ProtoReflect.Descriptor instead.
func (*GetCustomerListReq) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{157}
}

func (x *GetCustomerListReq) GetCurrent() int32 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *GetCustomerListReq) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *GetCustomerListReq) GetSortKey() string {
	if x != nil {
		return x.SortKey
	}
	return ""
}

func (x *GetCustomerListReq) GetSortField() []string {
	if x != nil {
		return x.SortField
	}
	return nil
}

func (x *GetCustomerListReq) GetData() *GetCustomerListDataReq {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetCustomerListDataReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CustomerName string `protobuf:"bytes,1,opt,name=customer_name,json=customerName,proto3" json:"customer_name,omitempty"`
	Lang         string `protobuf:"bytes,2,opt,name=lang,proto3" json:"lang,omitempty"`
}

func (x *GetCustomerListDataReq) Reset() {
	*x = GetCustomerListDataReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[158]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCustomerListDataReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCustomerListDataReq) ProtoMessage() {}

func (x *GetCustomerListDataReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[158]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCustomerListDataReq.ProtoReflect.Descriptor instead.
func (*GetCustomerListDataReq) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{158}
}

func (x *GetCustomerListDataReq) GetCustomerName() string {
	if x != nil {
		return x.CustomerName
	}
	return ""
}

func (x *GetCustomerListDataReq) GetLang() string {
	if x != nil {
		return x.Lang
	}
	return ""
}

type GetCustomerListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32                    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string                   `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *GetCustomerListDataResp `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetCustomerListResp) Reset() {
	*x = GetCustomerListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[159]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCustomerListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCustomerListResp) ProtoMessage() {}

func (x *GetCustomerListResp) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[159]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCustomerListResp.ProtoReflect.Descriptor instead.
func (*GetCustomerListResp) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{159}
}

func (x *GetCustomerListResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetCustomerListResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GetCustomerListResp) GetData() *GetCustomerListDataResp {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetCustomerListDataResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current string                     `protobuf:"bytes,1,opt,name=current,proto3" json:"current,omitempty"`
	Pages   string                     `protobuf:"bytes,2,opt,name=pages,proto3" json:"pages,omitempty"`
	Size    string                     `protobuf:"bytes,3,opt,name=size,proto3" json:"size,omitempty"`
	Total   string                     `protobuf:"bytes,4,opt,name=total,proto3" json:"total,omitempty"`
	List    []*GetCustomerListDataItem `protobuf:"bytes,5,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *GetCustomerListDataResp) Reset() {
	*x = GetCustomerListDataResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[160]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCustomerListDataResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCustomerListDataResp) ProtoMessage() {}

func (x *GetCustomerListDataResp) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[160]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCustomerListDataResp.ProtoReflect.Descriptor instead.
func (*GetCustomerListDataResp) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{160}
}

func (x *GetCustomerListDataResp) GetCurrent() string {
	if x != nil {
		return x.Current
	}
	return ""
}

func (x *GetCustomerListDataResp) GetPages() string {
	if x != nil {
		return x.Pages
	}
	return ""
}

func (x *GetCustomerListDataResp) GetSize() string {
	if x != nil {
		return x.Size
	}
	return ""
}

func (x *GetCustomerListDataResp) GetTotal() string {
	if x != nil {
		return x.Total
	}
	return ""
}

func (x *GetCustomerListDataResp) GetList() []*GetCustomerListDataItem {
	if x != nil {
		return x.List
	}
	return nil
}

type GetCustomerListDataItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CustomerName string `protobuf:"bytes,2,opt,name=customer_name,json=customerName,proto3" json:"customer_name,omitempty"`
	CustomerUrl  string `protobuf:"bytes,3,opt,name=customer_url,json=customerUrl,proto3" json:"customer_url,omitempty"`
	CustomerFace string `protobuf:"bytes,4,opt,name=customer_face,json=customerFace,proto3" json:"customer_face,omitempty"`
	Status       int64  `protobuf:"varint,5,opt,name=status,proto3" json:"status,omitempty"` // 1==禁用 3==正常
	CreatedAt    int64  `protobuf:"varint,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt    int64  `protobuf:"varint,7,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	UpdatedUser  string `protobuf:"bytes,8,opt,name=updated_user,json=updatedUser,proto3" json:"updated_user,omitempty"`
	Lang         string `protobuf:"bytes,9,opt,name=lang,proto3" json:"lang,omitempty"`
}

func (x *GetCustomerListDataItem) Reset() {
	*x = GetCustomerListDataItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[161]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCustomerListDataItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCustomerListDataItem) ProtoMessage() {}

func (x *GetCustomerListDataItem) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[161]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCustomerListDataItem.ProtoReflect.Descriptor instead.
func (*GetCustomerListDataItem) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{161}
}

func (x *GetCustomerListDataItem) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetCustomerListDataItem) GetCustomerName() string {
	if x != nil {
		return x.CustomerName
	}
	return ""
}

func (x *GetCustomerListDataItem) GetCustomerUrl() string {
	if x != nil {
		return x.CustomerUrl
	}
	return ""
}

func (x *GetCustomerListDataItem) GetCustomerFace() string {
	if x != nil {
		return x.CustomerFace
	}
	return ""
}

func (x *GetCustomerListDataItem) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *GetCustomerListDataItem) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *GetCustomerListDataItem) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *GetCustomerListDataItem) GetUpdatedUser() string {
	if x != nil {
		return x.UpdatedUser
	}
	return ""
}

func (x *GetCustomerListDataItem) GetLang() string {
	if x != nil {
		return x.Lang
	}
	return ""
}

type CustomerListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Lang string `protobuf:"bytes,1,opt,name=lang,proto3" json:"lang,omitempty"`
}

func (x *CustomerListReq) Reset() {
	*x = CustomerListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[162]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CustomerListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CustomerListReq) ProtoMessage() {}

func (x *CustomerListReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[162]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CustomerListReq.ProtoReflect.Descriptor instead.
func (*CustomerListReq) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{162}
}

func (x *CustomerListReq) GetLang() string {
	if x != nil {
		return x.Lang
	}
	return ""
}

type CustomerListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32               `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string              `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data []*CustomerListData `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *CustomerListResp) Reset() {
	*x = CustomerListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[163]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CustomerListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CustomerListResp) ProtoMessage() {}

func (x *CustomerListResp) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[163]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CustomerListResp.ProtoReflect.Descriptor instead.
func (*CustomerListResp) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{163}
}

func (x *CustomerListResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *CustomerListResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *CustomerListResp) GetData() []*CustomerListData {
	if x != nil {
		return x.Data
	}
	return nil
}

type CustomerListData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CustomerName string `protobuf:"bytes,2,opt,name=customer_name,json=customerName,proto3" json:"customer_name,omitempty"`
	CustomerUrl  string `protobuf:"bytes,3,opt,name=customer_url,json=customerUrl,proto3" json:"customer_url,omitempty"`
	CustomerFace string `protobuf:"bytes,4,opt,name=customer_face,json=customerFace,proto3" json:"customer_face,omitempty"`
	Lang         string `protobuf:"bytes,5,opt,name=lang,proto3" json:"lang,omitempty"`
}

func (x *CustomerListData) Reset() {
	*x = CustomerListData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[164]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CustomerListData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CustomerListData) ProtoMessage() {}

func (x *CustomerListData) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[164]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CustomerListData.ProtoReflect.Descriptor instead.
func (*CustomerListData) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{164}
}

func (x *CustomerListData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CustomerListData) GetCustomerName() string {
	if x != nil {
		return x.CustomerName
	}
	return ""
}

func (x *CustomerListData) GetCustomerUrl() string {
	if x != nil {
		return x.CustomerUrl
	}
	return ""
}

func (x *CustomerListData) GetCustomerFace() string {
	if x != nil {
		return x.CustomerFace
	}
	return ""
}

func (x *CustomerListData) GetLang() string {
	if x != nil {
		return x.Lang
	}
	return ""
}

type UpdateConfigAddressReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CompanyAddress   string `protobuf:"bytes,1,opt,name=company_address,json=companyAddress,proto3" json:"company_address,omitempty"`
	CompanyAddressAr string `protobuf:"bytes,2,opt,name=company_address_ar,json=companyAddressAr,proto3" json:"company_address_ar,omitempty"`
}

func (x *UpdateConfigAddressReq) Reset() {
	*x = UpdateConfigAddressReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[165]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateConfigAddressReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateConfigAddressReq) ProtoMessage() {}

func (x *UpdateConfigAddressReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[165]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateConfigAddressReq.ProtoReflect.Descriptor instead.
func (*UpdateConfigAddressReq) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{165}
}

func (x *UpdateConfigAddressReq) GetCompanyAddress() string {
	if x != nil {
		return x.CompanyAddress
	}
	return ""
}

func (x *UpdateConfigAddressReq) GetCompanyAddressAr() string {
	if x != nil {
		return x.CompanyAddressAr
	}
	return ""
}

type UpdateVipAbStationReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VipAbStationControl string `protobuf:"bytes,1,opt,name=VipAbStationControl,proto3" json:"VipAbStationControl,omitempty"`
	VipControlWithdraw  string `protobuf:"bytes,2,opt,name=vipControlWithdraw,proto3" json:"vipControlWithdraw,omitempty"`
}

func (x *UpdateVipAbStationReq) Reset() {
	*x = UpdateVipAbStationReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[166]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateVipAbStationReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateVipAbStationReq) ProtoMessage() {}

func (x *UpdateVipAbStationReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[166]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateVipAbStationReq.ProtoReflect.Descriptor instead.
func (*UpdateVipAbStationReq) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{166}
}

func (x *UpdateVipAbStationReq) GetVipAbStationControl() string {
	if x != nil {
		return x.VipAbStationControl
	}
	return ""
}

func (x *UpdateVipAbStationReq) GetVipControlWithdraw() string {
	if x != nil {
		return x.VipControlWithdraw
	}
	return ""
}

type UpdateVipAbStationResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data bool   `protobuf:"varint,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *UpdateVipAbStationResp) Reset() {
	*x = UpdateVipAbStationResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[167]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateVipAbStationResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateVipAbStationResp) ProtoMessage() {}

func (x *UpdateVipAbStationResp) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[167]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateVipAbStationResp.ProtoReflect.Descriptor instead.
func (*UpdateVipAbStationResp) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{167}
}

func (x *UpdateVipAbStationResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *UpdateVipAbStationResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *UpdateVipAbStationResp) GetData() bool {
	if x != nil {
		return x.Data
	}
	return false
}

type UpdateConfigAddressResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data bool   `protobuf:"varint,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *UpdateConfigAddressResp) Reset() {
	*x = UpdateConfigAddressResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[168]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateConfigAddressResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateConfigAddressResp) ProtoMessage() {}

func (x *UpdateConfigAddressResp) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[168]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateConfigAddressResp.ProtoReflect.Descriptor instead.
func (*UpdateConfigAddressResp) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{168}
}

func (x *UpdateConfigAddressResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *UpdateConfigAddressResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *UpdateConfigAddressResp) GetData() bool {
	if x != nil {
		return x.Data
	}
	return false
}

type GetCompanyAddressReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetCompanyAddressReq) Reset() {
	*x = GetCompanyAddressReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[169]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCompanyAddressReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCompanyAddressReq) ProtoMessage() {}

func (x *GetCompanyAddressReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[169]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCompanyAddressReq.ProtoReflect.Descriptor instead.
func (*GetCompanyAddressReq) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{169}
}

type GetVipAbStationControlReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetVipAbStationControlReq) Reset() {
	*x = GetVipAbStationControlReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[170]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVipAbStationControlReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVipAbStationControlReq) ProtoMessage() {}

func (x *GetVipAbStationControlReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[170]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVipAbStationControlReq.ProtoReflect.Descriptor instead.
func (*GetVipAbStationControlReq) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{170}
}

type GetCompanyAddressResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32                  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string                 `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *GetCompanyAddressData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetCompanyAddressResp) Reset() {
	*x = GetCompanyAddressResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[171]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCompanyAddressResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCompanyAddressResp) ProtoMessage() {}

func (x *GetCompanyAddressResp) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[171]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCompanyAddressResp.ProtoReflect.Descriptor instead.
func (*GetCompanyAddressResp) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{171}
}

func (x *GetCompanyAddressResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetCompanyAddressResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GetCompanyAddressResp) GetData() *GetCompanyAddressData {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetCompanyAddressData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CompanyAddress   string `protobuf:"bytes,1,opt,name=company_address,json=companyAddress,proto3" json:"company_address,omitempty"`
	CompanyAddressAr string `protobuf:"bytes,2,opt,name=company_address_ar,json=companyAddressAr,proto3" json:"company_address_ar,omitempty"`
}

func (x *GetCompanyAddressData) Reset() {
	*x = GetCompanyAddressData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[172]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCompanyAddressData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCompanyAddressData) ProtoMessage() {}

func (x *GetCompanyAddressData) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[172]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCompanyAddressData.ProtoReflect.Descriptor instead.
func (*GetCompanyAddressData) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{172}
}

func (x *GetCompanyAddressData) GetCompanyAddress() string {
	if x != nil {
		return x.CompanyAddress
	}
	return ""
}

func (x *GetCompanyAddressData) GetCompanyAddressAr() string {
	if x != nil {
		return x.CompanyAddressAr
	}
	return ""
}

type GetVipAbStationControlResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32                       `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string                      `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *GetVipAbStationControlData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetVipAbStationControlResp) Reset() {
	*x = GetVipAbStationControlResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[173]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVipAbStationControlResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVipAbStationControlResp) ProtoMessage() {}

func (x *GetVipAbStationControlResp) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[173]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVipAbStationControlResp.ProtoReflect.Descriptor instead.
func (*GetVipAbStationControlResp) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{173}
}

func (x *GetVipAbStationControlResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetVipAbStationControlResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GetVipAbStationControlResp) GetData() *GetVipAbStationControlData {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetVipAbStationControlData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VipAbStationControl int32 `protobuf:"varint,1,opt,name=VipAbStationControl,proto3" json:"VipAbStationControl,omitempty"`
	VipControlWithdraw  int32 `protobuf:"varint,2,opt,name=VipControlWithdraw,proto3" json:"VipControlWithdraw,omitempty"`
}

func (x *GetVipAbStationControlData) Reset() {
	*x = GetVipAbStationControlData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[174]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVipAbStationControlData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVipAbStationControlData) ProtoMessage() {}

func (x *GetVipAbStationControlData) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[174]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVipAbStationControlData.ProtoReflect.Descriptor instead.
func (*GetVipAbStationControlData) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{174}
}

func (x *GetVipAbStationControlData) GetVipAbStationControl() int32 {
	if x != nil {
		return x.VipAbStationControl
	}
	return 0
}

func (x *GetVipAbStationControlData) GetVipControlWithdraw() int32 {
	if x != nil {
		return x.VipControlWithdraw
	}
	return 0
}

type GetAllGameSlotReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetAllGameSlotReq) Reset() {
	*x = GetAllGameSlotReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[175]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllGameSlotReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllGameSlotReq) ProtoMessage() {}

func (x *GetAllGameSlotReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[175]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllGameSlotReq.ProtoReflect.Descriptor instead.
func (*GetAllGameSlotReq) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{175}
}

type GetAllGameSlotResq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32                         `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string                        `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data []*GetAllGameSlotResponseData `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *GetAllGameSlotResq) Reset() {
	*x = GetAllGameSlotResq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[176]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllGameSlotResq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllGameSlotResq) ProtoMessage() {}

func (x *GetAllGameSlotResq) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[176]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllGameSlotResq.ProtoReflect.Descriptor instead.
func (*GetAllGameSlotResq) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{176}
}

func (x *GetAllGameSlotResq) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetAllGameSlotResq) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GetAllGameSlotResq) GetData() []*GetAllGameSlotResponseData {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetAllGameSlotResponseData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code                  string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	GameProviderSubtypeId int64  `protobuf:"varint,2,opt,name=gameProviderSubtypeId,proto3" json:"gameProviderSubtypeId,omitempty"`
	GameTypeId            int64  `protobuf:"varint,3,opt,name=gameTypeId,proto3" json:"gameTypeId,omitempty"`
	GameProviderId        int64  `protobuf:"varint,4,opt,name=gameProviderId,proto3" json:"gameProviderId,omitempty"`
	GameProviderName      string `protobuf:"bytes,5,opt,name=gameProviderName,proto3" json:"gameProviderName,omitempty"`
	GameProvideCode       string `protobuf:"bytes,6,opt,name=gameProvideCode,proto3" json:"gameProvideCode,omitempty"`
	Name                  string `protobuf:"bytes,7,opt,name=name,proto3" json:"name,omitempty"`
	OriginalIcon          string `protobuf:"bytes,8,opt,name=originalIcon,proto3" json:"originalIcon,omitempty"`
	IsNew                 int64  `protobuf:"varint,9,opt,name=isNew,proto3" json:"isNew,omitempty"`
	GameTypeName          string `protobuf:"bytes,10,opt,name=gameTypeName,proto3" json:"gameTypeName,omitempty"`
	FavoriteStar          int64  `protobuf:"varint,11,opt,name=favoriteStar,proto3" json:"favoriteStar,omitempty"`
	HotStar               int64  `protobuf:"varint,12,opt,name=hotStar,proto3" json:"hotStar,omitempty"`
	Sort                  int64  `protobuf:"varint,13,opt,name=sort,proto3" json:"sort,omitempty"`
	Status                int64  `protobuf:"varint,14,opt,name=status,proto3" json:"status,omitempty"`
	Device                int64  `protobuf:"varint,15,opt,name=device,proto3" json:"device,omitempty"`
	Id                    int64  `protobuf:"varint,16,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetAllGameSlotResponseData) Reset() {
	*x = GetAllGameSlotResponseData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[177]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllGameSlotResponseData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllGameSlotResponseData) ProtoMessage() {}

func (x *GetAllGameSlotResponseData) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[177]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllGameSlotResponseData.ProtoReflect.Descriptor instead.
func (*GetAllGameSlotResponseData) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{177}
}

func (x *GetAllGameSlotResponseData) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *GetAllGameSlotResponseData) GetGameProviderSubtypeId() int64 {
	if x != nil {
		return x.GameProviderSubtypeId
	}
	return 0
}

func (x *GetAllGameSlotResponseData) GetGameTypeId() int64 {
	if x != nil {
		return x.GameTypeId
	}
	return 0
}

func (x *GetAllGameSlotResponseData) GetGameProviderId() int64 {
	if x != nil {
		return x.GameProviderId
	}
	return 0
}

func (x *GetAllGameSlotResponseData) GetGameProviderName() string {
	if x != nil {
		return x.GameProviderName
	}
	return ""
}

func (x *GetAllGameSlotResponseData) GetGameProvideCode() string {
	if x != nil {
		return x.GameProvideCode
	}
	return ""
}

func (x *GetAllGameSlotResponseData) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetAllGameSlotResponseData) GetOriginalIcon() string {
	if x != nil {
		return x.OriginalIcon
	}
	return ""
}

func (x *GetAllGameSlotResponseData) GetIsNew() int64 {
	if x != nil {
		return x.IsNew
	}
	return 0
}

func (x *GetAllGameSlotResponseData) GetGameTypeName() string {
	if x != nil {
		return x.GameTypeName
	}
	return ""
}

func (x *GetAllGameSlotResponseData) GetFavoriteStar() int64 {
	if x != nil {
		return x.FavoriteStar
	}
	return 0
}

func (x *GetAllGameSlotResponseData) GetHotStar() int64 {
	if x != nil {
		return x.HotStar
	}
	return 0
}

func (x *GetAllGameSlotResponseData) GetSort() int64 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *GetAllGameSlotResponseData) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *GetAllGameSlotResponseData) GetDevice() int64 {
	if x != nil {
		return x.Device
	}
	return 0
}

func (x *GetAllGameSlotResponseData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type ArticleInfoPageListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current   int32                       `protobuf:"varint,1,opt,name=current,proto3" json:"current,omitempty"`
	Size      int32                       `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	Data      *ArticleInfoPageListDataReq `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	SortField []string                    `protobuf:"bytes,4,rep,name=sortField,proto3" json:"sortField,omitempty"`
	SortKey   string                      `protobuf:"bytes,5,opt,name=sortKey,proto3" json:"sortKey,omitempty"`
}

func (x *ArticleInfoPageListReq) Reset() {
	*x = ArticleInfoPageListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[178]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArticleInfoPageListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArticleInfoPageListReq) ProtoMessage() {}

func (x *ArticleInfoPageListReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[178]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArticleInfoPageListReq.ProtoReflect.Descriptor instead.
func (*ArticleInfoPageListReq) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{178}
}

func (x *ArticleInfoPageListReq) GetCurrent() int32 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *ArticleInfoPageListReq) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *ArticleInfoPageListReq) GetData() *ArticleInfoPageListDataReq {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ArticleInfoPageListReq) GetSortField() []string {
	if x != nil {
		return x.SortField
	}
	return nil
}

func (x *ArticleInfoPageListReq) GetSortKey() string {
	if x != nil {
		return x.SortKey
	}
	return ""
}

type ArticleInfoPageListDataReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Language  string `protobuf:"bytes,1,opt,name=language,proto3" json:"language,omitempty"`
	Status    int64  `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	UpdateBy  string `protobuf:"bytes,3,opt,name=updateBy,proto3" json:"updateBy,omitempty"` // 操作人
	StartTime int64  `protobuf:"varint,4,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime   int64  `protobuf:"varint,5,opt,name=endTime,proto3" json:"endTime,omitempty"`
}

func (x *ArticleInfoPageListDataReq) Reset() {
	*x = ArticleInfoPageListDataReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[179]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArticleInfoPageListDataReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArticleInfoPageListDataReq) ProtoMessage() {}

func (x *ArticleInfoPageListDataReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[179]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArticleInfoPageListDataReq.ProtoReflect.Descriptor instead.
func (*ArticleInfoPageListDataReq) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{179}
}

func (x *ArticleInfoPageListDataReq) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *ArticleInfoPageListDataReq) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *ArticleInfoPageListDataReq) GetUpdateBy() string {
	if x != nil {
		return x.UpdateBy
	}
	return ""
}

func (x *ArticleInfoPageListDataReq) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *ArticleInfoPageListDataReq) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

type ArticleInfoPageListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32                        `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string                       `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *ArticleInfoPageListDataResp `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *ArticleInfoPageListResp) Reset() {
	*x = ArticleInfoPageListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[180]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArticleInfoPageListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArticleInfoPageListResp) ProtoMessage() {}

func (x *ArticleInfoPageListResp) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[180]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArticleInfoPageListResp.ProtoReflect.Descriptor instead.
func (*ArticleInfoPageListResp) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{180}
}

func (x *ArticleInfoPageListResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ArticleInfoPageListResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *ArticleInfoPageListResp) GetData() *ArticleInfoPageListDataResp {
	if x != nil {
		return x.Data
	}
	return nil
}

type ArticleInfoPageListDataResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current string                         `protobuf:"bytes,1,opt,name=current,proto3" json:"current,omitempty"`
	Pages   string                         `protobuf:"bytes,2,opt,name=pages,proto3" json:"pages,omitempty"`
	Size    string                         `protobuf:"bytes,3,opt,name=size,proto3" json:"size,omitempty"`
	Total   string                         `protobuf:"bytes,4,opt,name=total,proto3" json:"total,omitempty"`
	List    []*ArticleInfoPageListDataItem `protobuf:"bytes,5,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *ArticleInfoPageListDataResp) Reset() {
	*x = ArticleInfoPageListDataResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[181]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArticleInfoPageListDataResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArticleInfoPageListDataResp) ProtoMessage() {}

func (x *ArticleInfoPageListDataResp) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[181]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArticleInfoPageListDataResp.ProtoReflect.Descriptor instead.
func (*ArticleInfoPageListDataResp) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{181}
}

func (x *ArticleInfoPageListDataResp) GetCurrent() string {
	if x != nil {
		return x.Current
	}
	return ""
}

func (x *ArticleInfoPageListDataResp) GetPages() string {
	if x != nil {
		return x.Pages
	}
	return ""
}

func (x *ArticleInfoPageListDataResp) GetSize() string {
	if x != nil {
		return x.Size
	}
	return ""
}

func (x *ArticleInfoPageListDataResp) GetTotal() string {
	if x != nil {
		return x.Total
	}
	return ""
}

func (x *ArticleInfoPageListDataResp) GetList() []*ArticleInfoPageListDataItem {
	if x != nil {
		return x.List
	}
	return nil
}

type ArticleInfoPageListDataItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Language   string `protobuf:"bytes,2,opt,name=language,proto3" json:"language,omitempty"`
	Title      string `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Status     int64  `protobuf:"varint,4,opt,name=status,proto3" json:"status,omitempty"`
	Sort       int64  `protobuf:"varint,5,opt,name=sort,proto3" json:"sort,omitempty"`
	CreateUser string `protobuf:"bytes,6,opt,name=createUser,proto3" json:"createUser,omitempty"`
	CreatedAt  int64  `protobuf:"varint,7,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdateUser string `protobuf:"bytes,8,opt,name=updateUser,proto3" json:"updateUser,omitempty"`
	UpdatedAt  int64  `protobuf:"varint,9,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	Img        string `protobuf:"bytes,10,opt,name=img,proto3" json:"img,omitempty"`
}

func (x *ArticleInfoPageListDataItem) Reset() {
	*x = ArticleInfoPageListDataItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[182]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArticleInfoPageListDataItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArticleInfoPageListDataItem) ProtoMessage() {}

func (x *ArticleInfoPageListDataItem) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[182]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArticleInfoPageListDataItem.ProtoReflect.Descriptor instead.
func (*ArticleInfoPageListDataItem) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{182}
}

func (x *ArticleInfoPageListDataItem) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ArticleInfoPageListDataItem) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *ArticleInfoPageListDataItem) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ArticleInfoPageListDataItem) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *ArticleInfoPageListDataItem) GetSort() int64 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *ArticleInfoPageListDataItem) GetCreateUser() string {
	if x != nil {
		return x.CreateUser
	}
	return ""
}

func (x *ArticleInfoPageListDataItem) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *ArticleInfoPageListDataItem) GetUpdateUser() string {
	if x != nil {
		return x.UpdateUser
	}
	return ""
}

func (x *ArticleInfoPageListDataItem) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *ArticleInfoPageListDataItem) GetImg() string {
	if x != nil {
		return x.Img
	}
	return ""
}

type ArticleDetailReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ArticleDetailReq) Reset() {
	*x = ArticleDetailReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[183]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArticleDetailReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArticleDetailReq) ProtoMessage() {}

func (x *ArticleDetailReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[183]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArticleDetailReq.ProtoReflect.Descriptor instead.
func (*ArticleDetailReq) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{183}
}

func (x *ArticleDetailReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type ArticleDetailResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32              `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string             `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *ArticleDetailData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *ArticleDetailResp) Reset() {
	*x = ArticleDetailResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[184]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArticleDetailResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArticleDetailResp) ProtoMessage() {}

func (x *ArticleDetailResp) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[184]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArticleDetailResp.ProtoReflect.Descriptor instead.
func (*ArticleDetailResp) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{184}
}

func (x *ArticleDetailResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ArticleDetailResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *ArticleDetailResp) GetData() *ArticleDetailData {
	if x != nil {
		return x.Data
	}
	return nil
}

type ArticleDetailData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Language   string `protobuf:"bytes,2,opt,name=language,proto3" json:"language,omitempty"`
	Title      string `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Status     int64  `protobuf:"varint,4,opt,name=status,proto3" json:"status,omitempty"`
	Sort       int64  `protobuf:"varint,5,opt,name=sort,proto3" json:"sort,omitempty"`
	CreateUser string `protobuf:"bytes,6,opt,name=createUser,proto3" json:"createUser,omitempty"`
	CreatedAt  int64  `protobuf:"varint,7,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdateUser string `protobuf:"bytes,8,opt,name=updateUser,proto3" json:"updateUser,omitempty"`
	UpdatedAt  int64  `protobuf:"varint,9,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	Content    string `protobuf:"bytes,10,opt,name=content,proto3" json:"content,omitempty"`
	Img        string `protobuf:"bytes,11,opt,name=img,proto3" json:"img,omitempty"`
}

func (x *ArticleDetailData) Reset() {
	*x = ArticleDetailData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[185]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArticleDetailData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArticleDetailData) ProtoMessage() {}

func (x *ArticleDetailData) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[185]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArticleDetailData.ProtoReflect.Descriptor instead.
func (*ArticleDetailData) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{185}
}

func (x *ArticleDetailData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ArticleDetailData) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *ArticleDetailData) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ArticleDetailData) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *ArticleDetailData) GetSort() int64 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *ArticleDetailData) GetCreateUser() string {
	if x != nil {
		return x.CreateUser
	}
	return ""
}

func (x *ArticleDetailData) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *ArticleDetailData) GetUpdateUser() string {
	if x != nil {
		return x.UpdateUser
	}
	return ""
}

func (x *ArticleDetailData) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *ArticleDetailData) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *ArticleDetailData) GetImg() string {
	if x != nil {
		return x.Img
	}
	return ""
}

type AddArticleReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Language string `protobuf:"bytes,1,opt,name=language,proto3" json:"language,omitempty"`
	Title    string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Status   int64  `protobuf:"varint,3,opt,name=status,proto3" json:"status,omitempty"`
	Sort     int64  `protobuf:"varint,4,opt,name=sort,proto3" json:"sort,omitempty"`
	Content  string `protobuf:"bytes,5,opt,name=content,proto3" json:"content,omitempty"`
	Img      string `protobuf:"bytes,6,opt,name=img,proto3" json:"img,omitempty"`
}

func (x *AddArticleReq) Reset() {
	*x = AddArticleReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[186]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddArticleReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddArticleReq) ProtoMessage() {}

func (x *AddArticleReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[186]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddArticleReq.ProtoReflect.Descriptor instead.
func (*AddArticleReq) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{186}
}

func (x *AddArticleReq) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *AddArticleReq) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *AddArticleReq) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *AddArticleReq) GetSort() int64 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *AddArticleReq) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *AddArticleReq) GetImg() string {
	if x != nil {
		return x.Img
	}
	return ""
}

type AddArticleResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data string `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *AddArticleResp) Reset() {
	*x = AddArticleResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[187]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddArticleResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddArticleResp) ProtoMessage() {}

func (x *AddArticleResp) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[187]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddArticleResp.ProtoReflect.Descriptor instead.
func (*AddArticleResp) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{187}
}

func (x *AddArticleResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *AddArticleResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *AddArticleResp) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

type UpdateArticleReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Language string `protobuf:"bytes,2,opt,name=language,proto3" json:"language,omitempty"`
	Title    string `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Status   int64  `protobuf:"varint,4,opt,name=status,proto3" json:"status,omitempty"`
	Sort     int64  `protobuf:"varint,5,opt,name=sort,proto3" json:"sort,omitempty"`
	Content  string `protobuf:"bytes,6,opt,name=content,proto3" json:"content,omitempty"`
	Img      string `protobuf:"bytes,7,opt,name=img,proto3" json:"img,omitempty"`
}

func (x *UpdateArticleReq) Reset() {
	*x = UpdateArticleReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[188]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateArticleReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateArticleReq) ProtoMessage() {}

func (x *UpdateArticleReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[188]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateArticleReq.ProtoReflect.Descriptor instead.
func (*UpdateArticleReq) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{188}
}

func (x *UpdateArticleReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateArticleReq) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *UpdateArticleReq) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *UpdateArticleReq) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *UpdateArticleReq) GetSort() int64 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *UpdateArticleReq) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *UpdateArticleReq) GetImg() string {
	if x != nil {
		return x.Img
	}
	return ""
}

type UpdateArticleResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data string `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *UpdateArticleResp) Reset() {
	*x = UpdateArticleResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[189]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateArticleResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateArticleResp) ProtoMessage() {}

func (x *UpdateArticleResp) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[189]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateArticleResp.ProtoReflect.Descriptor instead.
func (*UpdateArticleResp) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{189}
}

func (x *UpdateArticleResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *UpdateArticleResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *UpdateArticleResp) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

type DeleteArticleReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteArticleReq) Reset() {
	*x = DeleteArticleReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[190]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteArticleReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteArticleReq) ProtoMessage() {}

func (x *DeleteArticleReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[190]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteArticleReq.ProtoReflect.Descriptor instead.
func (*DeleteArticleReq) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{190}
}

func (x *DeleteArticleReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeleteArticleResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data string `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *DeleteArticleResp) Reset() {
	*x = DeleteArticleResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[191]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteArticleResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteArticleResp) ProtoMessage() {}

func (x *DeleteArticleResp) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[191]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteArticleResp.ProtoReflect.Descriptor instead.
func (*DeleteArticleResp) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{191}
}

func (x *DeleteArticleResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *DeleteArticleResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *DeleteArticleResp) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

type GetArticleListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current   int32    `protobuf:"varint,1,opt,name=current,proto3" json:"current,omitempty"`
	Size      int32    `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	SortField []string `protobuf:"bytes,3,rep,name=sortField,proto3" json:"sortField,omitempty"`
	SortKey   string   `protobuf:"bytes,4,opt,name=sortKey,proto3" json:"sortKey,omitempty"`
}

func (x *GetArticleListReq) Reset() {
	*x = GetArticleListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[192]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetArticleListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetArticleListReq) ProtoMessage() {}

func (x *GetArticleListReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[192]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetArticleListReq.ProtoReflect.Descriptor instead.
func (*GetArticleListReq) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{192}
}

func (x *GetArticleListReq) GetCurrent() int32 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *GetArticleListReq) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *GetArticleListReq) GetSortField() []string {
	if x != nil {
		return x.SortField
	}
	return nil
}

func (x *GetArticleListReq) GetSortKey() string {
	if x != nil {
		return x.SortKey
	}
	return ""
}

type GetArticleListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32               `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string              `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *GetArticleListData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetArticleListResp) Reset() {
	*x = GetArticleListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[193]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetArticleListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetArticleListResp) ProtoMessage() {}

func (x *GetArticleListResp) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[193]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetArticleListResp.ProtoReflect.Descriptor instead.
func (*GetArticleListResp) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{193}
}

func (x *GetArticleListResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetArticleListResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GetArticleListResp) GetData() *GetArticleListData {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetArticleListData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current string                    `protobuf:"bytes,1,opt,name=current,proto3" json:"current,omitempty"`
	Pages   string                    `protobuf:"bytes,2,opt,name=pages,proto3" json:"pages,omitempty"`
	Size    string                    `protobuf:"bytes,3,opt,name=size,proto3" json:"size,omitempty"`
	Total   string                    `protobuf:"bytes,4,opt,name=total,proto3" json:"total,omitempty"`
	List    []*GetArticleListDataItem `protobuf:"bytes,5,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *GetArticleListData) Reset() {
	*x = GetArticleListData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[194]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetArticleListData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetArticleListData) ProtoMessage() {}

func (x *GetArticleListData) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[194]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetArticleListData.ProtoReflect.Descriptor instead.
func (*GetArticleListData) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{194}
}

func (x *GetArticleListData) GetCurrent() string {
	if x != nil {
		return x.Current
	}
	return ""
}

func (x *GetArticleListData) GetPages() string {
	if x != nil {
		return x.Pages
	}
	return ""
}

func (x *GetArticleListData) GetSize() string {
	if x != nil {
		return x.Size
	}
	return ""
}

func (x *GetArticleListData) GetTotal() string {
	if x != nil {
		return x.Total
	}
	return ""
}

func (x *GetArticleListData) GetList() []*GetArticleListDataItem {
	if x != nil {
		return x.List
	}
	return nil
}

type GetArticleListDataItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Title     string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Sort      int64  `protobuf:"varint,3,opt,name=sort,proto3" json:"sort,omitempty"`
	Content   string `protobuf:"bytes,4,opt,name=content,proto3" json:"content,omitempty"`
	CreatedAt int64  `protobuf:"varint,5,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt int64  `protobuf:"varint,6,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	Img       string `protobuf:"bytes,7,opt,name=img,proto3" json:"img,omitempty"`
}

func (x *GetArticleListDataItem) Reset() {
	*x = GetArticleListDataItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[195]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetArticleListDataItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetArticleListDataItem) ProtoMessage() {}

func (x *GetArticleListDataItem) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[195]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetArticleListDataItem.ProtoReflect.Descriptor instead.
func (*GetArticleListDataItem) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{195}
}

func (x *GetArticleListDataItem) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetArticleListDataItem) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *GetArticleListDataItem) GetSort() int64 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *GetArticleListDataItem) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *GetArticleListDataItem) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *GetArticleListDataItem) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *GetArticleListDataItem) GetImg() string {
	if x != nil {
		return x.Img
	}
	return ""
}

type GetPromotionLevelkpiReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Category int64 `protobuf:"varint,1,opt,name=category,proto3" json:"category,omitempty"`
}

func (x *GetPromotionLevelkpiReq) Reset() {
	*x = GetPromotionLevelkpiReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[196]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPromotionLevelkpiReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPromotionLevelkpiReq) ProtoMessage() {}

func (x *GetPromotionLevelkpiReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[196]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPromotionLevelkpiReq.ProtoReflect.Descriptor instead.
func (*GetPromotionLevelkpiReq) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{196}
}

func (x *GetPromotionLevelkpiReq) GetCategory() int64 {
	if x != nil {
		return x.Category
	}
	return 0
}

type GetPromotionLevelkpiResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32                         `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string                        `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *GetPromotionLevelkpiDataResp `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetPromotionLevelkpiResp) Reset() {
	*x = GetPromotionLevelkpiResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[197]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPromotionLevelkpiResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPromotionLevelkpiResp) ProtoMessage() {}

func (x *GetPromotionLevelkpiResp) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[197]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPromotionLevelkpiResp.ProtoReflect.Descriptor instead.
func (*GetPromotionLevelkpiResp) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{197}
}

func (x *GetPromotionLevelkpiResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetPromotionLevelkpiResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GetPromotionLevelkpiResp) GetData() *GetPromotionLevelkpiDataResp {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetPromotionLevelkpiDataResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Levels   []*GetPromotionLevelkpiDataLevel   `protobuf:"bytes,1,rep,name=levels,proto3" json:"levels,omitempty"`
	Kpis     []*GetPromotionLevelkpiDataKpi     `protobuf:"bytes,2,rep,name=kpis,proto3" json:"kpis,omitempty"`
	Requires []*GetPromotionLevelkpiDataRequire `protobuf:"bytes,3,rep,name=requires,proto3" json:"requires,omitempty"`
}

func (x *GetPromotionLevelkpiDataResp) Reset() {
	*x = GetPromotionLevelkpiDataResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[198]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPromotionLevelkpiDataResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPromotionLevelkpiDataResp) ProtoMessage() {}

func (x *GetPromotionLevelkpiDataResp) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[198]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPromotionLevelkpiDataResp.ProtoReflect.Descriptor instead.
func (*GetPromotionLevelkpiDataResp) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{198}
}

func (x *GetPromotionLevelkpiDataResp) GetLevels() []*GetPromotionLevelkpiDataLevel {
	if x != nil {
		return x.Levels
	}
	return nil
}

func (x *GetPromotionLevelkpiDataResp) GetKpis() []*GetPromotionLevelkpiDataKpi {
	if x != nil {
		return x.Kpis
	}
	return nil
}

func (x *GetPromotionLevelkpiDataResp) GetRequires() []*GetPromotionLevelkpiDataRequire {
	if x != nil {
		return x.Requires
	}
	return nil
}

type GetPromotionLevelkpiDataLevel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	LevelName      string `protobuf:"bytes,2,opt,name=level_name,json=levelName,proto3" json:"level_name,omitempty"`
	NegativeProfit string `protobuf:"bytes,3,opt,name=negative_profit,json=negativeProfit,proto3" json:"negative_profit,omitempty"`
	RevenueShare   string `protobuf:"bytes,4,opt,name=revenue_share,json=revenueShare,proto3" json:"revenue_share,omitempty"`
	MaxReward      string `protobuf:"bytes,5,opt,name=max_reward,json=maxReward,proto3" json:"max_reward,omitempty"`
}

func (x *GetPromotionLevelkpiDataLevel) Reset() {
	*x = GetPromotionLevelkpiDataLevel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[199]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPromotionLevelkpiDataLevel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPromotionLevelkpiDataLevel) ProtoMessage() {}

func (x *GetPromotionLevelkpiDataLevel) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[199]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPromotionLevelkpiDataLevel.ProtoReflect.Descriptor instead.
func (*GetPromotionLevelkpiDataLevel) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{199}
}

func (x *GetPromotionLevelkpiDataLevel) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetPromotionLevelkpiDataLevel) GetLevelName() string {
	if x != nil {
		return x.LevelName
	}
	return ""
}

func (x *GetPromotionLevelkpiDataLevel) GetNegativeProfit() string {
	if x != nil {
		return x.NegativeProfit
	}
	return ""
}

func (x *GetPromotionLevelkpiDataLevel) GetRevenueShare() string {
	if x != nil {
		return x.RevenueShare
	}
	return ""
}

func (x *GetPromotionLevelkpiDataLevel) GetMaxReward() string {
	if x != nil {
		return x.MaxReward
	}
	return ""
}

type GetPromotionLevelkpiDataKpi struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	WeekNumber      string `protobuf:"bytes,2,opt,name=week_number,json=weekNumber,proto3" json:"week_number,omitempty"`
	RegisteredUsers int64  `protobuf:"varint,3,opt,name=registered_users,json=registeredUsers,proto3" json:"registered_users,omitempty"`
	PaidUsers       int64  `protobuf:"varint,4,opt,name=paid_users,json=paidUsers,proto3" json:"paid_users,omitempty"`
	NegativeProfit  string `protobuf:"bytes,5,opt,name=negative_profit,json=negativeProfit,proto3" json:"negative_profit,omitempty"`
}

func (x *GetPromotionLevelkpiDataKpi) Reset() {
	*x = GetPromotionLevelkpiDataKpi{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[200]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPromotionLevelkpiDataKpi) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPromotionLevelkpiDataKpi) ProtoMessage() {}

func (x *GetPromotionLevelkpiDataKpi) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[200]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPromotionLevelkpiDataKpi.ProtoReflect.Descriptor instead.
func (*GetPromotionLevelkpiDataKpi) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{200}
}

func (x *GetPromotionLevelkpiDataKpi) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetPromotionLevelkpiDataKpi) GetWeekNumber() string {
	if x != nil {
		return x.WeekNumber
	}
	return ""
}

func (x *GetPromotionLevelkpiDataKpi) GetRegisteredUsers() int64 {
	if x != nil {
		return x.RegisteredUsers
	}
	return 0
}

func (x *GetPromotionLevelkpiDataKpi) GetPaidUsers() int64 {
	if x != nil {
		return x.PaidUsers
	}
	return 0
}

func (x *GetPromotionLevelkpiDataKpi) GetNegativeProfit() string {
	if x != nil {
		return x.NegativeProfit
	}
	return ""
}

type GetPromotionLevelkpiDataRequire struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                   int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	PeopleNum            string `protobuf:"bytes,2,opt,name=people_num,json=peopleNum,proto3" json:"people_num,omitempty"`
	MonthRegisteredUsers int64  `protobuf:"varint,3,opt,name=month_registered_users,json=monthRegisteredUsers,proto3" json:"month_registered_users,omitempty"`
	MonthPaidUsers       int64  `protobuf:"varint,4,opt,name=month_paid_users,json=monthPaidUsers,proto3" json:"month_paid_users,omitempty"`
	MonthNegativeProfit  string `protobuf:"bytes,5,opt,name=month_negative_profit,json=monthNegativeProfit,proto3" json:"month_negative_profit,omitempty"`
}

func (x *GetPromotionLevelkpiDataRequire) Reset() {
	*x = GetPromotionLevelkpiDataRequire{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[201]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPromotionLevelkpiDataRequire) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPromotionLevelkpiDataRequire) ProtoMessage() {}

func (x *GetPromotionLevelkpiDataRequire) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[201]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPromotionLevelkpiDataRequire.ProtoReflect.Descriptor instead.
func (*GetPromotionLevelkpiDataRequire) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{201}
}

func (x *GetPromotionLevelkpiDataRequire) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetPromotionLevelkpiDataRequire) GetPeopleNum() string {
	if x != nil {
		return x.PeopleNum
	}
	return ""
}

func (x *GetPromotionLevelkpiDataRequire) GetMonthRegisteredUsers() int64 {
	if x != nil {
		return x.MonthRegisteredUsers
	}
	return 0
}

func (x *GetPromotionLevelkpiDataRequire) GetMonthPaidUsers() int64 {
	if x != nil {
		return x.MonthPaidUsers
	}
	return 0
}

func (x *GetPromotionLevelkpiDataRequire) GetMonthNegativeProfit() string {
	if x != nil {
		return x.MonthNegativeProfit
	}
	return ""
}

// 积分商城奖励配置列表
type PointsRewardsListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current   int64                     `protobuf:"varint,1,opt,name=current,proto3" json:"current,omitempty"`
	Size      int64                     `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	Data      *PointsRewardsListReqData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	SortField []string                  `protobuf:"bytes,4,rep,name=sortField,proto3" json:"sortField,omitempty"`
	SortKey   string                    `protobuf:"bytes,5,opt,name=sortKey,proto3" json:"sortKey,omitempty"`
}

func (x *PointsRewardsListReq) Reset() {
	*x = PointsRewardsListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[202]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PointsRewardsListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PointsRewardsListReq) ProtoMessage() {}

func (x *PointsRewardsListReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[202]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PointsRewardsListReq.ProtoReflect.Descriptor instead.
func (*PointsRewardsListReq) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{202}
}

func (x *PointsRewardsListReq) GetCurrent() int64 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *PointsRewardsListReq) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *PointsRewardsListReq) GetData() *PointsRewardsListReqData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *PointsRewardsListReq) GetSortField() []string {
	if x != nil {
		return x.SortField
	}
	return nil
}

func (x *PointsRewardsListReq) GetSortKey() string {
	if x != nil {
		return x.SortKey
	}
	return ""
}

type PointsRewardsListReqData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status int64  `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Name   string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Lang   string `protobuf:"bytes,3,opt,name=lang,proto3" json:"lang,omitempty"`
}

func (x *PointsRewardsListReqData) Reset() {
	*x = PointsRewardsListReqData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[203]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PointsRewardsListReqData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PointsRewardsListReqData) ProtoMessage() {}

func (x *PointsRewardsListReqData) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[203]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PointsRewardsListReqData.ProtoReflect.Descriptor instead.
func (*PointsRewardsListReqData) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{203}
}

func (x *PointsRewardsListReqData) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *PointsRewardsListReqData) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PointsRewardsListReqData) GetLang() string {
	if x != nil {
		return x.Lang
	}
	return ""
}

type PointsRewardsListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int64                      `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string                     `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *PointsRewardsListRespData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *PointsRewardsListResp) Reset() {
	*x = PointsRewardsListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[204]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PointsRewardsListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PointsRewardsListResp) ProtoMessage() {}

func (x *PointsRewardsListResp) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[204]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PointsRewardsListResp.ProtoReflect.Descriptor instead.
func (*PointsRewardsListResp) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{204}
}

func (x *PointsRewardsListResp) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *PointsRewardsListResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *PointsRewardsListResp) GetData() *PointsRewardsListRespData {
	if x != nil {
		return x.Data
	}
	return nil
}

type PointsRewardsListRespData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current int64                            `protobuf:"varint,1,opt,name=current,proto3" json:"current,omitempty"`
	Pages   int64                            `protobuf:"varint,2,opt,name=pages,proto3" json:"pages,omitempty"`
	Size    int64                            `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
	Total   int64                            `protobuf:"varint,4,opt,name=total,proto3" json:"total,omitempty"`
	List    []*PointsRewardsListRespDataItem `protobuf:"bytes,5,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *PointsRewardsListRespData) Reset() {
	*x = PointsRewardsListRespData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[205]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PointsRewardsListRespData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PointsRewardsListRespData) ProtoMessage() {}

func (x *PointsRewardsListRespData) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[205]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PointsRewardsListRespData.ProtoReflect.Descriptor instead.
func (*PointsRewardsListRespData) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{205}
}

func (x *PointsRewardsListRespData) GetCurrent() int64 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *PointsRewardsListRespData) GetPages() int64 {
	if x != nil {
		return x.Pages
	}
	return 0
}

func (x *PointsRewardsListRespData) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *PointsRewardsListRespData) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *PointsRewardsListRespData) GetList() []*PointsRewardsListRespDataItem {
	if x != nil {
		return x.List
	}
	return nil
}

type PointsRewardsListRespDataItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Language    string `protobuf:"bytes,2,opt,name=language,proto3" json:"language,omitempty"`
	Name        string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Integral    int64  `protobuf:"varint,4,opt,name=integral,proto3" json:"integral,omitempty"`
	GoldCoins   int64  `protobuf:"varint,5,opt,name=goldCoins,proto3" json:"goldCoins,omitempty"`
	Image       string `protobuf:"bytes,6,opt,name=image,proto3" json:"image,omitempty"`
	Status      int64  `protobuf:"varint,7,opt,name=status,proto3" json:"status,omitempty"` //1=开启,2=禁用
	CreatedAt   int64  `protobuf:"varint,8,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt   int64  `protobuf:"varint,9,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	UpdatedUser string `protobuf:"bytes,10,opt,name=updated_user,json=updatedUser,proto3" json:"updated_user,omitempty"`
	RealAmount  int64  `protobuf:"varint,11,opt,name=real_amount,json=realAmount,proto3" json:"real_amount,omitempty"` //实际价值
}

func (x *PointsRewardsListRespDataItem) Reset() {
	*x = PointsRewardsListRespDataItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[206]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PointsRewardsListRespDataItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PointsRewardsListRespDataItem) ProtoMessage() {}

func (x *PointsRewardsListRespDataItem) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[206]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PointsRewardsListRespDataItem.ProtoReflect.Descriptor instead.
func (*PointsRewardsListRespDataItem) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{206}
}

func (x *PointsRewardsListRespDataItem) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PointsRewardsListRespDataItem) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *PointsRewardsListRespDataItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PointsRewardsListRespDataItem) GetIntegral() int64 {
	if x != nil {
		return x.Integral
	}
	return 0
}

func (x *PointsRewardsListRespDataItem) GetGoldCoins() int64 {
	if x != nil {
		return x.GoldCoins
	}
	return 0
}

func (x *PointsRewardsListRespDataItem) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *PointsRewardsListRespDataItem) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *PointsRewardsListRespDataItem) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *PointsRewardsListRespDataItem) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *PointsRewardsListRespDataItem) GetUpdatedUser() string {
	if x != nil {
		return x.UpdatedUser
	}
	return ""
}

func (x *PointsRewardsListRespDataItem) GetRealAmount() int64 {
	if x != nil {
		return x.RealAmount
	}
	return 0
}

// 获取指定id记录积分商城奖励配置
type GetPointsRewardsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetPointsRewardsReq) Reset() {
	*x = GetPointsRewardsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[207]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPointsRewardsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPointsRewardsReq) ProtoMessage() {}

func (x *GetPointsRewardsReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[207]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPointsRewardsReq.ProtoReflect.Descriptor instead.
func (*GetPointsRewardsReq) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{207}
}

func (x *GetPointsRewardsReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetPointsRewardsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32                 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string                `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *GetPointsRewardsData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetPointsRewardsResp) Reset() {
	*x = GetPointsRewardsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[208]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPointsRewardsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPointsRewardsResp) ProtoMessage() {}

func (x *GetPointsRewardsResp) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[208]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPointsRewardsResp.ProtoReflect.Descriptor instead.
func (*GetPointsRewardsResp) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{208}
}

func (x *GetPointsRewardsResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetPointsRewardsResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GetPointsRewardsResp) GetData() *GetPointsRewardsData {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetPointsRewardsData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Language    string `protobuf:"bytes,2,opt,name=language,proto3" json:"language,omitempty"`
	Name        string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Integral    int64  `protobuf:"varint,4,opt,name=integral,proto3" json:"integral,omitempty"`
	GoldCoins   int64  `protobuf:"varint,5,opt,name=goldCoins,proto3" json:"goldCoins,omitempty"`
	Image       string `protobuf:"bytes,6,opt,name=image,proto3" json:"image,omitempty"`
	Status      int64  `protobuf:"varint,7,opt,name=status,proto3" json:"status,omitempty"` //1=开启,2=禁用
	CreatedAt   int64  `protobuf:"varint,8,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt   int64  `protobuf:"varint,9,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	UpdatedUser string `protobuf:"bytes,10,opt,name=updated_user,json=updatedUser,proto3" json:"updated_user,omitempty"`
	RealAmount  int64  `protobuf:"varint,11,opt,name=real_amount,json=realAmount,proto3" json:"real_amount,omitempty"` //实际价值
}

func (x *GetPointsRewardsData) Reset() {
	*x = GetPointsRewardsData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[209]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPointsRewardsData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPointsRewardsData) ProtoMessage() {}

func (x *GetPointsRewardsData) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[209]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPointsRewardsData.ProtoReflect.Descriptor instead.
func (*GetPointsRewardsData) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{209}
}

func (x *GetPointsRewardsData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetPointsRewardsData) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *GetPointsRewardsData) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetPointsRewardsData) GetIntegral() int64 {
	if x != nil {
		return x.Integral
	}
	return 0
}

func (x *GetPointsRewardsData) GetGoldCoins() int64 {
	if x != nil {
		return x.GoldCoins
	}
	return 0
}

func (x *GetPointsRewardsData) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *GetPointsRewardsData) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *GetPointsRewardsData) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *GetPointsRewardsData) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *GetPointsRewardsData) GetUpdatedUser() string {
	if x != nil {
		return x.UpdatedUser
	}
	return ""
}

func (x *GetPointsRewardsData) GetRealAmount() int64 {
	if x != nil {
		return x.RealAmount
	}
	return 0
}

// 积分商城奖励配置添加
type AddPointsRewardsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Language   string `protobuf:"bytes,1,opt,name=language,proto3" json:"language,omitempty"`
	Name       string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Integral   int64  `protobuf:"varint,3,opt,name=integral,proto3" json:"integral,omitempty"`
	GoldCoins  int64  `protobuf:"varint,4,opt,name=goldCoins,proto3" json:"goldCoins,omitempty"`
	Image      string `protobuf:"bytes,5,opt,name=image,proto3" json:"image,omitempty"`
	Status     int64  `protobuf:"varint,6,opt,name=status,proto3" json:"status,omitempty"`                           //1=开启,2=禁用
	RealAmount int64  `protobuf:"varint,7,opt,name=real_amount,json=realAmount,proto3" json:"real_amount,omitempty"` //实际价值
}

func (x *AddPointsRewardsReq) Reset() {
	*x = AddPointsRewardsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[210]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddPointsRewardsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddPointsRewardsReq) ProtoMessage() {}

func (x *AddPointsRewardsReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[210]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddPointsRewardsReq.ProtoReflect.Descriptor instead.
func (*AddPointsRewardsReq) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{210}
}

func (x *AddPointsRewardsReq) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *AddPointsRewardsReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AddPointsRewardsReq) GetIntegral() int64 {
	if x != nil {
		return x.Integral
	}
	return 0
}

func (x *AddPointsRewardsReq) GetGoldCoins() int64 {
	if x != nil {
		return x.GoldCoins
	}
	return 0
}

func (x *AddPointsRewardsReq) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *AddPointsRewardsReq) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *AddPointsRewardsReq) GetRealAmount() int64 {
	if x != nil {
		return x.RealAmount
	}
	return 0
}

type AddPointsRewardsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int64  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *AddPointsRewardsResp) Reset() {
	*x = AddPointsRewardsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[211]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddPointsRewardsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddPointsRewardsResp) ProtoMessage() {}

func (x *AddPointsRewardsResp) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[211]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddPointsRewardsResp.ProtoReflect.Descriptor instead.
func (*AddPointsRewardsResp) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{211}
}

func (x *AddPointsRewardsResp) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *AddPointsRewardsResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

// 积分商城奖励配置更新
type UpdatePointsRewardsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Language   string `protobuf:"bytes,2,opt,name=language,proto3" json:"language,omitempty"`
	Name       string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Integral   int64  `protobuf:"varint,4,opt,name=integral,proto3" json:"integral,omitempty"`
	GoldCoins  int64  `protobuf:"varint,5,opt,name=goldCoins,proto3" json:"goldCoins,omitempty"`
	Image      string `protobuf:"bytes,6,opt,name=image,proto3" json:"image,omitempty"`
	Status     int64  `protobuf:"varint,7,opt,name=status,proto3" json:"status,omitempty"`                           //1=开启,2=禁用
	RealAmount int64  `protobuf:"varint,8,opt,name=real_amount,json=realAmount,proto3" json:"real_amount,omitempty"` //实际价值
}

func (x *UpdatePointsRewardsReq) Reset() {
	*x = UpdatePointsRewardsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[212]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePointsRewardsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePointsRewardsReq) ProtoMessage() {}

func (x *UpdatePointsRewardsReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[212]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePointsRewardsReq.ProtoReflect.Descriptor instead.
func (*UpdatePointsRewardsReq) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{212}
}

func (x *UpdatePointsRewardsReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdatePointsRewardsReq) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *UpdatePointsRewardsReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdatePointsRewardsReq) GetIntegral() int64 {
	if x != nil {
		return x.Integral
	}
	return 0
}

func (x *UpdatePointsRewardsReq) GetGoldCoins() int64 {
	if x != nil {
		return x.GoldCoins
	}
	return 0
}

func (x *UpdatePointsRewardsReq) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *UpdatePointsRewardsReq) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *UpdatePointsRewardsReq) GetRealAmount() int64 {
	if x != nil {
		return x.RealAmount
	}
	return 0
}

type UpdatePointsRewardsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *UpdatePointsRewardsResp) Reset() {
	*x = UpdatePointsRewardsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[213]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePointsRewardsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePointsRewardsResp) ProtoMessage() {}

func (x *UpdatePointsRewardsResp) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[213]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePointsRewardsResp.ProtoReflect.Descriptor instead.
func (*UpdatePointsRewardsResp) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{213}
}

func (x *UpdatePointsRewardsResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *UpdatePointsRewardsResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

// 积分商城奖励配置删除
type DeletePointsRewardsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeletePointsRewardsReq) Reset() {
	*x = DeletePointsRewardsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[214]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeletePointsRewardsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePointsRewardsReq) ProtoMessage() {}

func (x *DeletePointsRewardsReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[214]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePointsRewardsReq.ProtoReflect.Descriptor instead.
func (*DeletePointsRewardsReq) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{214}
}

func (x *DeletePointsRewardsReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeletePointsRewardsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *DeletePointsRewardsResp) Reset() {
	*x = DeletePointsRewardsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[215]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeletePointsRewardsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePointsRewardsResp) ProtoMessage() {}

func (x *DeletePointsRewardsResp) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[215]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePointsRewardsResp.ProtoReflect.Descriptor instead.
func (*DeletePointsRewardsResp) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{215}
}

func (x *DeletePointsRewardsResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *DeletePointsRewardsResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

// 比赛排名奖励配置列表
type CompetitionRankingRewardsListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current   int64                             `protobuf:"varint,1,opt,name=current,proto3" json:"current,omitempty"`
	Size      int64                             `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	Data      *CompetitionRankingRewardsReqData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	SortField []string                          `protobuf:"bytes,4,rep,name=sortField,proto3" json:"sortField,omitempty"`
	SortKey   string                            `protobuf:"bytes,5,opt,name=sortKey,proto3" json:"sortKey,omitempty"`
}

func (x *CompetitionRankingRewardsListReq) Reset() {
	*x = CompetitionRankingRewardsListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[216]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompetitionRankingRewardsListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompetitionRankingRewardsListReq) ProtoMessage() {}

func (x *CompetitionRankingRewardsListReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[216]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompetitionRankingRewardsListReq.ProtoReflect.Descriptor instead.
func (*CompetitionRankingRewardsListReq) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{216}
}

func (x *CompetitionRankingRewardsListReq) GetCurrent() int64 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *CompetitionRankingRewardsListReq) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *CompetitionRankingRewardsListReq) GetData() *CompetitionRankingRewardsReqData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *CompetitionRankingRewardsListReq) GetSortField() []string {
	if x != nil {
		return x.SortField
	}
	return nil
}

func (x *CompetitionRankingRewardsListReq) GetSortKey() string {
	if x != nil {
		return x.SortKey
	}
	return ""
}

type CompetitionRankingRewardsReqData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status       int64 `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	RoomFee      int64 `protobuf:"varint,2,opt,name=room_fee,json=roomFee,proto3" json:"room_fee,omitempty"`                //房费
	RewardAmount int64 `protobuf:"varint,3,opt,name=reward_amount,json=rewardAmount,proto3" json:"reward_amount,omitempty"` //奖励金额
}

func (x *CompetitionRankingRewardsReqData) Reset() {
	*x = CompetitionRankingRewardsReqData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[217]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompetitionRankingRewardsReqData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompetitionRankingRewardsReqData) ProtoMessage() {}

func (x *CompetitionRankingRewardsReqData) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[217]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompetitionRankingRewardsReqData.ProtoReflect.Descriptor instead.
func (*CompetitionRankingRewardsReqData) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{217}
}

func (x *CompetitionRankingRewardsReqData) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *CompetitionRankingRewardsReqData) GetRoomFee() int64 {
	if x != nil {
		return x.RoomFee
	}
	return 0
}

func (x *CompetitionRankingRewardsReqData) GetRewardAmount() int64 {
	if x != nil {
		return x.RewardAmount
	}
	return 0
}

type CompetitionRankingRewardsListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32                              `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string                             `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *CompetitionRankingRewardsListData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *CompetitionRankingRewardsListResp) Reset() {
	*x = CompetitionRankingRewardsListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[218]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompetitionRankingRewardsListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompetitionRankingRewardsListResp) ProtoMessage() {}

func (x *CompetitionRankingRewardsListResp) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[218]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompetitionRankingRewardsListResp.ProtoReflect.Descriptor instead.
func (*CompetitionRankingRewardsListResp) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{218}
}

func (x *CompetitionRankingRewardsListResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *CompetitionRankingRewardsListResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *CompetitionRankingRewardsListResp) GetData() *CompetitionRankingRewardsListData {
	if x != nil {
		return x.Data
	}
	return nil
}

type CompetitionRankingRewardsListData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current int64                                    `protobuf:"varint,1,opt,name=current,proto3" json:"current,omitempty"`
	Pages   int64                                    `protobuf:"varint,2,opt,name=pages,proto3" json:"pages,omitempty"`
	Size    int64                                    `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
	Total   int64                                    `protobuf:"varint,4,opt,name=total,proto3" json:"total,omitempty"`
	List    []*CompetitionRankingRewardsListDataItem `protobuf:"bytes,5,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *CompetitionRankingRewardsListData) Reset() {
	*x = CompetitionRankingRewardsListData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[219]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompetitionRankingRewardsListData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompetitionRankingRewardsListData) ProtoMessage() {}

func (x *CompetitionRankingRewardsListData) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[219]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompetitionRankingRewardsListData.ProtoReflect.Descriptor instead.
func (*CompetitionRankingRewardsListData) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{219}
}

func (x *CompetitionRankingRewardsListData) GetCurrent() int64 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *CompetitionRankingRewardsListData) GetPages() int64 {
	if x != nil {
		return x.Pages
	}
	return 0
}

func (x *CompetitionRankingRewardsListData) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *CompetitionRankingRewardsListData) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *CompetitionRankingRewardsListData) GetList() []*CompetitionRankingRewardsListDataItem {
	if x != nil {
		return x.List
	}
	return nil
}

type CompetitionRankingRewardsListDataItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	RoomFee      int64  `protobuf:"varint,2,opt,name=room_fee,json=roomFee,proto3" json:"room_fee,omitempty"`                //房费
	MinRank      int64  `protobuf:"varint,3,opt,name=min_rank,json=minRank,proto3" json:"min_rank,omitempty"`                //名次范围的起始名次
	MaxRank      int64  `protobuf:"varint,4,opt,name=max_rank,json=maxRank,proto3" json:"max_rank,omitempty"`                //名次范围的结束名次
	RewardAmount int64  `protobuf:"varint,5,opt,name=reward_amount,json=rewardAmount,proto3" json:"reward_amount,omitempty"` //奖励金额
	GoldCoins    int64  `protobuf:"varint,6,opt,name=gold_coins,json=goldCoins,proto3" json:"gold_coins,omitempty"`          //金币
	Status       int64  `protobuf:"varint,7,opt,name=status,proto3" json:"status,omitempty"`                                 //1=开启,2=禁用
	CreatedAt    int64  `protobuf:"varint,8,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt    int64  `protobuf:"varint,9,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	UpdatedUser  string `protobuf:"bytes,10,opt,name=updated_user,json=updatedUser,proto3" json:"updated_user,omitempty"` //最后修改人
	RealAmount   int64  `protobuf:"varint,11,opt,name=real_amount,json=realAmount,proto3" json:"real_amount,omitempty"`   //实际价值
}

func (x *CompetitionRankingRewardsListDataItem) Reset() {
	*x = CompetitionRankingRewardsListDataItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[220]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompetitionRankingRewardsListDataItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompetitionRankingRewardsListDataItem) ProtoMessage() {}

func (x *CompetitionRankingRewardsListDataItem) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[220]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompetitionRankingRewardsListDataItem.ProtoReflect.Descriptor instead.
func (*CompetitionRankingRewardsListDataItem) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{220}
}

func (x *CompetitionRankingRewardsListDataItem) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CompetitionRankingRewardsListDataItem) GetRoomFee() int64 {
	if x != nil {
		return x.RoomFee
	}
	return 0
}

func (x *CompetitionRankingRewardsListDataItem) GetMinRank() int64 {
	if x != nil {
		return x.MinRank
	}
	return 0
}

func (x *CompetitionRankingRewardsListDataItem) GetMaxRank() int64 {
	if x != nil {
		return x.MaxRank
	}
	return 0
}

func (x *CompetitionRankingRewardsListDataItem) GetRewardAmount() int64 {
	if x != nil {
		return x.RewardAmount
	}
	return 0
}

func (x *CompetitionRankingRewardsListDataItem) GetGoldCoins() int64 {
	if x != nil {
		return x.GoldCoins
	}
	return 0
}

func (x *CompetitionRankingRewardsListDataItem) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *CompetitionRankingRewardsListDataItem) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *CompetitionRankingRewardsListDataItem) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *CompetitionRankingRewardsListDataItem) GetUpdatedUser() string {
	if x != nil {
		return x.UpdatedUser
	}
	return ""
}

func (x *CompetitionRankingRewardsListDataItem) GetRealAmount() int64 {
	if x != nil {
		return x.RealAmount
	}
	return 0
}

// 获取指定id记录积分商城奖励配置
type GetCompetitionRankingRewardsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetCompetitionRankingRewardsReq) Reset() {
	*x = GetCompetitionRankingRewardsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[221]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCompetitionRankingRewardsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCompetitionRankingRewardsReq) ProtoMessage() {}

func (x *GetCompetitionRankingRewardsReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[221]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCompetitionRankingRewardsReq.ProtoReflect.Descriptor instead.
func (*GetCompetitionRankingRewardsReq) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{221}
}

func (x *GetCompetitionRankingRewardsReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetCompetitionRankingRewardsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32                             `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string                            `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *GetCompetitionRankingRewardsData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetCompetitionRankingRewardsResp) Reset() {
	*x = GetCompetitionRankingRewardsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[222]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCompetitionRankingRewardsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCompetitionRankingRewardsResp) ProtoMessage() {}

func (x *GetCompetitionRankingRewardsResp) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[222]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCompetitionRankingRewardsResp.ProtoReflect.Descriptor instead.
func (*GetCompetitionRankingRewardsResp) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{222}
}

func (x *GetCompetitionRankingRewardsResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetCompetitionRankingRewardsResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GetCompetitionRankingRewardsResp) GetData() *GetCompetitionRankingRewardsData {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetCompetitionRankingRewardsData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	RoomFee      int64  `protobuf:"varint,2,opt,name=room_fee,json=roomFee,proto3" json:"room_fee,omitempty"`                //房费
	MinRank      int64  `protobuf:"varint,3,opt,name=min_rank,json=minRank,proto3" json:"min_rank,omitempty"`                //名次范围的起始名次
	MaxRank      int64  `protobuf:"varint,4,opt,name=max_rank,json=maxRank,proto3" json:"max_rank,omitempty"`                //名次范围的结束名次
	RewardAmount int64  `protobuf:"varint,5,opt,name=reward_amount,json=rewardAmount,proto3" json:"reward_amount,omitempty"` //奖励金额
	GoldCoins    int64  `protobuf:"varint,6,opt,name=gold_coins,json=goldCoins,proto3" json:"gold_coins,omitempty"`          //金币
	Status       int64  `protobuf:"varint,7,opt,name=status,proto3" json:"status,omitempty"`                                 //1=开启,2=禁用
	CreatedAt    int64  `protobuf:"varint,8,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt    int64  `protobuf:"varint,9,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	UpdatedUser  string `protobuf:"bytes,10,opt,name=updated_user,json=updatedUser,proto3" json:"updated_user,omitempty"` //最后修改人
	RealAmount   int64  `protobuf:"varint,11,opt,name=real_amount,json=realAmount,proto3" json:"real_amount,omitempty"`   //实际价值
}

func (x *GetCompetitionRankingRewardsData) Reset() {
	*x = GetCompetitionRankingRewardsData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[223]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCompetitionRankingRewardsData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCompetitionRankingRewardsData) ProtoMessage() {}

func (x *GetCompetitionRankingRewardsData) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[223]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCompetitionRankingRewardsData.ProtoReflect.Descriptor instead.
func (*GetCompetitionRankingRewardsData) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{223}
}

func (x *GetCompetitionRankingRewardsData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetCompetitionRankingRewardsData) GetRoomFee() int64 {
	if x != nil {
		return x.RoomFee
	}
	return 0
}

func (x *GetCompetitionRankingRewardsData) GetMinRank() int64 {
	if x != nil {
		return x.MinRank
	}
	return 0
}

func (x *GetCompetitionRankingRewardsData) GetMaxRank() int64 {
	if x != nil {
		return x.MaxRank
	}
	return 0
}

func (x *GetCompetitionRankingRewardsData) GetRewardAmount() int64 {
	if x != nil {
		return x.RewardAmount
	}
	return 0
}

func (x *GetCompetitionRankingRewardsData) GetGoldCoins() int64 {
	if x != nil {
		return x.GoldCoins
	}
	return 0
}

func (x *GetCompetitionRankingRewardsData) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *GetCompetitionRankingRewardsData) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *GetCompetitionRankingRewardsData) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *GetCompetitionRankingRewardsData) GetUpdatedUser() string {
	if x != nil {
		return x.UpdatedUser
	}
	return ""
}

func (x *GetCompetitionRankingRewardsData) GetRealAmount() int64 {
	if x != nil {
		return x.RealAmount
	}
	return 0
}

// 比赛排名奖励配置添加
type AddCompetitionRankingRewardsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomFee      int64 `protobuf:"varint,1,opt,name=room_fee,json=roomFee,proto3" json:"room_fee,omitempty"`                //房费
	MinRank      int64 `protobuf:"varint,2,opt,name=min_rank,json=minRank,proto3" json:"min_rank,omitempty"`                //名次范围的起始名次
	MaxRank      int64 `protobuf:"varint,3,opt,name=max_rank,json=maxRank,proto3" json:"max_rank,omitempty"`                //名次范围的结束名次
	RewardAmount int64 `protobuf:"varint,4,opt,name=reward_amount,json=rewardAmount,proto3" json:"reward_amount,omitempty"` //奖励金额
	GoldCoins    int64 `protobuf:"varint,5,opt,name=gold_coins,json=goldCoins,proto3" json:"gold_coins,omitempty"`          //金币
	Status       int64 `protobuf:"varint,6,opt,name=status,proto3" json:"status,omitempty"`                                 //1=开启,2=禁用
	RealAmount   int64 `protobuf:"varint,7,opt,name=real_amount,json=realAmount,proto3" json:"real_amount,omitempty"`       //实际价值
}

func (x *AddCompetitionRankingRewardsReq) Reset() {
	*x = AddCompetitionRankingRewardsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[224]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddCompetitionRankingRewardsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddCompetitionRankingRewardsReq) ProtoMessage() {}

func (x *AddCompetitionRankingRewardsReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[224]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddCompetitionRankingRewardsReq.ProtoReflect.Descriptor instead.
func (*AddCompetitionRankingRewardsReq) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{224}
}

func (x *AddCompetitionRankingRewardsReq) GetRoomFee() int64 {
	if x != nil {
		return x.RoomFee
	}
	return 0
}

func (x *AddCompetitionRankingRewardsReq) GetMinRank() int64 {
	if x != nil {
		return x.MinRank
	}
	return 0
}

func (x *AddCompetitionRankingRewardsReq) GetMaxRank() int64 {
	if x != nil {
		return x.MaxRank
	}
	return 0
}

func (x *AddCompetitionRankingRewardsReq) GetRewardAmount() int64 {
	if x != nil {
		return x.RewardAmount
	}
	return 0
}

func (x *AddCompetitionRankingRewardsReq) GetGoldCoins() int64 {
	if x != nil {
		return x.GoldCoins
	}
	return 0
}

func (x *AddCompetitionRankingRewardsReq) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *AddCompetitionRankingRewardsReq) GetRealAmount() int64 {
	if x != nil {
		return x.RealAmount
	}
	return 0
}

type AddCompetitionRankingRewardsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *AddCompetitionRankingRewardsResp) Reset() {
	*x = AddCompetitionRankingRewardsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[225]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddCompetitionRankingRewardsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddCompetitionRankingRewardsResp) ProtoMessage() {}

func (x *AddCompetitionRankingRewardsResp) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[225]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddCompetitionRankingRewardsResp.ProtoReflect.Descriptor instead.
func (*AddCompetitionRankingRewardsResp) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{225}
}

func (x *AddCompetitionRankingRewardsResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *AddCompetitionRankingRewardsResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

// 比赛排名奖励配置更新
type UpdateCompetitionRankingRewardsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	RoomFee      int64 `protobuf:"varint,2,opt,name=room_fee,json=roomFee,proto3" json:"room_fee,omitempty"`                //房费
	MinRank      int64 `protobuf:"varint,3,opt,name=min_rank,json=minRank,proto3" json:"min_rank,omitempty"`                //名次范围的起始名次
	MaxRank      int64 `protobuf:"varint,4,opt,name=max_rank,json=maxRank,proto3" json:"max_rank,omitempty"`                //名次范围的结束名次
	RewardAmount int64 `protobuf:"varint,5,opt,name=reward_amount,json=rewardAmount,proto3" json:"reward_amount,omitempty"` //奖励金额
	GoldCoins    int64 `protobuf:"varint,6,opt,name=gold_coins,json=goldCoins,proto3" json:"gold_coins,omitempty"`          //金币
	Status       int64 `protobuf:"varint,7,opt,name=status,proto3" json:"status,omitempty"`                                 //1=开启,2=禁用
	RealAmount   int64 `protobuf:"varint,8,opt,name=real_amount,json=realAmount,proto3" json:"real_amount,omitempty"`       //实际价值
}

func (x *UpdateCompetitionRankingRewardsReq) Reset() {
	*x = UpdateCompetitionRankingRewardsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[226]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCompetitionRankingRewardsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCompetitionRankingRewardsReq) ProtoMessage() {}

func (x *UpdateCompetitionRankingRewardsReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[226]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCompetitionRankingRewardsReq.ProtoReflect.Descriptor instead.
func (*UpdateCompetitionRankingRewardsReq) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{226}
}

func (x *UpdateCompetitionRankingRewardsReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateCompetitionRankingRewardsReq) GetRoomFee() int64 {
	if x != nil {
		return x.RoomFee
	}
	return 0
}

func (x *UpdateCompetitionRankingRewardsReq) GetMinRank() int64 {
	if x != nil {
		return x.MinRank
	}
	return 0
}

func (x *UpdateCompetitionRankingRewardsReq) GetMaxRank() int64 {
	if x != nil {
		return x.MaxRank
	}
	return 0
}

func (x *UpdateCompetitionRankingRewardsReq) GetRewardAmount() int64 {
	if x != nil {
		return x.RewardAmount
	}
	return 0
}

func (x *UpdateCompetitionRankingRewardsReq) GetGoldCoins() int64 {
	if x != nil {
		return x.GoldCoins
	}
	return 0
}

func (x *UpdateCompetitionRankingRewardsReq) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *UpdateCompetitionRankingRewardsReq) GetRealAmount() int64 {
	if x != nil {
		return x.RealAmount
	}
	return 0
}

type UpdateCompetitionRankingRewardsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *UpdateCompetitionRankingRewardsResp) Reset() {
	*x = UpdateCompetitionRankingRewardsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[227]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCompetitionRankingRewardsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCompetitionRankingRewardsResp) ProtoMessage() {}

func (x *UpdateCompetitionRankingRewardsResp) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[227]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCompetitionRankingRewardsResp.ProtoReflect.Descriptor instead.
func (*UpdateCompetitionRankingRewardsResp) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{227}
}

func (x *UpdateCompetitionRankingRewardsResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *UpdateCompetitionRankingRewardsResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

// 比赛排名奖励配置更新
type DeleteCompetitionRankingRewardsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteCompetitionRankingRewardsReq) Reset() {
	*x = DeleteCompetitionRankingRewardsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[228]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCompetitionRankingRewardsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCompetitionRankingRewardsReq) ProtoMessage() {}

func (x *DeleteCompetitionRankingRewardsReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[228]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCompetitionRankingRewardsReq.ProtoReflect.Descriptor instead.
func (*DeleteCompetitionRankingRewardsReq) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{228}
}

func (x *DeleteCompetitionRankingRewardsReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeleteCompetitionRankingRewardsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *DeleteCompetitionRankingRewardsResp) Reset() {
	*x = DeleteCompetitionRankingRewardsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[229]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCompetitionRankingRewardsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCompetitionRankingRewardsResp) ProtoMessage() {}

func (x *DeleteCompetitionRankingRewardsResp) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[229]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCompetitionRankingRewardsResp.ProtoReflect.Descriptor instead.
func (*DeleteCompetitionRankingRewardsResp) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{229}
}

func (x *DeleteCompetitionRankingRewardsResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *DeleteCompetitionRankingRewardsResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

// 手机号用户积分查询
type GetUserScoreReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mobile string `protobuf:"bytes,1,opt,name=mobile,proto3" json:"mobile,omitempty"`
}

func (x *GetUserScoreReq) Reset() {
	*x = GetUserScoreReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[230]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserScoreReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserScoreReq) ProtoMessage() {}

func (x *GetUserScoreReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[230]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserScoreReq.ProtoReflect.Descriptor instead.
func (*GetUserScoreReq) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{230}
}

func (x *GetUserScoreReq) GetMobile() string {
	if x != nil {
		return x.Mobile
	}
	return ""
}

type GetUserScoreResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code  int64  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg   string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Score int64  `protobuf:"varint,3,opt,name=score,proto3" json:"score,omitempty"`
	Uid   int64  `protobuf:"varint,4,opt,name=uid,proto3" json:"uid,omitempty"`
}

func (x *GetUserScoreResp) Reset() {
	*x = GetUserScoreResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[231]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserScoreResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserScoreResp) ProtoMessage() {}

func (x *GetUserScoreResp) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[231]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserScoreResp.ProtoReflect.Descriptor instead.
func (*GetUserScoreResp) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{231}
}

func (x *GetUserScoreResp) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetUserScoreResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GetUserScoreResp) GetScore() int64 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *GetUserScoreResp) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

// 用户积分兑换礼品
type UserScoreExchangeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid             int64 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`                                                  //领取用户id
	PointsRewardsId int64 `protobuf:"varint,2,opt,name=points_rewards_id,json=pointsRewardsId,proto3" json:"points_rewards_id,omitempty"` //分商城奖励配置id
}

func (x *UserScoreExchangeReq) Reset() {
	*x = UserScoreExchangeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[232]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserScoreExchangeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserScoreExchangeReq) ProtoMessage() {}

func (x *UserScoreExchangeReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[232]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserScoreExchangeReq.ProtoReflect.Descriptor instead.
func (*UserScoreExchangeReq) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{232}
}

func (x *UserScoreExchangeReq) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *UserScoreExchangeReq) GetPointsRewardsId() int64 {
	if x != nil {
		return x.PointsRewardsId
	}
	return 0
}

type UserScoreExchangeResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int64  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *UserScoreExchangeResp) Reset() {
	*x = UserScoreExchangeResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[233]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserScoreExchangeResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserScoreExchangeResp) ProtoMessage() {}

func (x *UserScoreExchangeResp) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[233]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserScoreExchangeResp.ProtoReflect.Descriptor instead.
func (*UserScoreExchangeResp) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{233}
}

func (x *UserScoreExchangeResp) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *UserScoreExchangeResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

// 积分领取记录列表
type PointsCollectionRecordListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current   int64                          `protobuf:"varint,1,opt,name=current,proto3" json:"current,omitempty"`
	Size      int64                          `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	Data      *PointsCollectionRecordReqData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	SortField []string                       `protobuf:"bytes,4,rep,name=sortField,proto3" json:"sortField,omitempty"`
	SortKey   string                         `protobuf:"bytes,5,opt,name=sortKey,proto3" json:"sortKey,omitempty"`
}

func (x *PointsCollectionRecordListReq) Reset() {
	*x = PointsCollectionRecordListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[234]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PointsCollectionRecordListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PointsCollectionRecordListReq) ProtoMessage() {}

func (x *PointsCollectionRecordListReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[234]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PointsCollectionRecordListReq.ProtoReflect.Descriptor instead.
func (*PointsCollectionRecordListReq) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{234}
}

func (x *PointsCollectionRecordListReq) GetCurrent() int64 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *PointsCollectionRecordListReq) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *PointsCollectionRecordListReq) GetData() *PointsCollectionRecordReqData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *PointsCollectionRecordListReq) GetSortField() []string {
	if x != nil {
		return x.SortField
	}
	return nil
}

func (x *PointsCollectionRecordListReq) GetSortKey() string {
	if x != nil {
		return x.SortKey
	}
	return ""
}

type PointsCollectionRecordReqData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status          int64  `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	UserId          int64  `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                              //领取用户id
	PointsRewardsId int64  `protobuf:"varint,3,opt,name=points_rewards_id,json=pointsRewardsId,proto3" json:"points_rewards_id,omitempty"` //分商城奖励配置id
	Mobile          string `protobuf:"bytes,4,opt,name=mobile,proto3" json:"mobile,omitempty"`                                             //手机号
	Username        string `protobuf:"bytes,5,opt,name=username,proto3" json:"username,omitempty"`                                         //用户名
	Name            string `protobuf:"bytes,6,opt,name=name,proto3" json:"name,omitempty"`                                                 //奖励物品名称
}

func (x *PointsCollectionRecordReqData) Reset() {
	*x = PointsCollectionRecordReqData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[235]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PointsCollectionRecordReqData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PointsCollectionRecordReqData) ProtoMessage() {}

func (x *PointsCollectionRecordReqData) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[235]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PointsCollectionRecordReqData.ProtoReflect.Descriptor instead.
func (*PointsCollectionRecordReqData) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{235}
}

func (x *PointsCollectionRecordReqData) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *PointsCollectionRecordReqData) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *PointsCollectionRecordReqData) GetPointsRewardsId() int64 {
	if x != nil {
		return x.PointsRewardsId
	}
	return 0
}

func (x *PointsCollectionRecordReqData) GetMobile() string {
	if x != nil {
		return x.Mobile
	}
	return ""
}

func (x *PointsCollectionRecordReqData) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *PointsCollectionRecordReqData) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type PointsCollectionRecordListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32                           `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string                          `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *PointsCollectionRecordListData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *PointsCollectionRecordListResp) Reset() {
	*x = PointsCollectionRecordListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[236]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PointsCollectionRecordListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PointsCollectionRecordListResp) ProtoMessage() {}

func (x *PointsCollectionRecordListResp) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[236]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PointsCollectionRecordListResp.ProtoReflect.Descriptor instead.
func (*PointsCollectionRecordListResp) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{236}
}

func (x *PointsCollectionRecordListResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *PointsCollectionRecordListResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *PointsCollectionRecordListResp) GetData() *PointsCollectionRecordListData {
	if x != nil {
		return x.Data
	}
	return nil
}

type PointsCollectionRecordListData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current int64                                 `protobuf:"varint,1,opt,name=current,proto3" json:"current,omitempty"`
	Pages   int64                                 `protobuf:"varint,2,opt,name=pages,proto3" json:"pages,omitempty"`
	Size    int64                                 `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
	Total   int64                                 `protobuf:"varint,4,opt,name=total,proto3" json:"total,omitempty"`
	List    []*PointsCollectionRecordListDataItem `protobuf:"bytes,5,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *PointsCollectionRecordListData) Reset() {
	*x = PointsCollectionRecordListData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[237]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PointsCollectionRecordListData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PointsCollectionRecordListData) ProtoMessage() {}

func (x *PointsCollectionRecordListData) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[237]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PointsCollectionRecordListData.ProtoReflect.Descriptor instead.
func (*PointsCollectionRecordListData) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{237}
}

func (x *PointsCollectionRecordListData) GetCurrent() int64 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *PointsCollectionRecordListData) GetPages() int64 {
	if x != nil {
		return x.Pages
	}
	return 0
}

func (x *PointsCollectionRecordListData) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *PointsCollectionRecordListData) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *PointsCollectionRecordListData) GetList() []*PointsCollectionRecordListDataItem {
	if x != nil {
		return x.List
	}
	return nil
}

type PointsCollectionRecordListDataItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              int64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	PointsRewardsId int64   `protobuf:"varint,2,opt,name=points_rewards_id,json=pointsRewardsId,proto3" json:"points_rewards_id,omitempty"` //分商城奖励配置id
	UserId          int64   `protobuf:"varint,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                              //领取用户id
	Username        string  `protobuf:"bytes,4,opt,name=username,proto3" json:"username,omitempty"`                                         //用户名称
	Name            string  `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`                                                 //奖励物品名称
	Score           int64   `protobuf:"varint,6,opt,name=score,proto3" json:"score,omitempty"`                                              //更新后积分
	Integral        int64   `protobuf:"varint,7,opt,name=integral,proto3" json:"integral,omitempty"`                                        //奖励领取所需积分
	Status          int64   `protobuf:"varint,8,opt,name=status,proto3" json:"status,omitempty"`                                            //状态: 1=未领取,2=领取成功,3=已过期
	CreatedAt       int64   `protobuf:"varint,9,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt       int64   `protobuf:"varint,10,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	UpdatedUser     string  `protobuf:"bytes,11,opt,name=updated_user,json=updatedUser,proto3" json:"updated_user,omitempty"` //最后修改人
	Mobile          string  `protobuf:"bytes,12,opt,name=mobile,proto3" json:"mobile,omitempty"`                              //手机号
	CoinBefore      float32 `protobuf:"fixed32,13,opt,name=coin_before,json=coinBefore,proto3" json:"coin_before,omitempty"`  //投注前金额
	GoldCoins       int64   `protobuf:"varint,14,opt,name=gold_coins,json=goldCoins,proto3" json:"gold_coins,omitempty"`      //金币(用户主钱包)
}

func (x *PointsCollectionRecordListDataItem) Reset() {
	*x = PointsCollectionRecordListDataItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[238]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PointsCollectionRecordListDataItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PointsCollectionRecordListDataItem) ProtoMessage() {}

func (x *PointsCollectionRecordListDataItem) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[238]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PointsCollectionRecordListDataItem.ProtoReflect.Descriptor instead.
func (*PointsCollectionRecordListDataItem) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{238}
}

func (x *PointsCollectionRecordListDataItem) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PointsCollectionRecordListDataItem) GetPointsRewardsId() int64 {
	if x != nil {
		return x.PointsRewardsId
	}
	return 0
}

func (x *PointsCollectionRecordListDataItem) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *PointsCollectionRecordListDataItem) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *PointsCollectionRecordListDataItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PointsCollectionRecordListDataItem) GetScore() int64 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *PointsCollectionRecordListDataItem) GetIntegral() int64 {
	if x != nil {
		return x.Integral
	}
	return 0
}

func (x *PointsCollectionRecordListDataItem) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *PointsCollectionRecordListDataItem) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *PointsCollectionRecordListDataItem) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *PointsCollectionRecordListDataItem) GetUpdatedUser() string {
	if x != nil {
		return x.UpdatedUser
	}
	return ""
}

func (x *PointsCollectionRecordListDataItem) GetMobile() string {
	if x != nil {
		return x.Mobile
	}
	return ""
}

func (x *PointsCollectionRecordListDataItem) GetCoinBefore() float32 {
	if x != nil {
		return x.CoinBefore
	}
	return 0
}

func (x *PointsCollectionRecordListDataItem) GetGoldCoins() int64 {
	if x != nil {
		return x.GoldCoins
	}
	return 0
}

// 用户积分变动记录列表
type PointsUserChangeListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current   int64                        `protobuf:"varint,1,opt,name=current,proto3" json:"current,omitempty"`
	Size      int64                        `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	Data      *PointsUserChangeListReqData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	SortField []string                     `protobuf:"bytes,4,rep,name=sortField,proto3" json:"sortField,omitempty"`
	SortKey   string                       `protobuf:"bytes,5,opt,name=sortKey,proto3" json:"sortKey,omitempty"`
}

func (x *PointsUserChangeListReq) Reset() {
	*x = PointsUserChangeListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[239]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PointsUserChangeListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PointsUserChangeListReq) ProtoMessage() {}

func (x *PointsUserChangeListReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[239]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PointsUserChangeListReq.ProtoReflect.Descriptor instead.
func (*PointsUserChangeListReq) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{239}
}

func (x *PointsUserChangeListReq) GetCurrent() int64 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *PointsUserChangeListReq) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *PointsUserChangeListReq) GetData() *PointsUserChangeListReqData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *PointsUserChangeListReq) GetSortField() []string {
	if x != nil {
		return x.SortField
	}
	return nil
}

func (x *PointsUserChangeListReq) GetSortKey() string {
	if x != nil {
		return x.SortKey
	}
	return ""
}

type PointsUserChangeListReqData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId    int64  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`          //领取用户id
	GoldCoins int64  `protobuf:"varint,2,opt,name=gold_coins,json=goldCoins,proto3" json:"gold_coins,omitempty"` //金币(用户主钱包)
	Integral  int64  `protobuf:"varint,3,opt,name=integral,proto3" json:"integral,omitempty"`                    //积分
	Username  string `protobuf:"bytes,4,opt,name=username,proto3" json:"username,omitempty"`                     //用户名
	Name      string `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`                             //奖励物品名称
	Type      int64  `protobuf:"varint,6,opt,name=type,proto3" json:"type,omitempty"`                            //状态: 1=增加,2=减少
}

func (x *PointsUserChangeListReqData) Reset() {
	*x = PointsUserChangeListReqData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[240]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PointsUserChangeListReqData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PointsUserChangeListReqData) ProtoMessage() {}

func (x *PointsUserChangeListReqData) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[240]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PointsUserChangeListReqData.ProtoReflect.Descriptor instead.
func (*PointsUserChangeListReqData) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{240}
}

func (x *PointsUserChangeListReqData) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *PointsUserChangeListReqData) GetGoldCoins() int64 {
	if x != nil {
		return x.GoldCoins
	}
	return 0
}

func (x *PointsUserChangeListReqData) GetIntegral() int64 {
	if x != nil {
		return x.Integral
	}
	return 0
}

func (x *PointsUserChangeListReqData) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *PointsUserChangeListReqData) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PointsUserChangeListReqData) GetType() int64 {
	if x != nil {
		return x.Type
	}
	return 0
}

type PointsUserChangeListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32                     `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string                    `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *PointsUserChangeListData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *PointsUserChangeListResp) Reset() {
	*x = PointsUserChangeListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[241]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PointsUserChangeListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PointsUserChangeListResp) ProtoMessage() {}

func (x *PointsUserChangeListResp) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[241]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PointsUserChangeListResp.ProtoReflect.Descriptor instead.
func (*PointsUserChangeListResp) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{241}
}

func (x *PointsUserChangeListResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *PointsUserChangeListResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *PointsUserChangeListResp) GetData() *PointsUserChangeListData {
	if x != nil {
		return x.Data
	}
	return nil
}

type PointsUserChangeListData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current int64                           `protobuf:"varint,1,opt,name=current,proto3" json:"current,omitempty"`
	Pages   int64                           `protobuf:"varint,2,opt,name=pages,proto3" json:"pages,omitempty"`
	Size    int64                           `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
	Total   int64                           `protobuf:"varint,4,opt,name=total,proto3" json:"total,omitempty"`
	List    []*PointsUserChangeListDataItem `protobuf:"bytes,5,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *PointsUserChangeListData) Reset() {
	*x = PointsUserChangeListData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[242]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PointsUserChangeListData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PointsUserChangeListData) ProtoMessage() {}

func (x *PointsUserChangeListData) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[242]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PointsUserChangeListData.ProtoReflect.Descriptor instead.
func (*PointsUserChangeListData) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{242}
}

func (x *PointsUserChangeListData) GetCurrent() int64 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *PointsUserChangeListData) GetPages() int64 {
	if x != nil {
		return x.Pages
	}
	return 0
}

func (x *PointsUserChangeListData) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *PointsUserChangeListData) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *PointsUserChangeListData) GetList() []*PointsUserChangeListDataItem {
	if x != nil {
		return x.List
	}
	return nil
}

type PointsUserChangeListDataItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId      int64   `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`             //领取用户id
	Username    string  `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`                        //用户名称
	Name        string  `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`                                //奖励物品名称
	Integral    int64   `protobuf:"varint,5,opt,name=integral,proto3" json:"integral,omitempty"`                       //奖励领取所需积分
	Type        int64   `protobuf:"varint,6,opt,name=type,proto3" json:"type,omitempty"`                               //状态: 1=增加,2=减少
	AfterScore  int64   `protobuf:"varint,7,opt,name=after_score,json=afterScore,proto3" json:"after_score,omitempty"` //用户变动后积分
	CreatedAt   int64   `protobuf:"varint,8,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt   int64   `protobuf:"varint,9,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	UpdatedUser string  `protobuf:"bytes,10,opt,name=updated_user,json=updatedUser,proto3" json:"updated_user,omitempty"` //最后修改人
	CoinBefore  float32 `protobuf:"fixed32,11,opt,name=coin_before,json=coinBefore,proto3" json:"coin_before,omitempty"`  //投注前金额
	GoldCoins   int64   `protobuf:"varint,12,opt,name=gold_coins,json=goldCoins,proto3" json:"gold_coins,omitempty"`      //金币(用户主钱包)
}

func (x *PointsUserChangeListDataItem) Reset() {
	*x = PointsUserChangeListDataItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[243]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PointsUserChangeListDataItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PointsUserChangeListDataItem) ProtoMessage() {}

func (x *PointsUserChangeListDataItem) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[243]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PointsUserChangeListDataItem.ProtoReflect.Descriptor instead.
func (*PointsUserChangeListDataItem) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{243}
}

func (x *PointsUserChangeListDataItem) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PointsUserChangeListDataItem) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *PointsUserChangeListDataItem) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *PointsUserChangeListDataItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PointsUserChangeListDataItem) GetIntegral() int64 {
	if x != nil {
		return x.Integral
	}
	return 0
}

func (x *PointsUserChangeListDataItem) GetType() int64 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *PointsUserChangeListDataItem) GetAfterScore() int64 {
	if x != nil {
		return x.AfterScore
	}
	return 0
}

func (x *PointsUserChangeListDataItem) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *PointsUserChangeListDataItem) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *PointsUserChangeListDataItem) GetUpdatedUser() string {
	if x != nil {
		return x.UpdatedUser
	}
	return ""
}

func (x *PointsUserChangeListDataItem) GetCoinBefore() float32 {
	if x != nil {
		return x.CoinBefore
	}
	return 0
}

func (x *PointsUserChangeListDataItem) GetGoldCoins() int64 {
	if x != nil {
		return x.GoldCoins
	}
	return 0
}

type GetPromotionalVideoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Category string `protobuf:"bytes,1,opt,name=category,proto3" json:"category,omitempty"` //类型
}

func (x *GetPromotionalVideoReq) Reset() {
	*x = GetPromotionalVideoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[244]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPromotionalVideoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPromotionalVideoReq) ProtoMessage() {}

func (x *GetPromotionalVideoReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[244]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPromotionalVideoReq.ProtoReflect.Descriptor instead.
func (*GetPromotionalVideoReq) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{244}
}

func (x *GetPromotionalVideoReq) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

type GetPromotionalVideoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data string `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetPromotionalVideoResp) Reset() {
	*x = GetPromotionalVideoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[245]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPromotionalVideoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPromotionalVideoResp) ProtoMessage() {}

func (x *GetPromotionalVideoResp) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[245]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPromotionalVideoResp.ProtoReflect.Descriptor instead.
func (*GetPromotionalVideoResp) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{245}
}

func (x *GetPromotionalVideoResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetPromotionalVideoResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GetPromotionalVideoResp) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

type UserLevelRewardsSumReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartTime int64  `protobuf:"varint,1,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime   int64  `protobuf:"varint,2,opt,name=endTime,proto3" json:"endTime,omitempty"`
	Id        int64  `protobuf:"varint,3,opt,name=id,proto3" json:"id,omitempty"`
	Username  string `protobuf:"bytes,4,opt,name=username,proto3" json:"username,omitempty"`
	Uid       int64  `protobuf:"varint,5,opt,name=uid,proto3" json:"uid,omitempty"`
	LevelId   int64  `protobuf:"varint,6,opt,name=levelId,proto3" json:"levelId,omitempty"`
	Category  *int64 `protobuf:"varint,7,opt,name=category,proto3,oneof" json:"category,omitempty"` // 福利类型:0-晋级彩金 1-生日礼金 2-周彩金3 -月彩金
	Status    *int64 `protobuf:"varint,8,opt,name=status,proto3,oneof" json:"status,omitempty"`     //状态:0-待领取 1-已领取 2-已过期
	TimeType  int64  `protobuf:"varint,9,opt,name=timeType,proto3" json:"timeType,omitempty"`       //查询时间类型:1-订单生成时间 2-领取时间
}

func (x *UserLevelRewardsSumReq) Reset() {
	*x = UserLevelRewardsSumReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[246]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserLevelRewardsSumReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserLevelRewardsSumReq) ProtoMessage() {}

func (x *UserLevelRewardsSumReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[246]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserLevelRewardsSumReq.ProtoReflect.Descriptor instead.
func (*UserLevelRewardsSumReq) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{246}
}

func (x *UserLevelRewardsSumReq) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *UserLevelRewardsSumReq) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *UserLevelRewardsSumReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UserLevelRewardsSumReq) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *UserLevelRewardsSumReq) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *UserLevelRewardsSumReq) GetLevelId() int64 {
	if x != nil {
		return x.LevelId
	}
	return 0
}

func (x *UserLevelRewardsSumReq) GetCategory() int64 {
	if x != nil && x.Category != nil {
		return *x.Category
	}
	return 0
}

func (x *UserLevelRewardsSumReq) GetStatus() int64 {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return 0
}

func (x *UserLevelRewardsSumReq) GetTimeType() int64 {
	if x != nil {
		return x.TimeType
	}
	return 0
}

type UserLevelRewardsSumResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32                    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string                   `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *UserLevelRewardsSumData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *UserLevelRewardsSumResp) Reset() {
	*x = UserLevelRewardsSumResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[247]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserLevelRewardsSumResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserLevelRewardsSumResp) ProtoMessage() {}

func (x *UserLevelRewardsSumResp) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[247]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserLevelRewardsSumResp.ProtoReflect.Descriptor instead.
func (*UserLevelRewardsSumResp) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{247}
}

func (x *UserLevelRewardsSumResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *UserLevelRewardsSumResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *UserLevelRewardsSumResp) GetData() *UserLevelRewardsSumData {
	if x != nil {
		return x.Data
	}
	return nil
}

type UserLevelRewardsSumData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalCoin        float32 `protobuf:"fixed32,1,opt,name=totalCoin,proto3" json:"totalCoin,omitempty"`               // 总彩金金额
	TotalReceiveCoin float32 `protobuf:"fixed32,2,opt,name=totalReceiveCoin,proto3" json:"totalReceiveCoin,omitempty"` //总领取彩金金额
}

func (x *UserLevelRewardsSumData) Reset() {
	*x = UserLevelRewardsSumData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[248]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserLevelRewardsSumData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserLevelRewardsSumData) ProtoMessage() {}

func (x *UserLevelRewardsSumData) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[248]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserLevelRewardsSumData.ProtoReflect.Descriptor instead.
func (*UserLevelRewardsSumData) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{248}
}

func (x *UserLevelRewardsSumData) GetTotalCoin() float32 {
	if x != nil {
		return x.TotalCoin
	}
	return 0
}

func (x *UserLevelRewardsSumData) GetTotalReceiveCoin() float32 {
	if x != nil {
		return x.TotalReceiveCoin
	}
	return 0
}

type UserLevelRewardsListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current   int64                   `protobuf:"varint,1,opt,name=current,proto3" json:"current,omitempty"`
	Size      int64                   `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	Data      *UserLevelRewardsSumReq `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	SortField []string                `protobuf:"bytes,4,rep,name=sortField,proto3" json:"sortField,omitempty"`
	SortKey   string                  `protobuf:"bytes,5,opt,name=sortKey,proto3" json:"sortKey,omitempty"`
}

func (x *UserLevelRewardsListReq) Reset() {
	*x = UserLevelRewardsListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[249]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserLevelRewardsListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserLevelRewardsListReq) ProtoMessage() {}

func (x *UserLevelRewardsListReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[249]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserLevelRewardsListReq.ProtoReflect.Descriptor instead.
func (*UserLevelRewardsListReq) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{249}
}

func (x *UserLevelRewardsListReq) GetCurrent() int64 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *UserLevelRewardsListReq) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *UserLevelRewardsListReq) GetData() *UserLevelRewardsSumReq {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *UserLevelRewardsListReq) GetSortField() []string {
	if x != nil {
		return x.SortField
	}
	return nil
}

func (x *UserLevelRewardsListReq) GetSortKey() string {
	if x != nil {
		return x.SortKey
	}
	return ""
}

type UserLevelRewardsListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32                     `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string                    `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *UserLevelRewardsListData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *UserLevelRewardsListResp) Reset() {
	*x = UserLevelRewardsListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[250]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserLevelRewardsListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserLevelRewardsListResp) ProtoMessage() {}

func (x *UserLevelRewardsListResp) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[250]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserLevelRewardsListResp.ProtoReflect.Descriptor instead.
func (*UserLevelRewardsListResp) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{250}
}

func (x *UserLevelRewardsListResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *UserLevelRewardsListResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *UserLevelRewardsListResp) GetData() *UserLevelRewardsListData {
	if x != nil {
		return x.Data
	}
	return nil
}

type UserLevelRewardsListData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current int64                           `protobuf:"varint,1,opt,name=current,proto3" json:"current,omitempty"`
	Pages   int64                           `protobuf:"varint,2,opt,name=pages,proto3" json:"pages,omitempty"`
	Size    int64                           `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
	Total   int64                           `protobuf:"varint,4,opt,name=total,proto3" json:"total,omitempty"`
	List    []*UserLevelRewardsListDataItem `protobuf:"bytes,5,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *UserLevelRewardsListData) Reset() {
	*x = UserLevelRewardsListData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[251]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserLevelRewardsListData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserLevelRewardsListData) ProtoMessage() {}

func (x *UserLevelRewardsListData) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[251]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserLevelRewardsListData.ProtoReflect.Descriptor instead.
func (*UserLevelRewardsListData) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{251}
}

func (x *UserLevelRewardsListData) GetCurrent() int64 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *UserLevelRewardsListData) GetPages() int64 {
	if x != nil {
		return x.Pages
	}
	return 0
}

func (x *UserLevelRewardsListData) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *UserLevelRewardsListData) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *UserLevelRewardsListData) GetList() []*UserLevelRewardsListDataItem {
	if x != nil {
		return x.List
	}
	return nil
}

type UserLevelRewardsListDataItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Uid       int64   `protobuf:"varint,2,opt,name=uid,proto3" json:"uid,omitempty"`          //用户id
	Username  string  `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"` //用户名
	LevelId   int64   `protobuf:"varint,4,opt,name=levelId,proto3" json:"levelId,omitempty"`  //用户等级
	LevelCode string  `protobuf:"bytes,5,opt,name=levelCode,proto3" json:"levelCode,omitempty"`
	Category  int64   `protobuf:"varint,6,opt,name=category,proto3" json:"category,omitempty"` // 福利类型:0-晋级彩金 1-生日礼金 2-周彩金3 -月彩金
	Status    int64   `protobuf:"varint,7,opt,name=status,proto3" json:"status,omitempty"`     //状态:0-待领取 1-已领取 2-已过期
	Coin      float32 `protobuf:"fixed32,8,opt,name=coin,proto3" json:"coin,omitempty"`
	FlowClaim int64   `protobuf:"varint,9,opt,name=flowClaim,proto3" json:"flowClaim,omitempty"`
	Codes     float32 `protobuf:"fixed32,10,opt,name=codes,proto3" json:"codes,omitempty"`
	CreatedAt int64   `protobuf:"varint,11,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	EndedAt   int64   `protobuf:"varint,12,opt,name=endedAt,proto3" json:"endedAt,omitempty"`
	ReceiveAt int64   `protobuf:"varint,13,opt,name=receiveAt,proto3" json:"receiveAt,omitempty"`
	Time      int64   `protobuf:"varint,14,opt,name=time,proto3" json:"time,omitempty"`
}

func (x *UserLevelRewardsListDataItem) Reset() {
	*x = UserLevelRewardsListDataItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[252]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserLevelRewardsListDataItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserLevelRewardsListDataItem) ProtoMessage() {}

func (x *UserLevelRewardsListDataItem) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[252]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserLevelRewardsListDataItem.ProtoReflect.Descriptor instead.
func (*UserLevelRewardsListDataItem) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{252}
}

func (x *UserLevelRewardsListDataItem) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UserLevelRewardsListDataItem) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *UserLevelRewardsListDataItem) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *UserLevelRewardsListDataItem) GetLevelId() int64 {
	if x != nil {
		return x.LevelId
	}
	return 0
}

func (x *UserLevelRewardsListDataItem) GetLevelCode() string {
	if x != nil {
		return x.LevelCode
	}
	return ""
}

func (x *UserLevelRewardsListDataItem) GetCategory() int64 {
	if x != nil {
		return x.Category
	}
	return 0
}

func (x *UserLevelRewardsListDataItem) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *UserLevelRewardsListDataItem) GetCoin() float32 {
	if x != nil {
		return x.Coin
	}
	return 0
}

func (x *UserLevelRewardsListDataItem) GetFlowClaim() int64 {
	if x != nil {
		return x.FlowClaim
	}
	return 0
}

func (x *UserLevelRewardsListDataItem) GetCodes() float32 {
	if x != nil {
		return x.Codes
	}
	return 0
}

func (x *UserLevelRewardsListDataItem) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *UserLevelRewardsListDataItem) GetEndedAt() int64 {
	if x != nil {
		return x.EndedAt
	}
	return 0
}

func (x *UserLevelRewardsListDataItem) GetReceiveAt() int64 {
	if x != nil {
		return x.ReceiveAt
	}
	return 0
}

func (x *UserLevelRewardsListDataItem) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

type SaveOrUpdateUserGroupReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Rules string `protobuf:"bytes,3,opt,name=rules,proto3" json:"rules,omitempty"`
}

func (x *SaveOrUpdateUserGroupReq) Reset() {
	*x = SaveOrUpdateUserGroupReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[253]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveOrUpdateUserGroupReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveOrUpdateUserGroupReq) ProtoMessage() {}

func (x *SaveOrUpdateUserGroupReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[253]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveOrUpdateUserGroupReq.ProtoReflect.Descriptor instead.
func (*SaveOrUpdateUserGroupReq) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{253}
}

func (x *SaveOrUpdateUserGroupReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SaveOrUpdateUserGroupReq) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *SaveOrUpdateUserGroupReq) GetRules() string {
	if x != nil {
		return x.Rules
	}
	return ""
}

type SaveOrUpdateUserGroupResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data bool   `protobuf:"varint,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *SaveOrUpdateUserGroupResp) Reset() {
	*x = SaveOrUpdateUserGroupResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[254]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveOrUpdateUserGroupResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveOrUpdateUserGroupResp) ProtoMessage() {}

func (x *SaveOrUpdateUserGroupResp) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[254]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveOrUpdateUserGroupResp.ProtoReflect.Descriptor instead.
func (*SaveOrUpdateUserGroupResp) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{254}
}

func (x *SaveOrUpdateUserGroupResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *SaveOrUpdateUserGroupResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *SaveOrUpdateUserGroupResp) GetData() bool {
	if x != nil {
		return x.Data
	}
	return false
}

type AddAdminReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username        string  `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	PasswordHash    string  `protobuf:"bytes,2,opt,name=password_hash,json=passwordHash,proto3" json:"password_hash,omitempty"`
	GroupId         int64   `protobuf:"varint,3,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	AdminId         int64   `protobuf:"varint,4,opt,name=admin_id,json=adminId,proto3" json:"admin_id,omitempty"`
	AgentId         *string `protobuf:"bytes,5,opt,name=agentId,proto3,oneof" json:"agentId,omitempty"`                                        //
	AccountType     *string `protobuf:"bytes,6,opt,name=account_type,json=accountType,proto3,oneof" json:"account_type,omitempty"`             // 账户类型: "1"-商户账户
	MerchantAddress *string `protobuf:"bytes,7,opt,name=merchant_address,json=merchantAddress,proto3,oneof" json:"merchant_address,omitempty"` // 商户地址 (当account_type为"1"时)
}

func (x *AddAdminReq) Reset() {
	*x = AddAdminReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[255]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddAdminReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddAdminReq) ProtoMessage() {}

func (x *AddAdminReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[255]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddAdminReq.ProtoReflect.Descriptor instead.
func (*AddAdminReq) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{255}
}

func (x *AddAdminReq) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *AddAdminReq) GetPasswordHash() string {
	if x != nil {
		return x.PasswordHash
	}
	return ""
}

func (x *AddAdminReq) GetGroupId() int64 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

func (x *AddAdminReq) GetAdminId() int64 {
	if x != nil {
		return x.AdminId
	}
	return 0
}

func (x *AddAdminReq) GetAgentId() string {
	if x != nil && x.AgentId != nil {
		return *x.AgentId
	}
	return ""
}

func (x *AddAdminReq) GetAccountType() string {
	if x != nil && x.AccountType != nil {
		return *x.AccountType
	}
	return ""
}

func (x *AddAdminReq) GetMerchantAddress() string {
	if x != nil && x.MerchantAddress != nil {
		return *x.MerchantAddress
	}
	return ""
}

type AddAdminResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32             `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string            `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *AddAdminDataResp `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *AddAdminResp) Reset() {
	*x = AddAdminResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[256]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddAdminResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddAdminResp) ProtoMessage() {}

func (x *AddAdminResp) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[256]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddAdminResp.ProtoReflect.Descriptor instead.
func (*AddAdminResp) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{256}
}

func (x *AddAdminResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *AddAdminResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *AddAdminResp) GetData() *AddAdminDataResp {
	if x != nil {
		return x.Data
	}
	return nil
}

type AddAdminDataResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MsgZh string `protobuf:"bytes,1,opt,name=msg_zh,json=msgZh,proto3" json:"msg_zh,omitempty"`
}

func (x *AddAdminDataResp) Reset() {
	*x = AddAdminDataResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[257]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddAdminDataResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddAdminDataResp) ProtoMessage() {}

func (x *AddAdminDataResp) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[257]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddAdminDataResp.ProtoReflect.Descriptor instead.
func (*AddAdminDataResp) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{257}
}

func (x *AddAdminDataResp) GetMsgZh() string {
	if x != nil {
		return x.MsgZh
	}
	return ""
}

type InsertRuleReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title      string  `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`                                      // 菜单名称 (必需)
	MenuName   string  `protobuf:"bytes,2,opt,name=menu_name,json=menuName,proto3" json:"menu_name,omitempty"`                // 规则唯一标识 (必需)
	Pid        *int64  `protobuf:"varint,3,opt,name=pid,proto3,oneof" json:"pid,omitempty"`                                   // 父节点ID
	Icon       *string `protobuf:"bytes,4,opt,name=icon,proto3,oneof" json:"icon,omitempty"`                                  // 图标
	IsMenu     *int32  `protobuf:"varint,5,opt,name=is_menu,json=isMenu,proto3,oneof" json:"is_menu,omitempty"`               // 是否主菜单:1-是 0-否
	IsRaceMenu *int32  `protobuf:"varint,6,opt,name=is_race_menu,json=isRaceMenu,proto3,oneof" json:"is_race_menu,omitempty"` // 是否按钮:1-是 0-否
	Status     *int32  `protobuf:"varint,7,opt,name=status,proto3,oneof" json:"status,omitempty"`                             // 状态: 1-启用 0-禁用
}

func (x *InsertRuleReq) Reset() {
	*x = InsertRuleReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[258]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InsertRuleReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InsertRuleReq) ProtoMessage() {}

func (x *InsertRuleReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[258]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InsertRuleReq.ProtoReflect.Descriptor instead.
func (*InsertRuleReq) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{258}
}

func (x *InsertRuleReq) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *InsertRuleReq) GetMenuName() string {
	if x != nil {
		return x.MenuName
	}
	return ""
}

func (x *InsertRuleReq) GetPid() int64 {
	if x != nil && x.Pid != nil {
		return *x.Pid
	}
	return 0
}

func (x *InsertRuleReq) GetIcon() string {
	if x != nil && x.Icon != nil {
		return *x.Icon
	}
	return ""
}

func (x *InsertRuleReq) GetIsMenu() int32 {
	if x != nil && x.IsMenu != nil {
		return *x.IsMenu
	}
	return 0
}

func (x *InsertRuleReq) GetIsRaceMenu() int32 {
	if x != nil && x.IsRaceMenu != nil {
		return *x.IsRaceMenu
	}
	return 0
}

func (x *InsertRuleReq) GetStatus() int32 {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return 0
}

type InsertRuleResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data bool   `protobuf:"varint,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *InsertRuleResp) Reset() {
	*x = InsertRuleResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[259]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InsertRuleResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InsertRuleResp) ProtoMessage() {}

func (x *InsertRuleResp) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[259]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InsertRuleResp.ProtoReflect.Descriptor instead.
func (*InsertRuleResp) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{259}
}

func (x *InsertRuleResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *InsertRuleResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *InsertRuleResp) GetData() bool {
	if x != nil {
		return x.Data
	}
	return false
}

type InsertRoleAuthManagerReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title        string  `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`                                            // 角色名 (必需)
	Rules        *string `protobuf:"bytes,2,opt,name=rules,proto3,oneof" json:"rules,omitempty"`                                      // 菜单ID集合, 逗号分隔
	Status       *int32  `protobuf:"varint,3,opt,name=status,proto3,oneof" json:"status,omitempty"`                                   // 状态: 1-启用 0-冻结
	AdminGroupId *int64  `protobuf:"varint,4,opt,name=admin_group_id,json=adminGroupId,proto3,oneof" json:"admin_group_id,omitempty"` // 角色组ID
}

func (x *InsertRoleAuthManagerReq) Reset() {
	*x = InsertRoleAuthManagerReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[260]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InsertRoleAuthManagerReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InsertRoleAuthManagerReq) ProtoMessage() {}

func (x *InsertRoleAuthManagerReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[260]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InsertRoleAuthManagerReq.ProtoReflect.Descriptor instead.
func (*InsertRoleAuthManagerReq) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{260}
}

func (x *InsertRoleAuthManagerReq) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *InsertRoleAuthManagerReq) GetRules() string {
	if x != nil && x.Rules != nil {
		return *x.Rules
	}
	return ""
}

func (x *InsertRoleAuthManagerReq) GetStatus() int32 {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return 0
}

func (x *InsertRoleAuthManagerReq) GetAdminGroupId() int64 {
	if x != nil && x.AdminGroupId != nil {
		return *x.AdminGroupId
	}
	return 0
}

type InsertRoleAuthManagerResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data string `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *InsertRoleAuthManagerResp) Reset() {
	*x = InsertRoleAuthManagerResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[261]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InsertRoleAuthManagerResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InsertRoleAuthManagerResp) ProtoMessage() {}

func (x *InsertRoleAuthManagerResp) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[261]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InsertRoleAuthManagerResp.ProtoReflect.Descriptor instead.
func (*InsertRoleAuthManagerResp) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{261}
}

func (x *InsertRoleAuthManagerResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *InsertRoleAuthManagerResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *InsertRoleAuthManagerResp) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

type ListAdminOperationLogReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current   int64                         `protobuf:"varint,1,opt,name=current,proto3" json:"current,omitempty"`
	Size      int64                         `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	Data      *ListAdminOperationLogDataReq `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	SortField []string                      `protobuf:"bytes,4,rep,name=sortField,proto3" json:"sortField,omitempty"`
	SortKey   string                        `protobuf:"bytes,5,opt,name=sortKey,proto3" json:"sortKey,omitempty"`
}

func (x *ListAdminOperationLogReq) Reset() {
	*x = ListAdminOperationLogReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[262]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAdminOperationLogReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAdminOperationLogReq) ProtoMessage() {}

func (x *ListAdminOperationLogReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[262]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAdminOperationLogReq.ProtoReflect.Descriptor instead.
func (*ListAdminOperationLogReq) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{262}
}

func (x *ListAdminOperationLogReq) GetCurrent() int64 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *ListAdminOperationLogReq) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *ListAdminOperationLogReq) GetData() *ListAdminOperationLogDataReq {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ListAdminOperationLogReq) GetSortField() []string {
	if x != nil {
		return x.SortField
	}
	return nil
}

func (x *ListAdminOperationLogReq) GetSortKey() string {
	if x != nil {
		return x.SortKey
	}
	return ""
}

type ListAdminOperationLogDataReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid       *int64  `protobuf:"varint,1,opt,name=uid,proto3,oneof" json:"uid,omitempty"`          // 操作人ID
	Username  *string `protobuf:"bytes,2,opt,name=username,proto3,oneof" json:"username,omitempty"` // 操作人
	Menu      *string `protobuf:"bytes,3,opt,name=menu,proto3,oneof" json:"menu,omitempty"`         // 菜单
	MenuIndex *int64  `protobuf:"varint,5,opt,name=menuIndex,proto3,oneof" json:"menuIndex,omitempty"`
	Content   *string `protobuf:"bytes,6,opt,name=content,proto3,oneof" json:"content,omitempty"`      //
	Ip        *string `protobuf:"bytes,7,opt,name=ip,proto3,oneof" json:"ip,omitempty"`                // IP
	StartTime *int64  `protobuf:"varint,8,opt,name=startTime,proto3,oneof" json:"startTime,omitempty"` // 开始时间
	EndTime   *int64  `protobuf:"varint,9,opt,name=endTime,proto3,oneof" json:"endTime,omitempty"`     // 结束时间
}

func (x *ListAdminOperationLogDataReq) Reset() {
	*x = ListAdminOperationLogDataReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[263]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAdminOperationLogDataReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAdminOperationLogDataReq) ProtoMessage() {}

func (x *ListAdminOperationLogDataReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[263]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAdminOperationLogDataReq.ProtoReflect.Descriptor instead.
func (*ListAdminOperationLogDataReq) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{263}
}

func (x *ListAdminOperationLogDataReq) GetUid() int64 {
	if x != nil && x.Uid != nil {
		return *x.Uid
	}
	return 0
}

func (x *ListAdminOperationLogDataReq) GetUsername() string {
	if x != nil && x.Username != nil {
		return *x.Username
	}
	return ""
}

func (x *ListAdminOperationLogDataReq) GetMenu() string {
	if x != nil && x.Menu != nil {
		return *x.Menu
	}
	return ""
}

func (x *ListAdminOperationLogDataReq) GetMenuIndex() int64 {
	if x != nil && x.MenuIndex != nil {
		return *x.MenuIndex
	}
	return 0
}

func (x *ListAdminOperationLogDataReq) GetContent() string {
	if x != nil && x.Content != nil {
		return *x.Content
	}
	return ""
}

func (x *ListAdminOperationLogDataReq) GetIp() string {
	if x != nil && x.Ip != nil {
		return *x.Ip
	}
	return ""
}

func (x *ListAdminOperationLogDataReq) GetStartTime() int64 {
	if x != nil && x.StartTime != nil {
		return *x.StartTime
	}
	return 0
}

func (x *ListAdminOperationLogDataReq) GetEndTime() int64 {
	if x != nil && x.EndTime != nil {
		return *x.EndTime
	}
	return 0
}

type ListAdminOperationLogResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32                      `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string                     `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *ListAdminOperationLogData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *ListAdminOperationLogResp) Reset() {
	*x = ListAdminOperationLogResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[264]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAdminOperationLogResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAdminOperationLogResp) ProtoMessage() {}

func (x *ListAdminOperationLogResp) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[264]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAdminOperationLogResp.ProtoReflect.Descriptor instead.
func (*ListAdminOperationLogResp) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{264}
}

func (x *ListAdminOperationLogResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ListAdminOperationLogResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *ListAdminOperationLogResp) GetData() *ListAdminOperationLogData {
	if x != nil {
		return x.Data
	}
	return nil
}

type ListAdminOperationLogData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current int64                            `protobuf:"varint,1,opt,name=current,proto3" json:"current,omitempty"`
	Pages   int64                            `protobuf:"varint,2,opt,name=pages,proto3" json:"pages,omitempty"`
	Size    int64                            `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
	Total   int64                            `protobuf:"varint,4,opt,name=total,proto3" json:"total,omitempty"`
	List    []*ListAdminOperationLogDataItem `protobuf:"bytes,5,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *ListAdminOperationLogData) Reset() {
	*x = ListAdminOperationLogData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[265]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAdminOperationLogData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAdminOperationLogData) ProtoMessage() {}

func (x *ListAdminOperationLogData) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[265]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAdminOperationLogData.ProtoReflect.Descriptor instead.
func (*ListAdminOperationLogData) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{265}
}

func (x *ListAdminOperationLogData) GetCurrent() int64 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *ListAdminOperationLogData) GetPages() int64 {
	if x != nil {
		return x.Pages
	}
	return 0
}

func (x *ListAdminOperationLogData) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *ListAdminOperationLogData) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListAdminOperationLogData) GetList() []*ListAdminOperationLogDataItem {
	if x != nil {
		return x.List
	}
	return nil
}

type ListAdminOperationLogDataItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Uid       int64  `protobuf:"varint,2,opt,name=uid,proto3" json:"uid,omitempty"`
	Username  string `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`
	Title     string `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`
	Menu      string `protobuf:"bytes,5,opt,name=menu,proto3" json:"menu,omitempty"`
	MenuIndex int64  `protobuf:"varint,6,opt,name=menuIndex,proto3" json:"menuIndex,omitempty"`
	Type      string `protobuf:"bytes,7,opt,name=type,proto3" json:"type,omitempty"`
	Content   string `protobuf:"bytes,8,opt,name=content,proto3" json:"content,omitempty"`
	Ip        string `protobuf:"bytes,9,opt,name=ip,proto3" json:"ip,omitempty"`
	CreatedAt int64  `protobuf:"varint,10,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt int64  `protobuf:"varint,11,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	Module    string `protobuf:"bytes,12,opt,name=module,proto3" json:"module,omitempty"`
	Url       string `protobuf:"bytes,13,opt,name=url,proto3" json:"url,omitempty"`
	StartTime int64  `protobuf:"varint,14,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime   int64  `protobuf:"varint,15,opt,name=endTime,proto3" json:"endTime,omitempty"`
}

func (x *ListAdminOperationLogDataItem) Reset() {
	*x = ListAdminOperationLogDataItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[266]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAdminOperationLogDataItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAdminOperationLogDataItem) ProtoMessage() {}

func (x *ListAdminOperationLogDataItem) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[266]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAdminOperationLogDataItem.ProtoReflect.Descriptor instead.
func (*ListAdminOperationLogDataItem) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{266}
}

func (x *ListAdminOperationLogDataItem) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ListAdminOperationLogDataItem) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *ListAdminOperationLogDataItem) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *ListAdminOperationLogDataItem) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ListAdminOperationLogDataItem) GetMenu() string {
	if x != nil {
		return x.Menu
	}
	return ""
}

func (x *ListAdminOperationLogDataItem) GetMenuIndex() int64 {
	if x != nil {
		return x.MenuIndex
	}
	return 0
}

func (x *ListAdminOperationLogDataItem) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ListAdminOperationLogDataItem) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *ListAdminOperationLogDataItem) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *ListAdminOperationLogDataItem) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *ListAdminOperationLogDataItem) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *ListAdminOperationLogDataItem) GetModule() string {
	if x != nil {
		return x.Module
	}
	return ""
}

func (x *ListAdminOperationLogDataItem) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *ListAdminOperationLogDataItem) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *ListAdminOperationLogDataItem) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

type ListAdminLoginLogReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current   int64                     `protobuf:"varint,1,opt,name=current,proto3" json:"current,omitempty"`
	Size      int64                     `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	Data      *ListAdminLoginLogDataReq `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	SortField []string                  `protobuf:"bytes,4,rep,name=sortField,proto3" json:"sortField,omitempty"`
	SortKey   string                    `protobuf:"bytes,5,opt,name=sortKey,proto3" json:"sortKey,omitempty"`
}

func (x *ListAdminLoginLogReq) Reset() {
	*x = ListAdminLoginLogReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[267]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAdminLoginLogReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAdminLoginLogReq) ProtoMessage() {}

func (x *ListAdminLoginLogReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[267]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAdminLoginLogReq.ProtoReflect.Descriptor instead.
func (*ListAdminLoginLogReq) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{267}
}

func (x *ListAdminLoginLogReq) GetCurrent() int64 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *ListAdminLoginLogReq) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *ListAdminLoginLogReq) GetData() *ListAdminLoginLogDataReq {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ListAdminLoginLogReq) GetSortField() []string {
	if x != nil {
		return x.SortField
	}
	return nil
}

func (x *ListAdminLoginLogReq) GetSortKey() string {
	if x != nil {
		return x.SortKey
	}
	return ""
}

type ListAdminLoginLogDataReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid       *int64  `protobuf:"varint,1,opt,name=uid,proto3,oneof" json:"uid,omitempty"`             // 操作人ID
	Username  *string `protobuf:"bytes,2,opt,name=username,proto3,oneof" json:"username,omitempty"`    // 操作人
	Ip        *string `protobuf:"bytes,3,opt,name=ip,proto3,oneof" json:"ip,omitempty"`                // IP
	StartTime *int64  `protobuf:"varint,4,opt,name=startTime,proto3,oneof" json:"startTime,omitempty"` // 开始时间
	EndTime   *int64  `protobuf:"varint,5,opt,name=endTime,proto3,oneof" json:"endTime,omitempty"`     // 结束时间
}

func (x *ListAdminLoginLogDataReq) Reset() {
	*x = ListAdminLoginLogDataReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[268]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAdminLoginLogDataReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAdminLoginLogDataReq) ProtoMessage() {}

func (x *ListAdminLoginLogDataReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[268]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAdminLoginLogDataReq.ProtoReflect.Descriptor instead.
func (*ListAdminLoginLogDataReq) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{268}
}

func (x *ListAdminLoginLogDataReq) GetUid() int64 {
	if x != nil && x.Uid != nil {
		return *x.Uid
	}
	return 0
}

func (x *ListAdminLoginLogDataReq) GetUsername() string {
	if x != nil && x.Username != nil {
		return *x.Username
	}
	return ""
}

func (x *ListAdminLoginLogDataReq) GetIp() string {
	if x != nil && x.Ip != nil {
		return *x.Ip
	}
	return ""
}

func (x *ListAdminLoginLogDataReq) GetStartTime() int64 {
	if x != nil && x.StartTime != nil {
		return *x.StartTime
	}
	return 0
}

func (x *ListAdminLoginLogDataReq) GetEndTime() int64 {
	if x != nil && x.EndTime != nil {
		return *x.EndTime
	}
	return 0
}

type ListAdminLoginLogResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32                  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string                 `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *ListAdminLoginLogData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *ListAdminLoginLogResp) Reset() {
	*x = ListAdminLoginLogResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[269]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAdminLoginLogResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAdminLoginLogResp) ProtoMessage() {}

func (x *ListAdminLoginLogResp) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[269]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAdminLoginLogResp.ProtoReflect.Descriptor instead.
func (*ListAdminLoginLogResp) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{269}
}

func (x *ListAdminLoginLogResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ListAdminLoginLogResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *ListAdminLoginLogResp) GetData() *ListAdminLoginLogData {
	if x != nil {
		return x.Data
	}
	return nil
}

type ListAdminLoginLogData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current int64                        `protobuf:"varint,1,opt,name=current,proto3" json:"current,omitempty"`
	Pages   int64                        `protobuf:"varint,2,opt,name=pages,proto3" json:"pages,omitempty"`
	Size    int64                        `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
	Total   int64                        `protobuf:"varint,4,opt,name=total,proto3" json:"total,omitempty"`
	List    []*ListAdminLoginLogDataItem `protobuf:"bytes,5,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *ListAdminLoginLogData) Reset() {
	*x = ListAdminLoginLogData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[270]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAdminLoginLogData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAdminLoginLogData) ProtoMessage() {}

func (x *ListAdminLoginLogData) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[270]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAdminLoginLogData.ProtoReflect.Descriptor instead.
func (*ListAdminLoginLogData) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{270}
}

func (x *ListAdminLoginLogData) GetCurrent() int64 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *ListAdminLoginLogData) GetPages() int64 {
	if x != nil {
		return x.Pages
	}
	return 0
}

func (x *ListAdminLoginLogData) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *ListAdminLoginLogData) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListAdminLoginLogData) GetList() []*ListAdminLoginLogDataItem {
	if x != nil {
		return x.List
	}
	return nil
}

type ListAdminLoginLogDataItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Uid       int64  `protobuf:"varint,2,opt,name=uid,proto3" json:"uid,omitempty"`
	Username  string `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`
	Ip        string `protobuf:"bytes,4,opt,name=ip,proto3" json:"ip,omitempty"`
	CreatedAt int64  `protobuf:"varint,5,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt int64  `protobuf:"varint,6,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	UserAgent string `protobuf:"bytes,7,opt,name=userAgent,proto3" json:"userAgent,omitempty"`
	Category  int64  `protobuf:"varint,8,opt,name=category,proto3" json:"category,omitempty"`
	Status    int64  `protobuf:"varint,9,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *ListAdminLoginLogDataItem) Reset() {
	*x = ListAdminLoginLogDataItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[271]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAdminLoginLogDataItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAdminLoginLogDataItem) ProtoMessage() {}

func (x *ListAdminLoginLogDataItem) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[271]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAdminLoginLogDataItem.ProtoReflect.Descriptor instead.
func (*ListAdminLoginLogDataItem) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{271}
}

func (x *ListAdminLoginLogDataItem) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ListAdminLoginLogDataItem) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *ListAdminLoginLogDataItem) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *ListAdminLoginLogDataItem) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *ListAdminLoginLogDataItem) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *ListAdminLoginLogDataItem) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *ListAdminLoginLogDataItem) GetUserAgent() string {
	if x != nil {
		return x.UserAgent
	}
	return ""
}

func (x *ListAdminLoginLogDataItem) GetCategory() int64 {
	if x != nil {
		return x.Category
	}
	return 0
}

func (x *ListAdminLoginLogDataItem) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

type AdminOperationLogMenuReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *AdminOperationLogMenuReq) Reset() {
	*x = AdminOperationLogMenuReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[272]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminOperationLogMenuReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminOperationLogMenuReq) ProtoMessage() {}

func (x *AdminOperationLogMenuReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[272]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminOperationLogMenuReq.ProtoReflect.Descriptor instead.
func (*AdminOperationLogMenuReq) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{272}
}

func (x *AdminOperationLogMenuReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type AdminOperationLogMenuResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32                        `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string                       `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data []*AdminOperationLogMenuData `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *AdminOperationLogMenuResp) Reset() {
	*x = AdminOperationLogMenuResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[273]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminOperationLogMenuResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminOperationLogMenuResp) ProtoMessage() {}

func (x *AdminOperationLogMenuResp) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[273]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminOperationLogMenuResp.ProtoReflect.Descriptor instead.
func (*AdminOperationLogMenuResp) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{273}
}

func (x *AdminOperationLogMenuResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *AdminOperationLogMenuResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *AdminOperationLogMenuResp) GetData() []*AdminOperationLogMenuData {
	if x != nil {
		return x.Data
	}
	return nil
}

type AdminOperationLogMenuData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Menu      string `protobuf:"bytes,1,opt,name=menu,proto3" json:"menu,omitempty"`
	MenuIndex int64  `protobuf:"varint,2,opt,name=menuIndex,proto3" json:"menuIndex,omitempty"`
}

func (x *AdminOperationLogMenuData) Reset() {
	*x = AdminOperationLogMenuData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[274]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminOperationLogMenuData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminOperationLogMenuData) ProtoMessage() {}

func (x *AdminOperationLogMenuData) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[274]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminOperationLogMenuData.ProtoReflect.Descriptor instead.
func (*AdminOperationLogMenuData) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{274}
}

func (x *AdminOperationLogMenuData) GetMenu() string {
	if x != nil {
		return x.Menu
	}
	return ""
}

func (x *AdminOperationLogMenuData) GetMenuIndex() int64 {
	if x != nil {
		return x.MenuIndex
	}
	return 0
}

type PagcorDailyTaxCountReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current   int64                       `protobuf:"varint,1,opt,name=current,proto3" json:"current,omitempty"`
	Size      int64                       `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	Data      *PagcorDailyTaxCountDataReq `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	SortField []string                    `protobuf:"bytes,4,rep,name=sortField,proto3" json:"sortField,omitempty"`
	SortKey   string                      `protobuf:"bytes,5,opt,name=sortKey,proto3" json:"sortKey,omitempty"`
}

func (x *PagcorDailyTaxCountReq) Reset() {
	*x = PagcorDailyTaxCountReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[275]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PagcorDailyTaxCountReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PagcorDailyTaxCountReq) ProtoMessage() {}

func (x *PagcorDailyTaxCountReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[275]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PagcorDailyTaxCountReq.ProtoReflect.Descriptor instead.
func (*PagcorDailyTaxCountReq) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{275}
}

func (x *PagcorDailyTaxCountReq) GetCurrent() int64 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *PagcorDailyTaxCountReq) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *PagcorDailyTaxCountReq) GetData() *PagcorDailyTaxCountDataReq {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *PagcorDailyTaxCountReq) GetSortField() []string {
	if x != nil {
		return x.SortField
	}
	return nil
}

func (x *PagcorDailyTaxCountReq) GetSortKey() string {
	if x != nil {
		return x.SortKey
	}
	return ""
}

type PagcorDailyTaxCountDataReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TimeType            int64   `protobuf:"varint,1,opt,name=timeType,proto3" json:"timeType,omitempty"`
	StartTime           int64   `protobuf:"varint,2,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime             int64   `protobuf:"varint,3,opt,name=endTime,proto3" json:"endTime,omitempty"`
	ProviderSubtypeList []int64 `protobuf:"varint,4,rep,packed,name=providerSubtypeList,proto3" json:"providerSubtypeList,omitempty"`
}

func (x *PagcorDailyTaxCountDataReq) Reset() {
	*x = PagcorDailyTaxCountDataReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[276]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PagcorDailyTaxCountDataReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PagcorDailyTaxCountDataReq) ProtoMessage() {}

func (x *PagcorDailyTaxCountDataReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[276]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PagcorDailyTaxCountDataReq.ProtoReflect.Descriptor instead.
func (*PagcorDailyTaxCountDataReq) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{276}
}

func (x *PagcorDailyTaxCountDataReq) GetTimeType() int64 {
	if x != nil {
		return x.TimeType
	}
	return 0
}

func (x *PagcorDailyTaxCountDataReq) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *PagcorDailyTaxCountDataReq) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *PagcorDailyTaxCountDataReq) GetProviderSubtypeList() []int64 {
	if x != nil {
		return x.ProviderSubtypeList
	}
	return nil
}

type PagcorDailyTaxCountResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32                    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string                   `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *PagcorDailyTaxCountData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *PagcorDailyTaxCountResp) Reset() {
	*x = PagcorDailyTaxCountResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[277]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PagcorDailyTaxCountResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PagcorDailyTaxCountResp) ProtoMessage() {}

func (x *PagcorDailyTaxCountResp) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[277]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PagcorDailyTaxCountResp.ProtoReflect.Descriptor instead.
func (*PagcorDailyTaxCountResp) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{277}
}

func (x *PagcorDailyTaxCountResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *PagcorDailyTaxCountResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *PagcorDailyTaxCountResp) GetData() *PagcorDailyTaxCountData {
	if x != nil {
		return x.Data
	}
	return nil
}

type PagcorDailyTaxCountData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total         string                         `protobuf:"bytes,1,opt,name=total,proto3" json:"total,omitempty"`
	DataList      []*PagcorDailyTaxCountDataItem `protobuf:"bytes,2,rep,name=dataList,proto3" json:"dataList,omitempty"`
	ValidTotal    string                         `protobuf:"bytes,3,opt,name=validTotal,proto3" json:"validTotal,omitempty"`
	ValidDataList []*PagcorDailyTaxCountDataItem `protobuf:"bytes,4,rep,name=validDataList,proto3" json:"validDataList,omitempty"`
}

func (x *PagcorDailyTaxCountData) Reset() {
	*x = PagcorDailyTaxCountData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[278]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PagcorDailyTaxCountData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PagcorDailyTaxCountData) ProtoMessage() {}

func (x *PagcorDailyTaxCountData) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[278]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PagcorDailyTaxCountData.ProtoReflect.Descriptor instead.
func (*PagcorDailyTaxCountData) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{278}
}

func (x *PagcorDailyTaxCountData) GetTotal() string {
	if x != nil {
		return x.Total
	}
	return ""
}

func (x *PagcorDailyTaxCountData) GetDataList() []*PagcorDailyTaxCountDataItem {
	if x != nil {
		return x.DataList
	}
	return nil
}

func (x *PagcorDailyTaxCountData) GetValidTotal() string {
	if x != nil {
		return x.ValidTotal
	}
	return ""
}

func (x *PagcorDailyTaxCountData) GetValidDataList() []*PagcorDailyTaxCountDataItem {
	if x != nil {
		return x.ValidDataList
	}
	return nil
}

type PagcorDailyTaxCountDataItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name          string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	TaxCountTotal string `protobuf:"bytes,2,opt,name=taxCountTotal,proto3" json:"taxCountTotal,omitempty"`
}

func (x *PagcorDailyTaxCountDataItem) Reset() {
	*x = PagcorDailyTaxCountDataItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[279]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PagcorDailyTaxCountDataItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PagcorDailyTaxCountDataItem) ProtoMessage() {}

func (x *PagcorDailyTaxCountDataItem) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[279]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PagcorDailyTaxCountDataItem.ProtoReflect.Descriptor instead.
func (*PagcorDailyTaxCountDataItem) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{279}
}

func (x *PagcorDailyTaxCountDataItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PagcorDailyTaxCountDataItem) GetTaxCountTotal() string {
	if x != nil {
		return x.TaxCountTotal
	}
	return ""
}

type LogoutReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token *string `protobuf:"bytes,1,opt,name=token,proto3,oneof" json:"token,omitempty"`
}

func (x *LogoutReq) Reset() {
	*x = LogoutReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[280]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogoutReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogoutReq) ProtoMessage() {}

func (x *LogoutReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[280]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogoutReq.ProtoReflect.Descriptor instead.
func (*LogoutReq) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{280}
}

func (x *LogoutReq) GetToken() string {
	if x != nil && x.Token != nil {
		return *x.Token
	}
	return ""
}

type LogoutResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data bool   `protobuf:"varint,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *LogoutResp) Reset() {
	*x = LogoutResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[281]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogoutResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogoutResp) ProtoMessage() {}

func (x *LogoutResp) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[281]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogoutResp.ProtoReflect.Descriptor instead.
func (*LogoutResp) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{281}
}

func (x *LogoutResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *LogoutResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *LogoutResp) GetData() bool {
	if x != nil {
		return x.Data
	}
	return false
}

type TotalAwardAmountReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username    string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	SupUsername string `protobuf:"bytes,2,opt,name=supUsername,proto3" json:"supUsername,omitempty"`
	StartTime   int64  `protobuf:"varint,3,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime     int64  `protobuf:"varint,4,opt,name=endTime,proto3" json:"endTime,omitempty"`
}

func (x *TotalAwardAmountReq) Reset() {
	*x = TotalAwardAmountReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[282]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TotalAwardAmountReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TotalAwardAmountReq) ProtoMessage() {}

func (x *TotalAwardAmountReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[282]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TotalAwardAmountReq.ProtoReflect.Descriptor instead.
func (*TotalAwardAmountReq) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{282}
}

func (x *TotalAwardAmountReq) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *TotalAwardAmountReq) GetSupUsername() string {
	if x != nil {
		return x.SupUsername
	}
	return ""
}

func (x *TotalAwardAmountReq) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *TotalAwardAmountReq) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

type TotalAwardAmountResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data string `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *TotalAwardAmountResp) Reset() {
	*x = TotalAwardAmountResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[283]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TotalAwardAmountResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TotalAwardAmountResp) ProtoMessage() {}

func (x *TotalAwardAmountResp) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[283]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TotalAwardAmountResp.ProtoReflect.Descriptor instead.
func (*TotalAwardAmountResp) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{283}
}

func (x *TotalAwardAmountResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *TotalAwardAmountResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *TotalAwardAmountResp) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

type RecordPageListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current   int64                  `protobuf:"varint,1,opt,name=current,proto3" json:"current,omitempty"`
	Size      int64                  `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	Data      *RecordPageListDataReq `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	SortField []string               `protobuf:"bytes,4,rep,name=sortField,proto3" json:"sortField,omitempty"`
	SortKey   string                 `protobuf:"bytes,5,opt,name=sortKey,proto3" json:"sortKey,omitempty"`
}

func (x *RecordPageListReq) Reset() {
	*x = RecordPageListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[284]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecordPageListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordPageListReq) ProtoMessage() {}

func (x *RecordPageListReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[284]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecordPageListReq.ProtoReflect.Descriptor instead.
func (*RecordPageListReq) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{284}
}

func (x *RecordPageListReq) GetCurrent() int64 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *RecordPageListReq) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *RecordPageListReq) GetData() *RecordPageListDataReq {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *RecordPageListReq) GetSortField() []string {
	if x != nil {
		return x.SortField
	}
	return nil
}

func (x *RecordPageListReq) GetSortKey() string {
	if x != nil {
		return x.SortKey
	}
	return ""
}

type RecordPageListDataReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username    *string `protobuf:"bytes,1,opt,name=username,proto3,oneof" json:"username,omitempty"`
	SupUsername *string `protobuf:"bytes,2,opt,name=supUsername,proto3,oneof" json:"supUsername,omitempty"`
	StartTime   *int64  `protobuf:"varint,3,opt,name=startTime,proto3,oneof" json:"startTime,omitempty"`
	EndTime     *int64  `protobuf:"varint,4,opt,name=endTime,proto3,oneof" json:"endTime,omitempty"`
}

func (x *RecordPageListDataReq) Reset() {
	*x = RecordPageListDataReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[285]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecordPageListDataReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordPageListDataReq) ProtoMessage() {}

func (x *RecordPageListDataReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[285]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecordPageListDataReq.ProtoReflect.Descriptor instead.
func (*RecordPageListDataReq) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{285}
}

func (x *RecordPageListDataReq) GetUsername() string {
	if x != nil && x.Username != nil {
		return *x.Username
	}
	return ""
}

func (x *RecordPageListDataReq) GetSupUsername() string {
	if x != nil && x.SupUsername != nil {
		return *x.SupUsername
	}
	return ""
}

func (x *RecordPageListDataReq) GetStartTime() int64 {
	if x != nil && x.StartTime != nil {
		return *x.StartTime
	}
	return 0
}

func (x *RecordPageListDataReq) GetEndTime() int64 {
	if x != nil && x.EndTime != nil {
		return *x.EndTime
	}
	return 0
}

type RecordPageListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32               `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string              `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *RecordPageListData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *RecordPageListResp) Reset() {
	*x = RecordPageListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[286]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecordPageListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordPageListResp) ProtoMessage() {}

func (x *RecordPageListResp) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[286]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecordPageListResp.ProtoReflect.Descriptor instead.
func (*RecordPageListResp) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{286}
}

func (x *RecordPageListResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *RecordPageListResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *RecordPageListResp) GetData() *RecordPageListData {
	if x != nil {
		return x.Data
	}
	return nil
}

type RecordPageListData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current int64                     `protobuf:"varint,1,opt,name=current,proto3" json:"current,omitempty"`
	Pages   int64                     `protobuf:"varint,2,opt,name=pages,proto3" json:"pages,omitempty"`
	Size    int64                     `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
	Total   int64                     `protobuf:"varint,4,opt,name=total,proto3" json:"total,omitempty"`
	List    []*RecordPageListDataItem `protobuf:"bytes,5,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *RecordPageListData) Reset() {
	*x = RecordPageListData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[287]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecordPageListData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordPageListData) ProtoMessage() {}

func (x *RecordPageListData) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[287]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecordPageListData.ProtoReflect.Descriptor instead.
func (*RecordPageListData) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{287}
}

func (x *RecordPageListData) GetCurrent() int64 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *RecordPageListData) GetPages() int64 {
	if x != nil {
		return x.Pages
	}
	return 0
}

func (x *RecordPageListData) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *RecordPageListData) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *RecordPageListData) GetList() []*RecordPageListDataItem {
	if x != nil {
		return x.List
	}
	return nil
}

type RecordPageListDataItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId      int64   `protobuf:"varint,2,opt,name=userId,proto3" json:"userId,omitempty"`
	Username    string  `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`
	SupUsername string  `protobuf:"bytes,4,opt,name=supUsername,proto3" json:"supUsername,omitempty"`
	Days        int64   `protobuf:"varint,5,opt,name=days,proto3" json:"days,omitempty"`
	AwardAmount float32 `protobuf:"fixed32,6,opt,name=awardAmount,proto3" json:"awardAmount,omitempty"`
	AuditTimes  int64   `protobuf:"varint,7,opt,name=auditTimes,proto3" json:"auditTimes,omitempty"`
	CheckInAt   int64   `protobuf:"varint,8,opt,name=checkInAt,proto3" json:"checkInAt,omitempty"`
	Status      int64   `protobuf:"varint,9,opt,name=status,proto3" json:"status,omitempty"`
	PromotionId int64   `protobuf:"varint,10,opt,name=promotionId,proto3" json:"promotionId,omitempty"`
}

func (x *RecordPageListDataItem) Reset() {
	*x = RecordPageListDataItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[288]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecordPageListDataItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordPageListDataItem) ProtoMessage() {}

func (x *RecordPageListDataItem) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[288]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecordPageListDataItem.ProtoReflect.Descriptor instead.
func (*RecordPageListDataItem) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{288}
}

func (x *RecordPageListDataItem) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RecordPageListDataItem) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *RecordPageListDataItem) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *RecordPageListDataItem) GetSupUsername() string {
	if x != nil {
		return x.SupUsername
	}
	return ""
}

func (x *RecordPageListDataItem) GetDays() int64 {
	if x != nil {
		return x.Days
	}
	return 0
}

func (x *RecordPageListDataItem) GetAwardAmount() float32 {
	if x != nil {
		return x.AwardAmount
	}
	return 0
}

func (x *RecordPageListDataItem) GetAuditTimes() int64 {
	if x != nil {
		return x.AuditTimes
	}
	return 0
}

func (x *RecordPageListDataItem) GetCheckInAt() int64 {
	if x != nil {
		return x.CheckInAt
	}
	return 0
}

func (x *RecordPageListDataItem) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *RecordPageListDataItem) GetPromotionId() int64 {
	if x != nil {
		return x.PromotionId
	}
	return 0
}

type CheckInRecordDetailReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CheckInRecordDetailReq) Reset() {
	*x = CheckInRecordDetailReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[289]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckInRecordDetailReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckInRecordDetailReq) ProtoMessage() {}

func (x *CheckInRecordDetailReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[289]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckInRecordDetailReq.ProtoReflect.Descriptor instead.
func (*CheckInRecordDetailReq) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{289}
}

func (x *CheckInRecordDetailReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type CheckInRecordDetailResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data string `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *CheckInRecordDetailResp) Reset() {
	*x = CheckInRecordDetailResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[290]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckInRecordDetailResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckInRecordDetailResp) ProtoMessage() {}

func (x *CheckInRecordDetailResp) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[290]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckInRecordDetailResp.ProtoReflect.Descriptor instead.
func (*CheckInRecordDetailResp) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{290}
}

func (x *CheckInRecordDetailResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *CheckInRecordDetailResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *CheckInRecordDetailResp) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

type PromotionBlogListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current   int64                     `protobuf:"varint,1,opt,name=current,proto3" json:"current,omitempty"`
	Size      int64                     `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	Data      *PromotionBlogListDataReq `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	SortField []string                  `protobuf:"bytes,4,rep,name=sortField,proto3" json:"sortField,omitempty"`
	SortKey   string                    `protobuf:"bytes,5,opt,name=sortKey,proto3" json:"sortKey,omitempty"`
}

func (x *PromotionBlogListReq) Reset() {
	*x = PromotionBlogListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[291]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PromotionBlogListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PromotionBlogListReq) ProtoMessage() {}

func (x *PromotionBlogListReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[291]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PromotionBlogListReq.ProtoReflect.Descriptor instead.
func (*PromotionBlogListReq) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{291}
}

func (x *PromotionBlogListReq) GetCurrent() int64 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *PromotionBlogListReq) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *PromotionBlogListReq) GetData() *PromotionBlogListDataReq {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *PromotionBlogListReq) GetSortField() []string {
	if x != nil {
		return x.SortField
	}
	return nil
}

func (x *PromotionBlogListReq) GetSortKey() string {
	if x != nil {
		return x.SortKey
	}
	return ""
}

type PromotionBlogListDataReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Category  string `protobuf:"bytes,1,opt,name=category,proto3" json:"category,omitempty"`
	Lang      string `protobuf:"bytes,2,opt,name=lang,proto3" json:"lang,omitempty"`
	Status    string `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	StartTime int64  `protobuf:"varint,4,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime   int64  `protobuf:"varint,5,opt,name=endTime,proto3" json:"endTime,omitempty"`
}

func (x *PromotionBlogListDataReq) Reset() {
	*x = PromotionBlogListDataReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[292]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PromotionBlogListDataReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PromotionBlogListDataReq) ProtoMessage() {}

func (x *PromotionBlogListDataReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[292]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PromotionBlogListDataReq.ProtoReflect.Descriptor instead.
func (*PromotionBlogListDataReq) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{292}
}

func (x *PromotionBlogListDataReq) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *PromotionBlogListDataReq) GetLang() string {
	if x != nil {
		return x.Lang
	}
	return ""
}

func (x *PromotionBlogListDataReq) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *PromotionBlogListDataReq) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *PromotionBlogListDataReq) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

type PromotionBlogListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int64                      `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string                     `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *PromotionBlogListDataResp `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *PromotionBlogListResp) Reset() {
	*x = PromotionBlogListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[293]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PromotionBlogListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PromotionBlogListResp) ProtoMessage() {}

func (x *PromotionBlogListResp) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[293]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PromotionBlogListResp.ProtoReflect.Descriptor instead.
func (*PromotionBlogListResp) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{293}
}

func (x *PromotionBlogListResp) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *PromotionBlogListResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *PromotionBlogListResp) GetData() *PromotionBlogListDataResp {
	if x != nil {
		return x.Data
	}
	return nil
}

type PromotionBlogListDataResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current   string                           `protobuf:"bytes,1,opt,name=current,proto3" json:"current,omitempty"`
	Pages     string                           `protobuf:"bytes,2,opt,name=pages,proto3" json:"pages,omitempty"`
	Size      string                           `protobuf:"bytes,3,opt,name=size,proto3" json:"size,omitempty"`
	Total     string                           `protobuf:"bytes,4,opt,name=total,proto3" json:"total,omitempty"`
	SortId    string                           `protobuf:"bytes,5,opt,name=sortId,proto3" json:"sortId,omitempty"`
	SortValue string                           `protobuf:"bytes,6,opt,name=sortValue,proto3" json:"sortValue,omitempty"`
	List      []*PromotionBlogListDataItemResp `protobuf:"bytes,7,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *PromotionBlogListDataResp) Reset() {
	*x = PromotionBlogListDataResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[294]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PromotionBlogListDataResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PromotionBlogListDataResp) ProtoMessage() {}

func (x *PromotionBlogListDataResp) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[294]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PromotionBlogListDataResp.ProtoReflect.Descriptor instead.
func (*PromotionBlogListDataResp) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{294}
}

func (x *PromotionBlogListDataResp) GetCurrent() string {
	if x != nil {
		return x.Current
	}
	return ""
}

func (x *PromotionBlogListDataResp) GetPages() string {
	if x != nil {
		return x.Pages
	}
	return ""
}

func (x *PromotionBlogListDataResp) GetSize() string {
	if x != nil {
		return x.Size
	}
	return ""
}

func (x *PromotionBlogListDataResp) GetTotal() string {
	if x != nil {
		return x.Total
	}
	return ""
}

func (x *PromotionBlogListDataResp) GetSortId() string {
	if x != nil {
		return x.SortId
	}
	return ""
}

func (x *PromotionBlogListDataResp) GetSortValue() string {
	if x != nil {
		return x.SortValue
	}
	return ""
}

func (x *PromotionBlogListDataResp) GetList() []*PromotionBlogListDataItemResp {
	if x != nil {
		return x.List
	}
	return nil
}

type PromotionBlogListDataItemResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Lang      string `protobuf:"bytes,2,opt,name=lang,proto3" json:"lang,omitempty"`
	Category  string `protobuf:"bytes,3,opt,name=category,proto3" json:"category,omitempty"`
	Image     string `protobuf:"bytes,4,opt,name=image,proto3" json:"image,omitempty"`
	Title     string `protobuf:"bytes,5,opt,name=title,proto3" json:"title,omitempty"`
	TitleSub  string `protobuf:"bytes,6,opt,name=title_sub,json=titleSub,proto3" json:"title_sub,omitempty"`
	Content   string `protobuf:"bytes,7,opt,name=content,proto3" json:"content,omitempty"`
	Recommend int64  `protobuf:"varint,8,opt,name=recommend,proto3" json:"recommend,omitempty"` // 推荐 0-否 1-是
	Status    int64  `protobuf:"varint,9,opt,name=status,proto3" json:"status,omitempty"`       // 状态 1-启用 0-庭院
	Sort      int64  `protobuf:"varint,10,opt,name=sort,proto3" json:"sort,omitempty"`
	CreateBy  string `protobuf:"bytes,11,opt,name=createBy,proto3" json:"createBy,omitempty"`
	UpdateBy  string `protobuf:"bytes,12,opt,name=updateBy,proto3" json:"updateBy,omitempty"`
	CreatedAt int64  `protobuf:"varint,13,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt int64  `protobuf:"varint,14,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
}

func (x *PromotionBlogListDataItemResp) Reset() {
	*x = PromotionBlogListDataItemResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[295]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PromotionBlogListDataItemResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PromotionBlogListDataItemResp) ProtoMessage() {}

func (x *PromotionBlogListDataItemResp) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[295]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PromotionBlogListDataItemResp.ProtoReflect.Descriptor instead.
func (*PromotionBlogListDataItemResp) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{295}
}

func (x *PromotionBlogListDataItemResp) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PromotionBlogListDataItemResp) GetLang() string {
	if x != nil {
		return x.Lang
	}
	return ""
}

func (x *PromotionBlogListDataItemResp) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *PromotionBlogListDataItemResp) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *PromotionBlogListDataItemResp) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *PromotionBlogListDataItemResp) GetTitleSub() string {
	if x != nil {
		return x.TitleSub
	}
	return ""
}

func (x *PromotionBlogListDataItemResp) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *PromotionBlogListDataItemResp) GetRecommend() int64 {
	if x != nil {
		return x.Recommend
	}
	return 0
}

func (x *PromotionBlogListDataItemResp) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *PromotionBlogListDataItemResp) GetSort() int64 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *PromotionBlogListDataItemResp) GetCreateBy() string {
	if x != nil {
		return x.CreateBy
	}
	return ""
}

func (x *PromotionBlogListDataItemResp) GetUpdateBy() string {
	if x != nil {
		return x.UpdateBy
	}
	return ""
}

func (x *PromotionBlogListDataItemResp) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *PromotionBlogListDataItemResp) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

type GetPromotionsCodeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetPromotionsCodeReq) Reset() {
	*x = GetPromotionsCodeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[296]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPromotionsCodeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPromotionsCodeReq) ProtoMessage() {}

func (x *GetPromotionsCodeReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[296]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPromotionsCodeReq.ProtoReflect.Descriptor instead.
func (*GetPromotionsCodeReq) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{296}
}

type GetPromotionsCodeResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int64    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string   `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data []string `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *GetPromotionsCodeResp) Reset() {
	*x = GetPromotionsCodeResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[297]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPromotionsCodeResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPromotionsCodeResp) ProtoMessage() {}

func (x *GetPromotionsCodeResp) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[297]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPromotionsCodeResp.ProtoReflect.Descriptor instead.
func (*GetPromotionsCodeResp) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{297}
}

func (x *GetPromotionsCodeResp) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetPromotionsCodeResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GetPromotionsCodeResp) GetData() []string {
	if x != nil {
		return x.Data
	}
	return nil
}

// 点击事件上报
type EventReportsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid       int64  `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Username  string `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	EventType int64  `protobuf:"varint,3,opt,name=eventType,proto3" json:"eventType,omitempty"`
	IpAddress string `protobuf:"bytes,4,opt,name=ipAddress,proto3" json:"ipAddress,omitempty"`
	DeviceId  string `protobuf:"bytes,5,opt,name=deviceId,proto3" json:"deviceId,omitempty"`
}

func (x *EventReportsReq) Reset() {
	*x = EventReportsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[298]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventReportsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventReportsReq) ProtoMessage() {}

func (x *EventReportsReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[298]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventReportsReq.ProtoReflect.Descriptor instead.
func (*EventReportsReq) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{298}
}

func (x *EventReportsReq) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *EventReportsReq) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *EventReportsReq) GetEventType() int64 {
	if x != nil {
		return x.EventType
	}
	return 0
}

func (x *EventReportsReq) GetIpAddress() string {
	if x != nil {
		return x.IpAddress
	}
	return ""
}

func (x *EventReportsReq) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

type EventReportsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int64  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *EventReportsResp) Reset() {
	*x = EventReportsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmsrpc_proto_msgTypes[299]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventReportsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventReportsResp) ProtoMessage() {}

func (x *EventReportsResp) ProtoReflect() protoreflect.Message {
	mi := &file_cmsrpc_proto_msgTypes[299]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventReportsResp.ProtoReflect.Descriptor instead.
func (*EventReportsResp) Descriptor() ([]byte, []int) {
	return file_cmsrpc_proto_rawDescGZIP(), []int{299}
}

func (x *EventReportsResp) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *EventReportsResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

var File_cmsrpc_proto protoreflect.FileDescriptor

var file_cmsrpc_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06,
	0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x22, 0x66, 0x0a, 0x0e, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x2e,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x63,
	0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x5e,
	0x0a, 0x0c, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6d, 0x73, 0x67, 0x12, 0x28, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x61, 0x6d, 0x65,
	0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x21,
	0x0a, 0x0b, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x73, 0x69, 0x67, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x73, 0x69, 0x67,
	0x6e, 0x22, 0x66, 0x0a, 0x12, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d,
	0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x2a, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63, 0x6d,
	0x73, 0x72, 0x70, 0x63, 0x2e, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x4f, 0x0a, 0x0b, 0x48, 0x65, 0x6c,
	0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x67, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x73, 0x69, 0x67, 0x6e, 0x22, 0xa5, 0x01, 0x0a, 0x13, 0x53,
	0x61, 0x76, 0x65, 0x48, 0x65, 0x6c, 0x70, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x74, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x74, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x69, 0x64, 0x22, 0x50, 0x0a, 0x14, 0x53, 0x61, 0x76, 0x65, 0x48, 0x65, 0x6c, 0x70, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67,
	0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x22, 0x18, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x48, 0x65, 0x6c, 0x70, 0x54,
	0x79, 0x70, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x78,
	0x0a, 0x17, 0x47, 0x65, 0x74, 0x48, 0x65, 0x6c, 0x70, 0x54, 0x79, 0x70, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12,
	0x37, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e,
	0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x48, 0x65, 0x6c, 0x70, 0x54, 0x79,
	0x70, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xad, 0x01, 0x0a, 0x1b, 0x47, 0x65, 0x74,
	0x48, 0x65, 0x6c, 0x70, 0x54, 0x79, 0x70, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67,
	0x75, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67,
	0x75, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x12, 0x0a, 0x04,
	0x73, 0x6f, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0xa4, 0x01, 0x0a, 0x12, 0x41, 0x64, 0x64,
	0x48, 0x65, 0x6c, 0x70, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x74,
	0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74,
	0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65,
	0x55, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65,
	0x55, 0x72, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22,
	0x4f, 0x0a, 0x13, 0x41, 0x64, 0x64, 0x48, 0x65, 0x6c, 0x70, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73,
	0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x12, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x22, 0xa5, 0x01, 0x0a, 0x13, 0x45, 0x64, 0x69, 0x74, 0x48, 0x65, 0x6c, 0x70, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67,
	0x75, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67,
	0x75, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x12, 0x0a, 0x04,
	0x73, 0x6f, 0x72, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x50, 0x0a, 0x14, 0x45, 0x64, 0x69, 0x74,
	0x48, 0x65, 0x6c, 0x70, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x32, 0x0a, 0x1e, 0x44, 0x65,
	0x6c, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x79, 0x49, 0x6e,
	0x66, 0x6f, 0x43, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03,
	0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x5b,
	0x0a, 0x1f, 0x44, 0x65, 0x6c, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69,
	0x66, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x43, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xa6, 0x03, 0x0a, 0x0a,
	0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61,
	0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61,
	0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x69, 0x6d, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x69, 0x6d, 0x67,
	0x12, 0x12, 0x0a, 0x04, 0x68, 0x72, 0x65, 0x66, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x68, 0x72, 0x65, 0x66, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c,
	0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x22, 0x0a, 0x0c, 0x6f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x6c, 0x6f, 0x74, 0x49, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x73, 0x6c, 0x6f, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x61, 0x6d, 0x65, 0x49, 0x64,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x67, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x12, 0x20,
	0x0a, 0x0b, 0x67, 0x61, 0x6d, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0b, 0x67, 0x61, 0x6d, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x70, 0x6c, 0x61, 0x74, 0x49, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x70, 0x6c, 0x61, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6a, 0x75, 0x6d, 0x70,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6a, 0x75, 0x6d, 0x70,
	0x54, 0x79, 0x70, 0x65, 0x22, 0x3f, 0x0a, 0x11, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x67, 0x61, 0x6d,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x67, 0x61, 0x6d,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x5d, 0x0a, 0x0e, 0x4c, 0x61, 0x64, 0x64, 0x65, 0x72, 0x4c,
	0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x73, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x69, 0x73, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x61, 0x74, 0x65, 0x64, 0x22, 0x52, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6d, 0x73, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xef, 0x02, 0x0a, 0x08, 0x42, 0x6c, 0x6f,
	0x67, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x5f, 0x73, 0x75, 0x62, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x53, 0x75, 0x62, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x63, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x72, 0x65, 0x63,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12,
	0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x6f,
	0x72, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x62, 0x79, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12,
	0x1b, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x62, 0x79, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1d, 0x0a, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x66, 0x0a, 0x1c, 0x46, 0x72,
	0x6f, 0x6e, 0x74, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x79, 0x43, 0x6d, 0x73, 0x50, 0x61,
	0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67,
	0x12, 0x20, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c,
	0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x22, 0x57, 0x0a, 0x1b, 0x41, 0x64, 0x64, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x43, 0x6c,
	0x61, 0x73, 0x73, 0x69, 0x66, 0x79, 0x43, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xe0, 0x01, 0x0a, 0x0c,
	0x48, 0x65, 0x6c, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x44, 0x61, 0x74, 0x61, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x24, 0x0a, 0x04, 0x6c, 0x69,
	0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70,
	0x63, 0x2e, 0x48, 0x65, 0x6c, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x65, 0x73, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x61, 0x67, 0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08,
	0x73, 0x63, 0x72, 0x6f, 0x6c, 0x6c, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x73, 0x63, 0x72, 0x6f, 0x6c, 0x6c, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x6f, 0x72, 0x74,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x6f, 0x72,
	0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x72, 0x74, 0x49, 0x64,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x72, 0x74, 0x49, 0x64, 0x22, 0x6a,
	0x0a, 0x0a, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1a, 0x0a, 0x08,
	0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x22, 0x51, 0x0a, 0x15, 0x41, 0x64,
	0x64, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x62, 0x0a,
	0x0e, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x2a, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x4e, 0x6f, 0x74,
	0x69, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x22, 0x3a, 0x0a, 0x14, 0x64, 0x65, 0x6c, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x58, 0x0a,
	0x1c, 0x45, 0x64, 0x69, 0x74, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69,
	0x66, 0x79, 0x43, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6d, 0x73, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x8c, 0x01, 0x0a, 0x0c, 0x48, 0x65, 0x6c, 0x70,
	0x54, 0x79, 0x70, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x79, 0x70, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x79, 0x70, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c,
	0x12, 0x34, 0x0a, 0x0c, 0x6c, 0x69, 0x73, 0x74, 0x48, 0x65, 0x6c, 0x70, 0x49, 0x6e, 0x66, 0x6f,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e,
	0x48, 0x65, 0x6c, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0c, 0x6c, 0x69, 0x73, 0x74, 0x48, 0x65,
	0x6c, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x7a, 0x0a, 0x0a, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x69,
	0x7a, 0x65, 0x12, 0x2a, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x12,
	0x0a, 0x04, 0x73, 0x69, 0x67, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x73, 0x69,
	0x67, 0x6e, 0x22, 0x52, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x73, 0x67, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x67, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x73, 0x69, 0x67, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x22, 0x50, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6d, 0x73, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x92, 0x04, 0x0a, 0x12, 0x41, 0x64, 0x64,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x18, 0x0a, 0x07, 0x69, 0x73, 0x50, 0x6f, 0x70, 0x55, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x07, 0x69, 0x73, 0x50, 0x6f, 0x70, 0x55, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x73, 0x41,
	0x75, 0x74, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x69, 0x73, 0x41, 0x75, 0x74,
	0x6f, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6c, 0x61, 0x6e, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x67, 0x61, 0x6d, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x67, 0x61, 0x6d, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x6c, 0x6f,
	0x77, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x66, 0x6c,
	0x6f, 0x77, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x61, 0x74, 0x65, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x72, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x61, 0x78, 0x43, 0x6f, 0x69, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6d, 0x61,
	0x78, 0x43, 0x6f, 0x69, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x64, 0x65, 0x5a, 0x68, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x63, 0x6f, 0x64, 0x65, 0x5a, 0x68, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x6d, 0x67,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x69, 0x6d, 0x67, 0x12, 0x20, 0x0a, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a,
	0x06, 0x6c, 0x61, 0x64, 0x64, 0x65, 0x72, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6c,
	0x61, 0x64, 0x64, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x12, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x62, 0x6f, 0x6e, 0x75, 0x73, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x62, 0x6f, 0x6e, 0x75,
	0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x24, 0x0a, 0x0d, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5a, 0x68, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5a, 0x68, 0x22, 0x5e, 0x0a,
	0x10, 0x42, 0x6c, 0x6f, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x24, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x42,
	0x6c, 0x6f, 0x67, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x62, 0x0a,
	0x10, 0x48, 0x65, 0x6c, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x28, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x48,
	0x65, 0x6c, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x22, 0x52, 0x0a, 0x16, 0x52, 0x6f, 0x6d, 0x6f, 0x76, 0x65, 0x48, 0x65, 0x6c, 0x70, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73,
	0x67, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x68, 0x0a, 0x13, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d,
	0x73, 0x67, 0x12, 0x2b, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22,
	0xe4, 0x01, 0x0a, 0x0e, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65,
	0x12, 0x26, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x49, 0x74,
	0x65, 0x6d, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x14,
	0x0a, 0x05, 0x70, 0x61, 0x67, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70,
	0x61, 0x67, 0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x63, 0x72, 0x6f, 0x6c, 0x6c, 0x49, 0x64,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x63, 0x72, 0x6f, 0x6c, 0x6c, 0x49, 0x64,
	0x12, 0x1c, 0x0a, 0x09, 0x73, 0x6f, 0x72, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x6f, 0x72, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x6f, 0x72, 0x74, 0x49, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x73, 0x6f, 0x72, 0x74, 0x49, 0x64, 0x22, 0x25, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x98, 0x02,
	0x0a, 0x0e, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x17, 0x0a, 0x07,
	0x63, 0x6f, 0x64, 0x65, 0x5f, 0x7a, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63,
	0x6f, 0x64, 0x65, 0x5a, 0x68, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x6d, 0x67, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x69, 0x6d, 0x67, 0x12, 0x36, 0x0a, 0x0a, 0x6c, 0x61, 0x64, 0x64, 0x65,
	0x72, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63, 0x6d,
	0x73, 0x72, 0x70, 0x63, 0x2e, 0x4c, 0x61, 0x64, 0x64, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x0a, 0x6c, 0x61, 0x64, 0x64, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x1a, 0x0a, 0x08, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e,
	0x64, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x6e,
	0x64, 0x65, 0x64, 0x41, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x73, 0x5f, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x61, 0x74, 0x65, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x69, 0x73, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x64, 0x22, 0xa6, 0x01, 0x0a, 0x0c, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a,
	0x06, 0x63, 0x6f, 0x64, 0x65, 0x5a, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63,
	0x6f, 0x64, 0x65, 0x5a, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d,
	0x65, 0x22, 0xd8, 0x01, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x24, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e,
	0x47, 0x61, 0x6d, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x65, 0x73, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x61, 0x67, 0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x63,
	0x72, 0x6f, 0x6c, 0x6c, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x63,
	0x72, 0x6f, 0x6c, 0x6c, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x6f, 0x72, 0x74, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x6f, 0x72, 0x74, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x72, 0x74, 0x49, 0x64, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x72, 0x74, 0x49, 0x64, 0x22, 0xd5, 0x02, 0x0a,
	0x1b, 0x45, 0x64, 0x69, 0x74, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69,
	0x66, 0x79, 0x43, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x73, 0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74,
	0x12, 0x18, 0x0a, 0x07, 0x6c, 0x6f, 0x67, 0x6f, 0x55, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6c, 0x6f, 0x67, 0x6f, 0x55, 0x72, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x65, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x67, 0x61, 0x6d, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x67, 0x61, 0x6d, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1e,
	0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1c,
	0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1e, 0x0a, 0x0a,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05,
	0x63, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6c, 0x61, 0x6e, 0x67, 0x22, 0x4d, 0x0a, 0x11, 0x41, 0x64, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x63,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12,
	0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x22, 0xc3, 0x01, 0x0a, 0x0f, 0x42, 0x6c, 0x6f, 0x67, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x35, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x42, 0x6c, 0x6f,
	0x67, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x44, 0x61, 0x74,
	0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04,
	0x73, 0x69, 0x67, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x73, 0x69, 0x67, 0x6e,
	0x1a, 0x37, 0x0a, 0x09, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x92, 0x05, 0x0a, 0x0c, 0x41, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x63, 0x6f, 0x64, 0x65, 0x5a, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x63, 0x6f, 0x64, 0x65, 0x5a, 0x68, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x6d, 0x67, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x69, 0x6d, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x41, 0x74, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x41, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x61, 0x64, 0x64, 0x65, 0x72,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6c, 0x61, 0x64, 0x64, 0x65, 0x72, 0x12, 0x1c,
	0x0a, 0x09, 0x66, 0x6c, 0x6f, 0x77, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x09, 0x66, 0x6c, 0x6f, 0x77, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x69, 0x6e, 0x43, 0x6f, 0x69, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x69, 0x6e, 0x43, 0x6f, 0x69, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x61, 0x78, 0x43, 0x6f, 0x69,
	0x6e, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x61, 0x78, 0x43, 0x6f, 0x69, 0x6e,
	0x12, 0x12, 0x0a, 0x04, 0x72, 0x61, 0x74, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x72, 0x61, 0x74, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x4e,
	0x75, 0x6d, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x64, 0x65, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x4e, 0x75, 0x6d, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x75, 0x62, 0x43, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x10, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x73, 0x75, 0x62,
	0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x77, 0x65, 0x65, 0x6b,
	0x64, 0x61, 0x79, 0x73, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x77, 0x65, 0x65, 0x6b,
	0x64, 0x61, 0x79, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x73, 0x41, 0x75, 0x74, 0x6f, 0x18, 0x12,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x73, 0x41, 0x75, 0x74, 0x6f, 0x12, 0x2a, 0x0a, 0x10,
	0x63, 0x6c, 0x65, 0x61, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x4d, 0x69, 0x78, 0x43, 0x6f, 0x69, 0x6e,
	0x18, 0x13, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x63, 0x6c, 0x65, 0x61, 0x72, 0x43, 0x6f, 0x64,
	0x65, 0x4d, 0x69, 0x78, 0x43, 0x6f, 0x69, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74,
	0x18, 0x14, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x1a, 0x0a, 0x08,
	0x67, 0x61, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x67, 0x61, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x16, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x61,
	0x6e, 0x67, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x22, 0x4f,
	0x0a, 0x13, 0x41, 0x64, 0x64, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22,
	0x51, 0x0a, 0x15, 0x64, 0x65, 0x6c, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x12,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x22, 0x9e, 0x01, 0x0a, 0x10, 0x41, 0x64, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6c,
	0x61, 0x6e, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x12,
	0x12, 0x0a, 0x04, 0x75, 0x69, 0x64, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75,
	0x69, 0x64, 0x73, 0x22, 0xe8, 0x01, 0x0a, 0x10, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79,
	0x44, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x28, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x65, 0x73, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x61, 0x67, 0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08,
	0x73, 0x63, 0x72, 0x6f, 0x6c, 0x6c, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x73, 0x63, 0x72, 0x6f, 0x6c, 0x6c, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x6f, 0x72, 0x74,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x6f, 0x72,
	0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x72, 0x74, 0x49, 0x64,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x72, 0x74, 0x49, 0x64, 0x22, 0xe0,
	0x01, 0x0a, 0x08, 0x48, 0x65, 0x6c, 0x70, 0x44, 0x61, 0x74, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x28, 0x0a, 0x04, 0x6c, 0x69, 0x73,
	0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63,
	0x2e, 0x48, 0x65, 0x6c, 0x70, 0x54, 0x79, 0x70, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x6c,
	0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x67,
	0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x61, 0x67, 0x65, 0x73, 0x12,
	0x1a, 0x0a, 0x08, 0x73, 0x63, 0x72, 0x6f, 0x6c, 0x6c, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x73, 0x63, 0x72, 0x6f, 0x6c, 0x6c, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x73,
	0x6f, 0x72, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x73, 0x6f, 0x72, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x72,
	0x74, 0x49, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x72, 0x74, 0x49,
	0x64, 0x22, 0x5a, 0x0a, 0x0c, 0x4c, 0x61, 0x6d, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x24, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x4c,
	0x61, 0x6d, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xcf, 0x01,
	0x0a, 0x0b, 0x4d, 0x73, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x73, 0x52,
	0x65, 0x61, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x73, 0x52, 0x65, 0x61,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x1c, 0x0a,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x72,
	0x65, 0x61, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x72, 0x65, 0x61, 0x64, 0x22,
	0xbf, 0x02, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x6f, 0x74, 0x69, 0x63,
	0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x6f, 0x74, 0x69, 0x63,
	0x65, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x69, 0x64, 0x73, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x69, 0x64, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x6f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x12, 0x0a,
	0x04, 0x6c, 0x61, 0x6e, 0x67, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x61, 0x6e,
	0x67, 0x22, 0x2e, 0x0a, 0x1a, 0x44, 0x65, 0x6c, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x43, 0x6c, 0x61,
	0x73, 0x73, 0x69, 0x66, 0x79, 0x43, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x05, 0x52, 0x03, 0x69, 0x64,
	0x73, 0x22, 0x62, 0x0a, 0x10, 0x53, 0x70, 0x6f, 0x72, 0x74, 0x42, 0x65, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x28, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x6d, 0x73, 0x72,
	0x70, 0x63, 0x2e, 0x53, 0x70, 0x6f, 0x72, 0x74, 0x42, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xca, 0x02, 0x0a, 0x08, 0x48, 0x65, 0x6c, 0x70, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x68, 0x65, 0x6c, 0x70, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x68, 0x65, 0x6c, 0x70, 0x54, 0x79, 0x70, 0x65,
	0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79,
	0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x22,
	0x0a, 0x0c, 0x68, 0x65, 0x6c, 0x70, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x68, 0x65, 0x6c, 0x70, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x22, 0xa0, 0x01, 0x0a, 0x0c, 0x47, 0x61, 0x6d, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6c, 0x61, 0x73, 0x73,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6c, 0x61, 0x73,
	0x73, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6c, 0x6f, 0x67, 0x6f, 0x55, 0x72, 0x6c,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x6f, 0x67, 0x6f, 0x55, 0x72, 0x6c, 0x12,
	0x34, 0x0a, 0x0e, 0x67, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x44, 0x74, 0x6f, 0x4c, 0x69, 0x73,
	0x74, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63,
	0x2e, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x0e, 0x67, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x44, 0x74,
	0x6f, 0x4c, 0x69, 0x73, 0x74, 0x22, 0xe6, 0x01, 0x0a, 0x0f, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x27, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x4d,
	0x73, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x65, 0x73, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x61, 0x67, 0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08,
	0x73, 0x63, 0x72, 0x6f, 0x6c, 0x6c, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x73, 0x63, 0x72, 0x6f, 0x6c, 0x6c, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x6f, 0x72, 0x74,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x6f, 0x72,
	0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x72, 0x74, 0x49, 0x64,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x72, 0x74, 0x49, 0x64, 0x22, 0xb6,
	0x02, 0x0a, 0x14, 0x41, 0x64, 0x64, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73,
	0x6f, 0x72, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x6c,
	0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c,
	0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x6d, 0x67, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x69, 0x6d, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x6a, 0x75, 0x6d,
	0x70, 0x54, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6a, 0x75, 0x6d,
	0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x72, 0x65, 0x66, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x72, 0x65, 0x66, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x67, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x67,
	0x61, 0x6d, 0x65, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x67, 0x61, 0x6d, 0x65, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x49, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x67, 0x61, 0x6d, 0x65,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x6c, 0x61, 0x74, 0x49,
	0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x6c, 0x61, 0x74, 0x49, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x6c, 0x6f, 0x74, 0x49, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x6c, 0x6f, 0x74, 0x49, 0x64, 0x22, 0xc5, 0x02, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x69, 0x6d, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x69, 0x6d,
	0x67, 0x12, 0x1a, 0x0a, 0x08, 0x6a, 0x75, 0x6d, 0x70, 0x54, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x6a, 0x75, 0x6d, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x68, 0x72, 0x65, 0x66, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x72, 0x65,
	0x66, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x67, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x12, 0x20, 0x0a,
	0x0b, 0x67, 0x61, 0x6d, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x67, 0x61, 0x6d, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x70, 0x6c, 0x61, 0x74, 0x49, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x70, 0x6c, 0x61, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6c, 0x6f, 0x74, 0x49,
	0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6c, 0x6f, 0x74, 0x49, 0x64, 0x22,
	0xa4, 0x02, 0x0a, 0x08, 0x47, 0x61, 0x6d, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x73, 0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74,
	0x12, 0x18, 0x0a, 0x07, 0x6c, 0x6f, 0x67, 0x6f, 0x55, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6c, 0x6f, 0x67, 0x6f, 0x55, 0x72, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x65, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x67, 0x61, 0x6d, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x67, 0x61, 0x6d, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1e,
	0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1c,
	0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1e, 0x0a, 0x0a,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05,
	0x63, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x22, 0x94, 0x01, 0x0a, 0x1a, 0x41, 0x64, 0x64, 0x46, 0x72,
	0x6f, 0x6e, 0x74, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x79, 0x43, 0x6d, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6c,
	0x6f, 0x67, 0x6f, 0x55, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x6f,
	0x67, 0x6f, 0x55, 0x72, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x61, 0x6e,
	0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x22, 0x43, 0x0a,
	0x0f, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x22, 0x9d, 0x01, 0x0a, 0x0d, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x69,
	0x7a, 0x65, 0x12, 0x26, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x6f,
	0x72, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x73,
	0x6f, 0x72, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x6f, 0x72, 0x74,
	0x4b, 0x65, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x4b,
	0x65, 0x79, 0x22, 0x50, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x69,
	0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67,
	0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x22, 0x4b, 0x0a, 0x08, 0x44, 0x65, 0x6d, 0x6f, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x75,
	0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x61, 0x6d, 0x65, 0x55, 0x72,
	0x6c, 0x22, 0x27, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x21, 0x0a, 0x0b, 0x4c, 0x61,
	0x6d, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x67,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x73, 0x69, 0x67, 0x6e, 0x22, 0x28, 0x0a,
	0x12, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x67, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x04, 0x73, 0x69, 0x67, 0x6e, 0x22, 0x60, 0x0a, 0x0b, 0x4d, 0x73, 0x67, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73,
	0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x2b, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x63, 0x6d, 0x73,
	0x72, 0x70, 0x63, 0x2e, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xc7, 0x01, 0x0a, 0x1b, 0x46, 0x72,
	0x6f, 0x6e, 0x74, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x79, 0x43, 0x6d, 0x73, 0x50, 0x61,
	0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x41, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x46,
	0x72, 0x6f, 0x6e, 0x74, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x79, 0x43, 0x6d, 0x73, 0x50,
	0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x37, 0x0a, 0x09, 0x44, 0x61,
	0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x22, 0x99, 0x01, 0x0a, 0x0f, 0x48, 0x65, 0x6c, 0x70, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x4b, 0x65, 0x79,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x4b, 0x65, 0x79, 0x12,
	0x12, 0x0a, 0x04, 0x73, 0x69, 0x67, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x73,
	0x69, 0x67, 0x6e, 0x12, 0x2a, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x48, 0x65, 0x6c, 0x70, 0x49,
	0x6e, 0x66, 0x6f, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22,
	0x2f, 0x0a, 0x15, 0x52, 0x6f, 0x6d, 0x6f, 0x76, 0x65, 0x48, 0x65, 0x6c, 0x70, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x69, 0x73, 0x74,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x06, 0x6c, 0x69, 0x73, 0x74, 0x49, 0x64,
	0x22, 0xbd, 0x01, 0x0a, 0x13, 0x45, 0x64, 0x69, 0x74, 0x48, 0x65, 0x6c, 0x70, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x68, 0x65, 0x6c, 0x70,
	0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x68, 0x65,
	0x6c, 0x70, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67,
	0x75, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67,
	0x75, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f,
	0x72, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x22, 0x50, 0x0a, 0x14, 0x45, 0x64, 0x69, 0x74, 0x48, 0x65, 0x6c, 0x70, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x12,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x22, 0xbc, 0x01, 0x0a, 0x12, 0x41, 0x64, 0x64, 0x48, 0x65, 0x6c, 0x70, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x68, 0x65, 0x6c,
	0x70, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x68,
	0x65, 0x6c, 0x70, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x6e,
	0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e,
	0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73,
	0x6f, 0x72, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x22, 0x4f, 0x0a, 0x13, 0x41, 0x64, 0x64, 0x48, 0x65, 0x6c, 0x70, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x12,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x22, 0x4f, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x67, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x04, 0x73, 0x69, 0x67, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x22, 0x50, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4e, 0x6f, 0x74,
	0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73,
	0x67, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xa1, 0x01, 0x0a, 0x0f, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x28, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x6f, 0x72, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x73, 0x6f, 0x72, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12,
	0x18, 0x0a, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x4b, 0x65, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x4b, 0x65, 0x79, 0x22, 0x23, 0x0a, 0x11, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x6a,
	0x0a, 0x12, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x2e, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70,
	0x63, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x98, 0x05, 0x0a, 0x12, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x64, 0x65, 0x5a, 0x68, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6f, 0x64, 0x65, 0x5a, 0x68, 0x12, 0x10, 0x0a,
	0x03, 0x69, 0x6d, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x69, 0x6d, 0x67, 0x12,
	0x1a, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a,
	0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x65,
	0x6e, 0x64, 0x65, 0x64, 0x41, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x6e,
	0x64, 0x65, 0x64, 0x41, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a,
	0x06, 0x6c, 0x61, 0x64, 0x64, 0x65, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6c,
	0x61, 0x64, 0x64, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x6c, 0x6f, 0x77, 0x43, 0x6c, 0x61,
	0x69, 0x6d, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x66, 0x6c, 0x6f, 0x77, 0x43, 0x6c,
	0x61, 0x69, 0x6d, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x69, 0x6e, 0x43, 0x6f, 0x69, 0x6e, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x69, 0x6e, 0x43, 0x6f, 0x69, 0x6e, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x61, 0x78, 0x43, 0x6f, 0x69, 0x6e, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6d, 0x61, 0x78, 0x43, 0x6f, 0x69, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x61, 0x74, 0x65, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x61, 0x74, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64,
	0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x4e, 0x75, 0x6d, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0b, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x4e, 0x75, 0x6d, 0x73, 0x12, 0x20, 0x0a,
	0x0b, 0x73, 0x75, 0x62, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x10, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0b, 0x73, 0x75, 0x62, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12,
	0x1a, 0x0a, 0x08, 0x77, 0x65, 0x65, 0x6b, 0x64, 0x61, 0x79, 0x73, 0x18, 0x11, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x77, 0x65, 0x65, 0x6b, 0x64, 0x61, 0x79, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x69,
	0x73, 0x41, 0x75, 0x74, 0x6f, 0x18, 0x12, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x73, 0x41,
	0x75, 0x74, 0x6f, 0x12, 0x2a, 0x0a, 0x10, 0x63, 0x6c, 0x65, 0x61, 0x72, 0x43, 0x6f, 0x64, 0x65,
	0x4d, 0x69, 0x78, 0x43, 0x6f, 0x69, 0x6e, 0x18, 0x13, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x63,
	0x6c, 0x65, 0x61, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x4d, 0x69, 0x78, 0x43, 0x6f, 0x69, 0x6e, 0x12,
	0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x14, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73,
	0x6f, 0x72, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x67, 0x61, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x15, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x67, 0x61, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x16, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x22, 0x0a,
	0x0c, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x17, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6c, 0x61, 0x6e, 0x67, 0x22, 0x33, 0x0a, 0x0f, 0x53, 0x70, 0x6f, 0x72, 0x74, 0x42, 0x65,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x22, 0x30, 0x0a, 0x0e, 0x48, 0x65,
	0x6c, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x1e, 0x0a, 0x0a,
	0x68, 0x65, 0x6c, 0x70, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0a, 0x68, 0x65, 0x6c, 0x70, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x22, 0x4f, 0x0a, 0x0d,
	0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x67, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x04, 0x73, 0x69, 0x67, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x22, 0x84, 0x02,
	0x0a, 0x12, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x49, 0x74, 0x65, 0x6d, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x6d, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x69, 0x6d, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x72, 0x65, 0x66, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x72, 0x65, 0x66, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6c,
	0x6f, 0x74, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6c, 0x6f, 0x74,
	0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x67, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x67, 0x61,
	0x6d, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0b, 0x67, 0x61, 0x6d, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x70, 0x6c, 0x61, 0x74, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x70, 0x6c,
	0x61, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6a, 0x75, 0x6d, 0x70, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6a, 0x75, 0x6d, 0x70, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x73, 0x6f, 0x72, 0x74, 0x22, 0x2c, 0x0a, 0x0e, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x22, 0xa4, 0x02, 0x0a, 0x0a, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x49, 0x74, 0x65,
	0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a,
	0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x75, 0x69, 0x64, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75,
	0x69, 0x64, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x22, 0x0a, 0x0c, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f,
	0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x22, 0x62, 0x0a, 0x12, 0x42, 0x61, 0x6e,
	0x6e, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x26, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x42, 0x61, 0x6e,
	0x6e, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xe0, 0x01,
	0x0a, 0x0a, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x26, 0x0a, 0x04, 0x6c, 0x69,
	0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70,
	0x63, 0x2e, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x6c, 0x69,
	0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x65,
	0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x61, 0x67, 0x65, 0x73, 0x12, 0x1a,
	0x0a, 0x08, 0x73, 0x63, 0x72, 0x6f, 0x6c, 0x6c, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x73, 0x63, 0x72, 0x6f, 0x6c, 0x6c, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x6f,
	0x72, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73,
	0x6f, 0x72, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x72, 0x74,
	0x49, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x72, 0x74, 0x49, 0x64,
	0x22, 0x57, 0x0a, 0x1b, 0x44, 0x65, 0x6c, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x43, 0x6c, 0x61, 0x73,
	0x73, 0x69, 0x66, 0x79, 0x43, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xa8, 0x04, 0x0a, 0x04, 0x47, 0x61,
	0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x34, 0x0a, 0x15, 0x67, 0x61, 0x6d, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x53, 0x75, 0x62, 0x74, 0x79, 0x70, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x15, 0x67, 0x61, 0x6d, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x53,
	0x75, 0x62, 0x74, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x67, 0x61, 0x6d, 0x65,
	0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0e, 0x67, 0x61, 0x6d, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x2a, 0x0a, 0x10, 0x67, 0x61, 0x6d, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x67, 0x61, 0x6d, 0x65,
	0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x22, 0x0a, 0x0c, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x49, 0x63, 0x6f, 0x6e,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c,
	0x49, 0x63, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x49, 0x63,
	0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74,
	0x49, 0x63, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x73, 0x4e, 0x65, 0x77, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x69, 0x73, 0x4e, 0x65, 0x77, 0x12, 0x22, 0x0a, 0x0c, 0x66, 0x61,
	0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x53, 0x74, 0x61, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0c, 0x66, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x53, 0x74, 0x61, 0x72, 0x12, 0x18,
	0x0a, 0x07, 0x68, 0x6f, 0x74, 0x53, 0x74, 0x61, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x68, 0x6f, 0x74, 0x53, 0x74, 0x61, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x73, 0x46, 0x61,
	0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x69, 0x73,
	0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x20, 0x0a, 0x0b, 0x6d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e,
	0x63, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x67, 0x61, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x67, 0x61, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x41, 0x74, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x41, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x73, 0x52, 0x6f, 0x74, 0x61,
	0x74, 0x65, 0x64, 0x18, 0x12, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x69, 0x73, 0x52, 0x6f, 0x74,
	0x61, 0x74, 0x65, 0x64, 0x22, 0xce, 0x02, 0x0a, 0x07, 0x44, 0x65, 0x6d, 0x6f, 0x52, 0x65, 0x71,
	0x12, 0x17, 0x0a, 0x07, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x67, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75,
	0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75,
	0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x5f,
	0x6d, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79,
	0x4d, 0x6f, 0x64, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x75, 0x74,
	0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x68, 0x65, 0x6d, 0x65, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x68, 0x65, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08,
	0x77, 0x65, 0x62, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x77, 0x65, 0x62, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69,
	0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x12,
	0x34, 0x0a, 0x15, 0x67, 0x61, 0x6d, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x53,
	0x75, 0x62, 0x74, 0x79, 0x70, 0x65, 0x49, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x15,
	0x67, 0x61, 0x6d, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x53, 0x75, 0x62, 0x74,
	0x79, 0x70, 0x65, 0x49, 0x64, 0x22, 0x66, 0x0a, 0x10, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12,
	0x2c, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x44,
	0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xdc, 0x01,
	0x0a, 0x08, 0x42, 0x6c, 0x6f, 0x67, 0x44, 0x61, 0x74, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x24, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e,
	0x42, 0x6c, 0x6f, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x65, 0x73, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x61, 0x67, 0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x63,
	0x72, 0x6f, 0x6c, 0x6c, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x63,
	0x72, 0x6f, 0x6c, 0x6c, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x6f, 0x72, 0x74, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x6f, 0x72, 0x74, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x72, 0x74, 0x49, 0x64, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x72, 0x74, 0x49, 0x64, 0x22, 0xda, 0x01, 0x0a,
	0x0c, 0x53, 0x70, 0x6f, 0x72, 0x74, 0x42, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a,
	0x05, 0x62, 0x65, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x62, 0x65,
	0x74, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x6f, 0x64, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6f, 0x64,
	0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x26, 0x0a, 0x0e, 0x74, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x6e, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x74, 0x6f, 0x75, 0x72, 0x6e,
	0x61, 0x6d, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x5a, 0x0a, 0x0c, 0x48, 0x65, 0x6c,
	0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12,
	0x24, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e,
	0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x48, 0x65, 0x6c, 0x70, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x3a, 0x0a, 0x08, 0x4c, 0x61, 0x6d, 0x70, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x22, 0xb3, 0x01, 0x0a, 0x11, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x37, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x42, 0x61, 0x6e,
	0x6e, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x44,
	0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x37,
	0x0a, 0x09, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x32, 0x0a, 0x1c, 0x42, 0x69, 0x67, 0x47, 0x61,
	0x6d, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x67, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x73, 0x69, 0x67, 0x6e, 0x22, 0x7c, 0x0a, 0x1d, 0x42,
	0x69, 0x67, 0x47, 0x61, 0x6d, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x42, 0x61,
	0x6e, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d,
	0x73, 0x67, 0x12, 0x35, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x21, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x42, 0x69, 0x67, 0x47, 0x61, 0x6d,
	0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xb9, 0x01, 0x0a, 0x19, 0x42, 0x69,
	0x67, 0x47, 0x61, 0x6d, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x42, 0x61, 0x6e,
	0x6e, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x67,
	0x61, 0x6d, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0b, 0x67, 0x61, 0x6d, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x6f, 0x72,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x63, 0x49,
	0x6d, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x63, 0x49, 0x6d, 0x67, 0x12,
	0x14, 0x0a, 0x05, 0x68, 0x35, 0x49, 0x6d, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x68, 0x35, 0x49, 0x6d, 0x67, 0x22, 0x2a, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x44, 0x69, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x73, 0x69, 0x67, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x73, 0x69, 0x67,
	0x6e, 0x22, 0x51, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x44, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61,
	0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67,
	0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x22, 0x36, 0x0a, 0x0a, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x49, 0x74,
	0x65, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x22, 0x2c, 0x0a, 0x16,
	0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x67, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x73, 0x69, 0x67, 0x6e, 0x22, 0x70, 0x0a, 0x17, 0x43, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x2f, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x63, 0x6d, 0x73, 0x72,
	0x70, 0x63, 0x2e, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xab, 0x02, 0x0a,
	0x13, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x73, 0x50, 0x6f, 0x70, 0x55, 0x70, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x69, 0x73, 0x50, 0x6f, 0x70, 0x55, 0x70, 0x12, 0x1e,
	0x0a, 0x0a, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x79, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0a, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x79, 0x12, 0x24,
	0x0a, 0x0d, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x6e, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x2c, 0x0a, 0x11, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x41,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x65, 0x66, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x11, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x65,
	0x66, 0x74, 0x12, 0x46, 0x0a, 0x12, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x6e, 0x52, 0x75, 0x6c,
	0x65, 0x44, 0x74, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x6e, 0x52,
	0x75, 0x6c, 0x65, 0x44, 0x74, 0x6f, 0x52, 0x12, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x6e, 0x52,
	0x75, 0x6c, 0x65, 0x44, 0x74, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x3e, 0x0a, 0x0e, 0x63, 0x68,
	0x65, 0x63, 0x6b, 0x49, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x44, 0x74, 0x6f, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x49, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x44, 0x74, 0x6f, 0x52, 0x0e, 0x63, 0x68, 0x65, 0x63,
	0x6b, 0x49, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x44, 0x74, 0x6f, 0x22, 0xa2, 0x01, 0x0a, 0x0e, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x49, 0x6e, 0x52, 0x75, 0x6c, 0x65, 0x44, 0x74, 0x6f, 0x12, 0x12, 0x0a,
	0x04, 0x64, 0x61, 0x79, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x64, 0x61, 0x79,
	0x73, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x63, 0x6f, 0x6e, 0x49, 0x6d, 0x67, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x69, 0x63, 0x6f, 0x6e, 0x49, 0x6d, 0x67, 0x12, 0x20, 0x0a, 0x0b, 0x61,
	0x77, 0x61, 0x72, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x0b, 0x61, 0x77, 0x61, 0x72, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1e, 0x0a,
	0x0a, 0x61, 0x75, 0x64, 0x69, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x61, 0x75, 0x64, 0x69, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x12, 0x20, 0x0a,
	0x0b, 0x69, 0x73, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x64, 0x49, 0x6e, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x64, 0x49, 0x6e, 0x22,
	0x6e, 0x0a, 0x0e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x44, 0x74,
	0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x6d, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x69, 0x6d, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22,
	0xdf, 0x02, 0x0a, 0x17, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x42, 0x61, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64,
	0x65, 0x64, 0x41, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x43, 0x6f, 0x69, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0b, 0x64, 0x65, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x43, 0x6f, 0x69, 0x6e, 0x12, 0x26, 0x0a, 0x0e, 0x70, 0x61, 0x79, 0x6f, 0x75,
	0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0e, 0x70, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12,
	0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73,
	0x6f, 0x72, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x69,
	0x73, 0x50, 0x6f, 0x70, 0x55, 0x70, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x69, 0x73,
	0x50, 0x6f, 0x70, 0x55, 0x70, 0x12, 0x1a, 0x0a, 0x08, 0x67, 0x61, 0x6d, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x67, 0x61, 0x6d, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x22, 0x97, 0x01, 0x0a, 0x0d, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x43, 0x6f, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0b, 0x64, 0x65, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x43, 0x6f, 0x69, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x73, 0x50, 0x6f, 0x70,
	0x55, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x69, 0x73, 0x50, 0x6f, 0x70, 0x55,
	0x70, 0x12, 0x28, 0x0a, 0x0f, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x65, 0x66, 0x66, 0x65,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x24, 0x0a, 0x0e, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x49, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x73, 0x69, 0x67, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x73, 0x69, 0x67,
	0x6e, 0x22, 0x37, 0x0a, 0x0f, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x16, 0x0a, 0x14, 0x47, 0x65,
	0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x75, 0x6c, 0x65, 0x52,
	0x65, 0x71, 0x22, 0x70, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73,
	0x67, 0x12, 0x31, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1d, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x75, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x22, 0xd9, 0x04, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x75, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x4a,
	0x0a, 0x12, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x61, 0x74, 0x65,
	0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x63, 0x6d, 0x73,
	0x72, 0x70, 0x63, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x61,
	0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x12, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x52, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x69,
	0x6e, 0x43, 0x6f, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x6d, 0x69, 0x6e,
	0x43, 0x6f, 0x69, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x61, 0x78, 0x43, 0x6f, 0x69, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x6d, 0x61, 0x78, 0x43, 0x6f, 0x69, 0x6e, 0x12, 0x1a,
	0x0a, 0x08, 0x66, 0x65, 0x65, 0x73, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x66, 0x65, 0x65, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x65,
	0x65, 0x73, 0x52, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x66, 0x65,
	0x65, 0x73, 0x52, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x65, 0x65, 0x73, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x66, 0x65, 0x65, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x64, 0x65,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x0f, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x4d, 0x75, 0x6c, 0x74,
	0x69, 0x70, 0x6c, 0x65, 0x12, 0x3a, 0x0a, 0x18, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77,
	0x55, 0x6e, 0x46, 0x6c, 0x6f, 0x77, 0x4d, 0x61, 0x78, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x52, 0x18, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77,
	0x55, 0x6e, 0x46, 0x6c, 0x6f, 0x77, 0x4d, 0x61, 0x78, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x69, 0x73, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x09, 0x69, 0x73, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x12, 0x2a,
	0x0a, 0x10, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f,
	0x69, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x01, 0x52, 0x10, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x69, 0x6e, 0x12, 0x38, 0x0a, 0x17, 0x77, 0x69,
	0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x41, 0x75, 0x74, 0x6f, 0x41, 0x75, 0x64, 0x69, 0x74, 0x53,
	0x77, 0x69, 0x74, 0x63, 0x68, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x17, 0x77, 0x69, 0x74,
	0x68, 0x64, 0x72, 0x61, 0x77, 0x41, 0x75, 0x74, 0x6f, 0x41, 0x75, 0x64, 0x69, 0x74, 0x53, 0x77,
	0x69, 0x74, 0x63, 0x68, 0x12, 0x3e, 0x0a, 0x1a, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77,
	0x41, 0x75, 0x74, 0x6f, 0x41, 0x75, 0x64, 0x69, 0x74, 0x4d, 0x61, 0x78, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x01, 0x52, 0x1a, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72,
	0x61, 0x77, 0x41, 0x75, 0x74, 0x6f, 0x41, 0x75, 0x64, 0x69, 0x74, 0x4d, 0x61, 0x78, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2a, 0x0a, 0x10, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72,
	0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x01, 0x52, 0x10,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65,
	0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x44, 0x61, 0x74, 0x65, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x44, 0x61, 0x74, 0x65,
	0x22, 0xdb, 0x04, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x12, 0x4a, 0x0a, 0x12,
	0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x61, 0x74, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70,
	0x63, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x61, 0x74, 0x65,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x12, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x52, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x69, 0x6e, 0x43,
	0x6f, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x6d, 0x69, 0x6e, 0x43, 0x6f,
	0x69, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x61, 0x78, 0x43, 0x6f, 0x69, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x07, 0x6d, 0x61, 0x78, 0x43, 0x6f, 0x69, 0x6e, 0x12, 0x1a, 0x0a, 0x08,
	0x66, 0x65, 0x65, 0x73, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x66, 0x65, 0x65, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x65, 0x65, 0x73,
	0x52, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x66, 0x65, 0x65, 0x73,
	0x52, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x65, 0x65, 0x73, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x04, 0x66, 0x65, 0x65, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x64, 0x65, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x0f, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70,
	0x6c, 0x65, 0x12, 0x3a, 0x0a, 0x18, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x55, 0x6e,
	0x46, 0x6c, 0x6f, 0x77, 0x4d, 0x61, 0x78, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x18, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x55, 0x6e,
	0x46, 0x6c, 0x6f, 0x77, 0x4d, 0x61, 0x78, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x69, 0x73, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x09, 0x69, 0x73, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x12, 0x2a, 0x0a, 0x10,
	0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x69, 0x6e,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x01, 0x52, 0x10, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x54,
	0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x69, 0x6e, 0x12, 0x38, 0x0a, 0x17, 0x77, 0x69, 0x74, 0x68,
	0x64, 0x72, 0x61, 0x77, 0x41, 0x75, 0x74, 0x6f, 0x41, 0x75, 0x64, 0x69, 0x74, 0x53, 0x77, 0x69,
	0x74, 0x63, 0x68, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x17, 0x77, 0x69, 0x74, 0x68, 0x64,
	0x72, 0x61, 0x77, 0x41, 0x75, 0x74, 0x6f, 0x41, 0x75, 0x64, 0x69, 0x74, 0x53, 0x77, 0x69, 0x74,
	0x63, 0x68, 0x12, 0x3e, 0x0a, 0x1a, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x41, 0x75,
	0x74, 0x6f, 0x41, 0x75, 0x64, 0x69, 0x74, 0x4d, 0x61, 0x78, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x01, 0x52, 0x1a, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77,
	0x41, 0x75, 0x74, 0x6f, 0x41, 0x75, 0x64, 0x69, 0x74, 0x4d, 0x61, 0x78, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x2a, 0x0a, 0x10, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x4d, 0x75,
	0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x01, 0x52, 0x10, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x12, 0x1e,
	0x0a, 0x0a, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x44, 0x61, 0x74, 0x65, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x44, 0x61, 0x74, 0x65, 0x22, 0x54,
	0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67,
	0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x22, 0x5c, 0x0a, 0x12, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x52, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x61, 0x67,
	0x65, 0x6e, 0x74, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x0e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x61,
	0x74, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x4c, 0x65, 0x76, 0x65, 0x6c,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x4c, 0x65, 0x76,
	0x65, 0x6c, 0x22, 0x14, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x48, 0x65, 0x6c, 0x70, 0x4c, 0x61, 0x6e,
	0x67, 0x75, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x22, 0x6c, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x48,
	0x65, 0x6c, 0x70, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x2f, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74,
	0x48, 0x65, 0x6c, 0x70, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x41, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x48, 0x65, 0x6c,
	0x70, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2a, 0x0a,
	0x08, 0x64, 0x69, 0x63, 0x5f, 0x6c, 0x61, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x44, 0x69, 0x63, 0x4c, 0x61, 0x6e, 0x67,
	0x52, 0x07, 0x64, 0x69, 0x63, 0x4c, 0x61, 0x6e, 0x67, 0x22, 0x33, 0x0a, 0x07, 0x44, 0x69, 0x63,
	0x4c, 0x61, 0x6e, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x22, 0x11,
	0x0a, 0x0f, 0x50, 0x61, 0x67, 0x65, 0x48, 0x65, 0x6c, 0x70, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65,
	0x71, 0x22, 0x66, 0x0a, 0x10, 0x50, 0x61, 0x67, 0x65, 0x48, 0x65, 0x6c, 0x70, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x2c, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x63, 0x6d, 0x73, 0x72,
	0x70, 0x63, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x48, 0x65, 0x6c, 0x70, 0x54, 0x79, 0x70, 0x65, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x96, 0x02, 0x0a, 0x10, 0x50, 0x61,
	0x67, 0x65, 0x48, 0x65, 0x6c, 0x70, 0x54, 0x79, 0x70, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x74, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x74, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61,
	0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61,
	0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12,
	0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x6f,
	0x72, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x1a,
	0x0a, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x42, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x42, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x22, 0xa8, 0x01, 0x0a, 0x0f, 0x50, 0x61, 0x67, 0x65, 0x48, 0x65, 0x6c, 0x70, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x73, 0x69, 0x7a, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x4b, 0x65, 0x79, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x4b, 0x65, 0x79, 0x12, 0x1c,
	0x0a, 0x09, 0x73, 0x6f, 0x72, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x09, 0x73, 0x6f, 0x72, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x2f, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x63, 0x6d, 0x73,
	0x72, 0x70, 0x63, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x48, 0x65, 0x6c, 0x70, 0x49, 0x6e, 0x66, 0x6f,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x23, 0x0a,
	0x11, 0x70, 0x61, 0x67, 0x65, 0x48, 0x65, 0x6c, 0x70, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52,
	0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x69, 0x64, 0x22, 0x6a, 0x0a, 0x12, 0x70, 0x61, 0x67, 0x65, 0x48, 0x65, 0x6c, 0x70, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x2e,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x63,
	0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x70, 0x61, 0x67, 0x65, 0x48, 0x65, 0x6c, 0x70, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xf0,
	0x02, 0x0a, 0x12, 0x70, 0x61, 0x67, 0x65, 0x48, 0x65, 0x6c, 0x70, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x68, 0x65, 0x6c, 0x70, 0x54, 0x79, 0x70,
	0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x68, 0x65, 0x6c, 0x70, 0x54,
	0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x68, 0x65, 0x6c, 0x70, 0x54, 0x79, 0x70,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x68, 0x65, 0x6c,
	0x70, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x42, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x42, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x12,
	0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73,
	0x6f, 0x72, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x22, 0xbd, 0x01, 0x0a, 0x13, 0x50, 0x61, 0x67, 0x65, 0x48, 0x65, 0x6c, 0x70, 0x49, 0x6e,
	0x66, 0x6f, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x6e,
	0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e,
	0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x68, 0x65, 0x6c, 0x70, 0x54, 0x79, 0x70,
	0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x68, 0x65, 0x6c, 0x70, 0x54,
	0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1a, 0x0a,
	0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d,
	0x65, 0x22, 0x66, 0x0a, 0x10, 0x50, 0x61, 0x67, 0x65, 0x48, 0x65, 0x6c, 0x70, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x2c, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x63, 0x6d, 0x73, 0x72,
	0x70, 0x63, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x48, 0x65, 0x6c, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x9e, 0x01, 0x0a, 0x10, 0x50, 0x61,
	0x67, 0x65, 0x48, 0x65, 0x6c, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x44, 0x61, 0x74, 0x61, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x65,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x61, 0x67, 0x65, 0x73, 0x12, 0x12,
	0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x69,
	0x7a, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x30, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74,
	0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e,
	0x50, 0x61, 0x67, 0x65, 0x48, 0x65, 0x6c, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x44, 0x61, 0x74, 0x61,
	0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0xd8, 0x02, 0x0a, 0x14, 0x50,
	0x61, 0x67, 0x65, 0x48, 0x65, 0x6c, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x44, 0x61, 0x74, 0x61, 0x49,
	0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x1a, 0x0a,
	0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x42, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x42, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x68, 0x65, 0x6c, 0x70, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x68, 0x65, 0x6c, 0x70, 0x54, 0x79, 0x70, 0x65, 0x49,
	0x64, 0x12, 0x22, 0x0a, 0x0c, 0x68, 0x65, 0x6c, 0x70, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x68, 0x65, 0x6c, 0x70, 0x54, 0x79, 0x70,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xa4, 0x01, 0x0a, 0x0d, 0x54, 0x61, 0x73, 0x6b, 0x45, 0x78,
	0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x4b, 0x65, 0x79,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x4b, 0x65, 0x79, 0x12,
	0x1c, 0x0a, 0x09, 0x73, 0x6f, 0x72, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x09, 0x73, 0x6f, 0x72, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x2d, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x6d,
	0x73, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x6b, 0x0a, 0x11,
	0x54, 0x61, 0x73, 0x6b, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65,
	0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x66, 0x0a, 0x0e, 0x54, 0x61, 0x73,
	0x6b, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73,
	0x67, 0x12, 0x2e, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x45, 0x78, 0x70,
	0x6f, 0x72, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x22, 0x9e, 0x01, 0x0a, 0x12, 0x54, 0x61, 0x73, 0x6b, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x70, 0x61, 0x67, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x12, 0x2e, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x45, 0x78,
	0x70, 0x6f, 0x72, 0x74, 0x44, 0x61, 0x74, 0x61, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x6c, 0x69,
	0x73, 0x74, 0x22, 0xd6, 0x02, 0x0a, 0x12, 0x54, 0x61, 0x73, 0x6b, 0x45, 0x78, 0x70, 0x6f, 0x72,
	0x74, 0x44, 0x61, 0x74, 0x61, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x50,
	0x61, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x50,
	0x61, 0x74, 0x68, 0x12, 0x22, 0x0a, 0x0c, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x74, 0x68, 0x48,
	0x61, 0x73, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x66, 0x69, 0x6c, 0x65, 0x50,
	0x61, 0x74, 0x68, 0x48, 0x61, 0x73, 0x68, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x6f, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x49,
	0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f,
	0x72, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4d, 0x65, 0x73,
	0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4d,
	0x65, 0x73, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x61, 0x73, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x61, 0x73, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x74, 0x61, 0x73, 0x6b, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x74, 0x61, 0x73, 0x6b, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x1c, 0x0a,
	0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xb2, 0x01, 0x0a, 0x14,
	0x47, 0x65, 0x74, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x69,
	0x7a, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x4b, 0x65, 0x79, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x4b, 0x65, 0x79, 0x12, 0x1c, 0x0a, 0x09,
	0x73, 0x6f, 0x72, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x09, 0x73, 0x6f, 0x72, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x34, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70,
	0x63, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x22, 0x57, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x43, 0x6f, 0x64,
	0x65, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x74, 0x0a, 0x15, 0x47, 0x65, 0x74,
	0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x35, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e,
	0x47, 0x65, 0x74, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22,
	0xac, 0x01, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x43, 0x6f, 0x64,
	0x65, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x12, 0x18, 0x0a,
	0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x65, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x61, 0x67, 0x65, 0x73, 0x12, 0x12, 0x0a,
	0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x69, 0x7a,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x35, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x47,
	0x65, 0x74, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0xf1,
	0x01, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x43, 0x6f, 0x64, 0x65,
	0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x65, 0x6e, 0x64,
	0x53, 0x6d, 0x73, 0x54, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73,
	0x65, 0x6e, 0x64, 0x53, 0x6d, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x20, 0x0a, 0x0b, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x43, 0x6f,
	0x64, 0x65, 0x22, 0xa9, 0x01, 0x0a, 0x0e, 0x41, 0x64, 0x64, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x55, 0x72, 0x6c, 0x12, 0x23, 0x0a,
	0x0d, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x66, 0x61, 0x63, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x46, 0x61,
	0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x61,
	0x6e, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x22, 0x4b,
	0x0a, 0x0f, 0x41, 0x64, 0x64, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xbc, 0x01, 0x0a, 0x11,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x55, 0x72, 0x6c, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x66, 0x61, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x46, 0x61, 0x63, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x22, 0x4e, 0x0a, 0x12, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x20, 0x0a, 0x0e, 0x47, 0x65,
	0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x64, 0x0a, 0x0f,
	0x47, 0x65, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x2b, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74,
	0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x22, 0xba, 0x01, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x55, 0x72, 0x6c, 0x12, 0x23,
	0x0a, 0x0d, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x66, 0x61, 0x63, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x46,
	0x61, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6c,
	0x61, 0x6e, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x22,
	0x23, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x69, 0x64, 0x22, 0x4e, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67,
	0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x22, 0xae, 0x01, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x43, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x6f, 0x72,
	0x74, 0x4b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x6f, 0x72, 0x74,
	0x4b, 0x65, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x6f, 0x72, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x73, 0x6f, 0x72, 0x74, 0x46, 0x69, 0x65, 0x6c,
	0x64, 0x12, 0x32, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1e, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x51, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x43, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x12,
	0x23, 0x0a, 0x0d, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x22, 0x70, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x43,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x33, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74,
	0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x65, 0x73, 0x70, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xa8, 0x01, 0x0a, 0x17, 0x47,
	0x65, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x70, 0x61, 0x67, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x12, 0x33, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f,
	0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x49, 0x74, 0x65, 0x6d, 0x52,
	0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0xa3, 0x02, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x43, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x49, 0x74, 0x65,
	0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x55, 0x72, 0x6c, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x66, 0x61, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x46, 0x61, 0x63, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x75, 0x73, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x55, 0x73, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x22, 0x25, 0x0a, 0x0f, 0x43,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x12,
	0x0a, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x61,
	0x6e, 0x67, 0x22, 0x66, 0x0a, 0x10, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73,
	0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x2c, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x63, 0x6d, 0x73,
	0x72, 0x70, 0x63, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xa3, 0x01, 0x0a, 0x10, 0x43,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x23, 0x0a, 0x0d, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x5f, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x55, 0x72, 0x6c, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x5f, 0x66, 0x61, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x46, 0x61, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x6c, 0x61, 0x6e, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x61, 0x6e, 0x67,
	0x22, 0x6f, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x12, 0x2c, 0x0a, 0x12, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x61, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x10, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x41,
	0x72, 0x22, 0x79, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x56, 0x69, 0x70, 0x41, 0x62,
	0x53, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x30, 0x0a, 0x13, 0x56, 0x69,
	0x70, 0x41, 0x62, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x56, 0x69, 0x70, 0x41, 0x62, 0x53, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x12, 0x2e, 0x0a, 0x12,
	0x76, 0x69, 0x70, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72,
	0x61, 0x77, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x76, 0x69, 0x70, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x22, 0x52, 0x0a, 0x16,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x56, 0x69, 0x70, 0x41, 0x62, 0x53, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73,
	0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x12, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x22, 0x53, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73,
	0x67, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x16, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70,
	0x61, 0x6e, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x22, 0x1b, 0x0a,
	0x19, 0x47, 0x65, 0x74, 0x56, 0x69, 0x70, 0x41, 0x62, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x52, 0x65, 0x71, 0x22, 0x70, 0x0a, 0x15, 0x47, 0x65,
	0x74, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x31, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63,
	0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x6e, 0x0a, 0x15,
	0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x44, 0x61, 0x74, 0x61, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79,
	0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x2c,
	0x0a, 0x12, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x5f, 0x61, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x63, 0x6f, 0x6d, 0x70,
	0x61, 0x6e, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x41, 0x72, 0x22, 0x7a, 0x0a, 0x1a,
	0x47, 0x65, 0x74, 0x56, 0x69, 0x70, 0x41, 0x62, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67,
	0x12, 0x36, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22,
	0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x69, 0x70, 0x41, 0x62,
	0x53, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x7e, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x56,
	0x69, 0x70, 0x41, 0x62, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x12, 0x30, 0x0a, 0x13, 0x56, 0x69, 0x70, 0x41, 0x62, 0x53,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x13, 0x56, 0x69, 0x70, 0x41, 0x62, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x12, 0x2e, 0x0a, 0x12, 0x56, 0x69, 0x70, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x12, 0x56, 0x69, 0x70, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x22, 0x13, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x41,
	0x6c, 0x6c, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x6c, 0x6f, 0x74, 0x52, 0x65, 0x71, 0x22, 0x72, 0x0a,
	0x12, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x6c, 0x6f, 0x74, 0x52,
	0x65, 0x73, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x36, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63,
	0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x6c, 0x6f, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x22, 0x88, 0x04, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x47, 0x61, 0x6d, 0x65,
	0x53, 0x6c, 0x6f, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x34, 0x0a, 0x15, 0x67, 0x61, 0x6d, 0x65, 0x50, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x53, 0x75, 0x62, 0x74, 0x79, 0x70, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x15, 0x67, 0x61, 0x6d, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x72, 0x53, 0x75, 0x62, 0x74, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x67, 0x61,
	0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a,
	0x67, 0x61, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x67, 0x61,
	0x6d, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0e, 0x67, 0x61, 0x6d, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x2a, 0x0a, 0x10, 0x67, 0x61, 0x6d, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x67, 0x61,
	0x6d, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x28,
	0x0a, 0x0f, 0x67, 0x61, 0x6d, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x43, 0x6f, 0x64,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x67, 0x61, 0x6d, 0x65, 0x50, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c,
	0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x49, 0x63, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x49, 0x63, 0x6f, 0x6e,
	0x12, 0x14, 0x0a, 0x05, 0x69, 0x73, 0x4e, 0x65, 0x77, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x69, 0x73, 0x4e, 0x65, 0x77, 0x12, 0x22, 0x0a, 0x0c, 0x67, 0x61, 0x6d, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x67, 0x61,
	0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x66, 0x61,
	0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x53, 0x74, 0x61, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0c, 0x66, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x53, 0x74, 0x61, 0x72, 0x12, 0x18,
	0x0a, 0x07, 0x68, 0x6f, 0x74, 0x53, 0x74, 0x61, 0x72, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x68, 0x6f, 0x74, 0x53, 0x74, 0x61, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x18, 0x0f,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x10, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0xb6, 0x01, 0x0a,
	0x16, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x50, 0x61, 0x67, 0x65,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x36, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x72, 0x74,
	0x69, 0x63, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x50, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a,
	0x09, 0x73, 0x6f, 0x72, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x09, 0x73, 0x6f, 0x72, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x73,
	0x6f, 0x72, 0x74, 0x4b, 0x65, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x6f,
	0x72, 0x74, 0x4b, 0x65, 0x79, 0x22, 0xa4, 0x01, 0x0a, 0x1a, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x50, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x42, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x42, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x78, 0x0a, 0x17,
	0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x50, 0x61, 0x67, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d,
	0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x37, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x63, 0x6d,
	0x73, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x50, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xb0, 0x01, 0x0a, 0x1b, 0x41, 0x72, 0x74, 0x69, 0x63,
	0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x50, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x70, 0x61, 0x67, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x12, 0x37, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23,
	0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x50, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x49,
	0x74, 0x65, 0x6d, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x99, 0x02, 0x0a, 0x1b, 0x41, 0x72,
	0x74, 0x69, 0x63, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x50, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x44, 0x61, 0x74, 0x61, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x6e,
	0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e,
	0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x55, 0x73, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x6d, 0x67, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x69, 0x6d, 0x67, 0x22, 0x22, 0x0a, 0x10, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x68, 0x0a, 0x11, 0x41, 0x72, 0x74,
	0x69, 0x63, 0x6c, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6d, 0x73, 0x67, 0x12, 0x2d, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x72, 0x74, 0x69,
	0x63, 0x6c, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x22, 0xa9, 0x02, 0x0a, 0x11, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x6e,
	0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e,
	0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x55, 0x73, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x10, 0x0a,
	0x03, 0x69, 0x6d, 0x67, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x69, 0x6d, 0x67, 0x22,
	0x99, 0x01, 0x0a, 0x0d, 0x41, 0x64, 0x64, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x65,
	0x71, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x73,
	0x6f, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12,
	0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x6d, 0x67,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x69, 0x6d, 0x67, 0x22, 0x4a, 0x0a, 0x0e, 0x41,
	0x64, 0x64, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6d, 0x73, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xac, 0x01, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08,
	0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x6d, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x69, 0x6d, 0x67, 0x22, 0x4d, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73,
	0x67, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x22, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41,
	0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x4d, 0x0a, 0x11, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6d, 0x73, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x79, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x41,
	0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a,
	0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73,
	0x6f, 0x72, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09,
	0x73, 0x6f, 0x72, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x6f, 0x72,
	0x74, 0x4b, 0x65, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x6f, 0x72, 0x74,
	0x4b, 0x65, 0x79, 0x22, 0x6a, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c,
	0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12,
	0x2e, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c,
	0x65, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22,
	0xa2, 0x01, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x70, 0x61, 0x67, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x12, 0x32, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69, 0x63,
	0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04,
	0x6c, 0x69, 0x73, 0x74, 0x22, 0xba, 0x01, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69,
	0x63, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x49, 0x74, 0x65, 0x6d, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x10, 0x0a, 0x03, 0x69, 0x6d, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x69, 0x6d,
	0x67, 0x22, 0x35, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f,
	0x6e, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x6b, 0x70, 0x69, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08,
	0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x22, 0x7a, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x50,
	0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x6b, 0x70, 0x69,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x38, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70,
	0x63, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x65,
	0x76, 0x65, 0x6c, 0x6b, 0x70, 0x69, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x22, 0xdb, 0x01, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6d,
	0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x6b, 0x70, 0x69, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3d, 0x0a, 0x06, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x47,
	0x65, 0x74, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x65, 0x76, 0x65, 0x6c,
	0x6b, 0x70, 0x69, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x06, 0x6c, 0x65,
	0x76, 0x65, 0x6c, 0x73, 0x12, 0x37, 0x0a, 0x04, 0x6b, 0x70, 0x69, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x23, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x50,
	0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x6b, 0x70, 0x69,
	0x44, 0x61, 0x74, 0x61, 0x4b, 0x70, 0x69, 0x52, 0x04, 0x6b, 0x70, 0x69, 0x73, 0x12, 0x43, 0x0a,
	0x08, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x27, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6d,
	0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x6b, 0x70, 0x69, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x52, 0x08, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72,
	0x65, 0x73, 0x22, 0xbb, 0x01, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74,
	0x69, 0x6f, 0x6e, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x6b, 0x70, 0x69, 0x44, 0x61, 0x74, 0x61, 0x4c,
	0x65, 0x76, 0x65, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x6e, 0x65, 0x67, 0x61, 0x74, 0x69, 0x76, 0x65, 0x5f,
	0x70, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6e, 0x65,
	0x67, 0x61, 0x74, 0x69, 0x76, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x12, 0x23, 0x0a, 0x0d,
	0x72, 0x65, 0x76, 0x65, 0x6e, 0x75, 0x65, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x76, 0x65, 0x6e, 0x75, 0x65, 0x53, 0x68, 0x61, 0x72,
	0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x61, 0x78, 0x5f, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x61, 0x78, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x22, 0xc1, 0x01, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f,
	0x6e, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x6b, 0x70, 0x69, 0x44, 0x61, 0x74, 0x61, 0x4b, 0x70, 0x69,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x1f, 0x0a, 0x0b, 0x77, 0x65, 0x65, 0x6b, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x77, 0x65, 0x65, 0x6b, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x12, 0x29, 0x0a, 0x10, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x5f,
	0x75, 0x73, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x72, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x55, 0x73, 0x65, 0x72, 0x73, 0x12, 0x1d, 0x0a, 0x0a,
	0x70, 0x61, 0x69, 0x64, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x70, 0x61, 0x69, 0x64, 0x55, 0x73, 0x65, 0x72, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x6e,
	0x65, 0x67, 0x61, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6e, 0x65, 0x67, 0x61, 0x74, 0x69, 0x76, 0x65, 0x50, 0x72,
	0x6f, 0x66, 0x69, 0x74, 0x22, 0xe4, 0x01, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6d,
	0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x6b, 0x70, 0x69, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x65, 0x6f, 0x70,
	0x6c, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x65,
	0x6f, 0x70, 0x6c, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x34, 0x0a, 0x16, 0x6d, 0x6f, 0x6e, 0x74, 0x68,
	0x5f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x5f, 0x75, 0x73, 0x65, 0x72,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x14, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x52, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x55, 0x73, 0x65, 0x72, 0x73, 0x12, 0x28, 0x0a,
	0x10, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x5f, 0x70, 0x61, 0x69, 0x64, 0x5f, 0x75, 0x73, 0x65, 0x72,
	0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x50, 0x61,
	0x69, 0x64, 0x55, 0x73, 0x65, 0x72, 0x73, 0x12, 0x32, 0x0a, 0x15, 0x6d, 0x6f, 0x6e, 0x74, 0x68,
	0x5f, 0x6e, 0x65, 0x67, 0x61, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x4e, 0x65, 0x67,
	0x61, 0x74, 0x69, 0x76, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x22, 0xb2, 0x01, 0x0a, 0x14,
	0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69,
	0x7a, 0x65, 0x12, 0x34, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x20, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73,
	0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x6f, 0x72, 0x74,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x73, 0x6f, 0x72,
	0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x4b, 0x65,
	0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x4b, 0x65, 0x79,
	0x22, 0x5a, 0x0a, 0x18, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x44, 0x61, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x61, 0x6e, 0x67,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x22, 0x74, 0x0a, 0x15,
	0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x35, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x63, 0x6d, 0x73, 0x72,
	0x70, 0x63, 0x2e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x22, 0xb0, 0x01, 0x0a, 0x19, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x18, 0x0a, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61,
	0x67, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x70, 0x61, 0x67, 0x65, 0x73,
	0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04,
	0x73, 0x69, 0x7a, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x39, 0x0a, 0x04, 0x6c, 0x69,
	0x73, 0x74, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70,
	0x63, 0x2e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x44, 0x61, 0x74, 0x61, 0x49, 0x74, 0x65, 0x6d, 0x52,
	0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0xc7, 0x02, 0x0a, 0x1d, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73,
	0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x44,
	0x61, 0x74, 0x61, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75,
	0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75,
	0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x67,
	0x72, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x67,
	0x72, 0x61, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x67, 0x6f, 0x6c, 0x64, 0x43, 0x6f, 0x69, 0x6e, 0x73,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x67, 0x6f, 0x6c, 0x64, 0x43, 0x6f, 0x69, 0x6e,
	0x73, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a,
	0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1f,
	0x0a, 0x0b, 0x72, 0x65, 0x61, 0x6c, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x72, 0x65, 0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22,
	0x25, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x73, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x6e, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x69,
	0x6e, 0x74, 0x73, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6d, 0x73, 0x67, 0x12, 0x30, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x50,
	0x6f, 0x69, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xbe, 0x02, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x50, 0x6f,
	0x69, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x67,
	0x6f, 0x6c, 0x64, 0x43, 0x6f, 0x69, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x67, 0x6f, 0x6c, 0x64, 0x43, 0x6f, 0x69, 0x6e, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6d, 0x61,
	0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x75,
	0x73, 0x65, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x61, 0x6c, 0x5f, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x72, 0x65, 0x61,
	0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xce, 0x01, 0x0a, 0x13, 0x41, 0x64, 0x64, 0x50,
	0x6f, 0x69, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x52, 0x65, 0x71, 0x12,
	0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x67,
	0x6f, 0x6c, 0x64, 0x43, 0x6f, 0x69, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x67, 0x6f, 0x6c, 0x64, 0x43, 0x6f, 0x69, 0x6e, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6d, 0x61,
	0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x61, 0x6c, 0x5f,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x72, 0x65,
	0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x3c, 0x0a, 0x14, 0x41, 0x64, 0x64, 0x50,
	0x6f, 0x69, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0xe1, 0x01, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x52, 0x65,
	0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x12, 0x1c, 0x0a,
	0x09, 0x67, 0x6f, 0x6c, 0x64, 0x43, 0x6f, 0x69, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x67, 0x6f, 0x6c, 0x64, 0x43, 0x6f, 0x69, 0x6e, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x69,
	0x6d, 0x61, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x61,
	0x6c, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a,
	0x72, 0x65, 0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x3f, 0x0a, 0x17, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x28, 0x0a, 0x16, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x73, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x3f, 0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50,
	0x6f, 0x69, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0xc6, 0x01, 0x0a, 0x20, 0x43, 0x6f, 0x6d, 0x70, 0x65,
	0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x3c, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63,
	0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x65, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x61, 0x6e, 0x6b,
	0x69, 0x6e, 0x67, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x52, 0x65, 0x71, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x6f, 0x72, 0x74, 0x46,
	0x69, 0x65, 0x6c, 0x64, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x73, 0x6f, 0x72, 0x74,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x4b, 0x65, 0x79,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x4b, 0x65, 0x79, 0x22,
	0x7a, 0x0a, 0x20, 0x43, 0x6f, 0x6d, 0x70, 0x65, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x61,
	0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x52, 0x65, 0x71, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x72,
	0x6f, 0x6f, 0x6d, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x72,
	0x6f, 0x6f, 0x6d, 0x46, 0x65, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x72,
	0x65, 0x77, 0x61, 0x72, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x88, 0x01, 0x0a, 0x21,
	0x43, 0x6f, 0x6d, 0x70, 0x65, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x61, 0x6e, 0x6b, 0x69,
	0x6e, 0x67, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x3d, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x43,
	0x6f, 0x6d, 0x70, 0x65, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e,
	0x67, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xc0, 0x01, 0x0a, 0x21, 0x43, 0x6f, 0x6d, 0x70, 0x65,
	0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x65, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x70, 0x61, 0x67, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04,
	0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x41, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x05,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x6f,
	0x6d, 0x70, 0x65, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67,
	0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x49,
	0x74, 0x65, 0x6d, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0xe4, 0x02, 0x0a, 0x25, 0x43, 0x6f,
	0x6d, 0x70, 0x65, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67,
	0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x49,
	0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x66, 0x65, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x72, 0x6f, 0x6f, 0x6d, 0x46, 0x65, 0x65, 0x12, 0x19,
	0x0a, 0x08, 0x6d, 0x69, 0x6e, 0x5f, 0x72, 0x61, 0x6e, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x6d, 0x69, 0x6e, 0x52, 0x61, 0x6e, 0x6b, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x61, 0x78,
	0x5f, 0x72, 0x61, 0x6e, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6d, 0x61, 0x78,
	0x52, 0x61, 0x6e, 0x6b, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x72, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x6f, 0x6c,
	0x64, 0x5f, 0x63, 0x6f, 0x69, 0x6e, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x67,
	0x6f, 0x6c, 0x64, 0x43, 0x6f, 0x69, 0x6e, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c,
	0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x21, 0x0a, 0x0c,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x55, 0x73, 0x65, 0x72, 0x12,
	0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x61, 0x6c, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x72, 0x65, 0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x22, 0x31, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x65, 0x74, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73,
	0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x22, 0x86, 0x01, 0x0a, 0x20, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x65,
	0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x3c,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x63,
	0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x65, 0x74, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x73, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xdf, 0x02, 0x0a,
	0x20, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x65, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x72, 0x6f, 0x6f, 0x6d, 0x46, 0x65, 0x65, 0x12, 0x19, 0x0a, 0x08,
	0x6d, 0x69, 0x6e, 0x5f, 0x72, 0x61, 0x6e, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x6d, 0x69, 0x6e, 0x52, 0x61, 0x6e, 0x6b, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x61, 0x78, 0x5f, 0x72,
	0x61, 0x6e, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6d, 0x61, 0x78, 0x52, 0x61,
	0x6e, 0x6b, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x72, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x6f, 0x6c, 0x64, 0x5f,
	0x63, 0x6f, 0x69, 0x6e, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x67, 0x6f, 0x6c,
	0x64, 0x43, 0x6f, 0x69, 0x6e, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c,
	0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1f, 0x0a,
	0x0b, 0x72, 0x65, 0x61, 0x6c, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0a, 0x72, 0x65, 0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xef,
	0x01, 0x0a, 0x1f, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x6d, 0x70, 0x65, 0x74, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x52,
	0x65, 0x71, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x72, 0x6f, 0x6f, 0x6d, 0x46, 0x65, 0x65, 0x12, 0x19, 0x0a,
	0x08, 0x6d, 0x69, 0x6e, 0x5f, 0x72, 0x61, 0x6e, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x6d, 0x69, 0x6e, 0x52, 0x61, 0x6e, 0x6b, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x61, 0x78, 0x5f,
	0x72, 0x61, 0x6e, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6d, 0x61, 0x78, 0x52,
	0x61, 0x6e, 0x6b, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x72, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x6f, 0x6c, 0x64,
	0x5f, 0x63, 0x6f, 0x69, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x67, 0x6f,
	0x6c, 0x64, 0x43, 0x6f, 0x69, 0x6e, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x61, 0x6c, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x72, 0x65, 0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x22, 0x48, 0x0a, 0x20, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x6d, 0x70, 0x65, 0x74, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x82, 0x02, 0x0a, 0x22, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x65, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x52, 0x65,
	0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x72, 0x6f, 0x6f, 0x6d, 0x46, 0x65, 0x65, 0x12, 0x19, 0x0a, 0x08,
	0x6d, 0x69, 0x6e, 0x5f, 0x72, 0x61, 0x6e, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x6d, 0x69, 0x6e, 0x52, 0x61, 0x6e, 0x6b, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x61, 0x78, 0x5f, 0x72,
	0x61, 0x6e, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6d, 0x61, 0x78, 0x52, 0x61,
	0x6e, 0x6b, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x72, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x6f, 0x6c, 0x64, 0x5f,
	0x63, 0x6f, 0x69, 0x6e, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x67, 0x6f, 0x6c,
	0x64, 0x43, 0x6f, 0x69, 0x6e, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1f,
	0x0a, 0x0b, 0x72, 0x65, 0x61, 0x6c, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x72, 0x65, 0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22,
	0x4b, 0x0a, 0x23, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x65, 0x74, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73,
	0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x34, 0x0a, 0x22,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x65, 0x74, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x52,
	0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x69, 0x64, 0x22, 0x4b, 0x0a, 0x23, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x70,
	0x65, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22,
	0x29, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x52,
	0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x22, 0x60, 0x0a, 0x10, 0x47, 0x65,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6d, 0x73, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x22, 0x54, 0x0a, 0x14,
	0x55, 0x73, 0x65, 0x72, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73,
	0x5f, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73,
	0x49, 0x64, 0x22, 0x3d, 0x0a, 0x15, 0x55, 0x73, 0x65, 0x72, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x45,
	0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73,
	0x67, 0x22, 0xc0, 0x01, 0x0a, 0x1d, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x43, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a,
	0x65, 0x12, 0x39, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x25, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x43,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52,
	0x65, 0x71, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09,
	0x73, 0x6f, 0x72, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x09, 0x73, 0x6f, 0x72, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x6f,
	0x72, 0x74, 0x4b, 0x65, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x6f, 0x72,
	0x74, 0x4b, 0x65, 0x79, 0x22, 0xc4, 0x01, 0x0a, 0x1d, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x43,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52,
	0x65, 0x71, 0x44, 0x61, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x17,
	0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x73, 0x5f, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x73, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x75,
	0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75,
	0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x82, 0x01, 0x0a, 0x1e,
	0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6d, 0x73, 0x67, 0x12, 0x3a, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x26, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x50, 0x6f, 0x69, 0x6e,
	0x74, 0x73, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x22, 0xba, 0x01, 0x0a, 0x1e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x43, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x70, 0x61, 0x67, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x70, 0x61,
	0x67, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x3e, 0x0a,
	0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x63, 0x6d,
	0x73, 0x72, 0x70, 0x63, 0x2e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x43, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x44,
	0x61, 0x74, 0x61, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0xaa, 0x03,
	0x0a, 0x22, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61,
	0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x5f, 0x72,
	0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x49, 0x64,
	0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65,
	0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65,
	0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f,
	0x72, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x21, 0x0a, 0x0c, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x55, 0x73,
	0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f,
	0x69, 0x6e, 0x5f, 0x62, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x0a, 0x63, 0x6f, 0x69, 0x6e, 0x42, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x67,
	0x6f, 0x6c, 0x64, 0x5f, 0x63, 0x6f, 0x69, 0x6e, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x67, 0x6f, 0x6c, 0x64, 0x43, 0x6f, 0x69, 0x6e, 0x73, 0x22, 0xb8, 0x01, 0x0a, 0x17, 0x50,
	0x6f, 0x69, 0x6e, 0x74, 0x73, 0x55, 0x73, 0x65, 0x72, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04,
	0x73, 0x69, 0x7a, 0x65, 0x12, 0x37, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x23, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x50, 0x6f, 0x69, 0x6e,
	0x74, 0x73, 0x55, 0x73, 0x65, 0x72, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a,
	0x09, 0x73, 0x6f, 0x72, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x09, 0x73, 0x6f, 0x72, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x73,
	0x6f, 0x72, 0x74, 0x4b, 0x65, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x6f,
	0x72, 0x74, 0x4b, 0x65, 0x79, 0x22, 0xb5, 0x01, 0x0a, 0x1b, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73,
	0x55, 0x73, 0x65, 0x72, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x44, 0x61, 0x74, 0x61, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d,
	0x0a, 0x0a, 0x67, 0x6f, 0x6c, 0x64, 0x5f, 0x63, 0x6f, 0x69, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x67, 0x6f, 0x6c, 0x64, 0x43, 0x6f, 0x69, 0x6e, 0x73, 0x12, 0x1a, 0x0a,
	0x08, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65,
	0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65,
	0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x76, 0x0a,
	0x18, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x55, 0x73, 0x65, 0x72, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12,
	0x34, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e,
	0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x55, 0x73, 0x65,
	0x72, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xae, 0x01, 0x0a, 0x18, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73,
	0x55, 0x73, 0x65, 0x72, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x70, 0x61, 0x67, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x70, 0x61, 0x67,
	0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x38, 0x0a, 0x04,
	0x6c, 0x69, 0x73, 0x74, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x63, 0x6d, 0x73,
	0x72, 0x70, 0x63, 0x2e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x55, 0x73, 0x65, 0x72, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x49, 0x74, 0x65, 0x6d,
	0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0xe7, 0x02, 0x0a, 0x1c, 0x50, 0x6f, 0x69, 0x6e, 0x74,
	0x73, 0x55, 0x73, 0x65, 0x72, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x44,
	0x61, 0x74, 0x61, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x66, 0x74, 0x65, 0x72, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x61, 0x66, 0x74, 0x65, 0x72, 0x53, 0x63, 0x6f, 0x72,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x21, 0x0a,
	0x0c, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x55, 0x73, 0x65, 0x72,
	0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x69, 0x6e, 0x5f, 0x62, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0a, 0x63, 0x6f, 0x69, 0x6e, 0x42, 0x65, 0x66, 0x6f, 0x72,
	0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x6f, 0x6c, 0x64, 0x5f, 0x63, 0x6f, 0x69, 0x6e, 0x73, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x67, 0x6f, 0x6c, 0x64, 0x43, 0x6f, 0x69, 0x6e, 0x73,
	0x22, 0x34, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e,
	0x61, 0x6c, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x22, 0x53, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f,
	0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x9a, 0x02, 0x0a, 0x16,
	0x55, 0x73, 0x65, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73,
	0x53, 0x75, 0x6d, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x6c, 0x65, 0x76, 0x65, 0x6c, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6c,
	0x65, 0x76, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x48, 0x01, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x88, 0x01, 0x01, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x42, 0x09, 0x0a,
	0x07, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x74, 0x0a, 0x17, 0x55, 0x73, 0x65, 0x72,
	0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x53, 0x75, 0x6d, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x33, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x73, 0x53, 0x75, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x63,
	0x0a, 0x17, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x73, 0x53, 0x75, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x43, 0x6f, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x43, 0x6f, 0x69, 0x6e, 0x12, 0x2a, 0x0a, 0x10, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x43, 0x6f, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x10, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x43,
	0x6f, 0x69, 0x6e, 0x22, 0xb3, 0x01, 0x0a, 0x17, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x65, 0x76, 0x65,
	0x6c, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12,
	0x18, 0x0a, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x32, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x63, 0x6d,
	0x73, 0x72, 0x70, 0x63, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x73, 0x53, 0x75, 0x6d, 0x52, 0x65, 0x71, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x6f, 0x72, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x73, 0x6f, 0x72, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12,
	0x18, 0x0a, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x4b, 0x65, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x4b, 0x65, 0x79, 0x22, 0x76, 0x0a, 0x18, 0x55, 0x73, 0x65,
	0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x34, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x63, 0x6d, 0x73, 0x72,
	0x70, 0x63, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x22, 0xae, 0x01, 0x0a, 0x18, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52,
	0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x65,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x70, 0x61, 0x67, 0x65, 0x73, 0x12, 0x12,
	0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69,
	0x7a, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x38, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74,
	0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73,
	0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x6c, 0x69,
	0x73, 0x74, 0x22, 0xfa, 0x02, 0x0a, 0x1c, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c,
	0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x49,
	0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x07, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x6c,
	0x65, 0x76, 0x65, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x6c, 0x65, 0x76, 0x65, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x69, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x02, 0x52, 0x04, 0x63, 0x6f, 0x69,
	0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x6c, 0x6f, 0x77, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x66, 0x6c, 0x6f, 0x77, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x12,
	0x14, 0x0a, 0x05, 0x63, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05,
	0x63, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x41, 0x74, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a,
	0x09, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x41, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x41, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x22,
	0x56, 0x0a, 0x18, 0x53, 0x61, 0x76, 0x65, 0x4f, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x22, 0x55, 0x0a, 0x19, 0x53, 0x61, 0x76, 0x65, 0x4f,
	0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xad,
	0x02, 0x0a, 0x0b, 0x41, 0x64, 0x64, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x1a,
	0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x48, 0x61, 0x73, 0x68, 0x12,
	0x19, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x64,
	0x6d, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x61, 0x64,
	0x6d, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x07, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x49,
	0x64, 0x88, 0x01, 0x01, 0x12, 0x26, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x0b, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x88, 0x01, 0x01, 0x12, 0x2e, 0x0a, 0x10,
	0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x0f, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61,
	0x6e, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x88, 0x01, 0x01, 0x42, 0x0a, 0x0a, 0x08,
	0x5f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x42, 0x13, 0x0a, 0x11, 0x5f, 0x6d, 0x65,
	0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x62,
	0x0a, 0x0c, 0x41, 0x64, 0x64, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6d, 0x73, 0x67, 0x12, 0x2c, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x64, 0x64, 0x41,
	0x64, 0x6d, 0x69, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x22, 0x29, 0x0a, 0x10, 0x41, 0x64, 0x64, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x12, 0x15, 0x0a, 0x06, 0x6d, 0x73, 0x67, 0x5f, 0x7a, 0x68,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x73, 0x67, 0x5a, 0x68, 0x22, 0x8d, 0x02,
	0x0a, 0x0d, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6e, 0x75, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x65, 0x6e, 0x75, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x15, 0x0a, 0x03, 0x70, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x48,
	0x00, 0x52, 0x03, 0x70, 0x69, 0x64, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x69, 0x63, 0x6f,
	0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x88,
	0x01, 0x01, 0x12, 0x1c, 0x0a, 0x07, 0x69, 0x73, 0x5f, 0x6d, 0x65, 0x6e, 0x75, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x05, 0x48, 0x02, 0x52, 0x06, 0x69, 0x73, 0x4d, 0x65, 0x6e, 0x75, 0x88, 0x01, 0x01,
	0x12, 0x25, 0x0a, 0x0c, 0x69, 0x73, 0x5f, 0x72, 0x61, 0x63, 0x65, 0x5f, 0x6d, 0x65, 0x6e, 0x75,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x48, 0x03, 0x52, 0x0a, 0x69, 0x73, 0x52, 0x61, 0x63, 0x65,
	0x4d, 0x65, 0x6e, 0x75, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x48, 0x04, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x88, 0x01, 0x01, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x70, 0x69, 0x64, 0x42, 0x07, 0x0a, 0x05,
	0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x69, 0x73, 0x5f, 0x6d, 0x65, 0x6e,
	0x75, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x69, 0x73, 0x5f, 0x72, 0x61, 0x63, 0x65, 0x5f, 0x6d, 0x65,
	0x6e, 0x75, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x4a, 0x0a,
	0x0e, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xbb, 0x01, 0x0a, 0x18, 0x49, 0x6e,
	0x73, 0x65, 0x72, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x41, 0x75, 0x74, 0x68, 0x4d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x19, 0x0a, 0x05,
	0x72, 0x75, 0x6c, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x05, 0x72,
	0x75, 0x6c, 0x65, 0x73, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x48, 0x01, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x88, 0x01, 0x01, 0x12, 0x29, 0x0a, 0x0e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x48, 0x02, 0x52, 0x0c,
	0x61, 0x64, 0x6d, 0x69, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x88, 0x01, 0x01, 0x42,
	0x08, 0x0a, 0x06, 0x5f, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x22, 0x55, 0x0a, 0x19, 0x49, 0x6e, 0x73, 0x65, 0x72,
	0x74, 0x52, 0x6f, 0x6c, 0x65, 0x41, 0x75, 0x74, 0x68, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xba,
	0x01, 0x0a, 0x18, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x38, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x67, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x6f, 0x72, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x73, 0x6f, 0x72, 0x74, 0x46, 0x69, 0x65, 0x6c,
	0x64, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x4b, 0x65, 0x79, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x4b, 0x65, 0x79, 0x22, 0xe1, 0x02, 0x0a, 0x1c,
	0x4c, 0x69, 0x73, 0x74, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x4c, 0x6f, 0x67, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x12, 0x15, 0x0a, 0x03,
	0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x03, 0x75, 0x69, 0x64,
	0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d,
	0x65, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x6d, 0x65, 0x6e, 0x75, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x02, 0x52, 0x04, 0x6d, 0x65, 0x6e, 0x75, 0x88, 0x01, 0x01, 0x12, 0x21, 0x0a,
	0x09, 0x6d, 0x65, 0x6e, 0x75, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03,
	0x48, 0x03, 0x52, 0x09, 0x6d, 0x65, 0x6e, 0x75, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x88, 0x01, 0x01,
	0x12, 0x1d, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x04, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12,
	0x13, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48, 0x05, 0x52, 0x02, 0x69,
	0x70, 0x88, 0x01, 0x01, 0x12, 0x21, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x48, 0x06, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x48, 0x07, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54,
	0x69, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x75, 0x69, 0x64, 0x42, 0x0b,
	0x0a, 0x09, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x07, 0x0a, 0x05, 0x5f,
	0x6d, 0x65, 0x6e, 0x75, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x6d, 0x65, 0x6e, 0x75, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x42, 0x05,
	0x0a, 0x03, 0x5f, 0x69, 0x70, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54,
	0x69, 0x6d, 0x65, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22,
	0x78, 0x0a, 0x19, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d,
	0x73, 0x67, 0x12, 0x35, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x21, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x64,
	0x6d, 0x69, 0x6e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x67, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xb0, 0x01, 0x0a, 0x19, 0x4c, 0x69,
	0x73, 0x74, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x4c, 0x6f, 0x67, 0x44, 0x61, 0x74, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x70, 0x61, 0x67, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x12, 0x39, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x25, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x64, 0x6d,
	0x69, 0x6e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x67, 0x44, 0x61,
	0x74, 0x61, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x81, 0x03, 0x0a,
	0x1d, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x67, 0x44, 0x61, 0x74, 0x61, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10,
	0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x69, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x65, 0x6e, 0x75, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6d, 0x65, 0x6e, 0x75, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x65, 0x6e, 0x75, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6d, 0x65, 0x6e, 0x75, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x70, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65,
	0x22, 0xb2, 0x01, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x4c, 0x6f,
	0x67, 0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x34, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x4c, 0x6f, 0x67,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a,
	0x09, 0x73, 0x6f, 0x72, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x09, 0x73, 0x6f, 0x72, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x73,
	0x6f, 0x72, 0x74, 0x4b, 0x65, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x6f,
	0x72, 0x74, 0x4b, 0x65, 0x79, 0x22, 0xdf, 0x01, 0x0a, 0x18, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x64,
	0x6d, 0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x65, 0x71, 0x12, 0x15, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x48,
	0x00, 0x52, 0x03, 0x75, 0x69, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x75, 0x73, 0x65,
	0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x08, 0x75,
	0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x13, 0x0a, 0x02, 0x69, 0x70,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x02, 0x69, 0x70, 0x88, 0x01, 0x01, 0x12,
	0x21, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x48, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x88,
	0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x03, 0x48, 0x04, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x88, 0x01,
	0x01, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x75, 0x69, 0x64, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x75, 0x73,
	0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x05, 0x0a, 0x03, 0x5f, 0x69, 0x70, 0x42, 0x0c, 0x0a,
	0x0a, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x42, 0x0a, 0x0a, 0x08, 0x5f,
	0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x70, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x41,
	0x64, 0x6d, 0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x31, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xa8, 0x01, 0x0a, 0x15, 0x4c, 0x69,
	0x73, 0x74, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x70, 0x61, 0x67, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x70, 0x61,
	0x67, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x35, 0x0a,
	0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x63, 0x6d,
	0x73, 0x72, 0x70, 0x63, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x4c, 0x6f,
	0x67, 0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x44, 0x61, 0x74, 0x61, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04,
	0x6c, 0x69, 0x73, 0x74, 0x22, 0xf7, 0x01, 0x0a, 0x19, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x64, 0x6d,
	0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x44, 0x61, 0x74, 0x61, 0x49, 0x74,
	0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x03, 0x75, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70,
	0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c,
	0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09,
	0x75, 0x73, 0x65, 0x72, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x75, 0x73, 0x65, 0x72, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x2a,
	0x0a, 0x18, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x4c, 0x6f, 0x67, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x78, 0x0a, 0x19, 0x41, 0x64,
	0x6d, 0x69, 0x6e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x67, 0x4d,
	0x65, 0x6e, 0x75, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d,
	0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x35, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x63, 0x6d,
	0x73, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x67, 0x4d, 0x65, 0x6e, 0x75, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x22, 0x4d, 0x0a, 0x19, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x67, 0x4d, 0x65, 0x6e, 0x75, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x65, 0x6e, 0x75, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6d, 0x65, 0x6e, 0x75, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x65, 0x6e, 0x75, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6d, 0x65, 0x6e, 0x75, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x22, 0xb6, 0x01, 0x0a, 0x16, 0x50, 0x61, 0x67, 0x63, 0x6f, 0x72, 0x44, 0x61,
	0x69, 0x6c, 0x79, 0x54, 0x61, 0x78, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x36, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x63, 0x6d, 0x73,
	0x72, 0x70, 0x63, 0x2e, 0x50, 0x61, 0x67, 0x63, 0x6f, 0x72, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x54,
	0x61, 0x78, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x6f, 0x72, 0x74, 0x46, 0x69, 0x65, 0x6c,
	0x64, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x73, 0x6f, 0x72, 0x74, 0x46, 0x69, 0x65,
	0x6c, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x4b, 0x65, 0x79, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x4b, 0x65, 0x79, 0x22, 0xa2, 0x01, 0x0a,
	0x1a, 0x50, 0x61, 0x67, 0x63, 0x6f, 0x72, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x54, 0x61, 0x78, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x74,
	0x69, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x74,
	0x69, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x30, 0x0a, 0x13, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x53, 0x75, 0x62, 0x74, 0x79,
	0x70, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x03, 0x52, 0x13, 0x70, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x53, 0x75, 0x62, 0x74, 0x79, 0x70, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x22, 0x74, 0x0a, 0x17, 0x50, 0x61, 0x67, 0x63, 0x6f, 0x72, 0x44, 0x61, 0x69, 0x6c, 0x79,
	0x54, 0x61, 0x78, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d,
	0x73, 0x67, 0x12, 0x33, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1f, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x50, 0x61, 0x67, 0x63, 0x6f, 0x72,
	0x44, 0x61, 0x69, 0x6c, 0x79, 0x54, 0x61, 0x78, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xdb, 0x01, 0x0a, 0x17, 0x50, 0x61, 0x67, 0x63,
	0x6f, 0x72, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x54, 0x61, 0x78, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x3f, 0x0a, 0x08, 0x64, 0x61, 0x74,
	0x61, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x63, 0x6d,
	0x73, 0x72, 0x70, 0x63, 0x2e, 0x50, 0x61, 0x67, 0x63, 0x6f, 0x72, 0x44, 0x61, 0x69, 0x6c, 0x79,
	0x54, 0x61, 0x78, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x49, 0x74, 0x65, 0x6d,
	0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x49, 0x0a, 0x0d, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x23, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x50, 0x61, 0x67, 0x63, 0x6f,
	0x72, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x54, 0x61, 0x78, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x61,
	0x74, 0x61, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x0d, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x44, 0x61, 0x74,
	0x61, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x57, 0x0a, 0x1b, 0x50, 0x61, 0x67, 0x63, 0x6f, 0x72, 0x44,
	0x61, 0x69, 0x6c, 0x79, 0x54, 0x61, 0x78, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61,
	0x49, 0x74, 0x65, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x74, 0x61, 0x78, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x74, 0x61, 0x78, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x30,
	0x0a, 0x09, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x52, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x05, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x05, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x88, 0x01, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x22, 0x46, 0x0a, 0x0a, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6d, 0x73, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x8b, 0x01, 0x0a, 0x13, 0x54, 0x6f, 0x74,
	0x61, 0x6c, 0x41, 0x77, 0x61, 0x72, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x73, 0x75, 0x70, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x73, 0x75, 0x70, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65,
	0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x50, 0x0a, 0x14, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x41,
	0x77, 0x61, 0x72, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6d, 0x73, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xac, 0x01, 0x0a, 0x11, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x50, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x31, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x63, 0x6d, 0x73,
	0x72, 0x70, 0x63, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x50, 0x61, 0x67, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12,
	0x1c, 0x0a, 0x09, 0x73, 0x6f, 0x72, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x09, 0x73, 0x6f, 0x72, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x18, 0x0a,
	0x07, 0x73, 0x6f, 0x72, 0x74, 0x4b, 0x65, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x73, 0x6f, 0x72, 0x74, 0x4b, 0x65, 0x79, 0x22, 0xd8, 0x01, 0x0a, 0x15, 0x52, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x50, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65,
	0x71, 0x12, 0x1f, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x88,
	0x01, 0x01, 0x12, 0x25, 0x0a, 0x0b, 0x73, 0x75, 0x70, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x0b, 0x73, 0x75, 0x70, 0x55, 0x73,
	0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x21, 0x0a, 0x09, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x48, 0x02, 0x52, 0x09,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07,
	0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x48, 0x03, 0x52,
	0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x42, 0x0b, 0x0a, 0x09, 0x5f,
	0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x73, 0x75, 0x70,
	0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x65, 0x6e, 0x64, 0x54, 0x69,
	0x6d, 0x65, 0x22, 0x6a, 0x0a, 0x12, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x50, 0x61, 0x67, 0x65,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x2e,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x63,
	0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x50, 0x61, 0x67, 0x65,
	0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xa2,
	0x01, 0x0a, 0x12, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x50, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x70, 0x61, 0x67, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12,
	0x32, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e,
	0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x50, 0x61, 0x67,
	0x65, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x6c,
	0x69, 0x73, 0x74, 0x22, 0xac, 0x02, 0x0a, 0x16, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x50, 0x61,
	0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x75, 0x70, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x75, 0x70, 0x55, 0x73, 0x65, 0x72,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x79, 0x73, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x04, 0x64, 0x61, 0x79, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x77, 0x61, 0x72,
	0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0b, 0x61,
	0x77, 0x61, 0x72, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x75,
	0x64, 0x69, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a,
	0x61, 0x75, 0x64, 0x69, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x68,
	0x65, 0x63, 0x6b, 0x49, 0x6e, 0x41, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63,
	0x68, 0x65, 0x63, 0x6b, 0x49, 0x6e, 0x41, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x20, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x22, 0x28, 0x0a, 0x16, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x6e, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x53, 0x0a, 0x17,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d,
	0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x12, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x22, 0xb2, 0x01, 0x0a, 0x14, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x42,
	0x6c, 0x6f, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x34, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e,
	0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x6c, 0x6f, 0x67, 0x4c, 0x69, 0x73,
	0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1c,
	0x0a, 0x09, 0x73, 0x6f, 0x72, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x09, 0x73, 0x6f, 0x72, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x73, 0x6f, 0x72, 0x74, 0x4b, 0x65, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73,
	0x6f, 0x72, 0x74, 0x4b, 0x65, 0x79, 0x22, 0x9a, 0x01, 0x0a, 0x18, 0x50, 0x72, 0x6f, 0x6d, 0x6f,
	0x74, 0x69, 0x6f, 0x6e, 0x42, 0x6c, 0x6f, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12,
	0x12, 0x0a, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c,
	0x61, 0x6e, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54,
	0x69, 0x6d, 0x65, 0x22, 0x74, 0x0a, 0x15, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e,
	0x42, 0x6c, 0x6f, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d,
	0x73, 0x67, 0x12, 0x35, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x21, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74,
	0x69, 0x6f, 0x6e, 0x42, 0x6c, 0x6f, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x65, 0x73, 0x70, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xe6, 0x01, 0x0a, 0x19, 0x50, 0x72,
	0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x6c, 0x6f, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x70, 0x61, 0x67, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x72, 0x74, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x6f, 0x72, 0x74, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x6f, 0x72,
	0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x6f,
	0x72, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x39, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x50,
	0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x6c, 0x6f, 0x67, 0x4c, 0x69, 0x73, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x52, 0x04, 0x6c, 0x69,
	0x73, 0x74, 0x22, 0x80, 0x03, 0x0a, 0x1d, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e,
	0x42, 0x6c, 0x6f, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x49, 0x74, 0x65, 0x6d,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x12, 0x1b, 0x0a, 0x09, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x5f, 0x73, 0x75, 0x62, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x53, 0x75, 0x62, 0x12, 0x18, 0x0a,
	0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x63, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x72, 0x65, 0x63, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a,
	0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x6f, 0x72,
	0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1a, 0x0a,
	0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x16, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6d,
	0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x22, 0x51, 0x0a,
	0x15, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x43, 0x6f,
	0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73,
	0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x12, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x22, 0x97, 0x01, 0x0a, 0x0f, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x73, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x69, 0x70, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x70, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1a,
	0x0a, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x22, 0x38, 0x0a, 0x10, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6d, 0x73, 0x67, 0x32, 0xa0, 0x3c, 0x0a, 0x06, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x12,
	0x3d, 0x0a, 0x08, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x12, 0x17, 0x2e, 0x63, 0x6d,
	0x73, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x46,
	0x0a, 0x0b, 0x61, 0x64, 0x64, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x12, 0x1a, 0x2e,
	0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x64, 0x64, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x63, 0x6d, 0x73, 0x72,
	0x70, 0x63, 0x2e, 0x41, 0x64, 0x64, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x0e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x19, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70,
	0x63, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x4f, 0x0a, 0x0e, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x12, 0x1d, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1e, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x43, 0x0a, 0x0a, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x19,
	0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x63, 0x6d, 0x73, 0x72,
	0x70, 0x63, 0x2e, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4c, 0x0a, 0x0d, 0x61, 0x64, 0x64, 0x42, 0x61, 0x6e, 0x6e,
	0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1c, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e,
	0x41, 0x64, 0x64, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x64,
	0x64, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x4d, 0x0a, 0x10, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x61, 0x6e,
	0x6e, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1b, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x4c, 0x0a, 0x0d, 0x64, 0x65, 0x6c, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x1c, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x64, 0x65, 0x6c,
	0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1d, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x64, 0x65, 0x6c, 0x42, 0x61,
	0x6e, 0x6e, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x3d, 0x0a, 0x08, 0x62, 0x6c, 0x6f, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x17, 0x2e, 0x63,
	0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x42, 0x6c, 0x6f, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x42,
	0x6c, 0x6f, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x61, 0x0a, 0x14, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x79,
	0x43, 0x6d, 0x73, 0x50, 0x61, 0x67, 0x65, 0x12, 0x23, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63,
	0x2e, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x79, 0x43, 0x6d,
	0x73, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x63,
	0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x43, 0x6c, 0x61, 0x73, 0x73,
	0x69, 0x66, 0x79, 0x43, 0x6d, 0x73, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x5e, 0x0a, 0x13, 0x61, 0x64, 0x64, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x43, 0x6c,
	0x61, 0x73, 0x73, 0x69, 0x66, 0x79, 0x43, 0x6d, 0x73, 0x12, 0x22, 0x2e, 0x63, 0x6d, 0x73, 0x72,
	0x70, 0x63, 0x2e, 0x41, 0x64, 0x64, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x43, 0x6c, 0x61, 0x73, 0x73,
	0x69, 0x66, 0x79, 0x43, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e,
	0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x64, 0x64, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x43,
	0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x79, 0x43, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x61, 0x0a, 0x14, 0x65, 0x64, 0x69, 0x74, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x43,
	0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x79, 0x43, 0x6d, 0x73, 0x12, 0x23, 0x2e, 0x63, 0x6d, 0x73,
	0x72, 0x70, 0x63, 0x2e, 0x45, 0x64, 0x69, 0x74, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x43, 0x6c, 0x61,
	0x73, 0x73, 0x69, 0x66, 0x79, 0x43, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x24, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x45, 0x64, 0x69, 0x74, 0x46, 0x72, 0x6f,
	0x6e, 0x74, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x79, 0x43, 0x6d, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5e, 0x0a, 0x13, 0x64, 0x65, 0x6c, 0x46, 0x72, 0x6f, 0x6e,
	0x74, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x79, 0x43, 0x6d, 0x73, 0x12, 0x22, 0x2e, 0x63,
	0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x44, 0x65, 0x6c, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x43, 0x6c,
	0x61, 0x73, 0x73, 0x69, 0x66, 0x79, 0x43, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x23, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x44, 0x65, 0x6c, 0x46, 0x72, 0x6f,
	0x6e, 0x74, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x79, 0x43, 0x6d, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6a, 0x0a, 0x17, 0x64, 0x65, 0x6c, 0x46, 0x72, 0x6f, 0x6e,
	0x74, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x43, 0x6d, 0x73,
	0x12, 0x26, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x44, 0x65, 0x6c, 0x46, 0x72, 0x6f,
	0x6e, 0x74, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x43, 0x6d,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70,
	0x63, 0x2e, 0x44, 0x65, 0x6c, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69,
	0x66, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x43, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x3d, 0x0a, 0x08, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x42, 0x65, 0x74, 0x12, 0x17, 0x2e,
	0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x70, 0x6f, 0x72, 0x74, 0x42, 0x65, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e,
	0x53, 0x70, 0x6f, 0x72, 0x74, 0x42, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x31, 0x0a, 0x04, 0x68, 0x65, 0x6c, 0x70, 0x12, 0x13, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70,
	0x63, 0x2e, 0x48, 0x65, 0x6c, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e,
	0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x48, 0x65, 0x6c, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a, 0x0c, 0x73, 0x61, 0x76, 0x65, 0x48, 0x65, 0x6c, 0x70, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x1b, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x61, 0x76,
	0x65, 0x48, 0x65, 0x6c, 0x70, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1c, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x61, 0x76, 0x65, 0x48, 0x65,
	0x6c, 0x70, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x52,
	0x0a, 0x0f, 0x47, 0x65, 0x74, 0x48, 0x65, 0x6c, 0x70, 0x54, 0x79, 0x70, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x1e, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x48, 0x65,
	0x6c, 0x70, 0x54, 0x79, 0x70, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1f, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x48, 0x65,
	0x6c, 0x70, 0x54, 0x79, 0x70, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x46, 0x0a, 0x0b, 0x41, 0x64, 0x64, 0x48, 0x65, 0x6c, 0x70, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x1a, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x64, 0x64, 0x48, 0x65,
	0x6c, 0x70, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e,
	0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x64, 0x64, 0x48, 0x65, 0x6c, 0x70, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a, 0x0c, 0x45, 0x64,
	0x69, 0x74, 0x48, 0x65, 0x6c, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x2e, 0x63, 0x6d, 0x73,
	0x72, 0x70, 0x63, 0x2e, 0x45, 0x64, 0x69, 0x74, 0x48, 0x65, 0x6c, 0x70, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63,
	0x2e, 0x45, 0x64, 0x69, 0x74, 0x48, 0x65, 0x6c, 0x70, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x08, 0x68, 0x65, 0x6c, 0x70, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x17, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x48, 0x65, 0x6c, 0x70, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x63, 0x6d, 0x73,
	0x72, 0x70, 0x63, 0x2e, 0x48, 0x65, 0x6c, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4f, 0x0a, 0x0e, 0x72, 0x6f, 0x6d, 0x6f, 0x76, 0x65, 0x48, 0x65,
	0x6c, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1d, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e,
	0x52, 0x6f, 0x6d, 0x6f, 0x76, 0x65, 0x48, 0x65, 0x6c, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x52,
	0x6f, 0x6d, 0x6f, 0x76, 0x65, 0x48, 0x65, 0x6c, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a, 0x0c, 0x65, 0x64, 0x69, 0x74, 0x48, 0x65, 0x6c,
	0x70, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1b, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x45,
	0x64, 0x69, 0x74, 0x48, 0x65, 0x6c, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x45, 0x64, 0x69, 0x74,
	0x48, 0x65, 0x6c, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x46, 0x0a, 0x0b, 0x61, 0x64, 0x64, 0x48, 0x65, 0x6c, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x1a, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x64, 0x64, 0x48, 0x65, 0x6c, 0x70,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x63, 0x6d,
	0x73, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x64, 0x64, 0x48, 0x65, 0x6c, 0x70, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x06, 0x62, 0x61, 0x6e, 0x6e,
	0x65, 0x72, 0x12, 0x15, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x42, 0x61, 0x6e, 0x6e,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x63, 0x6d, 0x73, 0x72,
	0x70, 0x63, 0x2e, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x39, 0x0a, 0x0c, 0x67, 0x61, 0x6d, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66,
	0x79, 0x12, 0x13, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e,
	0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x04,
	0x6c, 0x61, 0x6d, 0x70, 0x12, 0x13, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x4c, 0x61,
	0x6d, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x63, 0x6d, 0x73, 0x72,
	0x70, 0x63, 0x2e, 0x4c, 0x61, 0x6d, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x46, 0x0a, 0x0b, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a,
	0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x63, 0x6d, 0x73,
	0x72, 0x70, 0x63, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x12,
	0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x13, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x4d, 0x73, 0x67, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x06, 0x64, 0x65, 0x6c, 0x4d, 0x73,
	0x67, 0x12, 0x15, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x44, 0x65, 0x6c, 0x4d, 0x73,
	0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70,
	0x63, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d,
	0x73, 0x67, 0x12, 0x18, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x63,
	0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x06, 0x6e, 0x6f, 0x74,
	0x69, 0x63, 0x65, 0x12, 0x15, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x4e, 0x6f, 0x74,
	0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x63, 0x6d, 0x73,
	0x72, 0x70, 0x63, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x40, 0x0a, 0x09, 0x61, 0x64, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x12,
	0x18, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x64, 0x64, 0x4e, 0x6f, 0x74, 0x69,
	0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x63, 0x6d, 0x73, 0x72,
	0x70, 0x63, 0x2e, 0x41, 0x64, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a, 0x0c, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x6f,
	0x74, 0x69, 0x63, 0x65, 0x12, 0x1b, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1c, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x49, 0x0a, 0x0c, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x12,
	0x1b, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4e,
	0x6f, 0x74, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x63,
	0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x69,
	0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29, 0x0a, 0x04, 0x64, 0x65,
	0x6d, 0x6f, 0x12, 0x0f, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x44, 0x65, 0x6d, 0x6f,
	0x52, 0x65, 0x71, 0x1a, 0x10, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x44, 0x65, 0x6d,
	0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x47, 0x0a, 0x0e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x19, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63,
	0x2e, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x50, 0x72, 0x6f, 0x6d,
	0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x64,
	0x0a, 0x15, 0x62, 0x69, 0x67, 0x47, 0x61, 0x6d, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x12, 0x24, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63,
	0x2e, 0x42, 0x69, 0x67, 0x47, 0x61, 0x6d, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e,
	0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x42, 0x69, 0x67, 0x47, 0x61, 0x6d, 0x65, 0x43, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4c, 0x0a, 0x0d, 0x67, 0x65, 0x74, 0x44, 0x69, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x61, 0x72, 0x79, 0x12, 0x1c, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x47,
	0x65, 0x74, 0x44, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74,
	0x44, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x52, 0x0a, 0x0f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x12, 0x1e, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x43,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x43,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x53, 0x0a, 0x10, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x73, 0x12, 0x1e, 0x2e, 0x63, 0x6d, 0x73,
	0x72, 0x70, 0x63, 0x2e, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x63, 0x6d, 0x73,
	0x72, 0x70, 0x63, 0x2e, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x07, 0x63,
	0x68, 0x65, 0x63, 0x6b, 0x49, 0x6e, 0x12, 0x16, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17,
	0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x50, 0x0a, 0x11, 0x67, 0x65, 0x74, 0x43, 0x6f,
	0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x75, 0x6c, 0x65, 0x12, 0x1c, 0x2e, 0x63,
	0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x63, 0x6d, 0x73,
	0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x59, 0x0a, 0x14, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x75, 0x6c,
	0x65, 0x12, 0x1f, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x75, 0x6c, 0x65, 0x52,
	0x65, 0x71, 0x1a, 0x20, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x75, 0x6c, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x4a, 0x0a, 0x0f, 0x67, 0x65, 0x74, 0x48, 0x65, 0x6c, 0x70, 0x4c,
	0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63,
	0x2e, 0x47, 0x65, 0x74, 0x48, 0x65, 0x6c, 0x70, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65,
	0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74,
	0x48, 0x65, 0x6c, 0x70, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x41, 0x0a, 0x0c, 0x70, 0x61, 0x67, 0x65, 0x48, 0x65, 0x6c, 0x70, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x17, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x48, 0x65,
	0x6c, 0x70, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x63, 0x6d, 0x73, 0x72,
	0x70, 0x63, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x48, 0x65, 0x6c, 0x70, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x41, 0x0a, 0x0c, 0x70, 0x61, 0x67, 0x65, 0x48, 0x65, 0x6c, 0x70, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x17, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x50, 0x61, 0x67,
	0x65, 0x48, 0x65, 0x6c, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x63,
	0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x48, 0x65, 0x6c, 0x70, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x47, 0x0a, 0x0e, 0x70, 0x61, 0x67, 0x65, 0x48, 0x65,
	0x6c, 0x70, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x19, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70,
	0x63, 0x2e, 0x70, 0x61, 0x67, 0x65, 0x48, 0x65, 0x6c, 0x70, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x70, 0x61, 0x67,
	0x65, 0x48, 0x65, 0x6c, 0x70, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x3b, 0x0a, 0x0a, 0x74, 0x61, 0x73, 0x6b, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x15, 0x2e,
	0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x45, 0x78, 0x70, 0x6f, 0x72,
	0x74, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x61,
	0x73, 0x6b, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x50, 0x0a, 0x11,
	0x67, 0x65, 0x74, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x1c, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x65,
	0x72, 0x69, 0x66, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a,
	0x1d, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x65, 0x72, 0x69,
	0x66, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3e,
	0x0a, 0x0b, 0x61, 0x64, 0x64, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x12, 0x16, 0x2e,
	0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x64, 0x64, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x41,
	0x64, 0x64, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x47,
	0x0a, 0x0e, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x12, 0x19, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x63, 0x6d,
	0x73, 0x72, 0x70, 0x63, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3e, 0x0a, 0x0b, 0x67, 0x65, 0x74, 0x43, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x12, 0x16, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e,
	0x47, 0x65, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x17,
	0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x47, 0x0a, 0x0e, 0x64, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x12, 0x19, 0x2e, 0x63, 0x6d, 0x73, 0x72,
	0x70, 0x63, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x4a, 0x0a, 0x0f, 0x67, 0x65, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x1a, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74,
	0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a,
	0x1b, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x41, 0x0a, 0x0c,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x17, 0x2e, 0x63,
	0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x43,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x56, 0x0a, 0x13, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1e, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x50, 0x0a, 0x11, 0x67, 0x65, 0x74, 0x43, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1c, 0x2e, 0x63,
	0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x63, 0x6d, 0x73,
	0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x47, 0x0a, 0x0e, 0x67, 0x65, 0x74,
	0x41, 0x6c, 0x6c, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x6c, 0x6f, 0x74, 0x12, 0x19, 0x2e, 0x63, 0x6d,
	0x73, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x47, 0x61, 0x6d, 0x65, 0x53,
	0x6c, 0x6f, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e,
	0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x6c, 0x6f, 0x74, 0x52, 0x65,
	0x73, 0x71, 0x12, 0x56, 0x0a, 0x13, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x50, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1e, 0x2e, 0x63, 0x6d, 0x73, 0x72,
	0x70, 0x63, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x50, 0x61,
	0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x63, 0x6d, 0x73, 0x72,
	0x70, 0x63, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x50, 0x61,
	0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x44, 0x0a, 0x0d, 0x61, 0x72,
	0x74, 0x69, 0x63, 0x6c, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x18, 0x2e, 0x63, 0x6d,
	0x73, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x41,
	0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x3b, 0x0a, 0x0a, 0x61, 0x64, 0x64, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x12, 0x15,
	0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x64, 0x64, 0x41, 0x72, 0x74, 0x69, 0x63,
	0x6c, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x41,
	0x64, 0x64, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x44, 0x0a,
	0x0d, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x12, 0x18,
	0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x72,
	0x74, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70,
	0x63, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x44, 0x0a, 0x0d, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x72, 0x74,
	0x69, 0x63, 0x6c, 0x65, 0x12, 0x18, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x19,
	0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x72,
	0x74, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x47, 0x0a, 0x0e, 0x67, 0x65, 0x74,
	0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x19, 0x2e, 0x63, 0x6d,
	0x73, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e,
	0x47, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x5f, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x56, 0x69, 0x70, 0x41, 0x62, 0x53, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x12, 0x21, 0x2e, 0x63,
	0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x69, 0x70, 0x41, 0x62, 0x53, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x52, 0x65, 0x71, 0x1a,
	0x22, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x69, 0x70, 0x41,
	0x62, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x53, 0x0a, 0x12, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x56, 0x69, 0x70,
	0x41, 0x62, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x2e, 0x63, 0x6d, 0x73, 0x72,
	0x70, 0x63, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x56, 0x69, 0x70, 0x41, 0x62, 0x53, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70,
	0x63, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x56, 0x69, 0x70, 0x41, 0x62, 0x53, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x59, 0x0a, 0x14, 0x67, 0x65, 0x74, 0x50,
	0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x6b, 0x70, 0x69,
	0x12, 0x1f, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f,
	0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x6b, 0x70, 0x69, 0x52, 0x65,
	0x71, 0x1a, 0x20, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72,
	0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x6b, 0x70, 0x69, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x50, 0x0a, 0x11, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1c, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70,
	0x63, 0x2e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e,
	0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4d, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x69, 0x6e,
	0x74, 0x73, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x12, 0x1b, 0x2e, 0x63, 0x6d, 0x73, 0x72,
	0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e,
	0x47, 0x65, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x4d, 0x0a, 0x10, 0x41, 0x64, 0x64, 0x50, 0x6f, 0x69, 0x6e, 0x74,
	0x73, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x12, 0x1b, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70,
	0x63, 0x2e, 0x41, 0x64, 0x64, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x41,
	0x64, 0x64, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x56, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x69,
	0x6e, 0x74, 0x73, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x12, 0x1e, 0x2e, 0x63, 0x6d, 0x73,
	0x72, 0x70, 0x63, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73,
	0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x63, 0x6d, 0x73,
	0x72, 0x70, 0x63, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73,
	0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x56, 0x0a, 0x13, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x73, 0x12, 0x1e, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x52,
	0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x73, 0x0a, 0x1c, 0x43, 0x6f, 0x6d, 0x70, 0x65, 0x74, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x28, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x6f, 0x6d,
	0x70, 0x65, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x52,
	0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x29, 0x2e,
	0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x65, 0x74, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x71, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x43,
	0x6f, 0x6d, 0x70, 0x65, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e,
	0x67, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x12, 0x27, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70,
	0x63, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x65, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x52, 0x65,
	0x71, 0x1a, 0x28, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f,
	0x6d, 0x70, 0x65, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67,
	0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x71, 0x0a, 0x1c, 0x41,
	0x64, 0x64, 0x43, 0x6f, 0x6d, 0x70, 0x65, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x61, 0x6e,
	0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x12, 0x27, 0x2e, 0x63, 0x6d,
	0x73, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x6d, 0x70, 0x65, 0x74, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x73, 0x52, 0x65, 0x71, 0x1a, 0x28, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x64,
	0x64, 0x43, 0x6f, 0x6d, 0x70, 0x65, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x61, 0x6e, 0x6b,
	0x69, 0x6e, 0x67, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x7a,
	0x0a, 0x1f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x65, 0x74, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x73, 0x12, 0x2a, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x43, 0x6f, 0x6d, 0x70, 0x65, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x61, 0x6e, 0x6b,
	0x69, 0x6e, 0x67, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x2b, 0x2e,
	0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d,
	0x70, 0x65, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x52,
	0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x7a, 0x0a, 0x1f, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x65, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x12, 0x2a, 0x2e,
	0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6d,
	0x70, 0x65, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x52,
	0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x2b, 0x2e, 0x63, 0x6d, 0x73, 0x72,
	0x70, 0x63, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x65, 0x74, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x41, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x17, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e,
	0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x71, 0x1a,
	0x18, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x53, 0x63, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x50, 0x0a, 0x11, 0x55, 0x73, 0x65,
	0x72, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x1c,
	0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x63, 0x6f, 0x72,
	0x65, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x63,
	0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x45,
	0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x6b, 0x0a, 0x1a, 0x50,
	0x6f, 0x69, 0x6e, 0x74, 0x73, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x25, 0x2e, 0x63, 0x6d, 0x73, 0x72,
	0x70, 0x63, 0x2e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x1a, 0x26, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73,
	0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x59, 0x0a, 0x14, 0x50, 0x6f, 0x69, 0x6e,
	0x74, 0x73, 0x55, 0x73, 0x65, 0x72, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x1f, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73,
	0x55, 0x73, 0x65, 0x72, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x1a, 0x20, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x50, 0x6f, 0x69, 0x6e, 0x74,
	0x73, 0x55, 0x73, 0x65, 0x72, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x56, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74,
	0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x12, 0x1e, 0x2e, 0x63, 0x6d, 0x73,
	0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e,
	0x61, 0x6c, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x63, 0x6d, 0x73,
	0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e,
	0x61, 0x6c, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x56, 0x0a, 0x13, 0x55,
	0x73, 0x65, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x53,
	0x75, 0x6d, 0x12, 0x1e, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x53, 0x75, 0x6d, 0x52,
	0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x53, 0x75, 0x6d, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x59, 0x0a, 0x14, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c,
	0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1f, 0x2e, 0x63, 0x6d,
	0x73, 0x72, 0x70, 0x63, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e, 0x63,
	0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52,
	0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3b,
	0x0a, 0x0a, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x12, 0x15, 0x2e, 0x63,
	0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x52, 0x75, 0x6c, 0x65,
	0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x49, 0x6e, 0x73,
	0x65, 0x72, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x5c, 0x0a, 0x15, 0x49,
	0x6e, 0x73, 0x65, 0x72, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x41, 0x75, 0x74, 0x68, 0x4d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x12, 0x20, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x49, 0x6e,
	0x73, 0x65, 0x72, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x41, 0x75, 0x74, 0x68, 0x4d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x21, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e,
	0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x41, 0x75, 0x74, 0x68, 0x4d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x5c, 0x0a, 0x15, 0x4c, 0x69, 0x73,
	0x74, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c,
	0x6f, 0x67, 0x12, 0x20, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x41, 0x64, 0x6d, 0x69, 0x6e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x6f,
	0x67, 0x52, 0x65, 0x71, 0x1a, 0x21, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x4c, 0x6f, 0x67, 0x52, 0x65, 0x73, 0x70, 0x12, 0x50, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x41,
	0x64, 0x6d, 0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x12, 0x1c, 0x2e, 0x63,
	0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x4c,
	0x6f, 0x67, 0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x63, 0x6d, 0x73,
	0x72, 0x70, 0x63, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x4c, 0x6f, 0x67,
	0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x73, 0x70, 0x12, 0x5c, 0x0a, 0x15, 0x41, 0x64, 0x6d,
	0x69, 0x6e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x67, 0x4d, 0x65,
	0x6e, 0x75, 0x12, 0x20, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x64, 0x6d, 0x69,
	0x6e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x67, 0x4d, 0x65, 0x6e,
	0x75, 0x52, 0x65, 0x71, 0x1a, 0x21, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x64,
	0x6d, 0x69, 0x6e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x67, 0x4d,
	0x65, 0x6e, 0x75, 0x52, 0x65, 0x73, 0x70, 0x12, 0x56, 0x0a, 0x13, 0x50, 0x61, 0x67, 0x63, 0x6f,
	0x72, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x54, 0x61, 0x78, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1e,
	0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x50, 0x61, 0x67, 0x63, 0x6f, 0x72, 0x44, 0x61,
	0x69, 0x6c, 0x79, 0x54, 0x61, 0x78, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1f,
	0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x50, 0x61, 0x67, 0x63, 0x6f, 0x72, 0x44, 0x61,
	0x69, 0x6c, 0x79, 0x54, 0x61, 0x78, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x2f, 0x0a, 0x06, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x12, 0x11, 0x2e, 0x63, 0x6d, 0x73, 0x72,
	0x70, 0x63, 0x2e, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e, 0x63,
	0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x4d, 0x0a, 0x10, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x41, 0x77, 0x61, 0x72, 0x64, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1b, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x6f,
	0x74, 0x61, 0x6c, 0x41, 0x77, 0x61, 0x72, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x1a, 0x1c, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x6f, 0x74, 0x61, 0x6c,
	0x41, 0x77, 0x61, 0x72, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x47, 0x0a, 0x0e, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x50, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x19, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x50, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x63,
	0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x50, 0x61, 0x67, 0x65,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x56, 0x0a, 0x13, 0x63, 0x68, 0x65, 0x63,
	0x6b, 0x49, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12,
	0x1e, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x6e,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x1a,
	0x1f, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x6e,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x50, 0x0a, 0x11, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x6c, 0x6f,
	0x67, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1c, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x50,
	0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x6c, 0x6f, 0x67, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x50, 0x72, 0x6f,
	0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x6c, 0x6f, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x50, 0x0a, 0x11, 0x67, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1c, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63,
	0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x43, 0x6f,
	0x64, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x47,
	0x65, 0x74, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x43, 0x6f, 0x64, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x41, 0x0a, 0x0c, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x73, 0x12, 0x17, 0x2e, 0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e,
	0x63, 0x6d, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x42, 0x0a, 0x5a, 0x08, 0x2e, 0x2f, 0x63, 0x6d, 0x73,
	0x72, 0x70, 0x63, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_cmsrpc_proto_rawDescOnce sync.Once
	file_cmsrpc_proto_rawDescData = file_cmsrpc_proto_rawDesc
)

func file_cmsrpc_proto_rawDescGZIP() []byte {
	file_cmsrpc_proto_rawDescOnce.Do(func() {
		file_cmsrpc_proto_rawDescData = protoimpl.X.CompressGZIP(file_cmsrpc_proto_rawDescData)
	})
	return file_cmsrpc_proto_rawDescData
}

var file_cmsrpc_proto_msgTypes = make([]protoimpl.MessageInfo, 303)
var file_cmsrpc_proto_goTypes = []interface{}{
	(*BannerResponse)(nil),                        // 0: cmsrpc.BannerResponse
	(*GameResponse)(nil),                          // 1: cmsrpc.GameResponse
	(*GameRequest)(nil),                           // 2: cmsrpc.GameRequest
	(*PromotionsResponse)(nil),                    // 3: cmsrpc.PromotionsResponse
	(*HelpRequest)(nil),                           // 4: cmsrpc.HelpRequest
	(*SaveHelpTypeRequest)(nil),                   // 5: cmsrpc.SaveHelpTypeRequest
	(*SaveHelpTypeResponse)(nil),                  // 6: cmsrpc.SaveHelpTypeResponse
	(*GetHelpTypeListRequest)(nil),                // 7: cmsrpc.GetHelpTypeListRequest
	(*GetHelpTypeListResponse)(nil),               // 8: cmsrpc.GetHelpTypeListResponse
	(*GetHelpTypeListItemResponse)(nil),           // 9: cmsrpc.GetHelpTypeListItemResponse
	(*AddHelpTypeRequest)(nil),                    // 10: cmsrpc.AddHelpTypeRequest
	(*AddHelpTypeResponse)(nil),                   // 11: cmsrpc.AddHelpTypeResponse
	(*EditHelpTypeRequest)(nil),                   // 12: cmsrpc.EditHelpTypeRequest
	(*EditHelpTypeResponse)(nil),                  // 13: cmsrpc.EditHelpTypeResponse
	(*DelFrontClassifyInfoCmsRequest)(nil),        // 14: cmsrpc.DelFrontClassifyInfoCmsRequest
	(*DelFrontClassifyInfoCmsResponse)(nil),       // 15: cmsrpc.DelFrontClassifyInfoCmsResponse
	(*BannerInfo)(nil),                            // 16: cmsrpc.BannerInfo
	(*PromotionsRequest)(nil),                     // 17: cmsrpc.PromotionsRequest
	(*LadderListData)(nil),                        // 18: cmsrpc.LadderListData
	(*DeleteActivityResponse)(nil),                // 19: cmsrpc.DeleteActivityResponse
	(*BlogInfo)(nil),                              // 20: cmsrpc.BlogInfo
	(*FrontClassifyCmsPageResponse)(nil),          // 21: cmsrpc.FrontClassifyCmsPageResponse
	(*AddFrontClassifyCmsResponse)(nil),           // 22: cmsrpc.AddFrontClassifyCmsResponse
	(*HelpInfoData)(nil),                          // 23: cmsrpc.HelpInfoData
	(*NoticeData)(nil),                            // 24: cmsrpc.NoticeData
	(*AddBannerListResponse)(nil),                 // 25: cmsrpc.AddBannerListResponse
	(*NoticeResponse)(nil),                        // 26: cmsrpc.NoticeResponse
	(*DelBannerListRequest)(nil),                  // 27: cmsrpc.delBannerListRequest
	(*EditFrontClassifyCmsResponse)(nil),          // 28: cmsrpc.EditFrontClassifyCmsResponse
	(*HelpTypeInfo)(nil),                          // 29: cmsrpc.HelpTypeInfo
	(*MsgRequest)(nil),                            // 30: cmsrpc.MsgRequest
	(*UpdateMsgRequest)(nil),                      // 31: cmsrpc.UpdateMsgRequest
	(*UpdateBannerResponse)(nil),                  // 32: cmsrpc.UpdateBannerResponse
	(*AddActivityRequest)(nil),                    // 33: cmsrpc.AddActivityRequest
	(*BlogListResponse)(nil),                      // 34: cmsrpc.BlogListResponse
	(*HelpInfoResponse)(nil),                      // 35: cmsrpc.HelpInfoResponse
	(*RomoveHelpInfoResponse)(nil),                // 36: cmsrpc.RomoveHelpInfoResponse
	(*NoticeCountResponse)(nil),                   // 37: cmsrpc.NoticeCountResponse
	(*NoticeDataList)(nil),                        // 38: cmsrpc.NoticeDataList
	(*DeleteNoticeRequest)(nil),                   // 39: cmsrpc.DeleteNoticeRequest
	(*PromotionsData)(nil),                        // 40: cmsrpc.PromotionsData
	(*ActivityData)(nil),                          // 41: cmsrpc.ActivityData
	(*Data)(nil),                                  // 42: cmsrpc.Data
	(*EditFrontClassifyCmsRequest)(nil),           // 43: cmsrpc.EditFrontClassifyCmsRequest
	(*AddNoticeResponse)(nil),                     // 44: cmsrpc.AddNoticeResponse
	(*BlogListRequest)(nil),                       // 45: cmsrpc.BlogListRequest
	(*ActivityItem)(nil),                          // 46: cmsrpc.ActivityItem
	(*AddActivityResponse)(nil),                   // 47: cmsrpc.AddActivityResponse
	(*DelBannerListResponse)(nil),                 // 48: cmsrpc.delBannerListResponse
	(*AddNoticeRequest)(nil),                      // 49: cmsrpc.AddNoticeRequest
	(*ActivityDataList)(nil),                      // 50: cmsrpc.ActivityDataList
	(*HelpData)(nil),                              // 51: cmsrpc.HelpData
	(*LampResponse)(nil),                          // 52: cmsrpc.LampResponse
	(*MsgListItem)(nil),                           // 53: cmsrpc.MsgListItem
	(*UpdateNoticeRequest)(nil),                   // 54: cmsrpc.UpdateNoticeRequest
	(*DelFrontClassifyCmsRequest)(nil),            // 55: cmsrpc.DelFrontClassifyCmsRequest
	(*SportBetResponse)(nil),                      // 56: cmsrpc.SportBetResponse
	(*HelpInfo)(nil),                              // 57: cmsrpc.HelpInfo
	(*GameCategory)(nil),                          // 58: cmsrpc.GameCategory
	(*MsgResponseData)(nil),                       // 59: cmsrpc.MsgResponseData
	(*AddBannerListRequest)(nil),                  // 60: cmsrpc.AddBannerListRequest
	(*UpdateBannerRequest)(nil),                   // 61: cmsrpc.UpdateBannerRequest
	(*GameInfo)(nil),                              // 62: cmsrpc.GameInfo
	(*AddFrontClassifyCmsRequest)(nil),            // 63: cmsrpc.AddFrontClassifyCmsRequest
	(*NoticeCountList)(nil),                       // 64: cmsrpc.NoticeCountList
	(*NoticeRequest)(nil),                         // 65: cmsrpc.NoticeRequest
	(*UpdateNoticeResponse)(nil),                  // 66: cmsrpc.UpdateNoticeResponse
	(*DemoResp)(nil),                              // 67: cmsrpc.DemoResp
	(*DeleteActivityRequest)(nil),                 // 68: cmsrpc.DeleteActivityRequest
	(*LampRequest)(nil),                           // 69: cmsrpc.LampRequest
	(*NoticeCountRequest)(nil),                    // 70: cmsrpc.NoticeCountRequest
	(*MsgResponse)(nil),                           // 71: cmsrpc.MsgResponse
	(*FrontClassifyCmsPageRequest)(nil),           // 72: cmsrpc.FrontClassifyCmsPageRequest
	(*HelpInfoRequest)(nil),                       // 73: cmsrpc.HelpInfoRequest
	(*RomoveHelpInfoRequest)(nil),                 // 74: cmsrpc.RomoveHelpInfoRequest
	(*EditHelpInfoRequest)(nil),                   // 75: cmsrpc.EditHelpInfoRequest
	(*EditHelpInfoResponse)(nil),                  // 76: cmsrpc.EditHelpInfoResponse
	(*AddHelpInfoRequest)(nil),                    // 77: cmsrpc.AddHelpInfoRequest
	(*AddHelpInfoResponse)(nil),                   // 78: cmsrpc.AddHelpInfoResponse
	(*DelMsgRequest)(nil),                         // 79: cmsrpc.DelMsgRequest
	(*DeleteNoticeResponse)(nil),                  // 80: cmsrpc.DeleteNoticeResponse
	(*ActivityRequest)(nil),                       // 81: cmsrpc.ActivityRequest
	(*ActivityDetailReq)(nil),                     // 82: cmsrpc.ActivityDetailReq
	(*ActivityDetailResp)(nil),                    // 83: cmsrpc.ActivityDetailResp
	(*ActivityDetailData)(nil),                    // 84: cmsrpc.ActivityDetailData
	(*SportBetRequest)(nil),                       // 85: cmsrpc.SportBetRequest
	(*HelpInfoParams)(nil),                        // 86: cmsrpc.HelpInfoParams
	(*BannerRequest)(nil),                         // 87: cmsrpc.BannerRequest
	(*BannerResponseItem)(nil),                    // 88: cmsrpc.BannerResponseItem
	(*MsgRequestData)(nil),                        // 89: cmsrpc.MsgRequestData
	(*NoticeItem)(nil),                            // 90: cmsrpc.NoticeItem
	(*BannerListResponse)(nil),                    // 91: cmsrpc.BannerListResponse
	(*BannerData)(nil),                            // 92: cmsrpc.BannerData
	(*DelFrontClassifyCmsResponse)(nil),           // 93: cmsrpc.DelFrontClassifyCmsResponse
	(*Game)(nil),                                  // 94: cmsrpc.Game
	(*DemoReq)(nil),                               // 95: cmsrpc.DemoReq
	(*ActivityResponse)(nil),                      // 96: cmsrpc.ActivityResponse
	(*BlogData)(nil),                              // 97: cmsrpc.BlogData
	(*SportBetData)(nil),                          // 98: cmsrpc.SportBetData
	(*HelpResponse)(nil),                          // 99: cmsrpc.HelpResponse
	(*LampList)(nil),                              // 100: cmsrpc.LampList
	(*BannerListRequest)(nil),                     // 101: cmsrpc.BannerListRequest
	(*BigGameCategoryBannerRequest)(nil),          // 102: cmsrpc.BigGameCategoryBannerRequest
	(*BigGameCategoryBannerResponse)(nil),         // 103: cmsrpc.BigGameCategoryBannerResponse
	(*BigGameCategoryBannerData)(nil),             // 104: cmsrpc.BigGameCategoryBannerData
	(*GetDictionaryRequest)(nil),                  // 105: cmsrpc.GetDictionaryRequest
	(*GetDictionaryResponse)(nil),                 // 106: cmsrpc.GetDictionaryResponse
	(*StatusItem)(nil),                            // 107: cmsrpc.StatusItem
	(*CurrentActivityRequest)(nil),                // 108: cmsrpc.CurrentActivityRequest
	(*CurrentActivityResponse)(nil),               // 109: cmsrpc.CurrentActivityResponse
	(*CurrentActivityData)(nil),                   // 110: cmsrpc.CurrentActivityData
	(*CheckInRuleDto)(nil),                        // 111: cmsrpc.CheckInRuleDto
	(*CheckInInfoDto)(nil),                        // 112: cmsrpc.CheckInInfoDto
	(*CurrentActivityBaseInfo)(nil),               // 113: cmsrpc.CurrentActivityBaseInfo
	(*PromotionInfo)(nil),                         // 114: cmsrpc.PromotionInfo
	(*CheckInRequest)(nil),                        // 115: cmsrpc.CheckInRequest
	(*CheckInResponse)(nil),                       // 116: cmsrpc.CheckInResponse
	(*GetCommissionRuleReq)(nil),                  // 117: cmsrpc.GetCommissionRuleReq
	(*GetCommissionRuleResp)(nil),                 // 118: cmsrpc.GetCommissionRuleResp
	(*GetCommissionRuleData)(nil),                 // 119: cmsrpc.GetCommissionRuleData
	(*UpdateCommissionRuleReq)(nil),               // 120: cmsrpc.UpdateCommissionRuleReq
	(*UpdateCommissionRuleResp)(nil),              // 121: cmsrpc.UpdateCommissionRuleResp
	(*CommissionRateList)(nil),                    // 122: cmsrpc.CommissionRateList
	(*GetHelpLanguageReq)(nil),                    // 123: cmsrpc.GetHelpLanguageReq
	(*GetHelpLanguageResp)(nil),                   // 124: cmsrpc.GetHelpLanguageResp
	(*GetHelpLanguageData)(nil),                   // 125: cmsrpc.GetHelpLanguageData
	(*DicLang)(nil),                               // 126: cmsrpc.DicLang
	(*PageHelpTypeReq)(nil),                       // 127: cmsrpc.PageHelpTypeReq
	(*PageHelpTypeResp)(nil),                      // 128: cmsrpc.PageHelpTypeResp
	(*PageHelpTypeData)(nil),                      // 129: cmsrpc.PageHelpTypeData
	(*PageHelpInfoReq)(nil),                       // 130: cmsrpc.PageHelpInfoReq
	(*PageHelpDetailReq)(nil),                     // 131: cmsrpc.pageHelpDetailReq
	(*PageHelpDetailResp)(nil),                    // 132: cmsrpc.pageHelpDetailResp
	(*PageHelpDetailData)(nil),                    // 133: cmsrpc.pageHelpDetailData
	(*PageHelpInfoDataReq)(nil),                   // 134: cmsrpc.PageHelpInfoDataReq
	(*PageHelpInfoResp)(nil),                      // 135: cmsrpc.PageHelpInfoResp
	(*PageHelpInfoData)(nil),                      // 136: cmsrpc.PageHelpInfoData
	(*PageHelpInfoDataItem)(nil),                  // 137: cmsrpc.PageHelpInfoDataItem
	(*TaskExportReq)(nil),                         // 138: cmsrpc.TaskExportReq
	(*TaskExportDataReq)(nil),                     // 139: cmsrpc.TaskExportDataReq
	(*TaskExportResp)(nil),                        // 140: cmsrpc.TaskExportResp
	(*TaskExportDataResp)(nil),                    // 141: cmsrpc.TaskExportDataResp
	(*TaskExportDataItem)(nil),                    // 142: cmsrpc.TaskExportDataItem
	(*GetVerifyCodeListReq)(nil),                  // 143: cmsrpc.GetVerifyCodeListReq
	(*GetVerifyCodeListDataReq)(nil),              // 144: cmsrpc.GetVerifyCodeListDataReq
	(*GetVerifyCodeListResp)(nil),                 // 145: cmsrpc.GetVerifyCodeListResp
	(*GetVerifyCodeListDataResp)(nil),             // 146: cmsrpc.GetVerifyCodeListDataResp
	(*GetVerifyCodeListDataItem)(nil),             // 147: cmsrpc.GetVerifyCodeListDataItem
	(*AddCustomerReq)(nil),                        // 148: cmsrpc.AddCustomerReq
	(*AddCustomerResp)(nil),                       // 149: cmsrpc.AddCustomerResp
	(*UpdateCustomerReq)(nil),                     // 150: cmsrpc.UpdateCustomerReq
	(*UpdateCustomerResp)(nil),                    // 151: cmsrpc.UpdateCustomerResp
	(*GetCustomerReq)(nil),                        // 152: cmsrpc.GetCustomerReq
	(*GetCustomerResp)(nil),                       // 153: cmsrpc.GetCustomerResp
	(*GetCustomerData)(nil),                       // 154: cmsrpc.GetCustomerData
	(*DeleteCustomerReq)(nil),                     // 155: cmsrpc.DeleteCustomerReq
	(*DeleteCustomerResp)(nil),                    // 156: cmsrpc.DeleteCustomerResp
	(*GetCustomerListReq)(nil),                    // 157: cmsrpc.GetCustomerListReq
	(*GetCustomerListDataReq)(nil),                // 158: cmsrpc.GetCustomerListDataReq
	(*GetCustomerListResp)(nil),                   // 159: cmsrpc.GetCustomerListResp
	(*GetCustomerListDataResp)(nil),               // 160: cmsrpc.GetCustomerListDataResp
	(*GetCustomerListDataItem)(nil),               // 161: cmsrpc.GetCustomerListDataItem
	(*CustomerListReq)(nil),                       // 162: cmsrpc.CustomerListReq
	(*CustomerListResp)(nil),                      // 163: cmsrpc.CustomerListResp
	(*CustomerListData)(nil),                      // 164: cmsrpc.CustomerListData
	(*UpdateConfigAddressReq)(nil),                // 165: cmsrpc.UpdateConfigAddressReq
	(*UpdateVipAbStationReq)(nil),                 // 166: cmsrpc.UpdateVipAbStationReq
	(*UpdateVipAbStationResp)(nil),                // 167: cmsrpc.UpdateVipAbStationResp
	(*UpdateConfigAddressResp)(nil),               // 168: cmsrpc.UpdateConfigAddressResp
	(*GetCompanyAddressReq)(nil),                  // 169: cmsrpc.GetCompanyAddressReq
	(*GetVipAbStationControlReq)(nil),             // 170: cmsrpc.GetVipAbStationControlReq
	(*GetCompanyAddressResp)(nil),                 // 171: cmsrpc.GetCompanyAddressResp
	(*GetCompanyAddressData)(nil),                 // 172: cmsrpc.GetCompanyAddressData
	(*GetVipAbStationControlResp)(nil),            // 173: cmsrpc.GetVipAbStationControlResp
	(*GetVipAbStationControlData)(nil),            // 174: cmsrpc.GetVipAbStationControlData
	(*GetAllGameSlotReq)(nil),                     // 175: cmsrpc.GetAllGameSlotReq
	(*GetAllGameSlotResq)(nil),                    // 176: cmsrpc.GetAllGameSlotResq
	(*GetAllGameSlotResponseData)(nil),            // 177: cmsrpc.GetAllGameSlotResponseData
	(*ArticleInfoPageListReq)(nil),                // 178: cmsrpc.ArticleInfoPageListReq
	(*ArticleInfoPageListDataReq)(nil),            // 179: cmsrpc.ArticleInfoPageListDataReq
	(*ArticleInfoPageListResp)(nil),               // 180: cmsrpc.ArticleInfoPageListResp
	(*ArticleInfoPageListDataResp)(nil),           // 181: cmsrpc.ArticleInfoPageListDataResp
	(*ArticleInfoPageListDataItem)(nil),           // 182: cmsrpc.ArticleInfoPageListDataItem
	(*ArticleDetailReq)(nil),                      // 183: cmsrpc.ArticleDetailReq
	(*ArticleDetailResp)(nil),                     // 184: cmsrpc.ArticleDetailResp
	(*ArticleDetailData)(nil),                     // 185: cmsrpc.ArticleDetailData
	(*AddArticleReq)(nil),                         // 186: cmsrpc.AddArticleReq
	(*AddArticleResp)(nil),                        // 187: cmsrpc.AddArticleResp
	(*UpdateArticleReq)(nil),                      // 188: cmsrpc.UpdateArticleReq
	(*UpdateArticleResp)(nil),                     // 189: cmsrpc.UpdateArticleResp
	(*DeleteArticleReq)(nil),                      // 190: cmsrpc.DeleteArticleReq
	(*DeleteArticleResp)(nil),                     // 191: cmsrpc.DeleteArticleResp
	(*GetArticleListReq)(nil),                     // 192: cmsrpc.GetArticleListReq
	(*GetArticleListResp)(nil),                    // 193: cmsrpc.GetArticleListResp
	(*GetArticleListData)(nil),                    // 194: cmsrpc.GetArticleListData
	(*GetArticleListDataItem)(nil),                // 195: cmsrpc.GetArticleListDataItem
	(*GetPromotionLevelkpiReq)(nil),               // 196: cmsrpc.GetPromotionLevelkpiReq
	(*GetPromotionLevelkpiResp)(nil),              // 197: cmsrpc.GetPromotionLevelkpiResp
	(*GetPromotionLevelkpiDataResp)(nil),          // 198: cmsrpc.GetPromotionLevelkpiDataResp
	(*GetPromotionLevelkpiDataLevel)(nil),         // 199: cmsrpc.GetPromotionLevelkpiDataLevel
	(*GetPromotionLevelkpiDataKpi)(nil),           // 200: cmsrpc.GetPromotionLevelkpiDataKpi
	(*GetPromotionLevelkpiDataRequire)(nil),       // 201: cmsrpc.GetPromotionLevelkpiDataRequire
	(*PointsRewardsListReq)(nil),                  // 202: cmsrpc.PointsRewardsListReq
	(*PointsRewardsListReqData)(nil),              // 203: cmsrpc.PointsRewardsListReqData
	(*PointsRewardsListResp)(nil),                 // 204: cmsrpc.PointsRewardsListResp
	(*PointsRewardsListRespData)(nil),             // 205: cmsrpc.PointsRewardsListRespData
	(*PointsRewardsListRespDataItem)(nil),         // 206: cmsrpc.PointsRewardsListRespDataItem
	(*GetPointsRewardsReq)(nil),                   // 207: cmsrpc.GetPointsRewardsReq
	(*GetPointsRewardsResp)(nil),                  // 208: cmsrpc.GetPointsRewardsResp
	(*GetPointsRewardsData)(nil),                  // 209: cmsrpc.GetPointsRewardsData
	(*AddPointsRewardsReq)(nil),                   // 210: cmsrpc.AddPointsRewardsReq
	(*AddPointsRewardsResp)(nil),                  // 211: cmsrpc.AddPointsRewardsResp
	(*UpdatePointsRewardsReq)(nil),                // 212: cmsrpc.UpdatePointsRewardsReq
	(*UpdatePointsRewardsResp)(nil),               // 213: cmsrpc.UpdatePointsRewardsResp
	(*DeletePointsRewardsReq)(nil),                // 214: cmsrpc.DeletePointsRewardsReq
	(*DeletePointsRewardsResp)(nil),               // 215: cmsrpc.DeletePointsRewardsResp
	(*CompetitionRankingRewardsListReq)(nil),      // 216: cmsrpc.CompetitionRankingRewardsListReq
	(*CompetitionRankingRewardsReqData)(nil),      // 217: cmsrpc.CompetitionRankingRewardsReqData
	(*CompetitionRankingRewardsListResp)(nil),     // 218: cmsrpc.CompetitionRankingRewardsListResp
	(*CompetitionRankingRewardsListData)(nil),     // 219: cmsrpc.CompetitionRankingRewardsListData
	(*CompetitionRankingRewardsListDataItem)(nil), // 220: cmsrpc.CompetitionRankingRewardsListDataItem
	(*GetCompetitionRankingRewardsReq)(nil),       // 221: cmsrpc.GetCompetitionRankingRewardsReq
	(*GetCompetitionRankingRewardsResp)(nil),      // 222: cmsrpc.GetCompetitionRankingRewardsResp
	(*GetCompetitionRankingRewardsData)(nil),      // 223: cmsrpc.GetCompetitionRankingRewardsData
	(*AddCompetitionRankingRewardsReq)(nil),       // 224: cmsrpc.AddCompetitionRankingRewardsReq
	(*AddCompetitionRankingRewardsResp)(nil),      // 225: cmsrpc.AddCompetitionRankingRewardsResp
	(*UpdateCompetitionRankingRewardsReq)(nil),    // 226: cmsrpc.UpdateCompetitionRankingRewardsReq
	(*UpdateCompetitionRankingRewardsResp)(nil),   // 227: cmsrpc.UpdateCompetitionRankingRewardsResp
	(*DeleteCompetitionRankingRewardsReq)(nil),    // 228: cmsrpc.DeleteCompetitionRankingRewardsReq
	(*DeleteCompetitionRankingRewardsResp)(nil),   // 229: cmsrpc.DeleteCompetitionRankingRewardsResp
	(*GetUserScoreReq)(nil),                       // 230: cmsrpc.GetUserScoreReq
	(*GetUserScoreResp)(nil),                      // 231: cmsrpc.GetUserScoreResp
	(*UserScoreExchangeReq)(nil),                  // 232: cmsrpc.UserScoreExchangeReq
	(*UserScoreExchangeResp)(nil),                 // 233: cmsrpc.UserScoreExchangeResp
	(*PointsCollectionRecordListReq)(nil),         // 234: cmsrpc.PointsCollectionRecordListReq
	(*PointsCollectionRecordReqData)(nil),         // 235: cmsrpc.PointsCollectionRecordReqData
	(*PointsCollectionRecordListResp)(nil),        // 236: cmsrpc.PointsCollectionRecordListResp
	(*PointsCollectionRecordListData)(nil),        // 237: cmsrpc.PointsCollectionRecordListData
	(*PointsCollectionRecordListDataItem)(nil),    // 238: cmsrpc.PointsCollectionRecordListDataItem
	(*PointsUserChangeListReq)(nil),               // 239: cmsrpc.PointsUserChangeListReq
	(*PointsUserChangeListReqData)(nil),           // 240: cmsrpc.PointsUserChangeListReqData
	(*PointsUserChangeListResp)(nil),              // 241: cmsrpc.PointsUserChangeListResp
	(*PointsUserChangeListData)(nil),              // 242: cmsrpc.PointsUserChangeListData
	(*PointsUserChangeListDataItem)(nil),          // 243: cmsrpc.PointsUserChangeListDataItem
	(*GetPromotionalVideoReq)(nil),                // 244: cmsrpc.GetPromotionalVideoReq
	(*GetPromotionalVideoResp)(nil),               // 245: cmsrpc.GetPromotionalVideoResp
	(*UserLevelRewardsSumReq)(nil),                // 246: cmsrpc.UserLevelRewardsSumReq
	(*UserLevelRewardsSumResp)(nil),               // 247: cmsrpc.UserLevelRewardsSumResp
	(*UserLevelRewardsSumData)(nil),               // 248: cmsrpc.UserLevelRewardsSumData
	(*UserLevelRewardsListReq)(nil),               // 249: cmsrpc.UserLevelRewardsListReq
	(*UserLevelRewardsListResp)(nil),              // 250: cmsrpc.UserLevelRewardsListResp
	(*UserLevelRewardsListData)(nil),              // 251: cmsrpc.UserLevelRewardsListData
	(*UserLevelRewardsListDataItem)(nil),          // 252: cmsrpc.UserLevelRewardsListDataItem
	(*SaveOrUpdateUserGroupReq)(nil),              // 253: cmsrpc.SaveOrUpdateUserGroupReq
	(*SaveOrUpdateUserGroupResp)(nil),             // 254: cmsrpc.SaveOrUpdateUserGroupResp
	(*AddAdminReq)(nil),                           // 255: cmsrpc.AddAdminReq
	(*AddAdminResp)(nil),                          // 256: cmsrpc.AddAdminResp
	(*AddAdminDataResp)(nil),                      // 257: cmsrpc.AddAdminDataResp
	(*InsertRuleReq)(nil),                         // 258: cmsrpc.InsertRuleReq
	(*InsertRuleResp)(nil),                        // 259: cmsrpc.InsertRuleResp
	(*InsertRoleAuthManagerReq)(nil),              // 260: cmsrpc.InsertRoleAuthManagerReq
	(*InsertRoleAuthManagerResp)(nil),             // 261: cmsrpc.InsertRoleAuthManagerResp
	(*ListAdminOperationLogReq)(nil),              // 262: cmsrpc.ListAdminOperationLogReq
	(*ListAdminOperationLogDataReq)(nil),          // 263: cmsrpc.ListAdminOperationLogDataReq
	(*ListAdminOperationLogResp)(nil),             // 264: cmsrpc.ListAdminOperationLogResp
	(*ListAdminOperationLogData)(nil),             // 265: cmsrpc.ListAdminOperationLogData
	(*ListAdminOperationLogDataItem)(nil),         // 266: cmsrpc.ListAdminOperationLogDataItem
	(*ListAdminLoginLogReq)(nil),                  // 267: cmsrpc.ListAdminLoginLogReq
	(*ListAdminLoginLogDataReq)(nil),              // 268: cmsrpc.ListAdminLoginLogDataReq
	(*ListAdminLoginLogResp)(nil),                 // 269: cmsrpc.ListAdminLoginLogResp
	(*ListAdminLoginLogData)(nil),                 // 270: cmsrpc.ListAdminLoginLogData
	(*ListAdminLoginLogDataItem)(nil),             // 271: cmsrpc.ListAdminLoginLogDataItem
	(*AdminOperationLogMenuReq)(nil),              // 272: cmsrpc.AdminOperationLogMenuReq
	(*AdminOperationLogMenuResp)(nil),             // 273: cmsrpc.AdminOperationLogMenuResp
	(*AdminOperationLogMenuData)(nil),             // 274: cmsrpc.AdminOperationLogMenuData
	(*PagcorDailyTaxCountReq)(nil),                // 275: cmsrpc.PagcorDailyTaxCountReq
	(*PagcorDailyTaxCountDataReq)(nil),            // 276: cmsrpc.PagcorDailyTaxCountDataReq
	(*PagcorDailyTaxCountResp)(nil),               // 277: cmsrpc.PagcorDailyTaxCountResp
	(*PagcorDailyTaxCountData)(nil),               // 278: cmsrpc.PagcorDailyTaxCountData
	(*PagcorDailyTaxCountDataItem)(nil),           // 279: cmsrpc.PagcorDailyTaxCountDataItem
	(*LogoutReq)(nil),                             // 280: cmsrpc.LogoutReq
	(*LogoutResp)(nil),                            // 281: cmsrpc.LogoutResp
	(*TotalAwardAmountReq)(nil),                   // 282: cmsrpc.TotalAwardAmountReq
	(*TotalAwardAmountResp)(nil),                  // 283: cmsrpc.TotalAwardAmountResp
	(*RecordPageListReq)(nil),                     // 284: cmsrpc.RecordPageListReq
	(*RecordPageListDataReq)(nil),                 // 285: cmsrpc.RecordPageListDataReq
	(*RecordPageListResp)(nil),                    // 286: cmsrpc.RecordPageListResp
	(*RecordPageListData)(nil),                    // 287: cmsrpc.RecordPageListData
	(*RecordPageListDataItem)(nil),                // 288: cmsrpc.RecordPageListDataItem
	(*CheckInRecordDetailReq)(nil),                // 289: cmsrpc.CheckInRecordDetailReq
	(*CheckInRecordDetailResp)(nil),               // 290: cmsrpc.CheckInRecordDetailResp
	(*PromotionBlogListReq)(nil),                  // 291: cmsrpc.PromotionBlogListReq
	(*PromotionBlogListDataReq)(nil),              // 292: cmsrpc.PromotionBlogListDataReq
	(*PromotionBlogListResp)(nil),                 // 293: cmsrpc.PromotionBlogListResp
	(*PromotionBlogListDataResp)(nil),             // 294: cmsrpc.PromotionBlogListDataResp
	(*PromotionBlogListDataItemResp)(nil),         // 295: cmsrpc.PromotionBlogListDataItemResp
	(*GetPromotionsCodeReq)(nil),                  // 296: cmsrpc.GetPromotionsCodeReq
	(*GetPromotionsCodeResp)(nil),                 // 297: cmsrpc.GetPromotionsCodeResp
	(*EventReportsReq)(nil),                       // 298: cmsrpc.EventReportsReq
	(*EventReportsResp)(nil),                      // 299: cmsrpc.EventReportsResp
	nil,                                           // 300: cmsrpc.BlogListRequest.DataEntry
	nil,                                           // 301: cmsrpc.FrontClassifyCmsPageRequest.DataEntry
	nil,                                           // 302: cmsrpc.BannerListRequest.DataEntry
}
var file_cmsrpc_proto_depIdxs = []int32{
	88,  // 0: cmsrpc.BannerResponse.data:type_name -> cmsrpc.BannerResponseItem
	58,  // 1: cmsrpc.GameResponse.data:type_name -> cmsrpc.GameCategory
	40,  // 2: cmsrpc.PromotionsResponse.data:type_name -> cmsrpc.PromotionsData
	9,   // 3: cmsrpc.GetHelpTypeListResponse.data:type_name -> cmsrpc.GetHelpTypeListItemResponse
	42,  // 4: cmsrpc.FrontClassifyCmsPageResponse.data:type_name -> cmsrpc.Data
	57,  // 5: cmsrpc.HelpInfoData.list:type_name -> cmsrpc.HelpInfo
	38,  // 6: cmsrpc.NoticeResponse.data:type_name -> cmsrpc.NoticeDataList
	57,  // 7: cmsrpc.HelpTypeInfo.listHelpInfo:type_name -> cmsrpc.HelpInfo
	89,  // 8: cmsrpc.MsgRequest.data:type_name -> cmsrpc.MsgRequestData
	97,  // 9: cmsrpc.BlogListResponse.data:type_name -> cmsrpc.BlogData
	23,  // 10: cmsrpc.HelpInfoResponse.data:type_name -> cmsrpc.HelpInfoData
	64,  // 11: cmsrpc.NoticeCountResponse.data:type_name -> cmsrpc.NoticeCountList
	90,  // 12: cmsrpc.NoticeDataList.list:type_name -> cmsrpc.NoticeItem
	18,  // 13: cmsrpc.PromotionsData.ladderList:type_name -> cmsrpc.LadderListData
	62,  // 14: cmsrpc.Data.list:type_name -> cmsrpc.GameInfo
	300, // 15: cmsrpc.BlogListRequest.data:type_name -> cmsrpc.BlogListRequest.DataEntry
	46,  // 16: cmsrpc.ActivityDataList.list:type_name -> cmsrpc.ActivityItem
	29,  // 17: cmsrpc.HelpData.list:type_name -> cmsrpc.HelpTypeInfo
	100, // 18: cmsrpc.LampResponse.data:type_name -> cmsrpc.LampList
	98,  // 19: cmsrpc.SportBetResponse.data:type_name -> cmsrpc.SportBetData
	94,  // 20: cmsrpc.GameCategory.gameResDtoList:type_name -> cmsrpc.Game
	53,  // 21: cmsrpc.MsgResponseData.list:type_name -> cmsrpc.MsgListItem
	24,  // 22: cmsrpc.NoticeRequest.data:type_name -> cmsrpc.NoticeData
	59,  // 23: cmsrpc.MsgResponse.data:type_name -> cmsrpc.MsgResponseData
	301, // 24: cmsrpc.FrontClassifyCmsPageRequest.data:type_name -> cmsrpc.FrontClassifyCmsPageRequest.DataEntry
	86,  // 25: cmsrpc.HelpInfoRequest.data:type_name -> cmsrpc.HelpInfoParams
	41,  // 26: cmsrpc.ActivityRequest.data:type_name -> cmsrpc.ActivityData
	84,  // 27: cmsrpc.ActivityDetailResp.data:type_name -> cmsrpc.ActivityDetailData
	92,  // 28: cmsrpc.BannerListResponse.data:type_name -> cmsrpc.BannerData
	16,  // 29: cmsrpc.BannerData.list:type_name -> cmsrpc.BannerInfo
	50,  // 30: cmsrpc.ActivityResponse.data:type_name -> cmsrpc.ActivityDataList
	20,  // 31: cmsrpc.BlogData.list:type_name -> cmsrpc.BlogInfo
	51,  // 32: cmsrpc.HelpResponse.data:type_name -> cmsrpc.HelpData
	302, // 33: cmsrpc.BannerListRequest.data:type_name -> cmsrpc.BannerListRequest.DataEntry
	104, // 34: cmsrpc.BigGameCategoryBannerResponse.data:type_name -> cmsrpc.BigGameCategoryBannerData
	110, // 35: cmsrpc.CurrentActivityResponse.data:type_name -> cmsrpc.CurrentActivityData
	111, // 36: cmsrpc.CurrentActivityData.checkInRuleDtoList:type_name -> cmsrpc.CheckInRuleDto
	112, // 37: cmsrpc.CurrentActivityData.checkInInfoDto:type_name -> cmsrpc.CheckInInfoDto
	119, // 38: cmsrpc.GetCommissionRuleResp.data:type_name -> cmsrpc.GetCommissionRuleData
	122, // 39: cmsrpc.GetCommissionRuleData.commissionRateList:type_name -> cmsrpc.CommissionRateList
	122, // 40: cmsrpc.UpdateCommissionRuleReq.commissionRateList:type_name -> cmsrpc.CommissionRateList
	125, // 41: cmsrpc.GetHelpLanguageResp.data:type_name -> cmsrpc.GetHelpLanguageData
	126, // 42: cmsrpc.GetHelpLanguageData.dic_lang:type_name -> cmsrpc.DicLang
	129, // 43: cmsrpc.PageHelpTypeResp.data:type_name -> cmsrpc.PageHelpTypeData
	134, // 44: cmsrpc.PageHelpInfoReq.data:type_name -> cmsrpc.PageHelpInfoDataReq
	133, // 45: cmsrpc.pageHelpDetailResp.data:type_name -> cmsrpc.pageHelpDetailData
	136, // 46: cmsrpc.PageHelpInfoResp.data:type_name -> cmsrpc.PageHelpInfoData
	137, // 47: cmsrpc.PageHelpInfoData.list:type_name -> cmsrpc.PageHelpInfoDataItem
	139, // 48: cmsrpc.TaskExportReq.data:type_name -> cmsrpc.TaskExportDataReq
	141, // 49: cmsrpc.TaskExportResp.data:type_name -> cmsrpc.TaskExportDataResp
	142, // 50: cmsrpc.TaskExportDataResp.list:type_name -> cmsrpc.TaskExportDataItem
	144, // 51: cmsrpc.GetVerifyCodeListReq.data:type_name -> cmsrpc.GetVerifyCodeListDataReq
	146, // 52: cmsrpc.GetVerifyCodeListResp.data:type_name -> cmsrpc.GetVerifyCodeListDataResp
	147, // 53: cmsrpc.GetVerifyCodeListDataResp.list:type_name -> cmsrpc.GetVerifyCodeListDataItem
	154, // 54: cmsrpc.GetCustomerResp.data:type_name -> cmsrpc.GetCustomerData
	158, // 55: cmsrpc.GetCustomerListReq.data:type_name -> cmsrpc.GetCustomerListDataReq
	160, // 56: cmsrpc.GetCustomerListResp.data:type_name -> cmsrpc.GetCustomerListDataResp
	161, // 57: cmsrpc.GetCustomerListDataResp.list:type_name -> cmsrpc.GetCustomerListDataItem
	164, // 58: cmsrpc.CustomerListResp.data:type_name -> cmsrpc.CustomerListData
	172, // 59: cmsrpc.GetCompanyAddressResp.data:type_name -> cmsrpc.GetCompanyAddressData
	174, // 60: cmsrpc.GetVipAbStationControlResp.data:type_name -> cmsrpc.GetVipAbStationControlData
	177, // 61: cmsrpc.GetAllGameSlotResq.data:type_name -> cmsrpc.GetAllGameSlotResponseData
	179, // 62: cmsrpc.ArticleInfoPageListReq.data:type_name -> cmsrpc.ArticleInfoPageListDataReq
	181, // 63: cmsrpc.ArticleInfoPageListResp.data:type_name -> cmsrpc.ArticleInfoPageListDataResp
	182, // 64: cmsrpc.ArticleInfoPageListDataResp.list:type_name -> cmsrpc.ArticleInfoPageListDataItem
	185, // 65: cmsrpc.ArticleDetailResp.data:type_name -> cmsrpc.ArticleDetailData
	194, // 66: cmsrpc.GetArticleListResp.data:type_name -> cmsrpc.GetArticleListData
	195, // 67: cmsrpc.GetArticleListData.list:type_name -> cmsrpc.GetArticleListDataItem
	198, // 68: cmsrpc.GetPromotionLevelkpiResp.data:type_name -> cmsrpc.GetPromotionLevelkpiDataResp
	199, // 69: cmsrpc.GetPromotionLevelkpiDataResp.levels:type_name -> cmsrpc.GetPromotionLevelkpiDataLevel
	200, // 70: cmsrpc.GetPromotionLevelkpiDataResp.kpis:type_name -> cmsrpc.GetPromotionLevelkpiDataKpi
	201, // 71: cmsrpc.GetPromotionLevelkpiDataResp.requires:type_name -> cmsrpc.GetPromotionLevelkpiDataRequire
	203, // 72: cmsrpc.PointsRewardsListReq.data:type_name -> cmsrpc.PointsRewardsListReqData
	205, // 73: cmsrpc.PointsRewardsListResp.data:type_name -> cmsrpc.PointsRewardsListRespData
	206, // 74: cmsrpc.PointsRewardsListRespData.list:type_name -> cmsrpc.PointsRewardsListRespDataItem
	209, // 75: cmsrpc.GetPointsRewardsResp.data:type_name -> cmsrpc.GetPointsRewardsData
	217, // 76: cmsrpc.CompetitionRankingRewardsListReq.data:type_name -> cmsrpc.CompetitionRankingRewardsReqData
	219, // 77: cmsrpc.CompetitionRankingRewardsListResp.data:type_name -> cmsrpc.CompetitionRankingRewardsListData
	220, // 78: cmsrpc.CompetitionRankingRewardsListData.list:type_name -> cmsrpc.CompetitionRankingRewardsListDataItem
	223, // 79: cmsrpc.GetCompetitionRankingRewardsResp.data:type_name -> cmsrpc.GetCompetitionRankingRewardsData
	235, // 80: cmsrpc.PointsCollectionRecordListReq.data:type_name -> cmsrpc.PointsCollectionRecordReqData
	237, // 81: cmsrpc.PointsCollectionRecordListResp.data:type_name -> cmsrpc.PointsCollectionRecordListData
	238, // 82: cmsrpc.PointsCollectionRecordListData.list:type_name -> cmsrpc.PointsCollectionRecordListDataItem
	240, // 83: cmsrpc.PointsUserChangeListReq.data:type_name -> cmsrpc.PointsUserChangeListReqData
	242, // 84: cmsrpc.PointsUserChangeListResp.data:type_name -> cmsrpc.PointsUserChangeListData
	243, // 85: cmsrpc.PointsUserChangeListData.list:type_name -> cmsrpc.PointsUserChangeListDataItem
	248, // 86: cmsrpc.UserLevelRewardsSumResp.data:type_name -> cmsrpc.UserLevelRewardsSumData
	246, // 87: cmsrpc.UserLevelRewardsListReq.data:type_name -> cmsrpc.UserLevelRewardsSumReq
	251, // 88: cmsrpc.UserLevelRewardsListResp.data:type_name -> cmsrpc.UserLevelRewardsListData
	252, // 89: cmsrpc.UserLevelRewardsListData.list:type_name -> cmsrpc.UserLevelRewardsListDataItem
	257, // 90: cmsrpc.AddAdminResp.data:type_name -> cmsrpc.AddAdminDataResp
	263, // 91: cmsrpc.ListAdminOperationLogReq.data:type_name -> cmsrpc.ListAdminOperationLogDataReq
	265, // 92: cmsrpc.ListAdminOperationLogResp.data:type_name -> cmsrpc.ListAdminOperationLogData
	266, // 93: cmsrpc.ListAdminOperationLogData.list:type_name -> cmsrpc.ListAdminOperationLogDataItem
	268, // 94: cmsrpc.ListAdminLoginLogReq.data:type_name -> cmsrpc.ListAdminLoginLogDataReq
	270, // 95: cmsrpc.ListAdminLoginLogResp.data:type_name -> cmsrpc.ListAdminLoginLogData
	271, // 96: cmsrpc.ListAdminLoginLogData.list:type_name -> cmsrpc.ListAdminLoginLogDataItem
	274, // 97: cmsrpc.AdminOperationLogMenuResp.data:type_name -> cmsrpc.AdminOperationLogMenuData
	276, // 98: cmsrpc.PagcorDailyTaxCountReq.data:type_name -> cmsrpc.PagcorDailyTaxCountDataReq
	278, // 99: cmsrpc.PagcorDailyTaxCountResp.data:type_name -> cmsrpc.PagcorDailyTaxCountData
	279, // 100: cmsrpc.PagcorDailyTaxCountData.dataList:type_name -> cmsrpc.PagcorDailyTaxCountDataItem
	279, // 101: cmsrpc.PagcorDailyTaxCountData.validDataList:type_name -> cmsrpc.PagcorDailyTaxCountDataItem
	285, // 102: cmsrpc.RecordPageListReq.data:type_name -> cmsrpc.RecordPageListDataReq
	287, // 103: cmsrpc.RecordPageListResp.data:type_name -> cmsrpc.RecordPageListData
	288, // 104: cmsrpc.RecordPageListData.list:type_name -> cmsrpc.RecordPageListDataItem
	292, // 105: cmsrpc.PromotionBlogListReq.data:type_name -> cmsrpc.PromotionBlogListDataReq
	294, // 106: cmsrpc.PromotionBlogListResp.data:type_name -> cmsrpc.PromotionBlogListDataResp
	295, // 107: cmsrpc.PromotionBlogListDataResp.list:type_name -> cmsrpc.PromotionBlogListDataItemResp
	81,  // 108: cmsrpc.cmsrpc.activity:input_type -> cmsrpc.ActivityRequest
	33,  // 109: cmsrpc.cmsrpc.addActivity:input_type -> cmsrpc.AddActivityRequest
	82,  // 110: cmsrpc.cmsrpc.activityDetail:input_type -> cmsrpc.ActivityDetailReq
	68,  // 111: cmsrpc.cmsrpc.deleteActivity:input_type -> cmsrpc.DeleteActivityRequest
	101, // 112: cmsrpc.cmsrpc.bannerList:input_type -> cmsrpc.BannerListRequest
	60,  // 113: cmsrpc.cmsrpc.addBannerList:input_type -> cmsrpc.AddBannerListRequest
	61,  // 114: cmsrpc.cmsrpc.updateBannerList:input_type -> cmsrpc.UpdateBannerRequest
	27,  // 115: cmsrpc.cmsrpc.delBannerList:input_type -> cmsrpc.delBannerListRequest
	45,  // 116: cmsrpc.cmsrpc.blogList:input_type -> cmsrpc.BlogListRequest
	72,  // 117: cmsrpc.cmsrpc.frontClassifyCmsPage:input_type -> cmsrpc.FrontClassifyCmsPageRequest
	63,  // 118: cmsrpc.cmsrpc.addFrontClassifyCms:input_type -> cmsrpc.AddFrontClassifyCmsRequest
	43,  // 119: cmsrpc.cmsrpc.editFrontClassifyCms:input_type -> cmsrpc.EditFrontClassifyCmsRequest
	55,  // 120: cmsrpc.cmsrpc.delFrontClassifyCms:input_type -> cmsrpc.DelFrontClassifyCmsRequest
	14,  // 121: cmsrpc.cmsrpc.delFrontClassifyInfoCms:input_type -> cmsrpc.DelFrontClassifyInfoCmsRequest
	85,  // 122: cmsrpc.cmsrpc.sportBet:input_type -> cmsrpc.SportBetRequest
	4,   // 123: cmsrpc.cmsrpc.help:input_type -> cmsrpc.HelpRequest
	5,   // 124: cmsrpc.cmsrpc.saveHelpType:input_type -> cmsrpc.SaveHelpTypeRequest
	7,   // 125: cmsrpc.cmsrpc.GetHelpTypeList:input_type -> cmsrpc.GetHelpTypeListRequest
	10,  // 126: cmsrpc.cmsrpc.AddHelpType:input_type -> cmsrpc.AddHelpTypeRequest
	12,  // 127: cmsrpc.cmsrpc.EditHelpType:input_type -> cmsrpc.EditHelpTypeRequest
	73,  // 128: cmsrpc.cmsrpc.helpInfo:input_type -> cmsrpc.HelpInfoRequest
	74,  // 129: cmsrpc.cmsrpc.romoveHelpInfo:input_type -> cmsrpc.RomoveHelpInfoRequest
	75,  // 130: cmsrpc.cmsrpc.editHelpInfo:input_type -> cmsrpc.EditHelpInfoRequest
	77,  // 131: cmsrpc.cmsrpc.addHelpInfo:input_type -> cmsrpc.AddHelpInfoRequest
	87,  // 132: cmsrpc.cmsrpc.banner:input_type -> cmsrpc.BannerRequest
	2,   // 133: cmsrpc.cmsrpc.gameClassify:input_type -> cmsrpc.GameRequest
	69,  // 134: cmsrpc.cmsrpc.lamp:input_type -> cmsrpc.LampRequest
	70,  // 135: cmsrpc.cmsrpc.noticeCount:input_type -> cmsrpc.NoticeCountRequest
	30,  // 136: cmsrpc.cmsrpc.msg:input_type -> cmsrpc.MsgRequest
	79,  // 137: cmsrpc.cmsrpc.delMsg:input_type -> cmsrpc.DelMsgRequest
	31,  // 138: cmsrpc.cmsrpc.updateMsg:input_type -> cmsrpc.UpdateMsgRequest
	65,  // 139: cmsrpc.cmsrpc.notice:input_type -> cmsrpc.NoticeRequest
	49,  // 140: cmsrpc.cmsrpc.addNotice:input_type -> cmsrpc.AddNoticeRequest
	54,  // 141: cmsrpc.cmsrpc.updateNotice:input_type -> cmsrpc.UpdateNoticeRequest
	39,  // 142: cmsrpc.cmsrpc.deleteNotice:input_type -> cmsrpc.DeleteNoticeRequest
	95,  // 143: cmsrpc.cmsrpc.demo:input_type -> cmsrpc.DemoReq
	17,  // 144: cmsrpc.cmsrpc.promotionsList:input_type -> cmsrpc.PromotionsRequest
	102, // 145: cmsrpc.cmsrpc.bigGameCategoryBanner:input_type -> cmsrpc.BigGameCategoryBannerRequest
	105, // 146: cmsrpc.cmsrpc.getDictionary:input_type -> cmsrpc.GetDictionaryRequest
	108, // 147: cmsrpc.cmsrpc.currentActivity:input_type -> cmsrpc.CurrentActivityRequest
	108, // 148: cmsrpc.cmsrpc.currentActivitys:input_type -> cmsrpc.CurrentActivityRequest
	115, // 149: cmsrpc.cmsrpc.checkIn:input_type -> cmsrpc.CheckInRequest
	117, // 150: cmsrpc.cmsrpc.getCommissionRule:input_type -> cmsrpc.GetCommissionRuleReq
	120, // 151: cmsrpc.cmsrpc.updateCommissionRule:input_type -> cmsrpc.UpdateCommissionRuleReq
	123, // 152: cmsrpc.cmsrpc.getHelpLanguage:input_type -> cmsrpc.GetHelpLanguageReq
	127, // 153: cmsrpc.cmsrpc.pageHelpType:input_type -> cmsrpc.PageHelpTypeReq
	130, // 154: cmsrpc.cmsrpc.pageHelpInfo:input_type -> cmsrpc.PageHelpInfoReq
	131, // 155: cmsrpc.cmsrpc.pageHelpDetail:input_type -> cmsrpc.pageHelpDetailReq
	138, // 156: cmsrpc.cmsrpc.taskExport:input_type -> cmsrpc.TaskExportReq
	143, // 157: cmsrpc.cmsrpc.getVerifyCodeList:input_type -> cmsrpc.GetVerifyCodeListReq
	148, // 158: cmsrpc.cmsrpc.addCustomer:input_type -> cmsrpc.AddCustomerReq
	150, // 159: cmsrpc.cmsrpc.updateCustomer:input_type -> cmsrpc.UpdateCustomerReq
	152, // 160: cmsrpc.cmsrpc.getCustomer:input_type -> cmsrpc.GetCustomerReq
	155, // 161: cmsrpc.cmsrpc.deleteCustomer:input_type -> cmsrpc.DeleteCustomerReq
	157, // 162: cmsrpc.cmsrpc.getCustomerList:input_type -> cmsrpc.GetCustomerListReq
	162, // 163: cmsrpc.cmsrpc.customerList:input_type -> cmsrpc.CustomerListReq
	165, // 164: cmsrpc.cmsrpc.updateConfigAddress:input_type -> cmsrpc.UpdateConfigAddressReq
	169, // 165: cmsrpc.cmsrpc.getCompanyAddress:input_type -> cmsrpc.GetCompanyAddressReq
	175, // 166: cmsrpc.cmsrpc.getAllGameSlot:input_type -> cmsrpc.GetAllGameSlotReq
	178, // 167: cmsrpc.cmsrpc.articleInfoPageList:input_type -> cmsrpc.ArticleInfoPageListReq
	183, // 168: cmsrpc.cmsrpc.articleDetail:input_type -> cmsrpc.ArticleDetailReq
	186, // 169: cmsrpc.cmsrpc.addArticle:input_type -> cmsrpc.AddArticleReq
	188, // 170: cmsrpc.cmsrpc.updateArticle:input_type -> cmsrpc.UpdateArticleReq
	190, // 171: cmsrpc.cmsrpc.deleteArticle:input_type -> cmsrpc.DeleteArticleReq
	192, // 172: cmsrpc.cmsrpc.getArticleList:input_type -> cmsrpc.GetArticleListReq
	170, // 173: cmsrpc.cmsrpc.GetVipAbStationControl:input_type -> cmsrpc.GetVipAbStationControlReq
	166, // 174: cmsrpc.cmsrpc.updateVipAbStation:input_type -> cmsrpc.UpdateVipAbStationReq
	196, // 175: cmsrpc.cmsrpc.getPromotionLevelkpi:input_type -> cmsrpc.GetPromotionLevelkpiReq
	202, // 176: cmsrpc.cmsrpc.PointsRewardsList:input_type -> cmsrpc.PointsRewardsListReq
	207, // 177: cmsrpc.cmsrpc.GetPointsRewards:input_type -> cmsrpc.GetPointsRewardsReq
	210, // 178: cmsrpc.cmsrpc.AddPointsRewards:input_type -> cmsrpc.AddPointsRewardsReq
	212, // 179: cmsrpc.cmsrpc.UpdatePointsRewards:input_type -> cmsrpc.UpdatePointsRewardsReq
	214, // 180: cmsrpc.cmsrpc.DeletePointsRewards:input_type -> cmsrpc.DeletePointsRewardsReq
	216, // 181: cmsrpc.cmsrpc.CompetitionRankingRewardList:input_type -> cmsrpc.CompetitionRankingRewardsListReq
	221, // 182: cmsrpc.cmsrpc.GetCompetitionRankingRewards:input_type -> cmsrpc.GetCompetitionRankingRewardsReq
	224, // 183: cmsrpc.cmsrpc.AddCompetitionRankingRewards:input_type -> cmsrpc.AddCompetitionRankingRewardsReq
	226, // 184: cmsrpc.cmsrpc.UpdateCompetitionRankingRewards:input_type -> cmsrpc.UpdateCompetitionRankingRewardsReq
	228, // 185: cmsrpc.cmsrpc.DeleteCompetitionRankingRewards:input_type -> cmsrpc.DeleteCompetitionRankingRewardsReq
	230, // 186: cmsrpc.cmsrpc.GetUserScore:input_type -> cmsrpc.GetUserScoreReq
	232, // 187: cmsrpc.cmsrpc.UserScoreExchange:input_type -> cmsrpc.UserScoreExchangeReq
	234, // 188: cmsrpc.cmsrpc.PointsCollectionRecordList:input_type -> cmsrpc.PointsCollectionRecordListReq
	239, // 189: cmsrpc.cmsrpc.PointsUserChangeList:input_type -> cmsrpc.PointsUserChangeListReq
	244, // 190: cmsrpc.cmsrpc.GetPromotionalVideo:input_type -> cmsrpc.GetPromotionalVideoReq
	246, // 191: cmsrpc.cmsrpc.UserLevelRewardsSum:input_type -> cmsrpc.UserLevelRewardsSumReq
	249, // 192: cmsrpc.cmsrpc.UserLevelRewardsList:input_type -> cmsrpc.UserLevelRewardsListReq
	258, // 193: cmsrpc.cmsrpc.InsertRule:input_type -> cmsrpc.InsertRuleReq
	260, // 194: cmsrpc.cmsrpc.InsertRoleAuthManager:input_type -> cmsrpc.InsertRoleAuthManagerReq
	262, // 195: cmsrpc.cmsrpc.ListAdminOperationLog:input_type -> cmsrpc.ListAdminOperationLogReq
	267, // 196: cmsrpc.cmsrpc.ListAdminLoginLog:input_type -> cmsrpc.ListAdminLoginLogReq
	272, // 197: cmsrpc.cmsrpc.AdminOperationLogMenu:input_type -> cmsrpc.AdminOperationLogMenuReq
	275, // 198: cmsrpc.cmsrpc.PagcorDailyTaxCount:input_type -> cmsrpc.PagcorDailyTaxCountReq
	280, // 199: cmsrpc.cmsrpc.Logout:input_type -> cmsrpc.LogoutReq
	282, // 200: cmsrpc.cmsrpc.totalAwardAmount:input_type -> cmsrpc.TotalAwardAmountReq
	284, // 201: cmsrpc.cmsrpc.recordPageList:input_type -> cmsrpc.RecordPageListReq
	289, // 202: cmsrpc.cmsrpc.checkInRecordDetail:input_type -> cmsrpc.CheckInRecordDetailReq
	291, // 203: cmsrpc.cmsrpc.promotionBlogList:input_type -> cmsrpc.PromotionBlogListReq
	296, // 204: cmsrpc.cmsrpc.getPromotionsCode:input_type -> cmsrpc.GetPromotionsCodeReq
	298, // 205: cmsrpc.cmsrpc.EventReports:input_type -> cmsrpc.EventReportsReq
	96,  // 206: cmsrpc.cmsrpc.activity:output_type -> cmsrpc.ActivityResponse
	47,  // 207: cmsrpc.cmsrpc.addActivity:output_type -> cmsrpc.AddActivityResponse
	83,  // 208: cmsrpc.cmsrpc.activityDetail:output_type -> cmsrpc.ActivityDetailResp
	19,  // 209: cmsrpc.cmsrpc.deleteActivity:output_type -> cmsrpc.DeleteActivityResponse
	91,  // 210: cmsrpc.cmsrpc.bannerList:output_type -> cmsrpc.BannerListResponse
	25,  // 211: cmsrpc.cmsrpc.addBannerList:output_type -> cmsrpc.AddBannerListResponse
	32,  // 212: cmsrpc.cmsrpc.updateBannerList:output_type -> cmsrpc.UpdateBannerResponse
	48,  // 213: cmsrpc.cmsrpc.delBannerList:output_type -> cmsrpc.delBannerListResponse
	34,  // 214: cmsrpc.cmsrpc.blogList:output_type -> cmsrpc.BlogListResponse
	21,  // 215: cmsrpc.cmsrpc.frontClassifyCmsPage:output_type -> cmsrpc.FrontClassifyCmsPageResponse
	22,  // 216: cmsrpc.cmsrpc.addFrontClassifyCms:output_type -> cmsrpc.AddFrontClassifyCmsResponse
	28,  // 217: cmsrpc.cmsrpc.editFrontClassifyCms:output_type -> cmsrpc.EditFrontClassifyCmsResponse
	93,  // 218: cmsrpc.cmsrpc.delFrontClassifyCms:output_type -> cmsrpc.DelFrontClassifyCmsResponse
	15,  // 219: cmsrpc.cmsrpc.delFrontClassifyInfoCms:output_type -> cmsrpc.DelFrontClassifyInfoCmsResponse
	56,  // 220: cmsrpc.cmsrpc.sportBet:output_type -> cmsrpc.SportBetResponse
	99,  // 221: cmsrpc.cmsrpc.help:output_type -> cmsrpc.HelpResponse
	6,   // 222: cmsrpc.cmsrpc.saveHelpType:output_type -> cmsrpc.SaveHelpTypeResponse
	8,   // 223: cmsrpc.cmsrpc.GetHelpTypeList:output_type -> cmsrpc.GetHelpTypeListResponse
	11,  // 224: cmsrpc.cmsrpc.AddHelpType:output_type -> cmsrpc.AddHelpTypeResponse
	13,  // 225: cmsrpc.cmsrpc.EditHelpType:output_type -> cmsrpc.EditHelpTypeResponse
	35,  // 226: cmsrpc.cmsrpc.helpInfo:output_type -> cmsrpc.HelpInfoResponse
	36,  // 227: cmsrpc.cmsrpc.romoveHelpInfo:output_type -> cmsrpc.RomoveHelpInfoResponse
	76,  // 228: cmsrpc.cmsrpc.editHelpInfo:output_type -> cmsrpc.EditHelpInfoResponse
	78,  // 229: cmsrpc.cmsrpc.addHelpInfo:output_type -> cmsrpc.AddHelpInfoResponse
	0,   // 230: cmsrpc.cmsrpc.banner:output_type -> cmsrpc.BannerResponse
	1,   // 231: cmsrpc.cmsrpc.gameClassify:output_type -> cmsrpc.GameResponse
	52,  // 232: cmsrpc.cmsrpc.lamp:output_type -> cmsrpc.LampResponse
	37,  // 233: cmsrpc.cmsrpc.noticeCount:output_type -> cmsrpc.NoticeCountResponse
	71,  // 234: cmsrpc.cmsrpc.msg:output_type -> cmsrpc.MsgResponse
	37,  // 235: cmsrpc.cmsrpc.delMsg:output_type -> cmsrpc.NoticeCountResponse
	37,  // 236: cmsrpc.cmsrpc.updateMsg:output_type -> cmsrpc.NoticeCountResponse
	26,  // 237: cmsrpc.cmsrpc.notice:output_type -> cmsrpc.NoticeResponse
	44,  // 238: cmsrpc.cmsrpc.addNotice:output_type -> cmsrpc.AddNoticeResponse
	66,  // 239: cmsrpc.cmsrpc.updateNotice:output_type -> cmsrpc.UpdateNoticeResponse
	80,  // 240: cmsrpc.cmsrpc.deleteNotice:output_type -> cmsrpc.DeleteNoticeResponse
	67,  // 241: cmsrpc.cmsrpc.demo:output_type -> cmsrpc.DemoResp
	3,   // 242: cmsrpc.cmsrpc.promotionsList:output_type -> cmsrpc.PromotionsResponse
	103, // 243: cmsrpc.cmsrpc.bigGameCategoryBanner:output_type -> cmsrpc.BigGameCategoryBannerResponse
	106, // 244: cmsrpc.cmsrpc.getDictionary:output_type -> cmsrpc.GetDictionaryResponse
	109, // 245: cmsrpc.cmsrpc.currentActivity:output_type -> cmsrpc.CurrentActivityResponse
	109, // 246: cmsrpc.cmsrpc.currentActivitys:output_type -> cmsrpc.CurrentActivityResponse
	116, // 247: cmsrpc.cmsrpc.checkIn:output_type -> cmsrpc.CheckInResponse
	118, // 248: cmsrpc.cmsrpc.getCommissionRule:output_type -> cmsrpc.GetCommissionRuleResp
	121, // 249: cmsrpc.cmsrpc.updateCommissionRule:output_type -> cmsrpc.UpdateCommissionRuleResp
	124, // 250: cmsrpc.cmsrpc.getHelpLanguage:output_type -> cmsrpc.GetHelpLanguageResp
	128, // 251: cmsrpc.cmsrpc.pageHelpType:output_type -> cmsrpc.PageHelpTypeResp
	135, // 252: cmsrpc.cmsrpc.pageHelpInfo:output_type -> cmsrpc.PageHelpInfoResp
	132, // 253: cmsrpc.cmsrpc.pageHelpDetail:output_type -> cmsrpc.pageHelpDetailResp
	140, // 254: cmsrpc.cmsrpc.taskExport:output_type -> cmsrpc.TaskExportResp
	145, // 255: cmsrpc.cmsrpc.getVerifyCodeList:output_type -> cmsrpc.GetVerifyCodeListResp
	149, // 256: cmsrpc.cmsrpc.addCustomer:output_type -> cmsrpc.AddCustomerResp
	151, // 257: cmsrpc.cmsrpc.updateCustomer:output_type -> cmsrpc.UpdateCustomerResp
	153, // 258: cmsrpc.cmsrpc.getCustomer:output_type -> cmsrpc.GetCustomerResp
	156, // 259: cmsrpc.cmsrpc.deleteCustomer:output_type -> cmsrpc.DeleteCustomerResp
	159, // 260: cmsrpc.cmsrpc.getCustomerList:output_type -> cmsrpc.GetCustomerListResp
	163, // 261: cmsrpc.cmsrpc.customerList:output_type -> cmsrpc.CustomerListResp
	168, // 262: cmsrpc.cmsrpc.updateConfigAddress:output_type -> cmsrpc.UpdateConfigAddressResp
	171, // 263: cmsrpc.cmsrpc.getCompanyAddress:output_type -> cmsrpc.GetCompanyAddressResp
	176, // 264: cmsrpc.cmsrpc.getAllGameSlot:output_type -> cmsrpc.GetAllGameSlotResq
	180, // 265: cmsrpc.cmsrpc.articleInfoPageList:output_type -> cmsrpc.ArticleInfoPageListResp
	184, // 266: cmsrpc.cmsrpc.articleDetail:output_type -> cmsrpc.ArticleDetailResp
	187, // 267: cmsrpc.cmsrpc.addArticle:output_type -> cmsrpc.AddArticleResp
	189, // 268: cmsrpc.cmsrpc.updateArticle:output_type -> cmsrpc.UpdateArticleResp
	191, // 269: cmsrpc.cmsrpc.deleteArticle:output_type -> cmsrpc.DeleteArticleResp
	193, // 270: cmsrpc.cmsrpc.getArticleList:output_type -> cmsrpc.GetArticleListResp
	173, // 271: cmsrpc.cmsrpc.GetVipAbStationControl:output_type -> cmsrpc.GetVipAbStationControlResp
	167, // 272: cmsrpc.cmsrpc.updateVipAbStation:output_type -> cmsrpc.UpdateVipAbStationResp
	197, // 273: cmsrpc.cmsrpc.getPromotionLevelkpi:output_type -> cmsrpc.GetPromotionLevelkpiResp
	204, // 274: cmsrpc.cmsrpc.PointsRewardsList:output_type -> cmsrpc.PointsRewardsListResp
	208, // 275: cmsrpc.cmsrpc.GetPointsRewards:output_type -> cmsrpc.GetPointsRewardsResp
	211, // 276: cmsrpc.cmsrpc.AddPointsRewards:output_type -> cmsrpc.AddPointsRewardsResp
	213, // 277: cmsrpc.cmsrpc.UpdatePointsRewards:output_type -> cmsrpc.UpdatePointsRewardsResp
	215, // 278: cmsrpc.cmsrpc.DeletePointsRewards:output_type -> cmsrpc.DeletePointsRewardsResp
	218, // 279: cmsrpc.cmsrpc.CompetitionRankingRewardList:output_type -> cmsrpc.CompetitionRankingRewardsListResp
	222, // 280: cmsrpc.cmsrpc.GetCompetitionRankingRewards:output_type -> cmsrpc.GetCompetitionRankingRewardsResp
	225, // 281: cmsrpc.cmsrpc.AddCompetitionRankingRewards:output_type -> cmsrpc.AddCompetitionRankingRewardsResp
	227, // 282: cmsrpc.cmsrpc.UpdateCompetitionRankingRewards:output_type -> cmsrpc.UpdateCompetitionRankingRewardsResp
	229, // 283: cmsrpc.cmsrpc.DeleteCompetitionRankingRewards:output_type -> cmsrpc.DeleteCompetitionRankingRewardsResp
	231, // 284: cmsrpc.cmsrpc.GetUserScore:output_type -> cmsrpc.GetUserScoreResp
	233, // 285: cmsrpc.cmsrpc.UserScoreExchange:output_type -> cmsrpc.UserScoreExchangeResp
	236, // 286: cmsrpc.cmsrpc.PointsCollectionRecordList:output_type -> cmsrpc.PointsCollectionRecordListResp
	241, // 287: cmsrpc.cmsrpc.PointsUserChangeList:output_type -> cmsrpc.PointsUserChangeListResp
	245, // 288: cmsrpc.cmsrpc.GetPromotionalVideo:output_type -> cmsrpc.GetPromotionalVideoResp
	247, // 289: cmsrpc.cmsrpc.UserLevelRewardsSum:output_type -> cmsrpc.UserLevelRewardsSumResp
	250, // 290: cmsrpc.cmsrpc.UserLevelRewardsList:output_type -> cmsrpc.UserLevelRewardsListResp
	259, // 291: cmsrpc.cmsrpc.InsertRule:output_type -> cmsrpc.InsertRuleResp
	261, // 292: cmsrpc.cmsrpc.InsertRoleAuthManager:output_type -> cmsrpc.InsertRoleAuthManagerResp
	264, // 293: cmsrpc.cmsrpc.ListAdminOperationLog:output_type -> cmsrpc.ListAdminOperationLogResp
	269, // 294: cmsrpc.cmsrpc.ListAdminLoginLog:output_type -> cmsrpc.ListAdminLoginLogResp
	273, // 295: cmsrpc.cmsrpc.AdminOperationLogMenu:output_type -> cmsrpc.AdminOperationLogMenuResp
	277, // 296: cmsrpc.cmsrpc.PagcorDailyTaxCount:output_type -> cmsrpc.PagcorDailyTaxCountResp
	281, // 297: cmsrpc.cmsrpc.Logout:output_type -> cmsrpc.LogoutResp
	283, // 298: cmsrpc.cmsrpc.totalAwardAmount:output_type -> cmsrpc.TotalAwardAmountResp
	286, // 299: cmsrpc.cmsrpc.recordPageList:output_type -> cmsrpc.RecordPageListResp
	290, // 300: cmsrpc.cmsrpc.checkInRecordDetail:output_type -> cmsrpc.CheckInRecordDetailResp
	293, // 301: cmsrpc.cmsrpc.promotionBlogList:output_type -> cmsrpc.PromotionBlogListResp
	297, // 302: cmsrpc.cmsrpc.getPromotionsCode:output_type -> cmsrpc.GetPromotionsCodeResp
	299, // 303: cmsrpc.cmsrpc.EventReports:output_type -> cmsrpc.EventReportsResp
	206, // [206:304] is the sub-list for method output_type
	108, // [108:206] is the sub-list for method input_type
	108, // [108:108] is the sub-list for extension type_name
	108, // [108:108] is the sub-list for extension extendee
	0,   // [0:108] is the sub-list for field type_name
}

func init() { file_cmsrpc_proto_init() }
func file_cmsrpc_proto_init() {
	if File_cmsrpc_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_cmsrpc_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BannerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PromotionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HelpRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaveHelpTypeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaveHelpTypeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetHelpTypeListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetHelpTypeListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetHelpTypeListItemResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddHelpTypeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddHelpTypeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EditHelpTypeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EditHelpTypeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelFrontClassifyInfoCmsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelFrontClassifyInfoCmsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BannerInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PromotionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LadderListData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteActivityResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlogInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FrontClassifyCmsPageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddFrontClassifyCmsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HelpInfoData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NoticeData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddBannerListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NoticeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelBannerListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EditFrontClassifyCmsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HelpTypeInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMsgRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateBannerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddActivityRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlogListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HelpInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RomoveHelpInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NoticeCountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NoticeDataList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteNoticeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PromotionsData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActivityData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EditFrontClassifyCmsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddNoticeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlogListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActivityItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddActivityResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelBannerListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddNoticeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActivityDataList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HelpData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LampResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgListItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateNoticeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelFrontClassifyCmsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SportBetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HelpInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameCategory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgResponseData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddBannerListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateBannerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddFrontClassifyCmsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NoticeCountList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NoticeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateNoticeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DemoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteActivityRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LampRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NoticeCountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FrontClassifyCmsPageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HelpInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RomoveHelpInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EditHelpInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[76].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EditHelpInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[77].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddHelpInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[78].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddHelpInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[79].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelMsgRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[80].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteNoticeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[81].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActivityRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[82].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActivityDetailReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[83].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActivityDetailResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[84].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActivityDetailData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[85].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SportBetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[86].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HelpInfoParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[87].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BannerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[88].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BannerResponseItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[89].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgRequestData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[90].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NoticeItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[91].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BannerListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[92].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BannerData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[93].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelFrontClassifyCmsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[94].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Game); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[95].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DemoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[96].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActivityResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[97].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlogData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[98].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SportBetData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[99].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HelpResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[100].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LampList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[101].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BannerListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[102].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BigGameCategoryBannerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[103].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BigGameCategoryBannerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[104].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BigGameCategoryBannerData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[105].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDictionaryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[106].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDictionaryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[107].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatusItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[108].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CurrentActivityRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[109].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CurrentActivityResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[110].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CurrentActivityData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[111].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckInRuleDto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[112].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckInInfoDto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[113].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CurrentActivityBaseInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[114].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PromotionInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[115].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckInRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[116].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckInResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[117].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCommissionRuleReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[118].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCommissionRuleResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[119].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCommissionRuleData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[120].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCommissionRuleReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[121].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCommissionRuleResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[122].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommissionRateList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[123].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetHelpLanguageReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[124].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetHelpLanguageResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[125].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetHelpLanguageData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[126].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DicLang); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[127].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PageHelpTypeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[128].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PageHelpTypeResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[129].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PageHelpTypeData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[130].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PageHelpInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[131].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PageHelpDetailReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[132].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PageHelpDetailResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[133].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PageHelpDetailData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[134].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PageHelpInfoDataReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[135].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PageHelpInfoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[136].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PageHelpInfoData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[137].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PageHelpInfoDataItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[138].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskExportReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[139].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskExportDataReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[140].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskExportResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[141].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskExportDataResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[142].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskExportDataItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[143].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVerifyCodeListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[144].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVerifyCodeListDataReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[145].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVerifyCodeListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[146].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVerifyCodeListDataResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[147].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVerifyCodeListDataItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[148].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddCustomerReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[149].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddCustomerResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[150].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCustomerReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[151].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCustomerResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[152].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCustomerReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[153].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCustomerResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[154].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCustomerData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[155].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteCustomerReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[156].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteCustomerResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[157].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCustomerListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[158].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCustomerListDataReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[159].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCustomerListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[160].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCustomerListDataResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[161].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCustomerListDataItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[162].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CustomerListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[163].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CustomerListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[164].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CustomerListData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[165].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateConfigAddressReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[166].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateVipAbStationReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[167].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateVipAbStationResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[168].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateConfigAddressResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[169].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCompanyAddressReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[170].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVipAbStationControlReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[171].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCompanyAddressResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[172].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCompanyAddressData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[173].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVipAbStationControlResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[174].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVipAbStationControlData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[175].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllGameSlotReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[176].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllGameSlotResq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[177].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllGameSlotResponseData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[178].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArticleInfoPageListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[179].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArticleInfoPageListDataReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[180].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArticleInfoPageListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[181].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArticleInfoPageListDataResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[182].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArticleInfoPageListDataItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[183].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArticleDetailReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[184].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArticleDetailResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[185].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArticleDetailData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[186].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddArticleReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[187].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddArticleResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[188].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateArticleReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[189].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateArticleResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[190].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteArticleReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[191].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteArticleResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[192].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetArticleListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[193].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetArticleListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[194].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetArticleListData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[195].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetArticleListDataItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[196].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPromotionLevelkpiReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[197].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPromotionLevelkpiResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[198].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPromotionLevelkpiDataResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[199].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPromotionLevelkpiDataLevel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[200].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPromotionLevelkpiDataKpi); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[201].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPromotionLevelkpiDataRequire); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[202].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PointsRewardsListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[203].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PointsRewardsListReqData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[204].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PointsRewardsListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[205].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PointsRewardsListRespData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[206].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PointsRewardsListRespDataItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[207].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPointsRewardsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[208].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPointsRewardsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[209].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPointsRewardsData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[210].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddPointsRewardsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[211].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddPointsRewardsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[212].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatePointsRewardsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[213].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatePointsRewardsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[214].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeletePointsRewardsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[215].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeletePointsRewardsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[216].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompetitionRankingRewardsListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[217].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompetitionRankingRewardsReqData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[218].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompetitionRankingRewardsListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[219].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompetitionRankingRewardsListData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[220].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompetitionRankingRewardsListDataItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[221].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCompetitionRankingRewardsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[222].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCompetitionRankingRewardsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[223].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCompetitionRankingRewardsData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[224].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddCompetitionRankingRewardsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[225].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddCompetitionRankingRewardsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[226].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCompetitionRankingRewardsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[227].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCompetitionRankingRewardsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[228].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteCompetitionRankingRewardsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[229].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteCompetitionRankingRewardsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[230].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserScoreReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[231].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserScoreResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[232].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserScoreExchangeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[233].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserScoreExchangeResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[234].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PointsCollectionRecordListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[235].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PointsCollectionRecordReqData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[236].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PointsCollectionRecordListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[237].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PointsCollectionRecordListData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[238].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PointsCollectionRecordListDataItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[239].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PointsUserChangeListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[240].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PointsUserChangeListReqData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[241].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PointsUserChangeListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[242].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PointsUserChangeListData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[243].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PointsUserChangeListDataItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[244].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPromotionalVideoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[245].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPromotionalVideoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[246].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserLevelRewardsSumReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[247].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserLevelRewardsSumResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[248].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserLevelRewardsSumData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[249].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserLevelRewardsListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[250].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserLevelRewardsListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[251].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserLevelRewardsListData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[252].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserLevelRewardsListDataItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[253].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaveOrUpdateUserGroupReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[254].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaveOrUpdateUserGroupResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[255].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddAdminReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[256].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddAdminResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[257].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddAdminDataResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[258].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InsertRuleReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[259].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InsertRuleResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[260].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InsertRoleAuthManagerReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[261].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InsertRoleAuthManagerResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[262].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAdminOperationLogReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[263].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAdminOperationLogDataReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[264].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAdminOperationLogResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[265].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAdminOperationLogData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[266].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAdminOperationLogDataItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[267].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAdminLoginLogReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[268].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAdminLoginLogDataReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[269].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAdminLoginLogResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[270].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAdminLoginLogData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[271].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAdminLoginLogDataItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[272].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminOperationLogMenuReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[273].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminOperationLogMenuResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[274].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminOperationLogMenuData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[275].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PagcorDailyTaxCountReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[276].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PagcorDailyTaxCountDataReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[277].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PagcorDailyTaxCountResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[278].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PagcorDailyTaxCountData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[279].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PagcorDailyTaxCountDataItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[280].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogoutReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[281].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogoutResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[282].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TotalAwardAmountReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[283].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TotalAwardAmountResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[284].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecordPageListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[285].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecordPageListDataReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[286].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecordPageListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[287].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecordPageListData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[288].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecordPageListDataItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[289].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckInRecordDetailReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[290].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckInRecordDetailResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[291].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PromotionBlogListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[292].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PromotionBlogListDataReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[293].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PromotionBlogListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[294].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PromotionBlogListDataResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[295].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PromotionBlogListDataItemResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[296].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPromotionsCodeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[297].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPromotionsCodeResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[298].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventReportsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmsrpc_proto_msgTypes[299].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventReportsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_cmsrpc_proto_msgTypes[246].OneofWrappers = []interface{}{}
	file_cmsrpc_proto_msgTypes[255].OneofWrappers = []interface{}{}
	file_cmsrpc_proto_msgTypes[258].OneofWrappers = []interface{}{}
	file_cmsrpc_proto_msgTypes[260].OneofWrappers = []interface{}{}
	file_cmsrpc_proto_msgTypes[263].OneofWrappers = []interface{}{}
	file_cmsrpc_proto_msgTypes[268].OneofWrappers = []interface{}{}
	file_cmsrpc_proto_msgTypes[280].OneofWrappers = []interface{}{}
	file_cmsrpc_proto_msgTypes[285].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_cmsrpc_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   303,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_cmsrpc_proto_goTypes,
		DependencyIndexes: file_cmsrpc_proto_depIdxs,
		MessageInfos:      file_cmsrpc_proto_msgTypes,
	}.Build()
	File_cmsrpc_proto = out.File
	file_cmsrpc_proto_rawDesc = nil
	file_cmsrpc_proto_goTypes = nil
	file_cmsrpc_proto_depIdxs = nil
}
